<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:54:21.573" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.159" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:22.167" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:23.323" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:22.158" endtime="20201030 15:54:23.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.327" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:23.325" endtime="20201030 15:54:23.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.156" endtime="20201030 15:54:23.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.331" endtime="20201030 15:54:23.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.330" endtime="20201030 15:54:23.576"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.589" endtime="20201030 15:54:23.603"></status>
</kw>
<msg timestamp="20201030 15:54:23.604" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 15:54:23.588" endtime="20201030 15:54:23.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.607" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 15:54:23.605" endtime="20201030 15:54:23.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.610" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:23.608" endtime="20201030 15:54:23.610"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.585" endtime="20201030 15:54:23.611"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.583" endtime="20201030 15:54:23.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.581" endtime="20201030 15:54:23.612"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:23.616" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:23.615" endtime="20201030 15:54:23.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.613" endtime="20201030 15:54:23.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.581" endtime="20201030 15:54:23.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.580" endtime="20201030 15:54:23.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.618" endtime="20201030 15:54:23.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.578" endtime="20201030 15:54:23.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.621" endtime="20201030 15:54:23.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.577" endtime="20201030 15:54:23.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.154" endtime="20201030 15:54:23.624"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.630" endtime="20201030 15:54:23.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.628" endtime="20201030 15:54:23.650"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.664" endtime="20201030 15:54:23.678"></status>
</kw>
<msg timestamp="20201030 15:54:23.679" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.662" endtime="20201030 15:54:23.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.680" endtime="20201030 15:54:23.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.684" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:23.682" endtime="20201030 15:54:23.685"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.660" endtime="20201030 15:54:23.685"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:23.657" endtime="20201030 15:54:23.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.655" endtime="20201030 15:54:23.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:23.690" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:23.689" endtime="20201030 15:54:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.687" endtime="20201030 15:54:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.654" endtime="20201030 15:54:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.654" endtime="20201030 15:54:23.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.692" endtime="20201030 15:54:23.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.652" endtime="20201030 15:54:23.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.651" endtime="20201030 15:54:23.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.627" endtime="20201030 15:54:23.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.703" endtime="20201030 15:54:23.713"></status>
</kw>
<msg timestamp="20201030 15:54:23.713" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.700" endtime="20201030 15:54:23.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.716" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.714" endtime="20201030 15:54:23.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.717" endtime="20201030 15:54:23.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.697" endtime="20201030 15:54:23.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.696" endtime="20201030 15:54:23.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.723" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:54:23.722" endtime="20201030 15:54:23.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.726" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201030 15:54:23.725" endtime="20201030 15:54:23.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.720" endtime="20201030 15:54:23.726"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:23.624" endtime="20201030 15:54:23.727" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:21.701" endtime="20201030 15:54:23.729"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.781" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:23.789" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:24.996" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:23.779" endtime="20201030 15:54:24.996"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.999" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:24.997" endtime="20201030 15:54:24.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.778" endtime="20201030 15:54:25.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.002" endtime="20201030 15:54:25.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.001" endtime="20201030 15:54:25.316"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.328" endtime="20201030 15:54:25.343"></status>
</kw>
<msg timestamp="20201030 15:54:25.344" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:54:25.327" endtime="20201030 15:54:25.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201030 15:54:25.345" endtime="20201030 15:54:25.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.349" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:25.347" endtime="20201030 15:54:25.350"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:25.325" endtime="20201030 15:54:25.352"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:25.322" endtime="20201030 15:54:25.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.321" endtime="20201030 15:54:25.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:25.359" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:25.357" endtime="20201030 15:54:25.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.355" endtime="20201030 15:54:25.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.320" endtime="20201030 15:54:25.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.320" endtime="20201030 15:54:25.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.361" endtime="20201030 15:54:25.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.318" endtime="20201030 15:54:25.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.364" endtime="20201030 15:54:25.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.317" endtime="20201030 15:54:25.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.777" endtime="20201030 15:54:25.367"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.376" endtime="20201030 15:54:25.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.373" endtime="20201030 15:54:25.397"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.411" endtime="20201030 15:54:25.425"></status>
</kw>
<msg timestamp="20201030 15:54:25.425" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.409" endtime="20201030 15:54:25.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.426" endtime="20201030 15:54:25.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:25.429" endtime="20201030 15:54:25.431"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:25.407" endtime="20201030 15:54:25.432"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:25.404" endtime="20201030 15:54:25.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.403" endtime="20201030 15:54:25.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:25.437" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:25.436" endtime="20201030 15:54:25.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.434" endtime="20201030 15:54:25.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.402" endtime="20201030 15:54:25.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.401" endtime="20201030 15:54:25.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.439" endtime="20201030 15:54:25.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.400" endtime="20201030 15:54:25.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.398" endtime="20201030 15:54:25.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.370" endtime="20201030 15:54:25.442"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.451" endtime="20201030 15:54:25.462"></status>
</kw>
<msg timestamp="20201030 15:54:25.463" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.449" endtime="20201030 15:54:25.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.466" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.464" endtime="20201030 15:54:25.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.467" endtime="20201030 15:54:25.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.446" endtime="20201030 15:54:25.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.445" endtime="20201030 15:54:25.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.476" endtime="20201030 15:54:25.768"></status>
</kw>
<msg timestamp="20201030 15:54:25.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065227625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.475" endtime="20201030 15:54:25.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065227153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065227625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.772" endtime="20201030 15:54:25.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.780" endtime="20201030 15:54:25.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.472" endtime="20201030 15:54:25.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.470" endtime="20201030 15:54:25.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.787" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.859999999939912e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:25.784" endtime="20201030 15:54:25.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:25.791" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860...</msg>
<status status="PASS" starttime="20201030 15:54:25.788" endtime="20201030 15:54:25.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.795" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:25.794" endtime="20201030 15:54:25.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.798" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.86000000007869e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.870000000073427e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:25.797" endtime="20201030 15:54:25.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.792" endtime="20201030 15:54:25.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.803" endtime="20201030 15:54:25.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.802" endtime="20201030 15:54:25.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.800" endtime="20201030 15:54:25.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.443" endtime="20201030 15:54:25.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.443" endtime="20201030 15:54:25.824"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.832" endtime="20201030 15:54:25.843"></status>
</kw>
<msg timestamp="20201030 15:54:25.843" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.830" endtime="20201030 15:54:25.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.846" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.844" endtime="20201030 15:54:25.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.847" endtime="20201030 15:54:25.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.828" endtime="20201030 15:54:25.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.826" endtime="20201030 15:54:25.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.856" endtime="20201030 15:54:26.178"></status>
</kw>
<msg timestamp="20201030 15:54:26.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018419931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.854" endtime="20201030 15:54:26.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018419931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.182" endtime="20201030 15:54:26.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.191" endtime="20201030 15:54:26.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.852" endtime="20201030 15:54:26.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.850" endtime="20201030 15:54:26.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.198" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:26.194" endtime="20201030 15:54:26.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:26.202" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:26.199" endtime="20201030 15:54:26.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.207" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:26.206" endtime="20201030 15:54:26.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.209" level="INFO">VALUE: [4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:26.208" endtime="20201030 15:54:26.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.203" endtime="20201030 15:54:26.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.214" endtime="20201030 15:54:26.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.212" endtime="20201030 15:54:26.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.211" endtime="20201030 15:54:26.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.825" endtime="20201030 15:54:26.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.824" endtime="20201030 15:54:26.234"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.242" endtime="20201030 15:54:26.252"></status>
</kw>
<msg timestamp="20201030 15:54:26.253" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.240" endtime="20201030 15:54:26.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.255" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.254" endtime="20201030 15:54:26.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.256" endtime="20201030 15:54:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.238" endtime="20201030 15:54:26.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.236" endtime="20201030 15:54:26.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.265" endtime="20201030 15:54:26.553"></status>
</kw>
<msg timestamp="20201030 15:54:26.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.264" endtime="20201030 15:54:26.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018146153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018146625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.557" endtime="20201030 15:54:26.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.566" endtime="20201030 15:54:26.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.261" endtime="20201030 15:54:26.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.259" endtime="20201030 15:54:26.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.573" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:26.570" endtime="20201030 15:54:26.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:26.577" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:54:26.574" endtime="20201030 15:54:26.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.581" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:26.580" endtime="20201030 15:54:26.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.584" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:26.582" endtime="20201030 15:54:26.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.578" endtime="20201030 15:54:26.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.588" endtime="20201030 15:54:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.587" endtime="20201030 15:54:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.586" endtime="20201030 15:54:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.235" endtime="20201030 15:54:26.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.234" endtime="20201030 15:54:26.609"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.617" endtime="20201030 15:54:26.627"></status>
</kw>
<msg timestamp="20201030 15:54:26.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.615" endtime="20201030 15:54:26.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.629" endtime="20201030 15:54:26.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.631" endtime="20201030 15:54:26.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.613" endtime="20201030 15:54:26.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.611" endtime="20201030 15:54:26.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.641" endtime="20201030 15:54:26.940"></status>
</kw>
<msg timestamp="20201030 15:54:26.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.639" endtime="20201030 15:54:26.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018518681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018519153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.944" endtime="20201030 15:54:26.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.957" endtime="20201030 15:54:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.637" endtime="20201030 15:54:26.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.635" endtime="20201030 15:54:26.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.965" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:26.962" endtime="20201030 15:54:26.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:26.969" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:26.966" endtime="20201030 15:54:26.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.973" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:26.972" endtime="20201030 15:54:26.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.976" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201030 15:54:26.975" endtime="20201030 15:54:26.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.970" endtime="20201030 15:54:26.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.981" endtime="20201030 15:54:27.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.980" endtime="20201030 15:54:27.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.978" endtime="20201030 15:54:27.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.610" endtime="20201030 15:54:27.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.609" endtime="20201030 15:54:27.002"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.010" endtime="20201030 15:54:27.020"></status>
</kw>
<msg timestamp="20201030 15:54:27.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.008" endtime="20201030 15:54:27.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.021" endtime="20201030 15:54:27.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.024" endtime="20201030 15:54:27.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.006" endtime="20201030 15:54:27.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.004" endtime="20201030 15:54:27.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.033" endtime="20201030 15:54:27.318"></status>
</kw>
<msg timestamp="20201030 15:54:27.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018501972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.031" endtime="20201030 15:54:27.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018501486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018501972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.330" endtime="20201030 15:54:27.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.339" endtime="20201030 15:54:27.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.028" endtime="20201030 15:54:27.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.027" endtime="20201030 15:54:27.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.345" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:27.342" endtime="20201030 15:54:27.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:27.351" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.72...</msg>
<status status="PASS" starttime="20201030 15:54:27.346" endtime="20201030 15:54:27.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.355" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:27.354" endtime="20201030 15:54:27.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.358" level="INFO">VALUE: [4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:27.356" endtime="20201030 15:54:27.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.352" endtime="20201030 15:54:27.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.362" endtime="20201030 15:54:27.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.360" endtime="20201030 15:54:27.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.359" endtime="20201030 15:54:27.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.003" endtime="20201030 15:54:27.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.002" endtime="20201030 15:54:27.383"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.390" endtime="20201030 15:54:27.401"></status>
</kw>
<msg timestamp="20201030 15:54:27.402" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.389" endtime="20201030 15:54:27.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.404" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.403" endtime="20201030 15:54:27.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.405" endtime="20201030 15:54:27.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.386" endtime="20201030 15:54:27.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.385" endtime="20201030 15:54:27.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.415" endtime="20201030 15:54:27.703"></status>
</kw>
<msg timestamp="20201030 15:54:27.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.413" endtime="20201030 15:54:27.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018364597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.708" endtime="20201030 15:54:27.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.716" endtime="20201030 15:54:27.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.410" endtime="20201030 15:54:27.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.409" endtime="20201030 15:54:27.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.722" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:27.719" endtime="20201030 15:54:27.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:27.726" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:27.723" endtime="20201030 15:54:27.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.731" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:27.729" endtime="20201030 15:54:27.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.733" level="INFO">VALUE: [4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:27.732" endtime="20201030 15:54:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.727" endtime="20201030 15:54:27.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.737" endtime="20201030 15:54:27.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.736" endtime="20201030 15:54:27.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.735" endtime="20201030 15:54:27.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.383" endtime="20201030 15:54:27.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.383" endtime="20201030 15:54:27.758"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.766" endtime="20201030 15:54:27.776"></status>
</kw>
<msg timestamp="20201030 15:54:27.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.764" endtime="20201030 15:54:27.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.778" endtime="20201030 15:54:27.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.780" endtime="20201030 15:54:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.762" endtime="20201030 15:54:27.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.760" endtime="20201030 15:54:27.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.790" endtime="20201030 15:54:28.076"></status>
</kw>
<msg timestamp="20201030 15:54:28.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018473167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.789" endtime="20201030 15:54:28.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018473167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018473639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.081" endtime="20201030 15:54:28.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.089" endtime="20201030 15:54:28.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.786" endtime="20201030 15:54:28.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.785" endtime="20201030 15:54:28.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.095" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:28.092" endtime="20201030 15:54:28.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:28.099" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:54:28.096" endtime="20201030 15:54:28.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.104" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:28.103" endtime="20201030 15:54:28.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.106" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:28.105" endtime="20201030 15:54:28.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.100" endtime="20201030 15:54:28.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.111" endtime="20201030 15:54:28.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.110" endtime="20201030 15:54:28.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.109" endtime="20201030 15:54:28.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.759" endtime="20201030 15:54:28.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.758" endtime="20201030 15:54:28.132"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.140" endtime="20201030 15:54:28.151"></status>
</kw>
<msg timestamp="20201030 15:54:28.152" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.138" endtime="20201030 15:54:28.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.155" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.154" endtime="20201030 15:54:28.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.157" endtime="20201030 15:54:28.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.136" endtime="20201030 15:54:28.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.134" endtime="20201030 15:54:28.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.170" endtime="20201030 15:54:28.457"></status>
</kw>
<msg timestamp="20201030 15:54:28.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018254542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.167" endtime="20201030 15:54:28.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018254069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018254542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.461" endtime="20201030 15:54:28.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.469" endtime="20201030 15:54:28.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.164" endtime="20201030 15:54:28.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.162" endtime="20201030 15:54:28.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.476" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:28.473" endtime="20201030 15:54:28.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:28.481" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:28.477" endtime="20201030 15:54:28.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.485" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:28.484" endtime="20201030 15:54:28.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.488" level="INFO">VALUE: [4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07]</msg>
<status status="PASS" starttime="20201030 15:54:28.486" endtime="20201030 15:54:28.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.482" endtime="20201030 15:54:28.488"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.492" endtime="20201030 15:54:28.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.491" endtime="20201030 15:54:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.489" endtime="20201030 15:54:28.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.133" endtime="20201030 15:54:28.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.132" endtime="20201030 15:54:28.513"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.520" endtime="20201030 15:54:28.532"></status>
</kw>
<msg timestamp="20201030 15:54:28.532" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.519" endtime="20201030 15:54:28.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.534" endtime="20201030 15:54:28.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.536" endtime="20201030 15:54:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.516" endtime="20201030 15:54:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.515" endtime="20201030 15:54:28.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.545" endtime="20201030 15:54:28.831"></status>
</kw>
<msg timestamp="20201030 15:54:28.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.543" endtime="20201030 15:54:28.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018322569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018323042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.835" endtime="20201030 15:54:28.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.843" endtime="20201030 15:54:28.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.541" endtime="20201030 15:54:28.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.539" endtime="20201030 15:54:28.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.850" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:28.847" endtime="20201030 15:54:28.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:28.855" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:28.851" endtime="20201030 15:54:28.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.859" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:28.858" endtime="20201030 15:54:28.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.861" level="INFO">VALUE: [4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:28.860" endtime="20201030 15:54:28.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.856" endtime="20201030 15:54:28.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.866" endtime="20201030 15:54:28.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.864" endtime="20201030 15:54:28.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.863" endtime="20201030 15:54:28.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.513" endtime="20201030 15:54:28.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.513" endtime="20201030 15:54:28.886"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.895" endtime="20201030 15:54:28.905"></status>
</kw>
<msg timestamp="20201030 15:54:28.906" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.893" endtime="20201030 15:54:28.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.907" endtime="20201030 15:54:28.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.909" endtime="20201030 15:54:28.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.890" endtime="20201030 15:54:28.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.888" endtime="20201030 15:54:28.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.919" endtime="20201030 15:54:29.205"></status>
</kw>
<msg timestamp="20201030 15:54:29.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019012361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.918" endtime="20201030 15:54:29.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019011889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019012361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.210" endtime="20201030 15:54:29.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.218" endtime="20201030 15:54:29.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.915" endtime="20201030 15:54:29.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.913" endtime="20201030 15:54:29.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.224" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:29.221" endtime="20201030 15:54:29.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.228" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:29.225" endtime="20201030 15:54:29.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.233" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.231" endtime="20201030 15:54:29.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.235" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.234" endtime="20201030 15:54:29.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.229" endtime="20201030 15:54:29.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.240" endtime="20201030 15:54:29.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.239" endtime="20201030 15:54:29.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.238" endtime="20201030 15:54:29.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.887" endtime="20201030 15:54:29.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.887" endtime="20201030 15:54:29.261"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.269" endtime="20201030 15:54:29.280"></status>
</kw>
<msg timestamp="20201030 15:54:29.280" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.268" endtime="20201030 15:54:29.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.283" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.282" endtime="20201030 15:54:29.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.284" endtime="20201030 15:54:29.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.265" endtime="20201030 15:54:29.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.263" endtime="20201030 15:54:29.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.293" endtime="20201030 15:54:29.578"></status>
</kw>
<msg timestamp="20201030 15:54:29.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018901361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.291" endtime="20201030 15:54:29.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018901361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018901847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.582" endtime="20201030 15:54:29.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.590" endtime="20201030 15:54:29.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.289" endtime="20201030 15:54:29.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.287" endtime="20201030 15:54:29.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.597" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:29.594" endtime="20201030 15:54:29.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.602" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 15:54:29.598" endtime="20201030 15:54:29.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.606" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.605" endtime="20201030 15:54:29.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.609" level="INFO">VALUE: [4.860000000009301e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.607" endtime="20201030 15:54:29.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.603" endtime="20201030 15:54:29.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.613" endtime="20201030 15:54:29.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.612" endtime="20201030 15:54:29.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.610" endtime="20201030 15:54:29.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.262" endtime="20201030 15:54:29.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.261" endtime="20201030 15:54:29.634"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.642" endtime="20201030 15:54:29.653"></status>
</kw>
<msg timestamp="20201030 15:54:29.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.640" endtime="20201030 15:54:29.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.656" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.654" endtime="20201030 15:54:29.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.657" endtime="20201030 15:54:29.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.638" endtime="20201030 15:54:29.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.636" endtime="20201030 15:54:29.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.666" endtime="20201030 15:54:29.953"></status>
</kw>
<msg timestamp="20201030 15:54:29.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018725056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018725528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.664" endtime="20201030 15:54:29.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018725056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018725528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.957" endtime="20201030 15:54:29.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.965" endtime="20201030 15:54:29.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.661" endtime="20201030 15:54:29.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.660" endtime="20201030 15:54:29.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.973" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:29.970" endtime="20201030 15:54:29.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:29.977" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:54:29.974" endtime="20201030 15:54:29.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:29.980" endtime="20201030 15:54:29.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.984" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:29.982" endtime="20201030 15:54:29.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.978" endtime="20201030 15:54:29.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.989" endtime="20201030 15:54:30.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.987" endtime="20201030 15:54:30.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.986" endtime="20201030 15:54:30.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.635" endtime="20201030 15:54:30.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.634" endtime="20201030 15:54:30.010"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.017" endtime="20201030 15:54:30.028"></status>
</kw>
<msg timestamp="20201030 15:54:30.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.016" endtime="20201030 15:54:30.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.030" endtime="20201030 15:54:30.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.032" endtime="20201030 15:54:30.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.013" endtime="20201030 15:54:30.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.012" endtime="20201030 15:54:30.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.042" endtime="20201030 15:54:30.328"></status>
</kw>
<msg timestamp="20201030 15:54:30.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018687208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.041" endtime="20201030 15:54:30.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018687208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018687681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.332" endtime="20201030 15:54:30.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.340" endtime="20201030 15:54:30.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.038" endtime="20201030 15:54:30.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.036" endtime="20201030 15:54:30.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.347" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:30.344" endtime="20201030 15:54:30.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:30.351" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 15:54:30.348" endtime="20201030 15:54:30.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.355" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:30.354" endtime="20201030 15:54:30.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.358" level="INFO">VALUE: [4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:54:30.357" endtime="20201030 15:54:30.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.352" endtime="20201030 15:54:30.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.364" endtime="20201030 15:54:30.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.362" endtime="20201030 15:54:30.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.361" endtime="20201030 15:54:30.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.010" endtime="20201030 15:54:30.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.010" endtime="20201030 15:54:30.384"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.392" endtime="20201030 15:54:30.403"></status>
</kw>
<msg timestamp="20201030 15:54:30.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.391" endtime="20201030 15:54:30.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.406" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.405" endtime="20201030 15:54:30.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.407" endtime="20201030 15:54:30.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.388" endtime="20201030 15:54:30.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.386" endtime="20201030 15:54:30.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.416" endtime="20201030 15:54:30.702"></status>
</kw>
<msg timestamp="20201030 15:54:30.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018650639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.415" endtime="20201030 15:54:30.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018650639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.706" endtime="20201030 15:54:30.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.714" endtime="20201030 15:54:30.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.412" endtime="20201030 15:54:30.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.410" endtime="20201030 15:54:30.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.721" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {...</msg>
<status status="PASS" starttime="20201030 15:54:30.718" endtime="20201030 15:54:30.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:30.726" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.8600...</msg>
<status status="PASS" starttime="20201030 15:54:30.722" endtime="20201030 15:54:30.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.730" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:30.729" endtime="20201030 15:54:30.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.732" level="INFO">VALUE: [4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:30.731" endtime="20201030 15:54:30.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.727" endtime="20201030 15:54:30.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.737" endtime="20201030 15:54:30.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.736" endtime="20201030 15:54:30.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.735" endtime="20201030 15:54:30.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.385" endtime="20201030 15:54:30.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.385" endtime="20201030 15:54:30.758"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.766" endtime="20201030 15:54:30.776"></status>
</kw>
<msg timestamp="20201030 15:54:30.777" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.764" endtime="20201030 15:54:30.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.778" endtime="20201030 15:54:30.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.780" endtime="20201030 15:54:30.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.762" endtime="20201030 15:54:30.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.760" endtime="20201030 15:54:30.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.789" endtime="20201030 15:54:31.080"></status>
</kw>
<msg timestamp="20201030 15:54:31.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018551764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018552236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.787" endtime="20201030 15:54:31.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018551764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018552236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.084" endtime="20201030 15:54:31.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.092" endtime="20201030 15:54:31.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.785" endtime="20201030 15:54:31.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.783" endtime="20201030 15:54:31.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.099" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:54:31.096" endtime="20201030 15:54:31.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.103" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 15:54:31.100" endtime="20201030 15:54:31.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.107" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:31.106" endtime="20201030 15:54:31.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.110" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:54:31.108" endtime="20201030 15:54:31.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.104" endtime="20201030 15:54:31.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.115" endtime="20201030 15:54:31.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.113" endtime="20201030 15:54:31.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.112" endtime="20201030 15:54:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.759" endtime="20201030 15:54:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.758" endtime="20201030 15:54:31.135"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.143" endtime="20201030 15:54:31.153"></status>
</kw>
<msg timestamp="20201030 15:54:31.154" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.141" endtime="20201030 15:54:31.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.156" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.155" endtime="20201030 15:54:31.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.157" endtime="20201030 15:54:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.139" endtime="20201030 15:54:31.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.137" endtime="20201030 15:54:31.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.168" endtime="20201030 15:54:31.453"></status>
</kw>
<msg timestamp="20201030 15:54:31.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018416389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018416861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.166" endtime="20201030 15:54:31.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018416389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018416861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.457" endtime="20201030 15:54:31.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.466" endtime="20201030 15:54:31.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.163" endtime="20201030 15:54:31.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.162" endtime="20201030 15:54:31.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.472" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:31.469" endtime="20201030 15:54:31.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.476" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:31.473" endtime="20201030 15:54:31.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.480" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:31.479" endtime="20201030 15:54:31.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.483" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:54:31.481" endtime="20201030 15:54:31.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.477" endtime="20201030 15:54:31.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.489" endtime="20201030 15:54:31.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.487" endtime="20201030 15:54:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.486" endtime="20201030 15:54:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.136" endtime="20201030 15:54:31.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.136" endtime="20201030 15:54:31.509"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.517" endtime="20201030 15:54:31.527"></status>
</kw>
<msg timestamp="20201030 15:54:31.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.516" endtime="20201030 15:54:31.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.528" endtime="20201030 15:54:31.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.531" endtime="20201030 15:54:31.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.513" endtime="20201030 15:54:31.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.511" endtime="20201030 15:54:31.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.540" endtime="20201030 15:54:31.824"></status>
</kw>
<msg timestamp="20201030 15:54:31.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.538" endtime="20201030 15:54:31.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018484861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.828" endtime="20201030 15:54:31.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.836" endtime="20201030 15:54:31.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.536" endtime="20201030 15:54:31.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.534" endtime="20201030 15:54:31.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.843" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:31.840" endtime="20201030 15:54:31.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:31.848" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:54:31.844" endtime="20201030 15:54:31.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.852" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:31.851" endtime="20201030 15:54:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.854" level="INFO">VALUE: [4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:31.853" endtime="20201030 15:54:31.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.849" endtime="20201030 15:54:31.856"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.859" endtime="20201030 15:54:31.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.858" endtime="20201030 15:54:31.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.857" endtime="20201030 15:54:31.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.510" endtime="20201030 15:54:31.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.510" endtime="20201030 15:54:31.880"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.888" endtime="20201030 15:54:31.898"></status>
</kw>
<msg timestamp="20201030 15:54:31.898" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.886" endtime="20201030 15:54:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.899" endtime="20201030 15:54:31.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.902" endtime="20201030 15:54:31.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.884" endtime="20201030 15:54:31.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.882" endtime="20201030 15:54:31.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.911" endtime="20201030 15:54:32.196"></status>
</kw>
<msg timestamp="20201030 15:54:32.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018296319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.909" endtime="20201030 15:54:32.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018296319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.201" endtime="20201030 15:54:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.209" endtime="20201030 15:54:32.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.907" endtime="20201030 15:54:32.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.905" endtime="20201030 15:54:32.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.217" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.729999999973644e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:32.214" endtime="20201030 15:54:32.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.221" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:32.218" endtime="20201030 15:54:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.225" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.224" endtime="20201030 15:54:32.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.228" level="INFO">VALUE: [4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:54:32.226" endtime="20201030 15:54:32.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.222" endtime="20201030 15:54:32.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.233" endtime="20201030 15:54:32.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.231" endtime="20201030 15:54:32.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.230" endtime="20201030 15:54:32.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.881" endtime="20201030 15:54:32.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.880" endtime="20201030 15:54:32.254"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.261" endtime="20201030 15:54:32.272"></status>
</kw>
<msg timestamp="20201030 15:54:32.273" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.260" endtime="20201030 15:54:32.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.275" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.274" endtime="20201030 15:54:32.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.276" endtime="20201030 15:54:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.257" endtime="20201030 15:54:32.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.256" endtime="20201030 15:54:32.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.286" endtime="20201030 15:54:32.573"></status>
</kw>
<msg timestamp="20201030 15:54:32.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.284" endtime="20201030 15:54:32.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.578" endtime="20201030 15:54:32.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.586" endtime="20201030 15:54:32.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.282" endtime="20201030 15:54:32.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.280" endtime="20201030 15:54:32.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.592" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:54:32.589" endtime="20201030 15:54:32.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.596" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 15:54:32.593" endtime="20201030 15:54:32.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.600" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.599" endtime="20201030 15:54:32.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.603" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.869999999969343e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 15:54:32.602" endtime="20201030 15:54:32.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.597" endtime="20201030 15:54:32.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.609" endtime="20201030 15:54:32.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.607" endtime="20201030 15:54:32.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.606" endtime="20201030 15:54:32.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.254" endtime="20201030 15:54:32.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.254" endtime="20201030 15:54:32.629"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.637" endtime="20201030 15:54:32.648"></status>
</kw>
<msg timestamp="20201030 15:54:32.648" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.636" endtime="20201030 15:54:32.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.651" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.649" endtime="20201030 15:54:32.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.652" endtime="20201030 15:54:32.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.633" endtime="20201030 15:54:32.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.631" endtime="20201030 15:54:32.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.661" endtime="20201030 15:54:32.946"></status>
</kw>
<msg timestamp="20201030 15:54:32.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.659" endtime="20201030 15:54:32.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.950" endtime="20201030 15:54:32.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.959" endtime="20201030 15:54:32.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.657" endtime="20201030 15:54:32.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.655" endtime="20201030 15:54:32.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.965" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:54:32.962" endtime="20201030 15:54:32.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:32.970" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:54:32.966" endtime="20201030 15:54:32.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.974" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:54:32.973" endtime="20201030 15:54:32.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.977" level="INFO">VALUE: [4.7300000000083386e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:54:32.975" endtime="20201030 15:54:32.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.971" endtime="20201030 15:54:32.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.982" endtime="20201030 15:54:33.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.980" endtime="20201030 15:54:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.979" endtime="20201030 15:54:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.630" endtime="20201030 15:54:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.630" endtime="20201030 15:54:33.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.442" endtime="20201030 15:54:33.003"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:25.367" endtime="20201030 15:54:33.003" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.010" endtime="20201030 15:54:33.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.008" endtime="20201030 15:54:33.030"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.043" endtime="20201030 15:54:33.056"></status>
</kw>
<msg timestamp="20201030 15:54:33.057" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.041" endtime="20201030 15:54:33.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.058" endtime="20201030 15:54:33.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.064" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:33.061" endtime="20201030 15:54:33.064"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.038" endtime="20201030 15:54:33.065"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:33.036" endtime="20201030 15:54:33.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.035" endtime="20201030 15:54:33.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:33.069" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:33.068" endtime="20201030 15:54:33.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.066" endtime="20201030 15:54:33.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.034" endtime="20201030 15:54:33.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.033" endtime="20201030 15:54:33.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.071" endtime="20201030 15:54:33.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.032" endtime="20201030 15:54:33.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.030" endtime="20201030 15:54:33.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.007" endtime="20201030 15:54:33.073"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.082" endtime="20201030 15:54:33.093"></status>
</kw>
<msg timestamp="20201030 15:54:33.094" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.080" endtime="20201030 15:54:33.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.095" endtime="20201030 15:54:33.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.098" endtime="20201030 15:54:33.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.078" endtime="20201030 15:54:33.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.076" endtime="20201030 15:54:33.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.107" endtime="20201030 15:54:33.392"></status>
</kw>
<msg timestamp="20201030 15:54:33.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063207722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.105" endtime="20201030 15:54:33.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063204722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063207722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.397" endtime="20201030 15:54:33.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.405" endtime="20201030 15:54:33.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.103" endtime="20201030 15:54:33.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.101" endtime="20201030 15:54:33.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.411" level="INFO">${RESULT} = [{'diff': 2.9999999999891225e-06}, {'diff': 3.0700000000077887e-06}, {'diff': 3.069999999993911e-06}, {'diff': 3.0700000000077887e-06}, {'diff': 3.0979999999930508e-06}, {'diff': 3.0550000000018063e-0...</msg>
<status status="PASS" starttime="20201030 15:54:33.408" endtime="20201030 15:54:33.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.417" level="INFO">${OVERHEAD} = {'diff': [2.9999999999891225e-06, 3.0700000000077887e-06, 3.069999999993911e-06, 3.0700000000077887e-06, 3.0979999999930508e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3....</msg>
<status status="PASS" starttime="20201030 15:54:33.412" endtime="20201030 15:54:33.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.421" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:33.420" endtime="20201030 15:54:33.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.424" level="INFO">VALUE: [2.9999999999891225e-06, 3.0700000000077887e-06, 3.069999999993911e-06, 3.0700000000077887e-06, 3.0979999999930508e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.042000000008649e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0700000000077887e-06, 3.069999999993911e-06, 3.0689999999944373e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.069000000008315e-06, 3.1389999999992257e-06, 3.069999999993911e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.041999999994771e-06, 3.0840000000004197e-06, 3.041999999994771e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.069000000008315e-06, 3.069000000008315e-06, 3.0700000000077887e-06, 2.9859999999964915e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0689999999944373e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.069999999993911e-06, 3.0139999999956313e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.069000000008315e-06, 3.111000000000086e-06, 3.069000000008315e-06, 3.069999999993911e-06, 3.0700000000077887e-06, 3.069000000008315e-06, 3.0549999999879285e-06, 3.0549999999879285e-06, 3.111000000000086e-06]</msg>
<status status="PASS" starttime="20201030 15:54:33.423" endtime="20201030 15:54:33.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.418" endtime="20201030 15:54:33.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.429" endtime="20201030 15:54:33.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.427" endtime="20201030 15:54:33.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.426" endtime="20201030 15:54:33.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.075" endtime="20201030 15:54:33.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.074" endtime="20201030 15:54:33.450"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.457" endtime="20201030 15:54:33.469"></status>
</kw>
<msg timestamp="20201030 15:54:33.469" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.456" endtime="20201030 15:54:33.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.472" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.471" endtime="20201030 15:54:33.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.473" endtime="20201030 15:54:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.453" endtime="20201030 15:54:33.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.452" endtime="20201030 15:54:33.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.482" endtime="20201030 15:54:33.771"></status>
</kw>
<msg timestamp="20201030 15:54:33.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019512319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.481" endtime="20201030 15:54:33.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019512319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019515361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.775" endtime="20201030 15:54:33.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.784" endtime="20201030 15:54:33.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.478" endtime="20201030 15:54:33.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.476" endtime="20201030 15:54:33.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.790" level="INFO">${RESULT} = [{'diff': 3.0419999999982406e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.137999999999752e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0840000000004197e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:33.787" endtime="20201030 15:54:33.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:33.794" level="INFO">${OVERHEAD} = {'diff': [3.0419999999982406e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.137999999999752e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.06...</msg>
<status status="PASS" starttime="20201030 15:54:33.791" endtime="20201030 15:54:33.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.798" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:33.797" endtime="20201030 15:54:33.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.801" level="INFO">VALUE: [3.0419999999982406e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.137999999999752e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.111000000000086e-06, 3.0689999999979067e-06, 3.0139999999991007e-06, 3.0550000000018063e-06, 3.0559999999978105e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.054999999998337e-06]</msg>
<status status="PASS" starttime="20201030 15:54:33.800" endtime="20201030 15:54:33.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.795" endtime="20201030 15:54:33.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.805" endtime="20201030 15:54:33.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.804" endtime="20201030 15:54:33.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.803" endtime="20201030 15:54:33.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.450" endtime="20201030 15:54:33.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.450" endtime="20201030 15:54:33.826"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.834" endtime="20201030 15:54:33.847"></status>
</kw>
<msg timestamp="20201030 15:54:33.848" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.832" endtime="20201030 15:54:33.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.850" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.849" endtime="20201030 15:54:33.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.851" endtime="20201030 15:54:33.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.830" endtime="20201030 15:54:33.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.828" endtime="20201030 15:54:33.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.860" endtime="20201030 15:54:34.144"></status>
</kw>
<msg timestamp="20201030 15:54:34.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02083175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:33.859" endtime="20201030 15:54:34.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02083175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020834819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:34.149" endtime="20201030 15:54:34.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.157" endtime="20201030 15:54:34.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.856" endtime="20201030 15:54:34.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.854" endtime="20201030 15:54:34.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.167" level="INFO">${RESULT} = [{'diff': 3.069000000001376e-06}, {'diff': 3.0279999999986706e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.1389999999992257e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.05600000000128e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:34.162" endtime="20201030 15:54:34.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.173" level="INFO">${OVERHEAD} = {'diff': [3.069000000001376e-06, 3.0279999999986706e-06, 3.07000000000085e-06, 3.1389999999992257e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.041...</msg>
<status status="PASS" starttime="20201030 15:54:34.168" endtime="20201030 15:54:34.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.178" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.176" endtime="20201030 15:54:34.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.181" level="INFO">VALUE: [3.069000000001376e-06, 3.0279999999986706e-06, 3.07000000000085e-06, 3.1389999999992257e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.124999999999656e-06, 3.097000000000516e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.0829999999974766e-06, 3.0559999999978105e-06, 3.124999999999656e-06, 3.0550000000018063e-06, 3.012999999999627e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.179" endtime="20201030 15:54:34.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.173" endtime="20201030 15:54:34.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.192" endtime="20201030 15:54:34.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.190" endtime="20201030 15:54:34.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.188" endtime="20201030 15:54:34.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.827" endtime="20201030 15:54:34.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.826" endtime="20201030 15:54:34.214"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.222" endtime="20201030 15:54:34.234"></status>
</kw>
<msg timestamp="20201030 15:54:34.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.220" endtime="20201030 15:54:34.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.237" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.236" endtime="20201030 15:54:34.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.238" endtime="20201030 15:54:34.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.218" endtime="20201030 15:54:34.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.216" endtime="20201030 15:54:34.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.247" endtime="20201030 15:54:34.535"></status>
</kw>
<msg timestamp="20201030 15:54:34.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.246" endtime="20201030 15:54:34.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020344056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.540" endtime="20201030 15:54:34.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.550" endtime="20201030 15:54:34.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.243" endtime="20201030 15:54:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.241" endtime="20201030 15:54:34.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.571" level="INFO">${RESULT} = [{'diff': 3.069000000001376e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.069000000001376e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:34.562" endtime="20201030 15:54:34.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.585" level="INFO">${OVERHEAD} = {'diff': [3.069000000001376e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 15:54:34.574" endtime="20201030 15:54:34.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.600" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.597" endtime="20201030 15:54:34.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.606" level="INFO">VALUE: [3.069000000001376e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.01400000000257e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0419999999982406e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.1389999999992257e-06, 3.054999999998337e-06, 3.012999999999627e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.124999999999656e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.040999999998767e-06, 3.1389999999992257e-06, 3.0550000000018063e-06, 3.026999999999197e-06, 3.054999999998337e-06, 3.02800000000214e-06, 3.0279999999986706e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.054999999998337e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.603" endtime="20201030 15:54:34.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.588" endtime="20201030 15:54:34.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.611" endtime="20201030 15:54:34.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.609" endtime="20201030 15:54:34.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.608" endtime="20201030 15:54:34.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.215" endtime="20201030 15:54:34.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.214" endtime="20201030 15:54:34.632"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.641" endtime="20201030 15:54:34.653"></status>
</kw>
<msg timestamp="20201030 15:54:34.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.639" endtime="20201030 15:54:34.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.656" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.655" endtime="20201030 15:54:34.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.657" endtime="20201030 15:54:34.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.636" endtime="20201030 15:54:34.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.634" endtime="20201030 15:54:34.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.667" endtime="20201030 15:54:34.954"></status>
</kw>
<msg timestamp="20201030 15:54:34.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.665" endtime="20201030 15:54:34.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021111681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.958" endtime="20201030 15:54:34.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.967" endtime="20201030 15:54:34.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.662" endtime="20201030 15:54:34.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.661" endtime="20201030 15:54:34.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.974" level="INFO">${RESULT} = [{'diff': 3.0279999999986706e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.0840000000004197e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:34.971" endtime="20201030 15:54:34.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:34.978" level="INFO">${OVERHEAD} = {'diff': [3.0279999999986706e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.06...</msg>
<status status="PASS" starttime="20201030 15:54:34.975" endtime="20201030 15:54:34.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.982" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:34.981" endtime="20201030 15:54:34.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.985" level="INFO">VALUE: [3.0279999999986706e-06, 3.04200000000171e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 2.972000000000391e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0979999999999897e-06, 2.999999999999531e-06, 3.0969999999970466e-06, 3.0699999999973804e-06, 3.040999999998767e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0279999999986706e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.0000000000030003e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.0419999999982406e-06]</msg>
<status status="PASS" starttime="20201030 15:54:34.984" endtime="20201030 15:54:34.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.979" endtime="20201030 15:54:34.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.990" endtime="20201030 15:54:35.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.988" endtime="20201030 15:54:35.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.987" endtime="20201030 15:54:35.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.633" endtime="20201030 15:54:35.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.632" endtime="20201030 15:54:35.011"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.019" endtime="20201030 15:54:35.030"></status>
</kw>
<msg timestamp="20201030 15:54:35.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.017" endtime="20201030 15:54:35.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.033" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.032" endtime="20201030 15:54:35.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.034" endtime="20201030 15:54:35.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.014" endtime="20201030 15:54:35.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.013" endtime="20201030 15:54:35.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.044" endtime="20201030 15:54:35.328"></status>
</kw>
<msg timestamp="20201030 15:54:35.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.043" endtime="20201030 15:54:35.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.332" endtime="20201030 15:54:35.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.340" endtime="20201030 15:54:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.040" endtime="20201030 15:54:35.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.038" endtime="20201030 15:54:35.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.347" level="INFO">${RESULT} = [{'diff': 3.02800000000214e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 2.985999999999961e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:35.343" endtime="20201030 15:54:35.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.352" level="INFO">${OVERHEAD} = {'diff': [3.02800000000214e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 2.985999999999961e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0409...</msg>
<status status="PASS" starttime="20201030 15:54:35.348" endtime="20201030 15:54:35.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.356" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:35.355" endtime="20201030 15:54:35.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.359" level="INFO">VALUE: [3.02800000000214e-06, 3.0699999999973804e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 2.985999999999961e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.124999999999656e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.069000000001376e-06, 2.985999999999961e-06, 3.124999999999656e-06, 3.0000000000030003e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.0839999999969503e-06, 3.0139999999991007e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.357" endtime="20201030 15:54:35.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.353" endtime="20201030 15:54:35.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.365" endtime="20201030 15:54:35.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.363" endtime="20201030 15:54:35.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.362" endtime="20201030 15:54:35.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.011" endtime="20201030 15:54:35.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.011" endtime="20201030 15:54:35.386"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.397" endtime="20201030 15:54:35.409"></status>
</kw>
<msg timestamp="20201030 15:54:35.410" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.396" endtime="20201030 15:54:35.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.411" endtime="20201030 15:54:35.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.414" endtime="20201030 15:54:35.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.392" endtime="20201030 15:54:35.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.389" endtime="20201030 15:54:35.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.423" endtime="20201030 15:54:35.711"></status>
</kw>
<msg timestamp="20201030 15:54:35.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.421" endtime="20201030 15:54:35.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023905931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.715" endtime="20201030 15:54:35.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.723" endtime="20201030 15:54:35.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.418" endtime="20201030 15:54:35.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.417" endtime="20201030 15:54:35.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.730" level="INFO">${RESULT} = [{'diff': 3.0550000000018063e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.040999999998767e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.0550000000018063e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:35.727" endtime="20201030 15:54:35.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:35.735" level="INFO">${OVERHEAD} = {'diff': [3.0550000000018063e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.09...</msg>
<status status="PASS" starttime="20201030 15:54:35.731" endtime="20201030 15:54:35.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.739" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:35.738" endtime="20201030 15:54:35.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.741" level="INFO">VALUE: [3.0550000000018063e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.111000000000086e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.069000000001376e-06, 3.0979999999999897e-06, 3.054999999998337e-06, 2.999999999999531e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.069000000001376e-06, 3.07000000000085e-06, 2.999999999999531e-06, 3.054999999998337e-06, 2.999999999999531e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 2.999999999999531e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.0840000000004197e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.05600000000128e-06]</msg>
<status status="PASS" starttime="20201030 15:54:35.740" endtime="20201030 15:54:35.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.736" endtime="20201030 15:54:35.743"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.746" endtime="20201030 15:54:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.745" endtime="20201030 15:54:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.744" endtime="20201030 15:54:35.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.387" endtime="20201030 15:54:35.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.387" endtime="20201030 15:54:35.767"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.775" endtime="20201030 15:54:35.786"></status>
</kw>
<msg timestamp="20201030 15:54:35.787" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.773" endtime="20201030 15:54:35.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.789" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.788" endtime="20201030 15:54:35.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.790" endtime="20201030 15:54:35.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.771" endtime="20201030 15:54:35.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.769" endtime="20201030 15:54:35.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.799" endtime="20201030 15:54:36.087"></status>
</kw>
<msg timestamp="20201030 15:54:36.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.798" endtime="20201030 15:54:36.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.091" endtime="20201030 15:54:36.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.099" endtime="20201030 15:54:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.795" endtime="20201030 15:54:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.794" endtime="20201030 15:54:36.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.107" level="INFO">${RESULT} = [{'diff': 3.069000000001376e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 2.9729999999998646e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.097000000000516e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:36.104" endtime="20201030 15:54:36.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.111" level="INFO">${OVERHEAD} = {'diff': [3.069000000001376e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 2.9729999999998646e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.06...</msg>
<status status="PASS" starttime="20201030 15:54:36.108" endtime="20201030 15:54:36.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.115" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.114" endtime="20201030 15:54:36.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.118" level="INFO">VALUE: [3.069000000001376e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 2.9729999999998646e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.040999999998767e-06, 3.137999999999752e-06, 3.040999999998767e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.097000000000516e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.1389999999992257e-06, 3.0969999999970466e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.026999999999197e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.0559999999978105e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.116" endtime="20201030 15:54:36.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.112" endtime="20201030 15:54:36.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.123" endtime="20201030 15:54:36.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.121" endtime="20201030 15:54:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.120" endtime="20201030 15:54:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.768" endtime="20201030 15:54:36.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.767" endtime="20201030 15:54:36.143"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.151" endtime="20201030 15:54:36.163"></status>
</kw>
<msg timestamp="20201030 15:54:36.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.150" endtime="20201030 15:54:36.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.165" endtime="20201030 15:54:36.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.167" endtime="20201030 15:54:36.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.147" endtime="20201030 15:54:36.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.145" endtime="20201030 15:54:36.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.177" endtime="20201030 15:54:36.464"></status>
</kw>
<msg timestamp="20201030 15:54:36.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019471347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.176" endtime="20201030 15:54:36.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019471347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.469" endtime="20201030 15:54:36.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.477" endtime="20201030 15:54:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.173" endtime="20201030 15:54:36.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.172" endtime="20201030 15:54:36.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.484" level="INFO">${RESULT} = [{'diff': 3.054999999998337e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0840000000004197e-06}, {'diff': 3.0139999999991007e-06}, {'diff': 3.04200000000171e-06}, {'diff': 3.04200000000171e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:36.480" endtime="20201030 15:54:36.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.488" level="INFO">${OVERHEAD} = {'diff': [3.054999999998337e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.08...</msg>
<status status="PASS" starttime="20201030 15:54:36.485" endtime="20201030 15:54:36.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.492" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.491" endtime="20201030 15:54:36.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.494" level="INFO">VALUE: [3.054999999998337e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.0139999999991007e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0559999999978105e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.0839999999969503e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.0979999999999897e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 2.972000000000391e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.0550000000018063e-06, 3.1119999999995596e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.1389999999992257e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.493" endtime="20201030 15:54:36.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.489" endtime="20201030 15:54:36.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.500" endtime="20201030 15:54:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.499" endtime="20201030 15:54:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.497" endtime="20201030 15:54:36.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.144" endtime="20201030 15:54:36.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.144" endtime="20201030 15:54:36.521"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.529" endtime="20201030 15:54:36.541"></status>
</kw>
<msg timestamp="20201030 15:54:36.541" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.527" endtime="20201030 15:54:36.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.544" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.542" endtime="20201030 15:54:36.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.545" endtime="20201030 15:54:36.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.525" endtime="20201030 15:54:36.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.523" endtime="20201030 15:54:36.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.554" endtime="20201030 15:54:36.840"></status>
</kw>
<msg timestamp="20201030 15:54:36.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:36.552" endtime="20201030 15:54:36.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01983425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019837306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:36.844" endtime="20201030 15:54:36.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.852" endtime="20201030 15:54:36.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.549" endtime="20201030 15:54:36.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.548" endtime="20201030 15:54:36.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.858" level="INFO">${RESULT} = [{'diff': 3.0559999999978105e-06}, {'diff': 3.0419999999982406e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.0979999999999897e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.083000000000946e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:36.855" endtime="20201030 15:54:36.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:36.863" level="INFO">${OVERHEAD} = {'diff': [3.0559999999978105e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 15:54:36.859" endtime="20201030 15:54:36.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.867" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:36.866" endtime="20201030 15:54:36.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.870" level="INFO">VALUE: [3.0559999999978105e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.111000000000086e-06, 3.069000000001376e-06, 3.054999999998337e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.137999999999752e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.0840000000004197e-06, 3.040999999998767e-06, 3.0699999999973804e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0840000000004197e-06]</msg>
<status status="PASS" starttime="20201030 15:54:36.868" endtime="20201030 15:54:36.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.864" endtime="20201030 15:54:36.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.875" endtime="20201030 15:54:36.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.873" endtime="20201030 15:54:36.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.872" endtime="20201030 15:54:36.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.522" endtime="20201030 15:54:36.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.521" endtime="20201030 15:54:36.896"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.903" endtime="20201030 15:54:36.915"></status>
</kw>
<msg timestamp="20201030 15:54:36.915" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.902" endtime="20201030 15:54:36.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.918" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.916" endtime="20201030 15:54:36.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.919" endtime="20201030 15:54:36.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.899" endtime="20201030 15:54:36.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.898" endtime="20201030 15:54:36.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.928" endtime="20201030 15:54:37.213"></status>
</kw>
<msg timestamp="20201030 15:54:37.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.926" endtime="20201030 15:54:37.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019531917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.218" endtime="20201030 15:54:37.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.226" endtime="20201030 15:54:37.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.924" endtime="20201030 15:54:37.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.922" endtime="20201030 15:54:37.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.233" level="INFO">${RESULT} = [{'diff': 3.0419999999982406e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.083000000000946e-06},...</msg>
<status status="PASS" starttime="20201030 15:54:37.230" endtime="20201030 15:54:37.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.237" level="INFO">${OVERHEAD} = {'diff': [3.0419999999982406e-06, 3.111000000000086e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 2.999999999999531e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 15:54:37.234" endtime="20201030 15:54:37.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.242" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:37.241" endtime="20201030 15:54:37.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.244" level="INFO">VALUE: [3.0419999999982406e-06, 3.111000000000086e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.054999999998337e-06, 3.083000000000946e-06, 3.0840000000004197e-06, 2.999999999999531e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.1389999999992257e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.04200000000171e-06, 3.097000000000516e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.0139999999991007e-06, 3.0559999999978105e-06, 3.040999999998767e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.02800000000214e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.054999999998337e-06, 3.040999999998767e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.243" endtime="20201030 15:54:37.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.238" endtime="20201030 15:54:37.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.249" endtime="20201030 15:54:37.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.248" endtime="20201030 15:54:37.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.246" endtime="20201030 15:54:37.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.896" endtime="20201030 15:54:37.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.896" endtime="20201030 15:54:37.270"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.278" endtime="20201030 15:54:37.290"></status>
</kw>
<msg timestamp="20201030 15:54:37.290" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.276" endtime="20201030 15:54:37.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.293" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.291" endtime="20201030 15:54:37.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.294" endtime="20201030 15:54:37.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.274" endtime="20201030 15:54:37.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.272" endtime="20201030 15:54:37.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.304" endtime="20201030 15:54:37.588"></status>
</kw>
<msg timestamp="20201030 15:54:37.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:37.302" endtime="20201030 15:54:37.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01991025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019913319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:37.592" endtime="20201030 15:54:37.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.600" endtime="20201030 15:54:37.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.300" endtime="20201030 15:54:37.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.298" endtime="20201030 15:54:37.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.607" level="INFO">${RESULT} = [{'diff': 3.0689999999979067e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0419999999982406e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.0969999999970466e-0...</msg>
<status status="PASS" starttime="20201030 15:54:37.604" endtime="20201030 15:54:37.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.611" level="INFO">${OVERHEAD} = {'diff': [3.0689999999979067e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.0969999999970466e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3...</msg>
<status status="PASS" starttime="20201030 15:54:37.608" endtime="20201030 15:54:37.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.615" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:37.614" endtime="20201030 15:54:37.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.618" level="INFO">VALUE: [3.0689999999979067e-06, 3.069000000001376e-06, 3.0419999999982406e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.0969999999970466e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.153000000002265e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.0410000000022364e-06, 3.0410000000022364e-06, 3.0559999999978105e-06, 3.0979999999999897e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.02800000000214e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201030 15:54:37.616" endtime="20201030 15:54:37.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.612" endtime="20201030 15:54:37.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.630" endtime="20201030 15:54:37.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.629" endtime="20201030 15:54:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.627" endtime="20201030 15:54:37.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.271" endtime="20201030 15:54:37.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.270" endtime="20201030 15:54:37.651"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.658" endtime="20201030 15:54:37.671"></status>
</kw>
<msg timestamp="20201030 15:54:37.671" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.657" endtime="20201030 15:54:37.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.674" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.672" endtime="20201030 15:54:37.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.675" endtime="20201030 15:54:37.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.654" endtime="20201030 15:54:37.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.653" endtime="20201030 15:54:37.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.684" endtime="20201030 15:54:37.973"></status>
</kw>
<msg timestamp="20201030 15:54:37.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:37.682" endtime="20201030 15:54:37.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01943275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:37.977" endtime="20201030 15:54:37.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.985" endtime="20201030 15:54:37.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.680" endtime="20201030 15:54:37.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.678" endtime="20201030 15:54:37.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.992" level="INFO">${RESULT} = [{'diff': 3.0689999999979067e-06}, {'diff': 3.0279999999986706e-06}, {'diff': 3.0840000000004197e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.097000000000516e-06}, {'diff': 3.0689999999979067e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:37.988" endtime="20201030 15:54:37.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:37.997" level="INFO">${OVERHEAD} = {'diff': [3.0689999999979067e-06, 3.0279999999986706e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.08...</msg>
<status status="PASS" starttime="20201030 15:54:37.993" endtime="20201030 15:54:37.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.001" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.000" endtime="20201030 15:54:38.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.003" level="INFO">VALUE: [3.0689999999979067e-06, 3.0279999999986706e-06, 3.0840000000004197e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0829999999974766e-06, 3.0550000000018063e-06, 3.0559999999978105e-06, 3.02800000000214e-06, 3.083000000000946e-06, 3.0689999999979067e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.124999999999656e-06, 3.0840000000004197e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.0559999999978105e-06, 3.04200000000171e-06, 3.01400000000257e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.0279999999986706e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.0699999999973804e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0279999999986706e-06, 3.0559999999978105e-06, 3.0969999999970466e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0410000000022364e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.002" endtime="20201030 15:54:38.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.997" endtime="20201030 15:54:38.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.008" endtime="20201030 15:54:38.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.007" endtime="20201030 15:54:38.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.006" endtime="20201030 15:54:38.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.651" endtime="20201030 15:54:38.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.651" endtime="20201030 15:54:38.029"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.037" endtime="20201030 15:54:38.048"></status>
</kw>
<msg timestamp="20201030 15:54:38.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.035" endtime="20201030 15:54:38.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.050" endtime="20201030 15:54:38.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.052" endtime="20201030 15:54:38.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.033" endtime="20201030 15:54:38.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.031" endtime="20201030 15:54:38.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.061" endtime="20201030 15:54:38.350"></status>
</kw>
<msg timestamp="20201030 15:54:38.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.059" endtime="20201030 15:54:38.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019404806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.354" endtime="20201030 15:54:38.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.364" endtime="20201030 15:54:38.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.057" endtime="20201030 15:54:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.055" endtime="20201030 15:54:38.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.371" level="INFO">${RESULT} = [{'diff': 3.040999999998767e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.083000000000946e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.0139999999991007e-06}, {'diff': 3.05600000000128e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:38.368" endtime="20201030 15:54:38.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.375" level="INFO">${OVERHEAD} = {'diff': [3.040999999998767e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.06900000...</msg>
<status status="PASS" starttime="20201030 15:54:38.372" endtime="20201030 15:54:38.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.380" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.379" endtime="20201030 15:54:38.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.382" level="INFO">VALUE: [3.040999999998767e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.0699999999973804e-06, 3.111000000000086e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.111000000000086e-06, 3.040999999998767e-06, 3.0550000000018063e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.0419999999982406e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.0829999999974766e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.026999999999197e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.381" endtime="20201030 15:54:38.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.376" endtime="20201030 15:54:38.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.387" endtime="20201030 15:54:38.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.386" endtime="20201030 15:54:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.384" endtime="20201030 15:54:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.030" endtime="20201030 15:54:38.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.029" endtime="20201030 15:54:38.408"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.416" endtime="20201030 15:54:38.428"></status>
</kw>
<msg timestamp="20201030 15:54:38.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.414" endtime="20201030 15:54:38.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.429" endtime="20201030 15:54:38.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.432" endtime="20201030 15:54:38.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.411" endtime="20201030 15:54:38.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.410" endtime="20201030 15:54:38.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.442" endtime="20201030 15:54:38.728"></status>
</kw>
<msg timestamp="20201030 15:54:38.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.440" endtime="20201030 15:54:38.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019595528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.732" endtime="20201030 15:54:38.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.741" endtime="20201030 15:54:38.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.438" endtime="20201030 15:54:38.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.436" endtime="20201030 15:54:38.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.747" level="INFO">${RESULT} = [{'diff': 3.0840000000004197e-06}, {'diff': 3.097000000000516e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0550000000018063e-06}...</msg>
<status status="PASS" starttime="20201030 15:54:38.744" endtime="20201030 15:54:38.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:38.751" level="INFO">${OVERHEAD} = {'diff': [3.0840000000004197e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.05...</msg>
<status status="PASS" starttime="20201030 15:54:38.748" endtime="20201030 15:54:38.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.755" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:38.754" endtime="20201030 15:54:38.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.758" level="INFO">VALUE: [3.0840000000004197e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0279999999986706e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.0550000000018063e-06, 3.111000000000086e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.012999999999627e-06, 3.0829999999974766e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.054999999998337e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.0279999999986706e-06, 3.0689999999979067e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0410000000022364e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.0839999999969503e-06]</msg>
<status status="PASS" starttime="20201030 15:54:38.756" endtime="20201030 15:54:38.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.752" endtime="20201030 15:54:38.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.764" endtime="20201030 15:54:38.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.762" endtime="20201030 15:54:38.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.761" endtime="20201030 15:54:38.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.409" endtime="20201030 15:54:38.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.408" endtime="20201030 15:54:38.784"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.792" endtime="20201030 15:54:38.804"></status>
</kw>
<msg timestamp="20201030 15:54:38.804" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.790" endtime="20201030 15:54:38.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.805" endtime="20201030 15:54:38.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.808" endtime="20201030 15:54:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.788" endtime="20201030 15:54:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.786" endtime="20201030 15:54:38.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.817" endtime="20201030 15:54:39.103"></status>
</kw>
<msg timestamp="20201030 15:54:39.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.815" endtime="20201030 15:54:39.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.107" endtime="20201030 15:54:39.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.115" endtime="20201030 15:54:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.813" endtime="20201030 15:54:39.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.811" endtime="20201030 15:54:39.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.121" level="INFO">${RESULT} = [{'diff': 3.04200000000171e-06}, {'diff': 3.05600000000128e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.0689999999979067e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:39.118" endtime="20201030 15:54:39.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.127" level="INFO">${OVERHEAD} = {'diff': [3.04200000000171e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.0699...</msg>
<status status="PASS" starttime="20201030 15:54:39.122" endtime="20201030 15:54:39.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.131" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.130" endtime="20201030 15:54:39.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.133" level="INFO">VALUE: [3.04200000000171e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.054999999998337e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0689999999979067e-06, 3.097000000000516e-06, 3.0699999999973804e-06, 3.054999999998337e-06, 3.04200000000171e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.069000000001376e-06, 3.137999999999752e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0979999999999897e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.083000000000946e-06, 3.097000000000516e-06, 3.054999999998337e-06, 3.0979999999999897e-06, 3.054999999998337e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.069000000001376e-06, 3.0139999999991007e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.0559999999978105e-06, 3.0139999999991007e-06, 3.1529999999987957e-06, 3.083000000000946e-06]</msg>
<status status="PASS" starttime="20201030 15:54:39.132" endtime="20201030 15:54:39.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.127" endtime="20201030 15:54:39.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.138" endtime="20201030 15:54:39.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.137" endtime="20201030 15:54:39.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.135" endtime="20201030 15:54:39.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.785" endtime="20201030 15:54:39.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.785" endtime="20201030 15:54:39.159"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.167" endtime="20201030 15:54:39.178"></status>
</kw>
<msg timestamp="20201030 15:54:39.178" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.165" endtime="20201030 15:54:39.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.181" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.179" endtime="20201030 15:54:39.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.182" endtime="20201030 15:54:39.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.163" endtime="20201030 15:54:39.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.161" endtime="20201030 15:54:39.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.191" endtime="20201030 15:54:39.479"></status>
</kw>
<msg timestamp="20201030 15:54:39.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019529181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.189" endtime="20201030 15:54:39.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019529181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.484" endtime="20201030 15:54:39.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.492" endtime="20201030 15:54:39.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.187" endtime="20201030 15:54:39.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.185" endtime="20201030 15:54:39.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.499" level="INFO">${RESULT} = [{'diff': 3.07000000000085e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.054999999998337e-06}, {'diff': 3.0969999999970466e-06}, {'diff': 3.097000000000516e-06}, {'diff': 3.07000000000085e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:39.496" endtime="20201030 15:54:39.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.504" level="INFO">${OVERHEAD} = {'diff': [3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.041...</msg>
<status status="PASS" starttime="20201030 15:54:39.500" endtime="20201030 15:54:39.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.507" endtime="20201030 15:54:39.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.511" level="INFO">VALUE: [3.07000000000085e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.0969999999970466e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.0689999999979067e-06, 3.0419999999982406e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.04200000000171e-06, 2.999999999999531e-06, 3.0689999999979067e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.054999999998337e-06, 3.111000000000086e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.0279999999986706e-06, 3.069000000001376e-06, 3.0840000000004197e-06, 3.083000000000946e-06, 3.07000000000085e-06, 2.9869999999994346e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0559999999978105e-06, 3.0689999999979067e-06, 3.111000000000086e-06, 3.0699999999973804e-06, 3.07000000000085e-06]</msg>
<status status="PASS" starttime="20201030 15:54:39.510" endtime="20201030 15:54:39.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.505" endtime="20201030 15:54:39.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.516" endtime="20201030 15:54:39.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.515" endtime="20201030 15:54:39.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.514" endtime="20201030 15:54:39.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.159" endtime="20201030 15:54:39.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.159" endtime="20201030 15:54:39.537"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.545" endtime="20201030 15:54:39.557"></status>
</kw>
<msg timestamp="20201030 15:54:39.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.543" endtime="20201030 15:54:39.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.560" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.559" endtime="20201030 15:54:39.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.561" endtime="20201030 15:54:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.541" endtime="20201030 15:54:39.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.539" endtime="20201030 15:54:39.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.571" endtime="20201030 15:54:39.857"></status>
</kw>
<msg timestamp="20201030 15:54:39.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.569" endtime="20201030 15:54:39.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019633528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.861" endtime="20201030 15:54:39.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.869" endtime="20201030 15:54:39.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.567" endtime="20201030 15:54:39.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.565" endtime="20201030 15:54:39.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.876" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0829999999974766e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.0550000000018063e-06}, {'diff': 3.04200000000171e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:39.872" endtime="20201030 15:54:39.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:39.880" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.069000000001376e-06, 3.0829999999974766e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.05600000000128e-06, 2.97200...</msg>
<status status="PASS" starttime="20201030 15:54:39.877" endtime="20201030 15:54:39.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.884" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:39.883" endtime="20201030 15:54:39.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.886" level="INFO">VALUE: [3.05600000000128e-06, 3.069000000001376e-06, 3.0829999999974766e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.04200000000171e-06, 3.05600000000128e-06, 2.972000000000391e-06, 3.0550000000018063e-06, 3.0550000000018063e-06, 3.097000000000516e-06, 3.083000000000946e-06, 3.069000000001376e-06, 3.05600000000128e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.069000000001376e-06, 3.0550000000018063e-06, 3.040999999998767e-06, 3.05600000000128e-06, 3.040999999998767e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.1389999999992257e-06, 3.097000000000516e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.054999999998337e-06, 3.05600000000128e-06, 2.972000000000391e-06, 3.04200000000171e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.0689999999979067e-06, 3.0840000000004197e-06, 3.054999999998337e-06, 3.0279999999986706e-06]</msg>
<status status="PASS" starttime="20201030 15:54:39.885" endtime="20201030 15:54:39.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.881" endtime="20201030 15:54:39.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.892" endtime="20201030 15:54:39.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.891" endtime="20201030 15:54:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.889" endtime="20201030 15:54:39.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.538" endtime="20201030 15:54:39.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.537" endtime="20201030 15:54:39.913"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.921" endtime="20201030 15:54:39.933"></status>
</kw>
<msg timestamp="20201030 15:54:39.933" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.919" endtime="20201030 15:54:39.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.935" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.934" endtime="20201030 15:54:39.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.936" endtime="20201030 15:54:39.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.916" endtime="20201030 15:54:39.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.915" endtime="20201030 15:54:39.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.945" endtime="20201030 15:54:40.233"></status>
</kw>
<msg timestamp="20201030 15:54:40.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.944" endtime="20201030 15:54:40.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019492778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.237" endtime="20201030 15:54:40.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.246" endtime="20201030 15:54:40.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.941" endtime="20201030 15:54:40.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.940" endtime="20201030 15:54:40.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.252" level="INFO">${RESULT} = [{'diff': 3.0699999999973804e-06}, {'diff': 3.069000000001376e-06}, {'diff': 3.0559999999978105e-06}, {'diff': 3.0979999999999897e-06}, {'diff': 3.0689999999979067e-06}, {'diff': 3.069000000001376e-06...</msg>
<status status="PASS" starttime="20201030 15:54:40.249" endtime="20201030 15:54:40.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.257" level="INFO">${OVERHEAD} = {'diff': [3.0699999999973804e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0979999999999897e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0...</msg>
<status status="PASS" starttime="20201030 15:54:40.253" endtime="20201030 15:54:40.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.261" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:40.260" endtime="20201030 15:54:40.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.264" level="INFO">VALUE: [3.0699999999973804e-06, 3.069000000001376e-06, 3.0559999999978105e-06, 3.0979999999999897e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0410000000022364e-06, 3.083000000000946e-06, 3.07000000000085e-06, 3.1389999999992257e-06, 3.0559999999978105e-06, 3.05600000000128e-06, 3.0689999999979067e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.111000000000086e-06, 3.0829999999974766e-06, 3.0689999999979067e-06, 3.0829999999974766e-06, 3.083000000000946e-06, 3.0419999999982406e-06, 3.04200000000171e-06, 3.0550000000018063e-06, 3.0410000000022364e-06, 3.0969999999970466e-06, 2.999999999999531e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.083000000000946e-06, 3.083000000000946e-06, 3.1119999999995596e-06, 3.05600000000128e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.04200000000171e-06, 3.0979999999999897e-06, 3.0699999999973804e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.02800000000214e-06, 3.069000000001376e-06, 3.040999999998767e-06, 3.083000000000946e-06, 3.05600000000128e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201030 15:54:40.262" endtime="20201030 15:54:40.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.258" endtime="20201030 15:54:40.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.269" endtime="20201030 15:54:40.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.267" endtime="20201030 15:54:40.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.266" endtime="20201030 15:54:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.914" endtime="20201030 15:54:40.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.913" endtime="20201030 15:54:40.289"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.297" endtime="20201030 15:54:40.309"></status>
</kw>
<msg timestamp="20201030 15:54:40.310" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.295" endtime="20201030 15:54:40.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.312" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.311" endtime="20201030 15:54:40.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.313" endtime="20201030 15:54:40.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.293" endtime="20201030 15:54:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.291" endtime="20201030 15:54:40.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.322" endtime="20201030 15:54:40.611"></status>
</kw>
<msg timestamp="20201030 15:54:40.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:40.321" endtime="20201030 15:54:40.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019495806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:40.615" endtime="20201030 15:54:40.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.623" endtime="20201030 15:54:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.318" endtime="20201030 15:54:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.317" endtime="20201030 15:54:40.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.631" level="INFO">${RESULT} = [{'diff': 3.05600000000128e-06}, {'diff': 3.0699999999973804e-06}, {'diff': 3.097000000000516e-06}, {'diff': 3.111000000000086e-06}, {'diff': 3.07000000000085e-06}, {'diff': 3.0840000000004197e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:40.628" endtime="20201030 15:54:40.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:40.635" level="INFO">${OVERHEAD} = {'diff': [3.05600000000128e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.0550000000018063e-06, 3.0979999999999897e-06, 3.05...</msg>
<status status="PASS" starttime="20201030 15:54:40.632" endtime="20201030 15:54:40.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.639" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:54:40.638" endtime="20201030 15:54:40.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.642" level="INFO">VALUE: [3.05600000000128e-06, 3.0699999999973804e-06, 3.097000000000516e-06, 3.111000000000086e-06, 3.07000000000085e-06, 3.0840000000004197e-06, 3.0550000000018063e-06, 3.0979999999999897e-06, 3.0550000000018063e-06, 3.0689999999979067e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.069000000001376e-06, 3.097000000000516e-06, 3.07000000000085e-06, 3.0550000000018063e-06, 3.04200000000171e-06, 3.0419999999982406e-06, 3.054999999998337e-06, 3.054999999998337e-06, 3.0689999999979067e-06, 3.069000000001376e-06, 3.069000000001376e-06, 3.07000000000085e-06, 3.07000000000085e-06, 3.0559999999978105e-06, 3.0419999999982406e-06, 3.05600000000128e-06, 3.07000000000085e-06, 3.05600000000128e-06, 3.1119999999995596e-06, 3.0279999999986706e-06, 3.07000000000085e-06, 3.0699999999973804e-06, 3.0559999999978105e-06, 3.054999999998337e-06, 3.0550000000018063e-06, 3.05600000000128e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.0840000000004197e-06, 3.0699999999973804e-06, 3.069000000001376e-06, 3.0689999999979067e-06, 3.05600000000128e-06, 3.04200000000171e-06, 3.069000000001376e-06, 3.069000000001376e-06]</msg>
<status status="PASS" starttime="20201030 15:54:40.641" endtime="20201030 15:54:40.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.636" endtime="20201030 15:54:40.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.647" endtime="20201030 15:54:40.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.646" endtime="20201030 15:54:40.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.644" endtime="20201030 15:54:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.290" endtime="20201030 15:54:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.289" endtime="20201030 15:54:40.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.074" endtime="20201030 15:54:40.668"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:33.005" endtime="20201030 15:54:40.669" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.676" endtime="20201030 15:54:40.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.674" endtime="20201030 15:54:40.696"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.718" endtime="20201030 15:54:40.734"></status>
</kw>
<msg timestamp="20201030 15:54:40.735" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.716" endtime="20201030 15:54:40.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.736" endtime="20201030 15:54:40.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.741" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:40.739" endtime="20201030 15:54:40.742"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.712" endtime="20201030 15:54:40.742"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:40.707" endtime="20201030 15:54:40.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.704" endtime="20201030 15:54:40.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:40.747" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:40.746" endtime="20201030 15:54:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.744" endtime="20201030 15:54:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.703" endtime="20201030 15:54:40.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.702" endtime="20201030 15:54:40.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.749" endtime="20201030 15:54:40.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.700" endtime="20201030 15:54:40.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.697" endtime="20201030 15:54:40.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.673" endtime="20201030 15:54:40.752"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.760" endtime="20201030 15:54:40.780"></status>
</kw>
<msg timestamp="20201030 15:54:40.781" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.759" endtime="20201030 15:54:40.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.784" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.782" endtime="20201030 15:54:40.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.785" endtime="20201030 15:54:40.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.756" endtime="20201030 15:54:40.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.754" endtime="20201030 15:54:40.788"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.790" endtime="20201030 15:54:40.792"></status>
</kw>
<msg timestamp="20201030 15:54:40.792" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:40.789" endtime="20201030 15:54:40.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.796" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:40.795" endtime="20201030 15:54:40.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.798" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:40.797" endtime="20201030 15:54:40.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.793" endtime="20201030 15:54:40.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.807" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:40.802" endtime="20201030 15:54:40.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.809" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:40.808" endtime="20201030 15:54:40.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.800" endtime="20201030 15:54:40.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.817" endtime="20201030 15:54:41.104"></status>
</kw>
<msg timestamp="20201030 15:54:41.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077037778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077046917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.815" endtime="20201030 15:54:41.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077037778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077046917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.108" endtime="20201030 15:54:41.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.117" endtime="20201030 15:54:41.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.812" endtime="20201030 15:54:41.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.810" endtime="20201030 15:54:41.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.124" level="INFO">${RESULT} = [{'diff': 9.139000000005226e-06}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0958000000005352e-05}, {'diff': 1.0958999999990948e-05}, {'diff': 1.0958000000005352e-05}, {'diff': 1.0971999999997983e-0...</msg>
<status status="PASS" starttime="20201030 15:54:41.120" endtime="20201030 15:54:41.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.128" level="INFO">${OVERHEAD} = {'diff': [9.139000000005226e-06, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0943999999998844e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:41.125" endtime="20201030 15:54:41.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.133" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:41.132" endtime="20201030 15:54:41.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.135" level="INFO">VALUE: [9.139000000005226e-06, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0943999999998844e-05, 1.0986000000004492e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0971999999997983e-05, 1.0957999999991475e-05, 1.0944999999998317e-05, 1.102699999999679e-05, 1.0958999999990948e-05, 1.0958000000005352e-05, 1.0959000000004826e-05, 1.0929999999992335e-05, 1.0971999999997983e-05, 1.0972999999997457e-05, 1.0957999999991475e-05, 1.0958000000005352e-05, 1.0971999999997983e-05, 1.0944999999998317e-05, 1.0916999999999177e-05, 1.0999999999997123e-05, 1.0958000000005352e-05, 1.0959000000004826e-05, 1.0958999999990948e-05, 1.0959000000004826e-05, 1.0958000000005352e-05, 1.0916999999999177e-05, 1.0943999999998844e-05, 1.0958000000005352e-05, 1.1013999999989754e-05, 1.0958000000005352e-05, 1.0931000000005686e-05, 1.0971999999997983e-05, 1.0958000000005352e-05, 1.0957999999991475e-05, 1.0944999999998317e-05, 1.0986000000004492e-05, 1.0971999999997983e-05, 1.0943999999998844e-05, 1.0959000000004826e-05, 1.0957999999991475e-05, 1.0903000000006546e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.134" endtime="20201030 15:54:41.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.129" endtime="20201030 15:54:41.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.141" endtime="20201030 15:54:41.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.139" endtime="20201030 15:54:41.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.138" endtime="20201030 15:54:41.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.752" endtime="20201030 15:54:41.162"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:40.670" endtime="20201030 15:54:41.162" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.169" endtime="20201030 15:54:41.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.168" endtime="20201030 15:54:41.189"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.203" endtime="20201030 15:54:41.217"></status>
</kw>
<msg timestamp="20201030 15:54:41.217" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.201" endtime="20201030 15:54:41.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.218" endtime="20201030 15:54:41.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.223" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:41.221" endtime="20201030 15:54:41.223"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.198" endtime="20201030 15:54:41.224"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.196" endtime="20201030 15:54:41.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.195" endtime="20201030 15:54:41.225"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:41.229" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:41.228" endtime="20201030 15:54:41.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.226" endtime="20201030 15:54:41.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.194" endtime="20201030 15:54:41.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.193" endtime="20201030 15:54:41.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.230" endtime="20201030 15:54:41.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.192" endtime="20201030 15:54:41.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.190" endtime="20201030 15:54:41.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.166" endtime="20201030 15:54:41.233"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.243" endtime="20201030 15:54:41.314"></status>
</kw>
<msg timestamp="20201030 15:54:41.315" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.241" endtime="20201030 15:54:41.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.317" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.316" endtime="20201030 15:54:41.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.319" endtime="20201030 15:54:41.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.238" endtime="20201030 15:54:41.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.236" endtime="20201030 15:54:41.322"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.324" endtime="20201030 15:54:41.326"></status>
</kw>
<msg timestamp="20201030 15:54:41.326" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:41.322" endtime="20201030 15:54:41.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.330" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:41.329" endtime="20201030 15:54:41.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.332" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:41.331" endtime="20201030 15:54:41.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.327" endtime="20201030 15:54:41.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.337" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:41.336" endtime="20201030 15:54:41.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.339" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:41.338" endtime="20201030 15:54:41.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.334" endtime="20201030 15:54:41.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.347" endtime="20201030 15:54:41.638"></status>
</kw>
<msg timestamp="20201030 15:54:41.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067804889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067826333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.345" endtime="20201030 15:54:41.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067804889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067826333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.643" endtime="20201030 15:54:41.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.652" endtime="20201030 15:54:41.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.343" endtime="20201030 15:54:41.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.341" endtime="20201030 15:54:41.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.660" level="INFO">${RESULT} = [{'diff': 2.1444000000009344e-05}, {'diff': 3.401399999999888e-05}, {'diff': 3.37370000000059e-05}, {'diff': 3.372199999999992e-05}, {'diff': 3.372299999999939e-05}, {'diff': 3.373599999999255e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:41.656" endtime="20201030 15:54:41.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:41.667" level="INFO">${OVERHEAD} = {'diff': [2.1444000000009344e-05, 3.401399999999888e-05, 3.37370000000059e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.373599999999255e-05, 3.370800000000729e-05, 3.373599999999255e-05, 3.3749...</msg>
<status status="PASS" starttime="20201030 15:54:41.661" endtime="20201030 15:54:41.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.673" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:41.671" endtime="20201030 15:54:41.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.676" level="INFO">VALUE: [2.1444000000009344e-05, 3.401399999999888e-05, 3.37370000000059e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.373599999999255e-05, 3.370800000000729e-05, 3.373599999999255e-05, 3.374999999999906e-05, 3.373599999999255e-05, 3.373599999999255e-05, 3.370799999999341e-05, 3.374999999999906e-05, 3.373600000000643e-05, 3.373599999999255e-05, 3.372199999999992e-05, 3.373600000000643e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.373699999999202e-05, 3.374999999999906e-05, 3.374999999999906e-05, 3.369400000000078e-05, 3.372199999999992e-05, 3.3776999999998725e-05, 3.374999999999906e-05, 3.372299999999939e-05, 3.374999999999906e-05, 3.372299999999939e-05, 3.37779999999982e-05, 3.373599999999255e-05, 3.379200000000471e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.373599999999255e-05, 3.372199999999992e-05, 3.374999999999906e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.372199999999992e-05, 3.372299999999939e-05, 3.367999999999427e-05, 3.3790999999991356e-05, 3.376400000000557e-05, 3.373600000000643e-05, 3.373599999999255e-05, 3.372299999999939e-05, 3.368100000000762e-05, 3.373599999999255e-05, 3.372199999999992e-05]</msg>
<status status="PASS" starttime="20201030 15:54:41.674" endtime="20201030 15:54:41.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.667" endtime="20201030 15:54:41.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.682" endtime="20201030 15:54:41.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.680" endtime="20201030 15:54:41.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.679" endtime="20201030 15:54:41.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.234" endtime="20201030 15:54:41.703"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:41.164" endtime="20201030 15:54:41.704" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.711" endtime="20201030 15:54:41.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.709" endtime="20201030 15:54:41.731"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.744" endtime="20201030 15:54:41.758"></status>
</kw>
<msg timestamp="20201030 15:54:41.759" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.743" endtime="20201030 15:54:41.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.760" endtime="20201030 15:54:41.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.766" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:41.763" endtime="20201030 15:54:41.766"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.740" endtime="20201030 15:54:41.767"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:41.737" endtime="20201030 15:54:41.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.736" endtime="20201030 15:54:41.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:41.771" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:41.771" endtime="20201030 15:54:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.768" endtime="20201030 15:54:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.735" endtime="20201030 15:54:41.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.735" endtime="20201030 15:54:41.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.773" endtime="20201030 15:54:41.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.733" endtime="20201030 15:54:41.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.731" endtime="20201030 15:54:41.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.708" endtime="20201030 15:54:41.776"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.785" endtime="20201030 15:54:41.974"></status>
</kw>
<msg timestamp="20201030 15:54:41.975" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.783" endtime="20201030 15:54:41.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.978" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.976" endtime="20201030 15:54:41.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.979" endtime="20201030 15:54:41.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.780" endtime="20201030 15:54:41.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.778" endtime="20201030 15:54:41.982"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.984" endtime="20201030 15:54:41.986"></status>
</kw>
<msg timestamp="20201030 15:54:41.986" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:41.983" endtime="20201030 15:54:41.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.990" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:41.989" endtime="20201030 15:54:41.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.994" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:41.992" endtime="20201030 15:54:41.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.987" endtime="20201030 15:54:41.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.999" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:41.998" endtime="20201030 15:54:42.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.003" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:42.001" endtime="20201030 15:54:42.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.995" endtime="20201030 15:54:42.004"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.013" endtime="20201030 15:54:42.309"></status>
</kw>
<msg timestamp="20201030 15:54:42.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068144125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068181264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.011" endtime="20201030 15:54:42.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068144125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068181264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.314" endtime="20201030 15:54:42.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.325" endtime="20201030 15:54:42.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.008" endtime="20201030 15:54:42.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.005" endtime="20201030 15:54:42.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.337" level="INFO">${RESULT} = [{'diff': 3.713900000000547e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.034700000000226e-05}, {'diff': 6.036100000000877e-05}, {'diff': 6.03750000000014e-05}, {'diff': 6.034700000000226e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:42.332" endtime="20201030 15:54:42.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.343" level="INFO">${OVERHEAD} = {'diff': [3.713900000000547e-05, 6.034700000000226e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.034700000000226e-05, 6.034700000000226e-05, 6.03750000000014e-05, 6.037500...</msg>
<status status="PASS" starttime="20201030 15:54:42.339" endtime="20201030 15:54:42.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.348" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:42.347" endtime="20201030 15:54:42.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.351" level="INFO">VALUE: [3.713900000000547e-05, 6.034700000000226e-05, 6.034700000000226e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.034700000000226e-05, 6.034700000000226e-05, 6.03750000000014e-05, 6.03750000000014e-05, 6.036100000000877e-05, 6.036099999999489e-05, 6.034700000000226e-05, 6.03750000000014e-05, 6.0416000000007575e-05, 6.036099999999489e-05, 6.0361999999994365e-05, 6.036099999999489e-05, 6.041700000000705e-05, 6.03750000000014e-05, 6.040300000001442e-05, 6.036200000000824e-05, 6.034700000001614e-05, 6.0347999999987856e-05, 6.03750000000014e-05, 6.03750000000014e-05, 6.036100000000877e-05, 6.036200000000824e-05, 6.0333999999995225e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.0347999999987856e-05, 6.034699999998838e-05, 6.034699999998838e-05, 6.034699999998838e-05, 6.034700000001614e-05, 6.034700000001614e-05, 6.034699999998838e-05, 6.034700000001614e-05, 6.03750000000014e-05, 6.033299999999575e-05, 6.031900000000312e-05, 6.034700000001614e-05, 6.034800000001561e-05, 6.03750000000014e-05, 6.034699999998838e-05, 6.036100000000877e-05, 6.03750000000014e-05, 6.036099999998101e-05, 6.036200000000824e-05, 6.036100000000877e-05]</msg>
<status status="PASS" starttime="20201030 15:54:42.349" endtime="20201030 15:54:42.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.344" endtime="20201030 15:54:42.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.359" endtime="20201030 15:54:42.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.356" endtime="20201030 15:54:42.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.353" endtime="20201030 15:54:42.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.776" endtime="20201030 15:54:42.384"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:41.705" endtime="20201030 15:54:42.386" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.400" endtime="20201030 15:54:42.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.397" endtime="20201030 15:54:42.437"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.491" endtime="20201030 15:54:42.509"></status>
</kw>
<msg timestamp="20201030 15:54:42.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.486" endtime="20201030 15:54:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.514" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.511" endtime="20201030 15:54:42.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.518" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:42.515" endtime="20201030 15:54:42.518"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.478" endtime="20201030 15:54:42.519"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.469" endtime="20201030 15:54:42.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.466" endtime="20201030 15:54:42.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:42.526" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:42.525" endtime="20201030 15:54:42.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.522" endtime="20201030 15:54:42.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.460" endtime="20201030 15:54:42.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.458" endtime="20201030 15:54:42.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.528" endtime="20201030 15:54:42.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.454" endtime="20201030 15:54:42.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.443" endtime="20201030 15:54:42.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.395" endtime="20201030 15:54:42.531"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.540" endtime="20201030 15:54:42.561"></status>
</kw>
<msg timestamp="20201030 15:54:42.562" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.539" endtime="20201030 15:54:42.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.564" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.563" endtime="20201030 15:54:42.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.566" endtime="20201030 15:54:42.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.536" endtime="20201030 15:54:42.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.534" endtime="20201030 15:54:42.569"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.571" endtime="20201030 15:54:42.573"></status>
</kw>
<msg timestamp="20201030 15:54:42.573" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:42.569" endtime="20201030 15:54:42.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.577" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:42.576" endtime="20201030 15:54:42.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.579" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:42.578" endtime="20201030 15:54:42.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.574" endtime="20201030 15:54:42.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.586" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:42.584" endtime="20201030 15:54:42.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.588" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:42.587" endtime="20201030 15:54:42.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.581" endtime="20201030 15:54:42.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.595" endtime="20201030 15:54:42.888"></status>
</kw>
<msg timestamp="20201030 15:54:42.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132023014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.594" endtime="20201030 15:54:42.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132013069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132023014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:42.893" endtime="20201030 15:54:42.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.901" endtime="20201030 15:54:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.591" endtime="20201030 15:54:42.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.589" endtime="20201030 15:54:42.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:42.907" level="INFO">${RESULT} = [{'diff': 9.94499999998344e-06}, {'diff': 9.944000000011721e-06}, {'diff': 9.929999999991335e-06}, {'diff': 9.916999999998177e-06}, {'diff': 9.875000000020284e-06}, {'diff': 9.889000000012915e-06}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:42.904" endtime="20201030 15:54:42.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:42.912" level="INFO">${OVERHEAD} = {'diff': [9.94499999998344e-06, 9.944000000011721e-06, 9.929999999991335e-06, 9.916999999998177e-06, 9.875000000020284e-06, 9.889000000012915e-06, 9.91600000002646e-06, 9.930999999990808e-06, 9.916999...</msg>
<status status="PASS" starttime="20201030 15:54:42.908" endtime="20201030 15:54:42.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.917" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:54:42.915" endtime="20201030 15:54:42.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:42.919" level="INFO">VALUE: [9.94499999998344e-06, 9.944000000011721e-06, 9.929999999991335e-06, 9.916999999998177e-06, 9.875000000020284e-06, 9.889000000012915e-06, 9.91600000002646e-06, 9.930999999990808e-06, 9.916999999998177e-06, 9.889000000012915e-06, 9.889000000012915e-06, 9.903000000005546e-06, 9.916999999998177e-06, 9.94499999998344e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.860999999999898e-06, 9.929999999991335e-06, 9.917000000025933e-06, 9.875000000020284e-06, 9.916999999998177e-06, 9.916999999998177e-06, 9.915999999998704e-06, 9.902000000006073e-06, 9.916999999998177e-06, 9.889000000012915e-06, 9.971999999996983e-06, 9.916999999998177e-06, 9.889000000012915e-06, 9.915999999998704e-06, 9.915999999998704e-06, 9.931000000018564e-06, 9.903000000005546e-06, 9.84800000000674e-06, 9.903000000005546e-06, 9.846999999979511e-06, 9.916999999998177e-06, 9.959000000003826e-06, 9.902000000006073e-06, 9.916999999998177e-06, 9.944000000011721e-06, 9.874999999992529e-06, 9.929999999991335e-06, 9.915999999998704e-06, 9.903000000005546e-06, 9.915999999998704e-06, 9.916999999998177e-06, 9.930999999990808e-06, 9.887999999985686e-06, 9.874999999992529e-06]</msg>
<status status="PASS" starttime="20201030 15:54:42.918" endtime="20201030 15:54:42.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.912" endtime="20201030 15:54:42.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.925" endtime="20201030 15:54:42.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.923" endtime="20201030 15:54:42.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.922" endtime="20201030 15:54:42.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.532" endtime="20201030 15:54:42.946"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:42.389" endtime="20201030 15:54:42.946" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:42.957" endtime="20201030 15:54:42.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.955" endtime="20201030 15:54:42.977"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:42.990" endtime="20201030 15:54:43.004"></status>
</kw>
<msg timestamp="20201030 15:54:43.004" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:42.989" endtime="20201030 15:54:43.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.007" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.005" endtime="20201030 15:54:43.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.010" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:43.008" endtime="20201030 15:54:43.010"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.986" endtime="20201030 15:54:43.011"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:42.984" endtime="20201030 15:54:43.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.983" endtime="20201030 15:54:43.012"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:43.015" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:43.015" endtime="20201030 15:54:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.012" endtime="20201030 15:54:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.982" endtime="20201030 15:54:43.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.981" endtime="20201030 15:54:43.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.017" endtime="20201030 15:54:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.980" endtime="20201030 15:54:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.978" endtime="20201030 15:54:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:42.953" endtime="20201030 15:54:43.020"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.030" endtime="20201030 15:54:43.101"></status>
</kw>
<msg timestamp="20201030 15:54:43.101" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.028" endtime="20201030 15:54:43.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.104" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.102" endtime="20201030 15:54:43.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.105" endtime="20201030 15:54:43.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.024" endtime="20201030 15:54:43.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.022" endtime="20201030 15:54:43.108"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.110" endtime="20201030 15:54:43.112"></status>
</kw>
<msg timestamp="20201030 15:54:43.112" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:43.109" endtime="20201030 15:54:43.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.116" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:43.115" endtime="20201030 15:54:43.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.118" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:43.117" endtime="20201030 15:54:43.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.113" endtime="20201030 15:54:43.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.123" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:43.122" endtime="20201030 15:54:43.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.125" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:43.124" endtime="20201030 15:54:43.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.120" endtime="20201030 15:54:43.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.132" endtime="20201030 15:54:43.441"></status>
</kw>
<msg timestamp="20201030 15:54:43.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066022278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066043181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.131" endtime="20201030 15:54:43.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066022278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066043181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.445" endtime="20201030 15:54:43.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.453" endtime="20201030 15:54:43.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.128" endtime="20201030 15:54:43.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.126" endtime="20201030 15:54:43.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:43.460" level="INFO">${RESULT} = [{'diff': 2.090300000000267e-05}, {'diff': 2.0958000000001475e-05}, {'diff': 2.0930000000002336e-05}, {'diff': 2.0930000000002336e-05}, {'diff': 2.098700000000009e-05}, {'diff': 2.094499999999444e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:43.457" endtime="20201030 15:54:43.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:43.465" level="INFO">${OVERHEAD} = {'diff': [2.090300000000267e-05, 2.0958000000001475e-05, 2.0930000000002336e-05, 2.0930000000002336e-05, 2.098700000000009e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.094499999999444e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:54:43.461" endtime="20201030 15:54:43.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.469" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:54:43.468" endtime="20201030 15:54:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.472" level="INFO">VALUE: [2.090300000000267e-05, 2.0958000000001475e-05, 2.0930000000002336e-05, 2.0930000000002336e-05, 2.098700000000009e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.094499999999444e-05, 2.0943999999994967e-05, 2.088899999999616e-05, 2.093100000000181e-05, 2.093100000000181e-05, 2.0901999999989318e-05, 2.094499999999444e-05, 2.093100000000181e-05, 2.09169999999953e-05, 2.09169999999953e-05, 2.087500000000353e-05, 2.093100000000181e-05, 2.086099999999702e-05, 2.0930000000002336e-05, 2.0944000000008844e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0945000000008318e-05, 2.093099999998793e-05, 2.0929999999988458e-05, 2.0930000000002336e-05, 2.09169999999953e-05, 2.093100000000181e-05, 2.0916000000009705e-05, 2.093100000000181e-05, 2.093100000000181e-05, 2.093099999998793e-05, 2.095900000000095e-05, 2.094499999999444e-05, 2.0930000000002336e-05, 2.0972000000007984e-05, 2.093100000000181e-05, 2.0930000000002336e-05, 2.0929999999988458e-05, 2.0915999999995827e-05, 2.0945000000008318e-05, 2.0943999999994967e-05, 2.090299999998879e-05, 2.0943999999994967e-05, 2.0999999999993246e-05, 2.0943999999994967e-05, 2.1013999999999755e-05, 2.0930000000002336e-05]</msg>
<status status="PASS" starttime="20201030 15:54:43.470" endtime="20201030 15:54:43.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.466" endtime="20201030 15:54:43.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.477" endtime="20201030 15:54:43.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.475" endtime="20201030 15:54:43.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.474" endtime="20201030 15:54:43.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.020" endtime="20201030 15:54:43.497"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:42.948" endtime="20201030 15:54:43.498" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:43.505" endtime="20201030 15:54:43.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.503" endtime="20201030 15:54:43.524"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.537" endtime="20201030 15:54:43.552"></status>
</kw>
<msg timestamp="20201030 15:54:43.552" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.536" endtime="20201030 15:54:43.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.555" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.553" endtime="20201030 15:54:43.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.559" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:43.556" endtime="20201030 15:54:43.559"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:43.533" endtime="20201030 15:54:43.560"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:43.531" endtime="20201030 15:54:43.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.530" endtime="20201030 15:54:43.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:43.565" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:43.564" endtime="20201030 15:54:43.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.562" endtime="20201030 15:54:43.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.529" endtime="20201030 15:54:43.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.528" endtime="20201030 15:54:43.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.567" endtime="20201030 15:54:43.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.527" endtime="20201030 15:54:43.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.525" endtime="20201030 15:54:43.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.502" endtime="20201030 15:54:43.570"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.580" endtime="20201030 15:54:43.772"></status>
</kw>
<msg timestamp="20201030 15:54:43.772" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.579" endtime="20201030 15:54:43.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.775" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:43.773" endtime="20201030 15:54:43.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.776" endtime="20201030 15:54:43.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.575" endtime="20201030 15:54:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.572" endtime="20201030 15:54:43.779"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.781" endtime="20201030 15:54:43.783"></status>
</kw>
<msg timestamp="20201030 15:54:43.783" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:54:43.780" endtime="20201030 15:54:43.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.788" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:54:43.787" endtime="20201030 15:54:43.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.790" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:54:43.789" endtime="20201030 15:54:43.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.784" endtime="20201030 15:54:43.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.795" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:54:43.794" endtime="20201030 15:54:43.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:43.797" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:54:43.796" endtime="20201030 15:54:43.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.791" endtime="20201030 15:54:43.798"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:43.804" endtime="20201030 15:54:44.124"></status>
</kw>
<msg timestamp="20201030 15:54:44.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071322375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071354736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:43.803" endtime="20201030 15:54:44.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071322375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071354736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:44.128" endtime="20201030 15:54:44.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.137" endtime="20201030 15:54:44.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.800" endtime="20201030 15:54:44.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.798" endtime="20201030 15:54:44.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:44.143" level="INFO">${RESULT} = [{'diff': 3.236100000000852e-05}, {'diff': 3.240300000000029e-05}, {'diff': 3.24170000000068e-05}, {'diff': 3.2388999999993784e-05}, {'diff': 3.240300000000029e-05}, {'diff': 3.240300000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:44.140" endtime="20201030 15:54:44.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:54:44.147" level="INFO">${OVERHEAD} = {'diff': [3.236100000000852e-05, 3.240300000000029e-05, 3.24170000000068e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.241600000000733e-05, 3.2388999999993784e-05, 3.240...</msg>
<status status="PASS" starttime="20201030 15:54:44.144" endtime="20201030 15:54:44.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.152" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:54:44.151" endtime="20201030 15:54:44.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.155" level="INFO">VALUE: [3.236100000000852e-05, 3.240300000000029e-05, 3.24170000000068e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.240300000000029e-05, 3.241600000000733e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.240200000000082e-05, 3.238900000000766e-05, 3.240300000000029e-05, 3.244400000000647e-05, 3.2388999999993784e-05, 3.240300000000029e-05, 3.236100000000852e-05, 3.238900000002154e-05, 3.241600000000733e-05, 3.24170000000068e-05, 3.237500000000115e-05, 3.2402999999986415e-05, 3.2402999999986415e-05, 3.24170000000068e-05, 3.2402999999986415e-05, 3.2388999999993784e-05, 3.241600000000733e-05, 3.2388999999993784e-05, 3.2402999999986415e-05, 3.238900000002154e-05, 3.243099999999943e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.2388999999993784e-05, 3.244500000001982e-05, 3.2416999999979046e-05, 3.240300000001417e-05, 3.237500000000115e-05, 3.2388999999993784e-05, 3.2402999999986415e-05, 3.24020000000147e-05, 3.237500000000115e-05, 3.238900000002154e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2402999999986415e-05, 3.240199999998694e-05, 3.241600000000733e-05, 3.237500000000115e-05, 3.2332999999995504e-05, 3.240300000001417e-05]</msg>
<status status="PASS" starttime="20201030 15:54:44.153" endtime="20201030 15:54:44.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.148" endtime="20201030 15:54:44.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.160" endtime="20201030 15:54:44.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.158" endtime="20201030 15:54:44.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.157" endtime="20201030 15:54:44.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:43.570" endtime="20201030 15:54:44.180"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:43.499" endtime="20201030 15:54:44.181" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:44.188" endtime="20201030 15:54:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.186" endtime="20201030 15:54:44.210"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.229" endtime="20201030 15:54:44.244"></status>
</kw>
<msg timestamp="20201030 15:54:44.244" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.227" endtime="20201030 15:54:44.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.247" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:44.245" endtime="20201030 15:54:44.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.250" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:44.248" endtime="20201030 15:54:44.250"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:44.225" endtime="20201030 15:54:44.251"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:44.222" endtime="20201030 15:54:44.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.220" endtime="20201030 15:54:44.252"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:44.256" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:44.255" endtime="20201030 15:54:44.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.253" endtime="20201030 15:54:44.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.219" endtime="20201030 15:54:44.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.218" endtime="20201030 15:54:44.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:44.258" endtime="20201030 15:54:44.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.215" endtime="20201030 15:54:44.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.212" endtime="20201030 15:54:44.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.185" endtime="20201030 15:54:44.260"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:44.264" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:44.273" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:45.481" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:44.263" endtime="20201030 15:54:45.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.484" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:54:45.483" endtime="20201030 15:54:45.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:44.261" endtime="20201030 15:54:45.485"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.496" endtime="20201030 15:54:45.504"></status>
</kw>
<msg timestamp="20201030 15:54:45.505" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.494" endtime="20201030 15:54:45.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.507" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.506" endtime="20201030 15:54:45.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.508" endtime="20201030 15:54:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.491" endtime="20201030 15:54:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.489" endtime="20201030 15:54:45.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.519" endtime="20201030 15:54:45.838"></status>
</kw>
<msg timestamp="20201030 15:54:45.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.915915153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.235327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.516" endtime="20201030 15:54:45.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.915915153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.235327208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.842" endtime="20201030 15:54:45.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.851" endtime="20201030 15:54:45.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.513" endtime="20201030 15:54:45.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.512" endtime="20201030 15:54:45.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:45.858" level="INFO">${PHILIP_RES} = [{'diff': 0.3194120549999999}, {'diff': 9.54200000014005e-06}, {'diff': 9.597999999888529e-06}, {'diff': 9.582999999979691e-06}, {'diff': 9.583000000201736e-06}, {'diff': 9.584000000062431e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:54:45.855" endtime="20201030 15:54:45.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:45.862" level="INFO">${RESULT} = {'diff': [0.3194120549999999, 9.54200000014005e-06, 9.597999999888529e-06, 9.582999999979691e-06, 9.583000000201736e-06, 9.584000000062431e-06, 9.569000000153594e-06, 9.57000000001429e-06, 9.638999999...</msg>
<status status="PASS" starttime="20201030 15:54:45.859" endtime="20201030 15:54:45.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.867" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:45.866" endtime="20201030 15:54:45.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.869" level="INFO">VALUE: [0.3194120549999999, 9.54200000014005e-06, 9.597999999888529e-06, 9.582999999979691e-06, 9.583000000201736e-06, 9.584000000062431e-06, 9.569000000153594e-06, 9.57000000001429e-06, 9.638999999950215e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.582999999979691e-06, 9.568999999931549e-06, 9.57000000001429e-06, 9.596999999805789e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.597000000027833e-06, 9.597000000027833e-06, 9.584000000062431e-06, 9.568999999931549e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.568999999931549e-06, 9.584000000062431e-06, 9.584000000062431e-06, 9.611000000075975e-06, 9.584000000062431e-06, 9.597000000027833e-06, 9.582999999979691e-06, 9.57000000001429e-06, 9.568999999931549e-06, 9.597000000027833e-06, 9.556000000188192e-06, 9.582999999979691e-06, 9.638999999950215e-06, 9.583999999840387e-06, 9.582999999979691e-06, 9.582999999979691e-06, 9.598000000110574e-06, 9.582999999979691e-06, 9.597000000027833e-06, 9.598000000110574e-06, 9.569000000153594e-06, 9.57000000001429e-06, 9.624999999902073e-06, 9.582999999979691e-06, 9.584000000062431e-06, 9.569999999792245e-06, 9.597000000027833e-06, 9.597999999888529e-06]</msg>
<status status="PASS" starttime="20201030 15:54:45.868" endtime="20201030 15:54:45.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.863" endtime="20201030 15:54:45.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.874" endtime="20201030 15:54:45.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.873" endtime="20201030 15:54:45.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.871" endtime="20201030 15:54:45.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.487" endtime="20201030 15:54:45.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.486" endtime="20201030 15:54:45.895"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.905" endtime="20201030 15:54:45.915"></status>
</kw>
<msg timestamp="20201030 15:54:45.915" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.903" endtime="20201030 15:54:45.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.918" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.916" endtime="20201030 15:54:45.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.919" endtime="20201030 15:54:45.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.900" endtime="20201030 15:54:45.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.897" endtime="20201030 15:54:45.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.928" endtime="20201030 15:54:46.214"></status>
</kw>
<msg timestamp="20201030 15:54:46.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:45.926" endtime="20201030 15:54:46.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.218" endtime="20201030 15:54:46.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.226" endtime="20201030 15:54:46.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.924" endtime="20201030 15:54:46.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.922" endtime="20201030 15:54:46.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:46.233" level="INFO">${PHILIP_RES} = [{'diff': 1.591699999999724e-05}, {'diff': 1.5930000000000805e-05}, {'diff': 1.5931000000000278e-05}, {'diff': 1.5957999999999944e-05}, {'diff': 1.5985999999999084e-05}, {'diff': 1.5985999999999084e-0...</msg>
<status status="PASS" starttime="20201030 15:54:46.230" endtime="20201030 15:54:46.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.237" level="INFO">${RESULT} = {'diff': [1.591699999999724e-05, 1.5930000000000805e-05, 1.5931000000000278e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5958999999999418e-05, 1.5957999999999944e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:46.234" endtime="20201030 15:54:46.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.243" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:46.241" endtime="20201030 15:54:46.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.245" level="INFO">VALUE: [1.591699999999724e-05, 1.5930000000000805e-05, 1.5931000000000278e-05, 1.5957999999999944e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5944000000000375e-05, 1.5944999999999848e-05, 1.5972000000002984e-05, 1.5971999999999514e-05, 1.6014000000001694e-05, 1.5985999999999084e-05, 1.5957999999999944e-05, 1.5957999999999944e-05, 1.6014000000001694e-05, 1.5957999999999944e-05, 1.5943999999996905e-05, 1.5931000000000278e-05, 1.5943999999996905e-05, 1.5971999999999514e-05, 1.5959000000002888e-05, 1.5971999999999514e-05, 1.5943999999996905e-05, 1.5971999999999514e-05, 1.5959000000002888e-05, 1.5971999999999514e-05, 1.5944000000000375e-05, 1.5971999999999514e-05, 1.588900000000157e-05, 1.5971999999999514e-05, 1.5958999999999418e-05, 1.5944999999999848e-05, 1.5944000000000375e-05, 1.5944000000000375e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.5971999999999514e-05, 1.5958999999999418e-05, 1.5957999999999944e-05, 1.6000000000002124e-05, 1.5944999999999848e-05, 1.5944999999999848e-05, 1.5971999999999514e-05, 1.5929999999997335e-05, 1.5944999999999848e-05, 1.5986000000002554e-05, 1.5957999999999944e-05, 1.5944999999999848e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.244" endtime="20201030 15:54:46.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.238" endtime="20201030 15:54:46.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.250" endtime="20201030 15:54:46.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.249" endtime="20201030 15:54:46.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.247" endtime="20201030 15:54:46.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.896" endtime="20201030 15:54:46.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.895" endtime="20201030 15:54:46.271"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.281" endtime="20201030 15:54:46.291"></status>
</kw>
<msg timestamp="20201030 15:54:46.292" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.279" endtime="20201030 15:54:46.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.295" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.293" endtime="20201030 15:54:46.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.296" endtime="20201030 15:54:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.276" endtime="20201030 15:54:46.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.274" endtime="20201030 15:54:46.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.308" endtime="20201030 15:54:46.609"></status>
</kw>
<msg timestamp="20201030 15:54:46.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.306" endtime="20201030 15:54:46.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020299278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.613" endtime="20201030 15:54:46.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.624" endtime="20201030 15:54:46.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.303" endtime="20201030 15:54:46.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.300" endtime="20201030 15:54:46.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:46.632" level="INFO">${PHILIP_RES} = [{'diff': 2.258299999999963e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.262499999999834e-05}, {'diff': 2.265300000000095e-05}, {'diff': 2.2666000000001046e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:46.628" endtime="20201030 15:54:46.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:46.638" level="INFO">${RESULT} = {'diff': [2.258299999999963e-05, 2.262500000000181e-05, 2.25969999999992e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.2666000000001046e-05, 2.265299999999748e-05, 2.2694000000000186e-05, 2.265...</msg>
<status status="PASS" starttime="20201030 15:54:46.633" endtime="20201030 15:54:46.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.643" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:46.641" endtime="20201030 15:54:46.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.645" level="INFO">VALUE: [2.258299999999963e-05, 2.262500000000181e-05, 2.25969999999992e-05, 2.262499999999834e-05, 2.265300000000095e-05, 2.2666000000001046e-05, 2.265299999999748e-05, 2.2694000000000186e-05, 2.265300000000095e-05, 2.261100000000224e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.2666000000001046e-05, 2.265300000000095e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.263900000000138e-05, 2.263900000000138e-05, 2.2651999999998007e-05, 2.265299999999748e-05, 2.263900000000138e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.265299999999748e-05, 2.262500000000181e-05, 2.2666000000001046e-05, 2.265299999999748e-05, 2.2651999999998007e-05, 2.256900000000006e-05, 2.2638000000001907e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.266700000000052e-05, 2.2707999999999756e-05, 2.265299999999748e-05, 2.265300000000095e-05, 2.2721999999999326e-05, 2.2651999999998007e-05, 2.265299999999748e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.269499999999966e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.265299999999748e-05, 2.256900000000006e-05, 2.2652000000001477e-05]</msg>
<status status="PASS" starttime="20201030 15:54:46.644" endtime="20201030 15:54:46.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.639" endtime="20201030 15:54:46.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:46.651" endtime="20201030 15:54:46.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.649" endtime="20201030 15:54:46.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.648" endtime="20201030 15:54:46.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.272" endtime="20201030 15:54:46.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.272" endtime="20201030 15:54:46.672"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.681" endtime="20201030 15:54:46.691"></status>
</kw>
<msg timestamp="20201030 15:54:46.692" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.679" endtime="20201030 15:54:46.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:46.694" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:46.693" endtime="20201030 15:54:46.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.695" endtime="20201030 15:54:46.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.676" endtime="20201030 15:54:46.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.674" endtime="20201030 15:54:46.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:46.705" endtime="20201030 15:54:46.995"></status>
</kw>
<msg timestamp="20201030 15:54:46.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:46.703" endtime="20201030 15:54:46.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019506125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.000" endtime="20201030 15:54:47.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.008" endtime="20201030 15:54:47.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.701" endtime="20201030 15:54:47.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.699" endtime="20201030 15:54:47.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.015" level="INFO">${PHILIP_RES} = [{'diff': 2.9611000000002302e-05}, {'diff': 2.9667000000000582e-05}, {'diff': 2.9638999999997973e-05}, {'diff': 2.963800000000197e-05}, {'diff': 2.9624999999998403e-05}, {'diff': 2.9653000000001012e-0...</msg>
<status status="PASS" starttime="20201030 15:54:47.012" endtime="20201030 15:54:47.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.019" level="INFO">${RESULT} = {'diff': [2.9611000000002302e-05, 2.9667000000000582e-05, 2.9638999999997973e-05, 2.963800000000197e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9597999999998736e-05, 2.9653000000001012e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:47.016" endtime="20201030 15:54:47.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.024" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:47.023" endtime="20201030 15:54:47.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.026" level="INFO">VALUE: [2.9611000000002302e-05, 2.9667000000000582e-05, 2.9638999999997973e-05, 2.963800000000197e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9597999999998736e-05, 2.9653000000001012e-05, 2.9625000000001872e-05, 2.9666999999997112e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9638999999997973e-05, 2.9652000000001538e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9625000000001872e-05, 2.9667000000000582e-05, 2.9638999999997973e-05, 2.9611000000002302e-05, 2.9624999999998403e-05, 2.96379999999985e-05, 2.9569999999999597e-05, 2.966599999999764e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9694000000000248e-05, 2.9639000000001442e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.965199999999807e-05, 2.9666000000001108e-05, 2.9666000000001108e-05, 2.9652999999997542e-05, 2.9667000000000582e-05, 2.9680999999996682e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9596999999999263e-05, 2.9653000000001012e-05, 2.9610999999998833e-05, 2.9612000000001776e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9611000000002302e-05, 2.9653000000001012e-05, 2.972299999999886e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.025" endtime="20201030 15:54:47.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.020" endtime="20201030 15:54:47.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.031" endtime="20201030 15:54:47.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.030" endtime="20201030 15:54:47.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.029" endtime="20201030 15:54:47.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.672" endtime="20201030 15:54:47.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:46.672" endtime="20201030 15:54:47.052"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.061" endtime="20201030 15:54:47.074"></status>
</kw>
<msg timestamp="20201030 15:54:47.074" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.059" endtime="20201030 15:54:47.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.077" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.075" endtime="20201030 15:54:47.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.078" endtime="20201030 15:54:47.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.057" endtime="20201030 15:54:47.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.055" endtime="20201030 15:54:47.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.087" endtime="20201030 15:54:47.392"></status>
</kw>
<msg timestamp="20201030 15:54:47.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019894667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.085" endtime="20201030 15:54:47.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019894667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.396" endtime="20201030 15:54:47.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.405" endtime="20201030 15:54:47.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.083" endtime="20201030 15:54:47.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.081" endtime="20201030 15:54:47.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.412" level="INFO">${PHILIP_RES} = [{'diff': 3.690199999999838e-05}, {'diff': 3.69589999999996e-05}, {'diff': 3.701400000000188e-05}, {'diff': 3.69719999999997e-05}, {'diff': 3.695800000000013e-05}, {'diff': 3.697300000000264e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:47.408" endtime="20201030 15:54:47.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.416" level="INFO">${RESULT} = {'diff': [3.690199999999838e-05, 3.69589999999996e-05, 3.701400000000188e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.697300000000264e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.695800...</msg>
<status status="PASS" starttime="20201030 15:54:47.413" endtime="20201030 15:54:47.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.420" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:47.419" endtime="20201030 15:54:47.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.423" level="INFO">VALUE: [3.690199999999838e-05, 3.69589999999996e-05, 3.701400000000188e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.697300000000264e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.6902999999997854e-05, 3.6917000000000894e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.699999999999884e-05, 3.694500000000003e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.702800000000145e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.69589999999996e-05, 3.695800000000013e-05, 3.694400000000056e-05, 3.697299999999917e-05, 3.695800000000013e-05, 3.694400000000056e-05, 3.698599999999927e-05, 3.6917000000000894e-05, 3.698599999999927e-05, 3.695800000000013e-05, 3.697200000000317e-05, 3.694500000000003e-05, 3.6931000000000463e-05, 3.69719999999997e-05, 3.694400000000056e-05, 3.69589999999996e-05, 3.69719999999997e-05, 3.691600000000142e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.695800000000013e-05, 3.69719999999997e-05, 3.69719999999997e-05, 3.694500000000003e-05, 3.698599999999927e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.422" endtime="20201030 15:54:47.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.417" endtime="20201030 15:54:47.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.429" endtime="20201030 15:54:47.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.427" endtime="20201030 15:54:47.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.426" endtime="20201030 15:54:47.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.053" endtime="20201030 15:54:47.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.053" endtime="20201030 15:54:47.450"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.458" endtime="20201030 15:54:47.471"></status>
</kw>
<msg timestamp="20201030 15:54:47.472" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.457" endtime="20201030 15:54:47.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.474" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.473" endtime="20201030 15:54:47.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.475" endtime="20201030 15:54:47.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.454" endtime="20201030 15:54:47.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.452" endtime="20201030 15:54:47.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.485" endtime="20201030 15:54:47.771"></status>
</kw>
<msg timestamp="20201030 15:54:47.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.483" endtime="20201030 15:54:47.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.778" endtime="20201030 15:54:47.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.788" endtime="20201030 15:54:47.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.480" endtime="20201030 15:54:47.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.479" endtime="20201030 15:54:47.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:47.795" level="INFO">${PHILIP_RES} = [{'diff': 4.454099999999864e-05}, {'diff': 4.452699999999907e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4583000000000816e-05...</msg>
<status status="PASS" starttime="20201030 15:54:47.791" endtime="20201030 15:54:47.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:47.800" level="INFO">${RESULT} = {'diff': [4.454099999999864e-05, 4.452699999999907e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.457000000000072e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:54:47.796" endtime="20201030 15:54:47.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.804" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:47.803" endtime="20201030 15:54:47.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.807" level="INFO">VALUE: [4.454099999999864e-05, 4.452699999999907e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.457000000000072e-05, 4.457000000000072e-05, 4.4624999999999526e-05, 4.457000000000072e-05, 4.4569000000001247e-05, 4.4583000000000816e-05, 4.456899999999778e-05, 4.456899999999778e-05, 4.459699999999692e-05, 4.458299999999735e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.458400000000029e-05, 4.4624999999999526e-05, 4.458400000000029e-05, 4.458400000000029e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4583000000000816e-05, 4.4610999999999956e-05, 4.4610999999999956e-05, 4.4597000000000386e-05, 4.455600000000115e-05, 4.461199999999943e-05, 4.458400000000029e-05, 4.459699999999692e-05, 4.4597000000000386e-05, 4.458299999999735e-05, 4.4610999999999956e-05, 4.4569000000001247e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.4597000000000386e-05, 4.4597000000000386e-05, 4.458400000000029e-05, 4.4638999999999096e-05, 4.455600000000115e-05, 4.4583000000000816e-05, 4.4555000000001677e-05, 4.4597000000000386e-05, 4.458299999999735e-05, 4.4597000000000386e-05, 4.458299999999735e-05]</msg>
<status status="PASS" starttime="20201030 15:54:47.805" endtime="20201030 15:54:47.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.801" endtime="20201030 15:54:47.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:47.812" endtime="20201030 15:54:47.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.810" endtime="20201030 15:54:47.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.809" endtime="20201030 15:54:47.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.451" endtime="20201030 15:54:47.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.450" endtime="20201030 15:54:47.833"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.841" endtime="20201030 15:54:47.856"></status>
</kw>
<msg timestamp="20201030 15:54:47.856" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.840" endtime="20201030 15:54:47.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:47.858" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:47.857" endtime="20201030 15:54:47.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.860" endtime="20201030 15:54:47.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.837" endtime="20201030 15:54:47.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.835" endtime="20201030 15:54:47.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:47.869" endtime="20201030 15:54:48.155"></status>
</kw>
<msg timestamp="20201030 15:54:48.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:47.867" endtime="20201030 15:54:48.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.159" endtime="20201030 15:54:48.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.167" endtime="20201030 15:54:48.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.865" endtime="20201030 15:54:48.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.863" endtime="20201030 15:54:48.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:48.175" level="INFO">${PHILIP_RES} = [{'diff': 5.255599999999874e-05}, {'diff': 5.252700000000013e-05}, {'diff': 5.252700000000013e-05}, {'diff': 5.255499999999927e-05}, {'diff': 5.251400000000003e-05}, {'diff': 5.254199999999917e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:48.172" endtime="20201030 15:54:48.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.179" level="INFO">${RESULT} = {'diff': [5.255599999999874e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.255499999999927e-05, 5.251400000000003e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.250000...</msg>
<status status="PASS" starttime="20201030 15:54:48.176" endtime="20201030 15:54:48.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.184" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.183" endtime="20201030 15:54:48.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.186" level="INFO">VALUE: [5.255599999999874e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.255499999999927e-05, 5.251400000000003e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.254199999999917e-05, 5.251400000000003e-05, 5.254200000000264e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.252700000000013e-05, 5.251400000000003e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.250000000000046e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.254199999999917e-05, 5.254199999999917e-05, 5.25279999999996e-05, 5.255499999999927e-05, 5.251300000000056e-05, 5.252700000000013e-05, 5.251400000000003e-05, 5.250000000000046e-05, 5.251400000000003e-05, 5.255499999999927e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.254199999999917e-05, 5.245800000000175e-05, 5.25279999999996e-05, 5.25279999999996e-05, 5.255600000000221e-05, 5.251400000000003e-05, 5.25279999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.185" endtime="20201030 15:54:48.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.180" endtime="20201030 15:54:48.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.199" endtime="20201030 15:54:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.198" endtime="20201030 15:54:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.196" endtime="20201030 15:54:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.834" endtime="20201030 15:54:48.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:47.833" endtime="20201030 15:54:48.220"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.229" endtime="20201030 15:54:48.244"></status>
</kw>
<msg timestamp="20201030 15:54:48.245" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.227" endtime="20201030 15:54:48.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.247" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.246" endtime="20201030 15:54:48.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.248" endtime="20201030 15:54:48.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.224" endtime="20201030 15:54:48.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.222" endtime="20201030 15:54:48.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.257" endtime="20201030 15:54:48.544"></status>
</kw>
<msg timestamp="20201030 15:54:48.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.256" endtime="20201030 15:54:48.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020031764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.548" endtime="20201030 15:54:48.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.557" endtime="20201030 15:54:48.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.253" endtime="20201030 15:54:48.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.251" endtime="20201030 15:54:48.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:48.563" level="INFO">${PHILIP_RES} = [{'diff': 6.0750000000001775e-05}, {'diff': 6.0750000000001775e-05}, {'diff': 6.079100000000101e-05}, {'diff': 6.0764000000001345e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.0777999999997445e-0...</msg>
<status status="PASS" starttime="20201030 15:54:48.560" endtime="20201030 15:54:48.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.568" level="INFO">${RESULT} = {'diff': [6.0750000000001775e-05, 6.0750000000001775e-05, 6.079100000000101e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0777999999997445e-05, 6.0819999999999624e-05, 6.0763999999997875e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:48.564" endtime="20201030 15:54:48.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.572" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.571" endtime="20201030 15:54:48.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.575" level="INFO">VALUE: [6.0750000000001775e-05, 6.0750000000001775e-05, 6.079100000000101e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0777999999997445e-05, 6.0819999999999624e-05, 6.0763999999997875e-05, 6.080500000000058e-05, 6.077700000000144e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.079100000000101e-05, 6.0792000000000485e-05, 6.0777999999997445e-05, 6.076300000000187e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.0735999999998735e-05, 6.0763999999997875e-05, 6.080499999999711e-05, 6.083299999999972e-05, 6.0763999999997875e-05, 6.0778000000000915e-05, 6.076300000000187e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.084699999999929e-05, 6.0792000000000485e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0749999999998305e-05, 6.086100000000233e-05, 6.079099999999754e-05, 6.0721999999999166e-05, 6.0764000000001345e-05, 6.0764000000001345e-05, 6.0778000000000915e-05, 6.0792000000000485e-05, 6.0750000000001775e-05, 6.077700000000144e-05, 6.0778000000000915e-05, 6.0777999999997445e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.573" endtime="20201030 15:54:48.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.569" endtime="20201030 15:54:48.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.583" endtime="20201030 15:54:48.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.581" endtime="20201030 15:54:48.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.580" endtime="20201030 15:54:48.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.221" endtime="20201030 15:54:48.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.220" endtime="20201030 15:54:48.604"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.613" endtime="20201030 15:54:48.627"></status>
</kw>
<msg timestamp="20201030 15:54:48.628" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.611" endtime="20201030 15:54:48.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.630" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.629" endtime="20201030 15:54:48.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.631" endtime="20201030 15:54:48.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.608" endtime="20201030 15:54:48.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.606" endtime="20201030 15:54:48.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.640" endtime="20201030 15:54:48.926"></status>
</kw>
<msg timestamp="20201030 15:54:48.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018974722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.639" endtime="20201030 15:54:48.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018974722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:48.930" endtime="20201030 15:54:48.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.938" endtime="20201030 15:54:48.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.636" endtime="20201030 15:54:48.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.634" endtime="20201030 15:54:48.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:48.945" level="INFO">${PHILIP_RES} = [{'diff': 6.929200000000205e-05}, {'diff': 6.929199999999858e-05}, {'diff': 6.933399999999729e-05}, {'diff': 6.937499999999999e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.937499999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:48.941" endtime="20201030 15:54:48.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:48.950" level="INFO">${RESULT} = {'diff': [6.929200000000205e-05, 6.929199999999858e-05, 6.933399999999729e-05, 6.937499999999999e-05, 6.934700000000085e-05, 6.937499999999999e-05, 6.931900000000171e-05, 6.933299999999781e-05, 6.9334...</msg>
<status status="PASS" starttime="20201030 15:54:48.946" endtime="20201030 15:54:48.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.954" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:48.953" endtime="20201030 15:54:48.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.956" level="INFO">VALUE: [6.929200000000205e-05, 6.929199999999858e-05, 6.933399999999729e-05, 6.937499999999999e-05, 6.934700000000085e-05, 6.937499999999999e-05, 6.931900000000171e-05, 6.933299999999781e-05, 6.933400000000076e-05, 6.934800000000033e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.937499999999999e-05, 6.936100000000042e-05, 6.932000000000119e-05, 6.934800000000033e-05, 6.933400000000076e-05, 6.934699999999738e-05, 6.92909999999991e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.932000000000119e-05, 6.933400000000076e-05, 6.931999999999772e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.930500000000214e-05, 6.933300000000128e-05, 6.934700000000085e-05, 6.930599999999815e-05, 6.934800000000033e-05, 6.933400000000076e-05, 6.936100000000042e-05, 6.934699999999738e-05, 6.930499999999867e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.930600000000162e-05, 6.933400000000076e-05, 6.936100000000042e-05, 6.934700000000085e-05, 6.931899999999824e-05, 6.932000000000119e-05, 6.934700000000085e-05, 6.934800000000033e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.934700000000085e-05, 6.933300000000128e-05, 6.931900000000171e-05]</msg>
<status status="PASS" starttime="20201030 15:54:48.955" endtime="20201030 15:54:48.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.950" endtime="20201030 15:54:48.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.961" endtime="20201030 15:54:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.960" endtime="20201030 15:54:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.959" endtime="20201030 15:54:48.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.605" endtime="20201030 15:54:48.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.604" endtime="20201030 15:54:48.982"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.990" endtime="20201030 15:54:49.006"></status>
</kw>
<msg timestamp="20201030 15:54:49.007" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.989" endtime="20201030 15:54:49.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.009" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.008" endtime="20201030 15:54:49.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.010" endtime="20201030 15:54:49.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.986" endtime="20201030 15:54:49.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.984" endtime="20201030 15:54:49.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.019" endtime="20201030 15:54:49.305"></status>
</kw>
<msg timestamp="20201030 15:54:49.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018676, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:49.018" endtime="20201030 15:54:49.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018597861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018676, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:49.309" endtime="20201030 15:54:49.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.317" endtime="20201030 15:54:49.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.015" endtime="20201030 15:54:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.014" endtime="20201030 15:54:49.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:49.325" level="INFO">${PHILIP_RES} = [{'diff': 7.813900000000137e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.822200000000279e-05}, {'diff': 7.820799999999975e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.820899999999922e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:49.322" endtime="20201030 15:54:49.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.329" level="INFO">${RESULT} = {'diff': [7.813900000000137e-05, 7.822199999999932e-05, 7.822200000000279e-05, 7.820799999999975e-05, 7.816700000000051e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.819499999999965e-05, 7.8249...</msg>
<status status="PASS" starttime="20201030 15:54:49.326" endtime="20201030 15:54:49.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.334" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:49.333" endtime="20201030 15:54:49.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.336" level="INFO">VALUE: [7.813900000000137e-05, 7.822199999999932e-05, 7.822200000000279e-05, 7.820799999999975e-05, 7.816700000000051e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.819499999999965e-05, 7.824999999999846e-05, 7.820799999999975e-05, 7.824999999999846e-05, 7.818000000000061e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.820800000000322e-05, 7.822200000000279e-05, 7.819400000000018e-05, 7.82229999999988e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.820899999999922e-05, 7.823599999999889e-05, 7.818000000000061e-05, 7.822199999999932e-05, 7.82229999999988e-05, 7.820799999999975e-05, 7.822300000000226e-05, 7.822199999999932e-05, 7.822300000000226e-05, 7.822199999999932e-05, 7.819499999999965e-05, 7.822199999999932e-05, 7.82229999999988e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.822199999999932e-05, 7.823599999999889e-05, 7.823599999999889e-05, 7.823599999999889e-05, 7.820799999999975e-05, 7.820899999999922e-05, 7.820800000000322e-05, 7.819499999999965e-05, 7.822199999999932e-05, 7.826300000000203e-05, 7.822199999999932e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.820799999999975e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.335" endtime="20201030 15:54:49.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.330" endtime="20201030 15:54:49.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.341" endtime="20201030 15:54:49.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.339" endtime="20201030 15:54:49.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.338" endtime="20201030 15:54:49.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.983" endtime="20201030 15:54:49.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.982" endtime="20201030 15:54:49.362"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.370" endtime="20201030 15:54:49.388"></status>
</kw>
<msg timestamp="20201030 15:54:49.389" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.368" endtime="20201030 15:54:49.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.391" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.390" endtime="20201030 15:54:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.392" endtime="20201030 15:54:49.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.366" endtime="20201030 15:54:49.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.364" endtime="20201030 15:54:49.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.401" endtime="20201030 15:54:49.688"></status>
</kw>
<msg timestamp="20201030 15:54:49.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.400" endtime="20201030 15:54:49.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019551875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019639236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.692" endtime="20201030 15:54:49.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.700" endtime="20201030 15:54:49.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.397" endtime="20201030 15:54:49.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.396" endtime="20201030 15:54:49.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:49.707" level="INFO">${PHILIP_RES} = [{'diff': 8.736100000000108e-05}, {'diff': 8.740299999999979e-05}, {'diff': 8.740200000000031e-05}, {'diff': 8.733299999999847e-05}, {'diff': 8.73470000000015e-05}, {'diff': 8.740200000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:49.704" endtime="20201030 15:54:49.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:49.711" level="INFO">${RESULT} = {'diff': [8.736100000000108e-05, 8.740299999999979e-05, 8.740200000000031e-05, 8.733299999999847e-05, 8.73470000000015e-05, 8.740200000000031e-05, 8.741700000000283e-05, 8.741699999999936e-05, 8.74020...</msg>
<status status="PASS" starttime="20201030 15:54:49.708" endtime="20201030 15:54:49.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.715" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:49.714" endtime="20201030 15:54:49.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.718" level="INFO">VALUE: [8.736100000000108e-05, 8.740299999999979e-05, 8.740200000000031e-05, 8.733299999999847e-05, 8.73470000000015e-05, 8.740200000000031e-05, 8.741700000000283e-05, 8.741699999999936e-05, 8.740200000000031e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.741699999999936e-05, 8.742999999999945e-05, 8.740299999999979e-05, 8.741700000000283e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.745799999999859e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.745899999999807e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.737500000000065e-05, 8.741699999999936e-05, 8.738900000000022e-05, 8.740299999999979e-05, 8.740299999999979e-05, 8.73470000000015e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.741599999999988e-05, 8.737500000000065e-05, 8.740299999999979e-05, 8.738800000000074e-05, 8.740299999999979e-05, 8.738900000000022e-05, 8.741599999999988e-05, 8.741699999999936e-05, 8.740299999999979e-05, 8.741599999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:54:49.716" endtime="20201030 15:54:49.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.712" endtime="20201030 15:54:49.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:49.724" endtime="20201030 15:54:49.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.722" endtime="20201030 15:54:49.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.721" endtime="20201030 15:54:49.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.363" endtime="20201030 15:54:49.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.362" endtime="20201030 15:54:49.744"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.753" endtime="20201030 15:54:49.770"></status>
</kw>
<msg timestamp="20201030 15:54:49.771" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.751" endtime="20201030 15:54:49.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:49.773" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.772" endtime="20201030 15:54:49.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.774" endtime="20201030 15:54:49.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.749" endtime="20201030 15:54:49.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.747" endtime="20201030 15:54:49.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.783" endtime="20201030 15:54:50.070"></status>
</kw>
<msg timestamp="20201030 15:54:50.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018983847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:49.782" endtime="20201030 15:54:50.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018983847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019080708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.074" endtime="20201030 15:54:50.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.082" endtime="20201030 15:54:50.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.779" endtime="20201030 15:54:50.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.778" endtime="20201030 15:54:50.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:50.089" level="INFO">${PHILIP_RES} = [{'diff': 9.68609999999967e-05}, {'diff': 9.690299999999888e-05}, {'diff': 9.691699999999845e-05}, {'diff': 9.695900000000063e-05}, {'diff': 9.691699999999845e-05}, {'diff': 9.690299999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:50.086" endtime="20201030 15:54:50.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.094" level="INFO">${RESULT} = {'diff': [9.68609999999967e-05, 9.690299999999888e-05, 9.691699999999845e-05, 9.695900000000063e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.691599999999898e-05, 9.69310...</msg>
<status status="PASS" starttime="20201030 15:54:50.090" endtime="20201030 15:54:50.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.098" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.097" endtime="20201030 15:54:50.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.101" level="INFO">VALUE: [9.68609999999967e-05, 9.690299999999888e-05, 9.691699999999845e-05, 9.695900000000063e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.691599999999898e-05, 9.693100000000149e-05, 9.690299999999888e-05, 9.683299999999756e-05, 9.690300000000235e-05, 9.691699999999845e-05, 9.691600000000244e-05, 9.687499999999974e-05, 9.694500000000106e-05, 9.691600000000244e-05, 9.691699999999845e-05, 9.688899999999931e-05, 9.688899999999931e-05, 9.691599999999898e-05, 9.691700000000192e-05, 9.690299999999888e-05, 9.69019999999994e-05, 9.69860000000003e-05, 9.687499999999974e-05, 9.690200000000287e-05, 9.688899999999931e-05, 9.690299999999888e-05, 9.691600000000244e-05, 9.691699999999845e-05, 9.690299999999888e-05, 9.690300000000235e-05, 9.690299999999888e-05, 9.691700000000192e-05, 9.691699999999845e-05, 9.694400000000158e-05, 9.690300000000235e-05, 9.693099999999802e-05, 9.693000000000201e-05, 9.690299999999888e-05, 9.688899999999931e-05, 9.691600000000244e-05, 9.692999999999855e-05, 9.688900000000278e-05, 9.690299999999888e-05, 9.694400000000158e-05, 9.693100000000149e-05, 9.687499999999974e-05, 9.69019999999994e-05]</msg>
<status status="PASS" starttime="20201030 15:54:50.099" endtime="20201030 15:54:50.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.095" endtime="20201030 15:54:50.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.106" endtime="20201030 15:54:50.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.104" endtime="20201030 15:54:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.103" endtime="20201030 15:54:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.745" endtime="20201030 15:54:50.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.745" endtime="20201030 15:54:50.126"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.135" endtime="20201030 15:54:50.154"></status>
</kw>
<msg timestamp="20201030 15:54:50.154" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.133" endtime="20201030 15:54:50.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.157" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.156" endtime="20201030 15:54:50.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.158" endtime="20201030 15:54:50.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.131" endtime="20201030 15:54:50.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.129" endtime="20201030 15:54:50.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.167" endtime="20201030 15:54:50.453"></status>
</kw>
<msg timestamp="20201030 15:54:50.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018653347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018760028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.166" endtime="20201030 15:54:50.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018653347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018760028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.456" endtime="20201030 15:54:50.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.464" endtime="20201030 15:54:50.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.163" endtime="20201030 15:54:50.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.161" endtime="20201030 15:54:50.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:50.472" level="INFO">${PHILIP_RES} = [{'diff': 0.00010668100000000083}, {'diff': 0.00010672200000000007}, {'diff': 0.00010672299999999954}, {'diff': 0.00010665300000000169}, {'diff': 0.00010673599999999964}, {'diff': 0.000106708000000000...</msg>
<status status="PASS" starttime="20201030 15:54:50.469" endtime="20201030 15:54:50.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.476" level="INFO">${RESULT} = {'diff': [0.00010668100000000083, 0.00010672200000000007, 0.00010672299999999954, 0.00010665300000000169, 0.00010673599999999964, 0.0001067080000000005, 0.00010672200000000007, 0.00010672200000000007,...</msg>
<status status="PASS" starttime="20201030 15:54:50.473" endtime="20201030 15:54:50.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.480" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.479" endtime="20201030 15:54:50.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.482" level="INFO">VALUE: [0.00010668100000000083, 0.00010672200000000007, 0.00010672299999999954, 0.00010665300000000169, 0.00010673599999999964, 0.0001067080000000005, 0.00010672200000000007, 0.00010672200000000007, 0.00010669399999999746, 0.00010672200000000007, 0.0001067080000000005, 0.0001067499999999992, 0.0001067080000000005, 0.00010676399999999878, 0.00010669400000000093, 0.00010672299999999954, 0.00010672200000000007, 0.00010670899999999997, 0.00010672200000000007, 0.00010672200000000007, 0.00010672200000000007, 0.00010673599999999964, 0.0001066950000000004, 0.0001067080000000005, 0.00010673599999999964, 0.00010672200000000007, 0.00010673700000000258, 0.00010673599999999964, 0.00010672299999999954, 0.00010673599999999964, 0.0001067360000000031, 0.0001067080000000005, 0.0001067080000000005, 0.00010673599999999964, 0.00010667999999999789, 0.00010672200000000007, 0.0001067080000000005, 0.00010670899999999997, 0.0001067080000000005, 0.00010672299999999954, 0.00010669400000000093, 0.00010670899999999997, 0.00010672200000000007, 0.00010672200000000007, 0.00010663900000000212, 0.0001067080000000005, 0.00010672200000000007, 0.00010672200000000007, 0.00010672300000000301, 0.00010679200000000139]</msg>
<status status="PASS" starttime="20201030 15:54:50.481" endtime="20201030 15:54:50.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.477" endtime="20201030 15:54:50.484"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.487" endtime="20201030 15:54:50.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.486" endtime="20201030 15:54:50.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.485" endtime="20201030 15:54:50.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.127" endtime="20201030 15:54:50.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.127" endtime="20201030 15:54:50.508"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.516" endtime="20201030 15:54:50.537"></status>
</kw>
<msg timestamp="20201030 15:54:50.538" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.515" endtime="20201030 15:54:50.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.540" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.539" endtime="20201030 15:54:50.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.541" endtime="20201030 15:54:50.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.512" endtime="20201030 15:54:50.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.510" endtime="20201030 15:54:50.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.550" endtime="20201030 15:54:50.836"></status>
</kw>
<msg timestamp="20201030 15:54:50.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.549" endtime="20201030 15:54:50.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019435417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.840" endtime="20201030 15:54:50.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.848" endtime="20201030 15:54:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.546" endtime="20201030 15:54:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.544" endtime="20201030 15:54:50.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:50.855" level="INFO">${PHILIP_RES} = [{'diff': 0.00011680500000000107}, {'diff': 0.00011681900000000064}, {'diff': 0.00011683300000000021}, {'diff': 0.00011686099999999935}, {'diff': 0.00011684799999999926}, {'diff': 0.000116861999999998...</msg>
<status status="PASS" starttime="20201030 15:54:50.852" endtime="20201030 15:54:50.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:50.859" level="INFO">${RESULT} = {'diff': [0.00011680500000000107, 0.00011681900000000064, 0.00011683300000000021, 0.00011686099999999935, 0.00011684799999999926, 0.00011686199999999883, 0.00011684699999999978, 0.00011686099999999935...</msg>
<status status="PASS" starttime="20201030 15:54:50.856" endtime="20201030 15:54:50.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.863" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:50.862" endtime="20201030 15:54:50.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.866" level="INFO">VALUE: [0.00011680500000000107, 0.00011681900000000064, 0.00011683300000000021, 0.00011686099999999935, 0.00011684799999999926, 0.00011686199999999883, 0.00011684699999999978, 0.00011686099999999935, 0.00011684699999999978, 0.00011684699999999978, 0.00011683300000000021, 0.00011687499999999892, 0.00011684700000000325, 0.00011684699999999978, 0.00011684800000000273, 0.00011684799999999926, 0.00011686100000000282, 0.00011684699999999978, 0.00011683300000000021, 0.00011684699999999978, 0.00011690300000000153, 0.00011683300000000021, 0.00011684699999999978, 0.0001168889999999985, 0.00011680600000000055, 0.00011683399999999969, 0.00011684699999999978, 0.00011677800000000141, 0.00011683300000000021, 0.00011684699999999978, 0.00011684699999999978, 0.00011686099999999935, 0.00011684799999999926, 0.00011684799999999926, 0.00011683399999999969, 0.00011686099999999935, 0.00011683300000000021, 0.00011686099999999935, 0.00011686099999999935, 0.00011690299999999806, 0.0001167910000000015, 0.00011683399999999969, 0.00011683399999999969, 0.00011683400000000316, 0.00011684699999999978, 0.0001168750000000024, 0.00011686099999999935, 0.00011684699999999978, 0.00011679200000000445, 0.00011684700000000325]</msg>
<status status="PASS" starttime="20201030 15:54:50.864" endtime="20201030 15:54:50.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.860" endtime="20201030 15:54:50.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:50.871" endtime="20201030 15:54:50.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.870" endtime="20201030 15:54:50.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.869" endtime="20201030 15:54:50.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.509" endtime="20201030 15:54:50.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.508" endtime="20201030 15:54:50.892"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.900" endtime="20201030 15:54:50.921"></status>
</kw>
<msg timestamp="20201030 15:54:50.922" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.899" endtime="20201030 15:54:50.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:50.924" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:50.923" endtime="20201030 15:54:50.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.925" endtime="20201030 15:54:50.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.896" endtime="20201030 15:54:50.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.894" endtime="20201030 15:54:50.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:50.934" endtime="20201030 15:54:51.222"></status>
</kw>
<msg timestamp="20201030 15:54:51.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:50.933" endtime="20201030 15:54:51.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018864167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018991403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.226" endtime="20201030 15:54:51.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.234" endtime="20201030 15:54:51.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.930" endtime="20201030 15:54:51.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.928" endtime="20201030 15:54:51.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.240" level="INFO">${PHILIP_RES} = [{'diff': 0.00012723599999999932}, {'diff': 0.00012734699999999988}, {'diff': 0.00012729099999999813}, {'diff': 0.0001272780000000015}, {'diff': 0.00012725000000000236}, {'diff': 0.0001272920000000010...</msg>
<status status="PASS" starttime="20201030 15:54:51.237" endtime="20201030 15:54:51.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.245" level="INFO">${RESULT} = {'diff': [0.00012723599999999932, 0.00012734699999999988, 0.00012729099999999813, 0.0001272780000000015, 0.00012725000000000236, 0.00012729200000000107, 0.0001272910000000016, 0.00012727799999999803, ...</msg>
<status status="PASS" starttime="20201030 15:54:51.241" endtime="20201030 15:54:51.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.249" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.248" endtime="20201030 15:54:51.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.252" level="INFO">VALUE: [0.00012723599999999932, 0.00012734699999999988, 0.00012729099999999813, 0.0001272780000000015, 0.00012725000000000236, 0.00012729200000000107, 0.0001272910000000016, 0.00012727799999999803, 0.0001272919999999976, 0.00012726400000000193, 0.00012727699999999856, 0.00012729200000000107, 0.0001272780000000015, 0.00012727799999999803, 0.00012727700000000203, 0.0001272910000000016, 0.00012726399999999846, 0.00012726400000000193, 0.00012727699999999856, 0.0001272919999999976, 0.00012726400000000193, 0.00012726399999999846, 0.0001273049999999977, 0.0001272780000000015, 0.00012727799999999803, 0.00012726399999999846, 0.0001272910000000016, 0.0001272919999999976, 0.00012729200000000107, 0.0001273200000000002, 0.000127262999999999, 0.0001272780000000015, 0.00012726400000000193, 0.00012733399999999978, 0.00012730500000000117, 0.00012729200000000107, 0.00012729200000000107, 0.0001272780000000015, 0.000127262999999999, 0.00012730600000000064, 0.0001272780000000015, 0.00012726399999999846, 0.00012729099999999813, 0.00012729200000000107, 0.00012727799999999803, 0.00012729200000000107, 0.00012729099999999813, 0.0001272780000000015, 0.0001272780000000015, 0.00012730500000000117]</msg>
<status status="PASS" starttime="20201030 15:54:51.251" endtime="20201030 15:54:51.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.246" endtime="20201030 15:54:51.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.257" endtime="20201030 15:54:51.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.255" endtime="20201030 15:54:51.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.254" endtime="20201030 15:54:51.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.893" endtime="20201030 15:54:51.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:50.892" endtime="20201030 15:54:51.277"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.286" endtime="20201030 15:54:51.307"></status>
</kw>
<msg timestamp="20201030 15:54:51.308" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.284" endtime="20201030 15:54:51.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.310" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.309" endtime="20201030 15:54:51.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.311" endtime="20201030 15:54:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.282" endtime="20201030 15:54:51.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.280" endtime="20201030 15:54:51.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.320" endtime="20201030 15:54:51.606"></status>
</kw>
<msg timestamp="20201030 15:54:51.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.318" endtime="20201030 15:54:51.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018595486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018733472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.610" endtime="20201030 15:54:51.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.617" endtime="20201030 15:54:51.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.316" endtime="20201030 15:54:51.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.314" endtime="20201030 15:54:51.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:51.625" level="INFO">${PHILIP_RES} = [{'diff': 0.00013798599999999966}, {'diff': 0.00013804200000000141}, {'diff': 0.00013804199999999794}, {'diff': 0.00013804199999999794}, {'diff': 0.00013804200000000141}, {'diff': 0.000138028000000001...</msg>
<status status="PASS" starttime="20201030 15:54:51.622" endtime="20201030 15:54:51.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:51.629" level="INFO">${RESULT} = {'diff': [0.00013798599999999966, 0.00013804200000000141, 0.00013804199999999794, 0.00013804199999999794, 0.00013804200000000141, 0.00013802800000000184, 0.00013802799999999837, 0.00013804099999999847...</msg>
<status status="PASS" starttime="20201030 15:54:51.626" endtime="20201030 15:54:51.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.633" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:51.632" endtime="20201030 15:54:51.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.635" level="INFO">VALUE: [0.00013798599999999966, 0.00013804200000000141, 0.00013804199999999794, 0.00013804199999999794, 0.00013804200000000141, 0.00013802800000000184, 0.00013802799999999837, 0.00013804099999999847, 0.0001380269999999989, 0.00013804100000000194, 0.00013804100000000194, 0.00013808400000000012, 0.00013805600000000098, 0.00013802800000000184, 0.00013802800000000184, 0.00013802799999999837, 0.00013805599999999751, 0.0001379870000000026, 0.00013804100000000194, 0.0001380269999999989, 0.00013804099999999847, 0.00013802799999999837, 0.00013802800000000184, 0.00013802800000000184, 0.00013798599999999966, 0.00013804199999999794, 0.00013804200000000141, 0.00013802800000000184, 0.0001380550000000015, 0.0001380269999999989, 0.00013804099999999847, 0.00013802800000000184, 0.00013802800000000184, 0.00013804200000000141, 0.00013804199999999794, 0.00013802800000000184, 0.00013802800000000184, 0.0001380139999999988, 0.00013801299999999933, 0.00013804099999999847, 0.0001380269999999989, 0.00013804100000000194, 0.00013807000000000055, 0.00013802799999999837, 0.00013804200000000141, 0.00013802799999999837, 0.00013802799999999837, 0.00013801400000000574, 0.00013804099999999847, 0.0001380689999999976]</msg>
<status status="PASS" starttime="20201030 15:54:51.634" endtime="20201030 15:54:51.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.630" endtime="20201030 15:54:51.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:51.640" endtime="20201030 15:54:51.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.639" endtime="20201030 15:54:51.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.638" endtime="20201030 15:54:51.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.278" endtime="20201030 15:54:51.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.278" endtime="20201030 15:54:51.661"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.669" endtime="20201030 15:54:51.693"></status>
</kw>
<msg timestamp="20201030 15:54:51.694" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.668" endtime="20201030 15:54:51.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:51.696" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:51.695" endtime="20201030 15:54:51.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.698" endtime="20201030 15:54:51.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.665" endtime="20201030 15:54:51.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.663" endtime="20201030 15:54:51.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:51.708" endtime="20201030 15:54:51.994"></status>
</kw>
<msg timestamp="20201030 15:54:51.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.706" endtime="20201030 15:54:51.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:51.998" endtime="20201030 15:54:52.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.006" endtime="20201030 15:54:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.703" endtime="20201030 15:54:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.701" endtime="20201030 15:54:52.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.012" level="INFO">${PHILIP_RES} = [{'diff': 0.00014907000000000115}, {'diff': 0.00014911100000000038}, {'diff': 0.0001490970000000008}, {'diff': 0.0001490970000000008}, {'diff': 0.00014912499999999995}, {'diff': 0.0001491109999999969}...</msg>
<status status="PASS" starttime="20201030 15:54:52.009" endtime="20201030 15:54:52.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.016" level="INFO">${RESULT} = {'diff': [0.00014907000000000115, 0.00014911100000000038, 0.0001490970000000008, 0.0001490970000000008, 0.00014912499999999995, 0.0001491109999999969, 0.00014908300000000124, 0.00014908300000000124, 0...</msg>
<status status="PASS" starttime="20201030 15:54:52.013" endtime="20201030 15:54:52.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.021" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.020" endtime="20201030 15:54:52.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.023" level="INFO">VALUE: [0.00014907000000000115, 0.00014911100000000038, 0.0001490970000000008, 0.0001490970000000008, 0.00014912499999999995, 0.0001491109999999969, 0.00014908300000000124, 0.00014908300000000124, 0.0001490970000000008, 0.00014904099999999906, 0.0001491109999999969, 0.00014911100000000038, 0.00014911199999999986, 0.00014911199999999986, 0.00014911199999999986, 0.00014909699999999734, 0.00014908400000000072, 0.00014911100000000038, 0.0001490970000000008, 0.00014908300000000124, 0.00014909699999999734, 0.00014909699999999734, 0.00014908300000000124, 0.00014911100000000038, 0.0001490970000000008, 0.00014912499999999995, 0.0001490970000000008, 0.0001490970000000008, 0.00014911100000000038, 0.0001490689999999982, 0.00014909799999999682, 0.00014911100000000038, 0.00014911199999999986, 0.00014907000000000115, 0.0001490559999999981, 0.00014909699999999734, 0.0001490970000000008, 0.00014911100000000038, 0.0001491520000000031, 0.00014911100000000038, 0.0001490970000000008, 0.0001490970000000008, 0.00014912499999999995, 0.00014911100000000038, 0.00014908300000000124, 0.00014918100000000517, 0.0001490970000000008, 0.00014909699999999387, 0.00014909699999999387, 0.0001490970000000008]</msg>
<status status="PASS" starttime="20201030 15:54:52.022" endtime="20201030 15:54:52.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.017" endtime="20201030 15:54:52.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.031" endtime="20201030 15:54:52.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.030" endtime="20201030 15:54:52.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.029" endtime="20201030 15:54:52.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.662" endtime="20201030 15:54:52.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:51.661" endtime="20201030 15:54:52.052"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.060" endtime="20201030 15:54:52.084"></status>
</kw>
<msg timestamp="20201030 15:54:52.085" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.059" endtime="20201030 15:54:52.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.087" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.086" endtime="20201030 15:54:52.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.088" endtime="20201030 15:54:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.056" endtime="20201030 15:54:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.054" endtime="20201030 15:54:52.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.097" endtime="20201030 15:54:52.383"></status>
</kw>
<msg timestamp="20201030 15:54:52.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018579722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018740153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.096" endtime="20201030 15:54:52.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018579722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018740153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.387" endtime="20201030 15:54:52.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.395" endtime="20201030 15:54:52.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.093" endtime="20201030 15:54:52.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.091" endtime="20201030 15:54:52.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.402" level="INFO">${PHILIP_RES} = [{'diff': 0.00016043099999999907}, {'diff': 0.00016048600000000135}, {'diff': 0.00016045799999999874}, {'diff': 0.00016048599999999788}, {'diff': 0.00016048700000000082}, {'diff': 0.000160471999999998...</msg>
<status status="PASS" starttime="20201030 15:54:52.398" endtime="20201030 15:54:52.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.406" level="INFO">${RESULT} = {'diff': [0.00016043099999999907, 0.00016048600000000135, 0.00016045799999999874, 0.00016048599999999788, 0.00016048700000000082, 0.0001604719999999983, 0.0001604580000000022, 0.00016048600000000135, ...</msg>
<status status="PASS" starttime="20201030 15:54:52.403" endtime="20201030 15:54:52.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.411" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.410" endtime="20201030 15:54:52.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.413" level="INFO">VALUE: [0.00016043099999999907, 0.00016048600000000135, 0.00016045799999999874, 0.00016048599999999788, 0.00016048700000000082, 0.0001604719999999983, 0.0001604580000000022, 0.00016048600000000135, 0.00016047200000000178, 0.00016048600000000135, 0.0001604719999999983, 0.0001604299999999996, 0.0001604719999999983, 0.0001604719999999983, 0.00016048700000000082, 0.00016045799999999874, 0.00016043099999999907, 0.0001604169999999995, 0.00016054199999999963, 0.0001604580000000022, 0.00016051299999999755, 0.00016047200000000178, 0.00016044399999999917, 0.00016044499999999864, 0.00016047200000000178, 0.00016049999999999745, 0.00016044399999999917, 0.00016048700000000082, 0.00016048600000000135, 0.00016050000000000092, 0.00016044499999999864, 0.00016047200000000178, 0.0001604719999999983, 0.0001604719999999983, 0.00016047200000000178, 0.0001604719999999983, 0.00016044500000000211, 0.0001605140000000005, 0.00016048600000000135, 0.00016055499999999973, 0.00016047200000000178, 0.00016047199999999484, 0.00016048600000000135, 0.00016048600000000135, 0.00016048600000000135, 0.0001604580000000022, 0.00016049999999999398, 0.00016048700000000082, 0.00016044400000000264, 0.00016048600000000135]</msg>
<status status="PASS" starttime="20201030 15:54:52.412" endtime="20201030 15:54:52.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.407" endtime="20201030 15:54:52.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.418" endtime="20201030 15:54:52.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.417" endtime="20201030 15:54:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.416" endtime="20201030 15:54:52.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.053" endtime="20201030 15:54:52.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.052" endtime="20201030 15:54:52.439"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.447" endtime="20201030 15:54:52.473"></status>
</kw>
<msg timestamp="20201030 15:54:52.473" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.446" endtime="20201030 15:54:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.476" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.474" endtime="20201030 15:54:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.477" endtime="20201030 15:54:52.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.443" endtime="20201030 15:54:52.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.441" endtime="20201030 15:54:52.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.486" endtime="20201030 15:54:52.772"></status>
</kw>
<msg timestamp="20201030 15:54:52.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.484" endtime="20201030 15:54:52.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018640556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.776" endtime="20201030 15:54:52.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.784" endtime="20201030 15:54:52.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.481" endtime="20201030 15:54:52.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.480" endtime="20201030 15:54:52.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:52.792" level="INFO">${PHILIP_RES} = [{'diff': 0.00017209699999999953}, {'diff': 0.0001721390000000017}, {'diff': 0.00017223599999999922}, {'diff': 0.0001721520000000018}, {'diff': 0.00017218000000000094}, {'diff': 0.00017216699999999738...</msg>
<status status="PASS" starttime="20201030 15:54:52.789" endtime="20201030 15:54:52.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:52.796" level="INFO">${RESULT} = {'diff': [0.00017209699999999953, 0.0001721390000000017, 0.00017223599999999922, 0.0001721520000000018, 0.00017218000000000094, 0.00017216699999999738, 0.00017215300000000128, 0.00017216700000000085, ...</msg>
<status status="PASS" starttime="20201030 15:54:52.793" endtime="20201030 15:54:52.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.800" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:52.799" endtime="20201030 15:54:52.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.803" level="INFO">VALUE: [0.00017209699999999953, 0.0001721390000000017, 0.00017223599999999922, 0.0001721520000000018, 0.00017218000000000094, 0.00017216699999999738, 0.00017215300000000128, 0.00017216700000000085, 0.00017212500000000214, 0.00017218000000000094, 0.00017215199999999833, 0.00017218100000000042, 0.00017215300000000128, 0.00017222199999999965, 0.0001721529999999978, 0.00017222199999999965, 0.00017216600000000137, 0.0001721659999999979, 0.00017216700000000085, 0.00017216700000000085, 0.00017216700000000085, 0.0001721520000000018, 0.0001721659999999979, 0.00017216600000000137, 0.00017215300000000128, 0.0001721529999999978, 0.00017216700000000085, 0.00017216700000000085, 0.00017215300000000128, 0.0001721940000000005, 0.0001721659999999979, 0.000172195, 0.00017212499999999867, 0.00017215300000000128, 0.00017218000000000094, 0.00017215199999999833, 0.0001721659999999979, 0.00017216700000000085, 0.0001721390000000017, 0.00017216700000000085, 0.00017216700000000085, 0.00017215300000000128, 0.0001721390000000017, 0.00017215300000000128, 0.00017216700000000085, 0.00017216700000000085, 0.00017215299999999434, 0.00017216700000000085, 0.00017216600000000137, 0.00017215300000000128]</msg>
<status status="PASS" starttime="20201030 15:54:52.801" endtime="20201030 15:54:52.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.796" endtime="20201030 15:54:52.804"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:52.807" endtime="20201030 15:54:52.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.806" endtime="20201030 15:54:52.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.805" endtime="20201030 15:54:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.440" endtime="20201030 15:54:52.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.439" endtime="20201030 15:54:52.828"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.836" endtime="20201030 15:54:52.863"></status>
</kw>
<msg timestamp="20201030 15:54:52.863" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.835" endtime="20201030 15:54:52.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.866" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.864" endtime="20201030 15:54:52.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.867" endtime="20201030 15:54:52.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.832" endtime="20201030 15:54:52.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.830" endtime="20201030 15:54:52.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.876" endtime="20201030 15:54:53.161"></status>
</kw>
<msg timestamp="20201030 15:54:53.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:52.874" endtime="20201030 15:54:53.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019612056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.166" endtime="20201030 15:54:53.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.173" endtime="20201030 15:54:53.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.871" endtime="20201030 15:54:53.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.870" endtime="20201030 15:54:53.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.180" level="INFO">${PHILIP_RES} = [{'diff': 0.00018411200000000016}, {'diff': 0.00018422299999999725}, {'diff': 0.00018416699999999897}, {'diff': 0.0001841529999999994}, {'diff': 0.00018415300000000287}, {'diff': 0.0001841529999999994...</msg>
<status status="PASS" starttime="20201030 15:54:53.177" endtime="20201030 15:54:53.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.184" level="INFO">${RESULT} = {'diff': [0.00018411200000000016, 0.00018422299999999725, 0.00018416699999999897, 0.0001841529999999994, 0.00018415300000000287, 0.0001841529999999994, 0.00018412500000000026, 0.0001841529999999994, 0...</msg>
<status status="PASS" starttime="20201030 15:54:53.181" endtime="20201030 15:54:53.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.188" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.187" endtime="20201030 15:54:53.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.190" level="INFO">VALUE: [0.00018411200000000016, 0.00018422299999999725, 0.00018416699999999897, 0.0001841529999999994, 0.00018415300000000287, 0.0001841529999999994, 0.00018412500000000026, 0.0001841529999999994, 0.00018416699999999897, 0.00018416700000000244, 0.00018416699999999897, 0.00018418099999999854, 0.00018415300000000287, 0.00018420900000000115, 0.0001841659999999995, 0.0001841529999999994, 0.0001841659999999995, 0.00018416700000000244, 0.00018415199999999993, 0.00018420899999999768, 0.0001841659999999995, 0.00018416699999999897, 0.00018415199999999993, 0.000184181000000002, 0.0001841659999999995, 0.00018416700000000244, 0.0001841659999999995, 0.00018416699999999897, 0.00018415199999999993, 0.00018416699999999897, 0.0001841659999999995, 0.00018420900000000115, 0.0001841659999999995, 0.00018416699999999897, 0.0001841659999999995, 0.0001841949999999981, 0.0001841659999999995, 0.00018416699999999897, 0.0001841659999999995, 0.00018418099999999854, 0.0001841659999999995, 0.00018422199999999778, 0.000184180000000006, 0.00018416699999999897, 0.00018415199999999993, 0.00018413899999999983, 0.00018417999999999907, 0.0001841529999999994, 0.0001841659999999995, 0.0001841529999999994]</msg>
<status status="PASS" starttime="20201030 15:54:53.189" endtime="20201030 15:54:53.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.185" endtime="20201030 15:54:53.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.203" endtime="20201030 15:54:53.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.201" endtime="20201030 15:54:53.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.200" endtime="20201030 15:54:53.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.829" endtime="20201030 15:54:53.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.828" endtime="20201030 15:54:53.224"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.232" endtime="20201030 15:54:53.259"></status>
</kw>
<msg timestamp="20201030 15:54:53.260" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.230" endtime="20201030 15:54:53.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.262" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.261" endtime="20201030 15:54:53.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.263" endtime="20201030 15:54:53.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.228" endtime="20201030 15:54:53.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.226" endtime="20201030 15:54:53.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.272" endtime="20201030 15:54:53.558"></status>
</kw>
<msg timestamp="20201030 15:54:53.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018828056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.270" endtime="20201030 15:54:53.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018631611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018828056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.562" endtime="20201030 15:54:53.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.570" endtime="20201030 15:54:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.268" endtime="20201030 15:54:53.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.266" endtime="20201030 15:54:53.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.576" level="INFO">${PHILIP_RES} = [{'diff': 0.00019644499999999995}, {'diff': 0.00019649999999999876}, {'diff': 0.0001964720000000031}, {'diff': 0.0001964859999999992}, {'diff': 0.0001964859999999992}, {'diff': 0.00019644499999999995}...</msg>
<status status="PASS" starttime="20201030 15:54:53.573" endtime="20201030 15:54:53.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.581" level="INFO">${RESULT} = {'diff': [0.00019644499999999995, 0.00019649999999999876, 0.0001964720000000031, 0.0001964859999999992, 0.0001964859999999992, 0.00019644499999999995, 0.0001965140000000018, 0.00019649999999999876, 0....</msg>
<status status="PASS" starttime="20201030 15:54:53.577" endtime="20201030 15:54:53.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.586" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.585" endtime="20201030 15:54:53.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.588" level="INFO">VALUE: [0.00019644499999999995, 0.00019649999999999876, 0.0001964720000000031, 0.0001964859999999992, 0.0001964859999999992, 0.00019644499999999995, 0.0001965140000000018, 0.00019649999999999876, 0.0001964859999999992, 0.0001965140000000018, 0.00019650000000000223, 0.00019643100000000038, 0.00019647199999999962, 0.00019649999999999876, 0.00019648700000000213, 0.00019645800000000005, 0.00019645800000000005, 0.00019654200000000094, 0.00019647199999999962, 0.00019651399999999833, 0.00019645800000000005, 0.00019645800000000005, 0.00019650000000000223, 0.0001964859999999992, 0.00019647199999999962, 0.00019644499999999995, 0.0001964859999999992, 0.0001964859999999992, 0.0001965279999999979, 0.00019647199999999962, 0.0001964859999999992, 0.00019647199999999962, 0.00019645799999999658, 0.00019655500000000103, 0.00019648600000000266, 0.0001964720000000031, 0.00019648700000000213, 0.000196443999999997, 0.0001964999999999953, 0.00019645899999999605, 0.00019648599999999572, 0.00019648600000000266, 0.00019648600000000266, 0.0001964720000000031, 0.0001964720000000031, 0.00019648600000000266, 0.0001964999999999953, 0.00019648599999999572, 0.00019648599999999572, 0.00019645799999999658]</msg>
<status status="PASS" starttime="20201030 15:54:53.587" endtime="20201030 15:54:53.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.582" endtime="20201030 15:54:53.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:53.593" endtime="20201030 15:54:53.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.591" endtime="20201030 15:54:53.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.590" endtime="20201030 15:54:53.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.224" endtime="20201030 15:54:53.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.224" endtime="20201030 15:54:53.614"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.622" endtime="20201030 15:54:53.650"></status>
</kw>
<msg timestamp="20201030 15:54:53.651" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.620" endtime="20201030 15:54:53.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.654" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:53.652" endtime="20201030 15:54:53.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.656" endtime="20201030 15:54:53.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.618" endtime="20201030 15:54:53.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.616" endtime="20201030 15:54:53.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.675" endtime="20201030 15:54:53.969"></status>
</kw>
<msg timestamp="20201030 15:54:53.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018716389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018925472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.672" endtime="20201030 15:54:53.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018716389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018925472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:53.973" endtime="20201030 15:54:53.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:53.981" endtime="20201030 15:54:53.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.666" endtime="20201030 15:54:53.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.663" endtime="20201030 15:54:53.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:53.987" level="INFO">${PHILIP_RES} = [{'diff': 0.0002090829999999988}, {'diff': 0.0002091110000000014}, {'diff': 0.00020912500000000098}, {'diff': 0.00020911099999999794}, {'diff': 0.00020911099999999794}, {'diff': 0.0002091110000000014}...</msg>
<status status="PASS" starttime="20201030 15:54:53.984" endtime="20201030 15:54:53.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:53.991" level="INFO">${RESULT} = {'diff': [0.0002090829999999988, 0.0002091110000000014, 0.00020912500000000098, 0.00020911099999999794, 0.00020911099999999794, 0.0002091110000000014, 0.00020909699999999837, 0.00020911099999999794, 0...</msg>
<status status="PASS" starttime="20201030 15:54:53.988" endtime="20201030 15:54:53.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.995" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:53.994" endtime="20201030 15:54:53.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:53.998" level="INFO">VALUE: [0.0002090829999999988, 0.0002091110000000014, 0.00020912500000000098, 0.00020911099999999794, 0.00020911099999999794, 0.0002091110000000014, 0.00020909699999999837, 0.00020911099999999794, 0.00020908400000000174, 0.00020908400000000174, 0.000209028, 0.00020905499999999966, 0.00020907000000000217, 0.00020912500000000098, 0.00020909699999999837, 0.00020913900000000055, 0.00020907000000000217, 0.00020909699999999837, 0.00020915300000000012, 0.00020907000000000217, 0.0002091110000000014, 0.00020909699999999837, 0.00020911200000000088, 0.00020907000000000217, 0.00020912500000000098, 0.0002090829999999988, 0.0002091110000000014, 0.0002090829999999988, 0.00020909699999999837, 0.0002091119999999974, 0.0002091249999999975, 0.0002090829999999988, 0.00020911100000000488, 0.00020911099999999794, 0.0002090829999999988, 0.00020912500000000445, 0.00020909799999999784, 0.00020911099999999794, 0.00020912500000000445, 0.0002091249999999975, 0.00020912500000000445, 0.00020911099999999794, 0.00020911099999999794, 0.0002090840000000052, 0.0002091379999999976, 0.00020909699999999837, 0.0002090970000000053, 0.00020908399999999827, 0.0002091249999999975, 0.0002090970000000053]</msg>
<status status="PASS" starttime="20201030 15:54:53.996" endtime="20201030 15:54:53.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.992" endtime="20201030 15:54:53.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.003" endtime="20201030 15:54:54.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.001" endtime="20201030 15:54:54.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.000" endtime="20201030 15:54:54.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.615" endtime="20201030 15:54:54.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:53.614" endtime="20201030 15:54:54.024"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.032" endtime="20201030 15:54:54.062"></status>
</kw>
<msg timestamp="20201030 15:54:54.063" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.030" endtime="20201030 15:54:54.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.065" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.064" endtime="20201030 15:54:54.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.066" endtime="20201030 15:54:54.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.028" endtime="20201030 15:54:54.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.026" endtime="20201030 15:54:54.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.075" endtime="20201030 15:54:54.363"></status>
</kw>
<msg timestamp="20201030 15:54:54.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.074" endtime="20201030 15:54:54.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.367" endtime="20201030 15:54:54.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.375" endtime="20201030 15:54:54.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.071" endtime="20201030 15:54:54.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.070" endtime="20201030 15:54:54.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.381" level="INFO">${PHILIP_RES} = [{'diff': 0.00022199999999999998}, {'diff': 0.00022205500000000225}, {'diff': 0.0002220700000000013}, {'diff': 0.00022202799999999911}, {'diff': 0.00022204199999999868}, {'diff': 0.0002220420000000021...</msg>
<status status="PASS" starttime="20201030 15:54:54.378" endtime="20201030 15:54:54.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.385" level="INFO">${RESULT} = {'diff': [0.00022199999999999998, 0.00022205500000000225, 0.0002220700000000013, 0.00022202799999999911, 0.00022204199999999868, 0.00022204200000000215, 0.00022205499999999878, 0.00022204199999999868,...</msg>
<status status="PASS" starttime="20201030 15:54:54.382" endtime="20201030 15:54:54.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.389" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.388" endtime="20201030 15:54:54.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.392" level="INFO">VALUE: [0.00022199999999999998, 0.00022205500000000225, 0.0002220700000000013, 0.00022202799999999911, 0.00022204199999999868, 0.00022204200000000215, 0.00022205499999999878, 0.00022204199999999868, 0.0002220409999999992, 0.00022204200000000215, 0.00022204199999999868, 0.0002220409999999992, 0.00022205599999999825, 0.00022205500000000225, 0.0002219860000000004, 0.00022205499999999878, 0.0002221250000000001, 0.00022204199999999868, 0.00022205499999999878, 0.00022205600000000172, 0.00022209700000000096, 0.00022208400000000086, 0.0002220409999999992, 0.00022204200000000215, 0.00022204199999999868, 0.00022201399999999955, 0.00022202799999999911, 0.00022205499999999878, 0.00022208299999999792, 0.00022205499999999878, 0.00022204199999999868, 0.00022204199999999868, 0.00022205499999999878, 0.00022202800000000605, 0.0002220409999999992, 0.00022199999999999998, 0.00022204100000000615, 0.00022205599999999825, 0.00022202799999999911, 0.00022204199999999868, 0.00022204199999999868, 0.0002220409999999992, 0.00022202799999999911, 0.0002220409999999992, 0.00022207000000000476, 0.00022201399999999955, 0.00022205499999999878, 0.00022201399999999955, 0.00022202699999999964, 0.00022204199999999868]</msg>
<status status="PASS" starttime="20201030 15:54:54.391" endtime="20201030 15:54:54.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.386" endtime="20201030 15:54:54.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.398" endtime="20201030 15:54:54.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.396" endtime="20201030 15:54:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.395" endtime="20201030 15:54:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.025" endtime="20201030 15:54:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.024" endtime="20201030 15:54:54.418"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.427" endtime="20201030 15:54:54.458"></status>
</kw>
<msg timestamp="20201030 15:54:54.458" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.425" endtime="20201030 15:54:54.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.461" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.459" endtime="20201030 15:54:54.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.462" endtime="20201030 15:54:54.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.423" endtime="20201030 15:54:54.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.421" endtime="20201030 15:54:54.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.471" endtime="20201030 15:54:54.759"></status>
</kw>
<msg timestamp="20201030 15:54:54.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01894925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:54.469" endtime="20201030 15:54:54.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01894925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:54.763" endtime="20201030 15:54:54.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.771" endtime="20201030 15:54:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.467" endtime="20201030 15:54:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.465" endtime="20201030 15:54:54.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:54.777" level="INFO">${PHILIP_RES} = [{'diff': 0.0002352640000000024}, {'diff': 0.00023529099999999858}, {'diff': 0.00023529100000000205}, {'diff': 0.00023531899999999772}, {'diff': 0.00023530499999999815}, {'diff': 0.0002353609999999999...</msg>
<status status="PASS" starttime="20201030 15:54:54.774" endtime="20201030 15:54:54.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:54.782" level="INFO">${RESULT} = {'diff': [0.0002352640000000024, 0.00023529099999999858, 0.00023529100000000205, 0.00023531899999999772, 0.00023530499999999815, 0.0002353609999999999, 0.0002353329999999973, 0.00023529200000000153, 0...</msg>
<status status="PASS" starttime="20201030 15:54:54.778" endtime="20201030 15:54:54.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.787" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:54.786" endtime="20201030 15:54:54.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.789" level="INFO">VALUE: [0.0002352640000000024, 0.00023529099999999858, 0.00023529100000000205, 0.00023531899999999772, 0.00023530499999999815, 0.0002353609999999999, 0.0002353329999999973, 0.00023529200000000153, 0.00023529199999999806, 0.0002353060000000011, 0.00023529199999999806, 0.00023523599999999978, 0.0002353060000000011, 0.00023530599999999763, 0.00023530500000000162, 0.00023530499999999815, 0.00023533300000000076, 0.00023533300000000076, 0.00023526299999999944, 0.0002352640000000024, 0.00023530599999999763, 0.00023532000000000067, 0.00023524999999999935, 0.0002353609999999999, 0.0002353060000000011, 0.00023529199999999806, 0.00023529200000000153, 0.00023530500000000162, 0.00023526399999999892, 0.00023530499999999815, 0.0002353050000000051, 0.00023527699999999901, 0.00023529099999999858, 0.00023533300000000423, 0.00023530600000000457, 0.00023529199999999806, 0.00023530599999999763, 0.000235292000000005, 0.00023529199999999806, 0.00023530599999999763, 0.00023529199999999806, 0.00023530499999999815, 0.00023526399999999892, 0.00023529099999999858, 0.00023531900000000466, 0.00023530499999999815, 0.00023530499999999815, 0.00023531900000000466, 0.00023529199999999806, 0.0002352779999999985]</msg>
<status status="PASS" starttime="20201030 15:54:54.788" endtime="20201030 15:54:54.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.783" endtime="20201030 15:54:54.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:54.794" endtime="20201030 15:54:54.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.792" endtime="20201030 15:54:54.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.791" endtime="20201030 15:54:54.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.419" endtime="20201030 15:54:54.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.419" endtime="20201030 15:54:54.815"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.823" endtime="20201030 15:54:54.855"></status>
</kw>
<msg timestamp="20201030 15:54:54.855" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.821" endtime="20201030 15:54:54.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:54.858" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:54.856" endtime="20201030 15:54:54.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.859" endtime="20201030 15:54:54.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.819" endtime="20201030 15:54:54.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.817" endtime="20201030 15:54:54.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:54.868" endtime="20201030 15:54:55.155"></status>
</kw>
<msg timestamp="20201030 15:54:55.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:54.866" endtime="20201030 15:54:55.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018632667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018881472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.159" endtime="20201030 15:54:55.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.167" endtime="20201030 15:54:55.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.864" endtime="20201030 15:54:55.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.862" endtime="20201030 15:54:55.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.179" level="INFO">${PHILIP_RES} = [{'diff': 0.00024880500000000125}, {'diff': 0.0002488609999999995}, {'diff': 0.000248861999999999}, {'diff': 0.0002489160000000018}, {'diff': 0.00024881899999999735}, {'diff': 0.0002488609999999995}, ...</msg>
<status status="PASS" starttime="20201030 15:54:55.172" endtime="20201030 15:54:55.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.188" level="INFO">${RESULT} = {'diff': [0.00024880500000000125, 0.0002488609999999995, 0.000248861999999999, 0.0002489160000000018, 0.00024881899999999735, 0.0002488609999999995, 0.00024893100000000085, 0.00024879200000000115, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:55.181" endtime="20201030 15:54:55.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.196" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.194" endtime="20201030 15:54:55.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.201" level="INFO">VALUE: [0.00024880500000000125, 0.0002488609999999995, 0.000248861999999999, 0.0002489160000000018, 0.00024881899999999735, 0.0002488609999999995, 0.00024893100000000085, 0.00024879200000000115, 0.00024879200000000115, 0.00024879200000000115, 0.0002489169999999978, 0.000248861000000003, 0.000248861000000003, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.0002488609999999995, 0.000248861000000003, 0.0002488609999999995, 0.0002488609999999995, 0.0002489170000000013, 0.00024883399999999986, 0.00024884699999999996, 0.0002488609999999995, 0.000248861000000003, 0.00024884799999999943, 0.0002489160000000018, 0.00024887500000000257, 0.0002488469999999965, 0.00024886200000000247, 0.00024886099999999606, 0.000248861000000003, 0.0002488469999999965, 0.000248861000000003, 0.0002488480000000029, 0.00024887500000000257, 0.000248861000000003, 0.0002488469999999965, 0.00024887500000000257, 0.00024886099999999606, 0.000248861000000003, 0.00024887500000000257, 0.00024886099999999606, 0.00024887500000000257, 0.00024886099999999606, 0.0002488470000000034, 0.0002489450000000004, 0.00024886200000000247, 0.0002488470000000034, 0.0002487779999999981]</msg>
<status status="PASS" starttime="20201030 15:54:55.199" endtime="20201030 15:54:55.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.189" endtime="20201030 15:54:55.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.212" endtime="20201030 15:54:55.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.209" endtime="20201030 15:54:55.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.206" endtime="20201030 15:54:55.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.816" endtime="20201030 15:54:55.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:54.815" endtime="20201030 15:54:55.237"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.254" endtime="20201030 15:54:55.290"></status>
</kw>
<msg timestamp="20201030 15:54:55.291" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.251" endtime="20201030 15:54:55.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.293" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.292" endtime="20201030 15:54:55.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.294" endtime="20201030 15:54:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.245" endtime="20201030 15:54:55.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.241" endtime="20201030 15:54:55.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.303" endtime="20201030 15:54:55.588"></status>
</kw>
<msg timestamp="20201030 15:54:55.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034346847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034609514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.302" endtime="20201030 15:54:55.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034346847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034609514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.592" endtime="20201030 15:54:55.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.600" endtime="20201030 15:54:55.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.299" endtime="20201030 15:54:55.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.297" endtime="20201030 15:54:55.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:55.606" level="INFO">${PHILIP_RES} = [{'diff': 0.00026266700000000115}, {'diff': 0.0002627499999999991}, {'diff': 0.000262736999999999}, {'diff': 0.0002627359999999995}, {'diff': 0.00026268000000000125}, {'diff': 0.00026272199999999996},...</msg>
<status status="PASS" starttime="20201030 15:54:55.603" endtime="20201030 15:54:55.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:55.610" level="INFO">${RESULT} = {'diff': [0.00026266700000000115, 0.0002627499999999991, 0.000262736999999999, 0.0002627359999999995, 0.00026268000000000125, 0.00026272199999999996, 0.0002628060000000043, 0.0002627499999999991, 0.00...</msg>
<status status="PASS" starttime="20201030 15:54:55.607" endtime="20201030 15:54:55.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.615" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:55.614" endtime="20201030 15:54:55.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.617" level="INFO">VALUE: [0.00026266700000000115, 0.0002627499999999991, 0.000262736999999999, 0.0002627359999999995, 0.00026268000000000125, 0.00026272199999999996, 0.0002628060000000043, 0.0002627499999999991, 0.0002627499999999991, 0.0002627359999999995, 0.00026273700000000594, 0.0002627359999999995, 0.00026276399999999867, 0.00026272199999999996, 0.00026275000000000603, 0.0002627499999999991, 0.00026272199999999996, 0.0002628049999999979, 0.00026275000000000603, 0.0002627359999999995, 0.0002627359999999995, 0.0002627499999999991, 0.0002626810000000007, 0.0002627640000000056, 0.0002627359999999995, 0.0002627499999999991, 0.0002627499999999991, 0.0002627359999999995, 0.00026272199999999996, 0.0002627080000000004, 0.0002627499999999991, 0.00026275000000000603, 0.0002627499999999991, 0.0002627359999999995, 0.0002627499999999991, 0.0002627359999999995, 0.00026272199999999996, 0.0002627080000000004, 0.0002627359999999995, 0.0002627499999999991, 0.0002627499999999991, 0.0002627080000000004, 0.00026268000000000125, 0.00026276399999999867, 0.0002627359999999995, 0.00026276399999999867, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995, 0.0002627359999999995]</msg>
<status status="PASS" starttime="20201030 15:54:55.616" endtime="20201030 15:54:55.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.611" endtime="20201030 15:54:55.621"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:55.625" endtime="20201030 15:54:55.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.624" endtime="20201030 15:54:55.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.622" endtime="20201030 15:54:55.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.238" endtime="20201030 15:54:55.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.237" endtime="20201030 15:54:55.646"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.654" endtime="20201030 15:54:55.688"></status>
</kw>
<msg timestamp="20201030 15:54:55.688" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.652" endtime="20201030 15:54:55.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:55.691" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:55.689" endtime="20201030 15:54:55.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.692" endtime="20201030 15:54:55.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.650" endtime="20201030 15:54:55.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.648" endtime="20201030 15:54:55.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:55.701" endtime="20201030 15:54:55.991"></status>
</kw>
<msg timestamp="20201030 15:54:55.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:55.699" endtime="20201030 15:54:55.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018605667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018882569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.000" endtime="20201030 15:54:56.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.018" endtime="20201030 15:54:56.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.697" endtime="20201030 15:54:56.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.695" endtime="20201030 15:54:56.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.031" level="INFO">${PHILIP_RES} = [{'diff': 0.000276901999999999}, {'diff': 0.0002769310000000011}, {'diff': 0.0002769170000000015}, {'diff': 0.0002769309999999976}, {'diff': 0.00027695800000000076}, {'diff': 0.00027691699999999805}, ...</msg>
<status status="PASS" starttime="20201030 15:54:56.025" endtime="20201030 15:54:56.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.041" level="INFO">${RESULT} = {'diff': [0.000276901999999999, 0.0002769310000000011, 0.0002769170000000015, 0.0002769309999999976, 0.00027695800000000076, 0.00027691699999999805, 0.00027691699999999805, 0.00027687499999999934, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:56.033" endtime="20201030 15:54:56.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.050" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.048" endtime="20201030 15:54:56.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.055" level="INFO">VALUE: [0.000276901999999999, 0.0002769310000000011, 0.0002769170000000015, 0.0002769309999999976, 0.00027695800000000076, 0.00027691699999999805, 0.00027691699999999805, 0.00027687499999999934, 0.0002769309999999976, 0.0002769310000000011, 0.0002769310000000011, 0.0002769440000000012, 0.0002769310000000011, 0.0002769309999999976, 0.00027691699999999805, 0.0002769170000000015, 0.0002769309999999976, 0.00027690300000000195, 0.0002769309999999976, 0.00027694500000000066, 0.00027694500000000066, 0.0002769859999999999, 0.0002769310000000011, 0.0002769310000000011, 0.0002769310000000011, 0.0002768609999999963, 0.00027694500000000066, 0.0002769170000000015, 0.0002769579999999938, 0.0002769310000000011, 0.0002769310000000011, 0.00027694500000000066, 0.00027693099999999415, 0.00027695900000000023, 0.00027694500000000066, 0.0002769169999999946, 0.0002769310000000011, 0.0002768890000000024, 0.0002769169999999946, 0.0002769170000000015, 0.00027694500000000066, 0.00027694500000000066, 0.00027694500000000066, 0.0002769310000000011, 0.0002769170000000015, 0.00027694500000000066, 0.0002769310000000011, 0.0002769310000000011, 0.0002769169999999946, 0.0002769170000000015]</msg>
<status status="PASS" starttime="20201030 15:54:56.053" endtime="20201030 15:54:56.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.043" endtime="20201030 15:54:56.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.066" endtime="20201030 15:54:56.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.063" endtime="20201030 15:54:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.060" endtime="20201030 15:54:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.647" endtime="20201030 15:54:56.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:55.646" endtime="20201030 15:54:56.087"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.096" endtime="20201030 15:54:56.131"></status>
</kw>
<msg timestamp="20201030 15:54:56.132" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.094" endtime="20201030 15:54:56.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.134" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.133" endtime="20201030 15:54:56.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.136" endtime="20201030 15:54:56.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.092" endtime="20201030 15:54:56.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.090" endtime="20201030 15:54:56.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.145" endtime="20201030 15:54:56.432"></status>
</kw>
<msg timestamp="20201030 15:54:56.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.143" endtime="20201030 15:54:56.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018937375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.436" endtime="20201030 15:54:56.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.443" endtime="20201030 15:54:56.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.140" endtime="20201030 15:54:56.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.139" endtime="20201030 15:54:56.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.450" level="INFO">${PHILIP_RES} = [{'diff': 0.0002914169999999987}, {'diff': 0.00029143099999999825}, {'diff': 0.0002914299999999988}, {'diff': 0.0002914299999999988}, {'diff': 0.0002914860000000005}, {'diff': 0.00029141700000000215},...</msg>
<status status="PASS" starttime="20201030 15:54:56.447" endtime="20201030 15:54:56.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.454" level="INFO">${RESULT} = {'diff': [0.0002914169999999987, 0.00029143099999999825, 0.0002914299999999988, 0.0002914299999999988, 0.0002914860000000005, 0.00029141700000000215, 0.00029143000000000224, 0.0002914310000000017, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:56.451" endtime="20201030 15:54:56.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.458" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.457" endtime="20201030 15:54:56.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.461" level="INFO">VALUE: [0.0002914169999999987, 0.00029143099999999825, 0.0002914299999999988, 0.0002914299999999988, 0.0002914860000000005, 0.00029141700000000215, 0.00029143000000000224, 0.0002914310000000017, 0.00029143000000000224, 0.00029143099999999825, 0.0002914449999999978, 0.0002914719999999975, 0.0002914169999999987, 0.00029143099999999825, 0.00029147200000000095, 0.00029141700000000215, 0.00029141700000000215, 0.0002914299999999988, 0.00029145900000000086, 0.0002914169999999987, 0.0002914719999999975, 0.00029143099999999825, 0.00029143099999999825, 0.0002914299999999953, 0.0002914169999999952, 0.00029145799999999444, 0.0002914439999999949, 0.0002914450000000013, 0.00029141700000000215, 0.0002914440000000018, 0.0002914310000000017, 0.0002914440000000018, 0.0002914160000000027, 0.0002914310000000017, 0.0002914160000000027, 0.0002914030000000026, 0.0002914310000000017, 0.00029143000000000224, 0.0002914310000000017, 0.0002914450000000013, 0.0002914160000000027, 0.00029140299999999564, 0.0002914169999999952, 0.00029138899999999607, 0.0002914169999999952, 0.0002914439999999949, 0.0002914439999999949, 0.0002914450000000013, 0.0002914030000000026, 0.0002914160000000027]</msg>
<status status="PASS" starttime="20201030 15:54:56.459" endtime="20201030 15:54:56.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.455" endtime="20201030 15:54:56.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.466" endtime="20201030 15:54:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.464" endtime="20201030 15:54:56.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.463" endtime="20201030 15:54:56.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.088" endtime="20201030 15:54:56.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.088" endtime="20201030 15:54:56.486"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.495" endtime="20201030 15:54:56.532"></status>
</kw>
<msg timestamp="20201030 15:54:56.533" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.493" endtime="20201030 15:54:56.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.535" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.534" endtime="20201030 15:54:56.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.536" endtime="20201030 15:54:56.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.490" endtime="20201030 15:54:56.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.488" endtime="20201030 15:54:56.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.545" endtime="20201030 15:54:56.843"></status>
</kw>
<msg timestamp="20201030 15:54:56.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.544" endtime="20201030 15:54:56.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019554375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019860569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.851" endtime="20201030 15:54:56.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.869" endtime="20201030 15:54:56.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.541" endtime="20201030 15:54:56.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.539" endtime="20201030 15:54:56.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:56.883" level="INFO">${PHILIP_RES} = [{'diff': 0.0003061940000000027}, {'diff': 0.0003062360000000014}, {'diff': 0.00030625000000000097}, {'diff': 0.00030625000000000097}, {'diff': 0.00030625000000000097}, {'diff': 0.0003062360000000014}...</msg>
<status status="PASS" starttime="20201030 15:54:56.876" endtime="20201030 15:54:56.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:56.891" level="INFO">${RESULT} = {'diff': [0.0003061940000000027, 0.0003062360000000014, 0.00030625000000000097, 0.00030625000000000097, 0.00030625000000000097, 0.0003062360000000014, 0.0003062220000000018, 0.00030625000000000097, 0....</msg>
<status status="PASS" starttime="20201030 15:54:56.885" endtime="20201030 15:54:56.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.897" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:56.896" endtime="20201030 15:54:56.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.900" level="INFO">VALUE: [0.0003061940000000027, 0.0003062360000000014, 0.00030625000000000097, 0.00030625000000000097, 0.00030625000000000097, 0.0003062360000000014, 0.0003062220000000018, 0.00030625000000000097, 0.00030625000000000097, 0.00030625000000000097, 0.0003062359999999979, 0.0003062360000000014, 0.00030630599999999925, 0.00030626400000000054, 0.0003062230000000013, 0.0003062220000000018, 0.00030625000000000097, 0.0003062079999999988, 0.00030625000000000097, 0.00030626300000000106, 0.0003062360000000014, 0.0003062360000000014, 0.0003062220000000018, 0.00030625000000000097, 0.00030625000000000097, 0.0003062220000000018, 0.0003062360000000014, 0.00030630499999999977, 0.00030625000000000097, 0.00030625000000000097, 0.0003062220000000018, 0.0003062360000000014, 0.0003062360000000014, 0.0003062360000000014, 0.0003062780000000001, 0.0003062360000000014, 0.0003061669999999961, 0.0003062360000000014, 0.00030626400000000054, 0.00030625000000000097, 0.00030625000000000097, 0.0003062360000000014, 0.0003062360000000014, 0.00030625000000000097, 0.00030625000000000097, 0.0003062360000000014, 0.00030625000000000097, 0.0003062910000000002, 0.0003062360000000014, 0.00030623700000000087]</msg>
<status status="PASS" starttime="20201030 15:54:56.898" endtime="20201030 15:54:56.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.893" endtime="20201030 15:54:56.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:56.905" endtime="20201030 15:54:56.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.904" endtime="20201030 15:54:56.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.903" endtime="20201030 15:54:56.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.487" endtime="20201030 15:54:56.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.487" endtime="20201030 15:54:56.926"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.942" endtime="20201030 15:54:56.979"></status>
</kw>
<msg timestamp="20201030 15:54:56.980" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.940" endtime="20201030 15:54:56.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:56.982" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:56.981" endtime="20201030 15:54:56.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.983" endtime="20201030 15:54:56.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.935" endtime="20201030 15:54:56.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.932" endtime="20201030 15:54:56.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:56.992" endtime="20201030 15:54:57.278"></status>
</kw>
<msg timestamp="20201030 15:54:57.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:56.991" endtime="20201030 15:54:57.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026456792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026778125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.282" endtime="20201030 15:54:57.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.290" endtime="20201030 15:54:57.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.988" endtime="20201030 15:54:57.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.987" endtime="20201030 15:54:57.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.296" level="INFO">${PHILIP_RES} = [{'diff': 0.00032133300000000004}, {'diff': 0.0003213609999999992}, {'diff': 0.00032136100000000264}, {'diff': 0.0003213609999999992}, {'diff': 0.0003213890000000018}, {'diff': 0.0003213750000000022},...</msg>
<status status="PASS" starttime="20201030 15:54:57.293" endtime="20201030 15:54:57.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.301" level="INFO">${RESULT} = {'diff': [0.00032133300000000004, 0.0003213609999999992, 0.00032136100000000264, 0.0003213609999999992, 0.0003213890000000018, 0.0003213750000000022, 0.0003213609999999992, 0.0003213609999999992, 0.00...</msg>
<status status="PASS" starttime="20201030 15:54:57.297" endtime="20201030 15:54:57.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.305" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.304" endtime="20201030 15:54:57.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.308" level="INFO">VALUE: [0.00032133300000000004, 0.0003213609999999992, 0.00032136100000000264, 0.0003213609999999992, 0.0003213890000000018, 0.0003213750000000022, 0.0003213609999999992, 0.0003213609999999992, 0.00032138799999999884, 0.0003213750000000057, 0.00032138900000000525, 0.0003212920000000008, 0.00032137499999999875, 0.0003213889999999983, 0.00032137499999999875, 0.0003213750000000057, 0.00032138900000000525, 0.00032136199999999865, 0.00032137499999999875, 0.00032137499999999875, 0.0003213469999999996, 0.00032137499999999875, 0.0003213750000000057, 0.0003213469999999996, 0.0003214019999999984, 0.0003213609999999992, 0.00032137499999999875, 0.00032137499999999875, 0.00032138900000000525, 0.00032137499999999875, 0.0003213889999999983, 0.00032137499999999875, 0.00032137499999999875, 0.00032138900000000525, 0.0003214030000000048, 0.00032137499999999875, 0.0003213889999999983, 0.00032137499999999875, 0.00032137499999999875, 0.00032137499999999875, 0.0003213609999999992, 0.00032137499999999875, 0.00032137499999999875, 0.0003213609999999992, 0.00032137499999999875, 0.00032133300000000004, 0.0003213750000000057, 0.00032137499999999875, 0.00032137499999999875, 0.0003213889999999983]</msg>
<status status="PASS" starttime="20201030 15:54:57.306" endtime="20201030 15:54:57.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.302" endtime="20201030 15:54:57.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.313" endtime="20201030 15:54:57.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.311" endtime="20201030 15:54:57.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.310" endtime="20201030 15:54:57.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.928" endtime="20201030 15:54:57.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:56.927" endtime="20201030 15:54:57.334"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.342" endtime="20201030 15:54:57.381"></status>
</kw>
<msg timestamp="20201030 15:54:57.381" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.340" endtime="20201030 15:54:57.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.384" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.382" endtime="20201030 15:54:57.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.385" endtime="20201030 15:54:57.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.338" endtime="20201030 15:54:57.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.336" endtime="20201030 15:54:57.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.394" endtime="20201030 15:54:57.701"></status>
</kw>
<msg timestamp="20201030 15:54:57.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018888486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01922525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:57.392" endtime="20201030 15:54:57.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018888486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01922525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:57.707" endtime="20201030 15:54:57.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.715" endtime="20201030 15:54:57.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.390" endtime="20201030 15:54:57.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.388" endtime="20201030 15:54:57.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:57.721" level="INFO">${PHILIP_RES} = [{'diff': 0.0003367639999999998}, {'diff': 0.00033680499999999905}, {'diff': 0.00033679199999999895}, {'diff': 0.00033683400000000113}, {'diff': 0.0003367640000000033}, {'diff': 0.000336806000000002},...</msg>
<status status="PASS" starttime="20201030 15:54:57.718" endtime="20201030 15:54:57.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:57.725" level="INFO">${RESULT} = {'diff': [0.0003367639999999998, 0.00033680499999999905, 0.00033679199999999895, 0.00033683400000000113, 0.0003367640000000033, 0.000336806000000002, 0.00033684700000000123, 0.0003367920000000024, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:57.722" endtime="20201030 15:54:57.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.730" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:57.729" endtime="20201030 15:54:57.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.732" level="INFO">VALUE: [0.0003367639999999998, 0.00033680499999999905, 0.00033679199999999895, 0.00033683400000000113, 0.0003367640000000033, 0.000336806000000002, 0.00033684700000000123, 0.0003367920000000024, 0.000336806000000002, 0.0003368050000000025, 0.00033682000000000156, 0.0003368189999999986, 0.0003368059999999985, 0.00033680499999999905, 0.00033684699999999776, 0.00033679199999999895, 0.00033680499999999905, 0.0003368199999999981, 0.0003368610000000008, 0.0003368189999999986, 0.0003368190000000021, 0.000336790999999996, 0.0003367920000000024, 0.0003368049999999956, 0.00033683400000000113, 0.00033680599999999505, 0.0003367920000000024, 0.00033680599999999505, 0.00033687500000000037, 0.0003367919999999955, 0.000336806000000002, 0.0003368190000000021, 0.000336806000000002, 0.0003368050000000025, 0.00033672199999999763, 0.0003368050000000025, 0.0003368469999999943, 0.0003367640000000033, 0.0003367919999999955, 0.000336806000000002, 0.000336790999999996, 0.0003368190000000021, 0.00033680599999999505, 0.0003368190000000021, 0.00033680599999999505, 0.0003368050000000025, 0.00033680599999999505, 0.00033679100000000295, 0.00033684700000000123, 0.00033684700000000123]</msg>
<status status="PASS" starttime="20201030 15:54:57.731" endtime="20201030 15:54:57.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.726" endtime="20201030 15:54:57.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:57.737" endtime="20201030 15:54:57.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.736" endtime="20201030 15:54:57.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.734" endtime="20201030 15:54:57.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.334" endtime="20201030 15:54:57.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.334" endtime="20201030 15:54:57.758"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.766" endtime="20201030 15:54:57.807"></status>
</kw>
<msg timestamp="20201030 15:54:57.808" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.765" endtime="20201030 15:54:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:57.810" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:57.809" endtime="20201030 15:54:57.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.811" endtime="20201030 15:54:57.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.762" endtime="20201030 15:54:57.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.760" endtime="20201030 15:54:57.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:57.821" endtime="20201030 15:54:58.106"></status>
</kw>
<msg timestamp="20201030 15:54:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:57.819" endtime="20201030 15:54:58.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020120236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.110" endtime="20201030 15:54:58.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.118" endtime="20201030 15:54:58.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.817" endtime="20201030 15:54:58.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.815" endtime="20201030 15:54:58.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.124" level="INFO">${PHILIP_RES} = [{'diff': 0.0003525139999999982}, {'diff': 0.00035255499999999745}, {'diff': 0.0003525560000000004}, {'diff': 0.0003525560000000004}, {'diff': 0.00035262499999999877}, {'diff': 0.0003525690000000005},...</msg>
<status status="PASS" starttime="20201030 15:54:58.121" endtime="20201030 15:54:58.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.128" level="INFO">${RESULT} = {'diff': [0.0003525139999999982, 0.00035255499999999745, 0.0003525560000000004, 0.0003525560000000004, 0.00035262499999999877, 0.0003525690000000005, 0.000352568999999997, 0.00035256999999999997, 0.00...</msg>
<status status="PASS" starttime="20201030 15:54:58.125" endtime="20201030 15:54:58.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.132" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.131" endtime="20201030 15:54:58.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.135" level="INFO">VALUE: [0.0003525139999999982, 0.00035255499999999745, 0.0003525560000000004, 0.0003525560000000004, 0.00035262499999999877, 0.0003525690000000005, 0.000352568999999997, 0.00035256999999999997, 0.0003526119999999987, 0.00035254100000000135, 0.0003525690000000005, 0.0003525560000000004, 0.00035255599999999693, 0.0003525550000000009, 0.0003525550000000009, 0.0003525690000000005, 0.0003525139999999982, 0.00035254199999999736, 0.00035258300000000353, 0.00035258300000000353, 0.00035258399999999607, 0.0003525699999999965, 0.0003525829999999966, 0.00035255499999999745, 0.0003525279999999978, 0.00035255599999999693, 0.0003525550000000044, 0.00035256900000000396, 0.0003525279999999978, 0.00035249999999999865, 0.00035255599999999693, 0.0003525829999999966, 0.00035255499999999745, 0.00035258399999999607, 0.0003525699999999965, 0.0003525409999999979, 0.00035256900000000396, 0.00035257000000000344, 0.00035255600000000387, 0.00035255600000000387, 0.0003525409999999979, 0.00035255499999999745, 0.0003525699999999965, 0.00035255599999999693, 0.00035255499999999745, 0.000352568999999997, 0.0003525970000000031, 0.00035257000000000344, 0.0003525420000000043, 0.00035256900000000396]</msg>
<status status="PASS" starttime="20201030 15:54:58.133" endtime="20201030 15:54:58.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.129" endtime="20201030 15:54:58.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.140" endtime="20201030 15:54:58.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.139" endtime="20201030 15:54:58.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.138" endtime="20201030 15:54:58.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.759" endtime="20201030 15:54:58.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:57.758" endtime="20201030 15:54:58.161"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.170" endtime="20201030 15:54:58.211"></status>
</kw>
<msg timestamp="20201030 15:54:58.212" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.168" endtime="20201030 15:54:58.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.214" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.213" endtime="20201030 15:54:58.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.215" endtime="20201030 15:54:58.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.166" endtime="20201030 15:54:58.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.164" endtime="20201030 15:54:58.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.224" endtime="20201030 15:54:58.510"></status>
</kw>
<msg timestamp="20201030 15:54:58.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.223" endtime="20201030 15:54:58.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019038639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019407222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.514" endtime="20201030 15:54:58.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.522" endtime="20201030 15:54:58.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.220" endtime="20201030 15:54:58.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.219" endtime="20201030 15:54:58.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.528" level="INFO">${PHILIP_RES} = [{'diff': 0.0003685829999999987}, {'diff': 0.0003686379999999975}, {'diff': 0.00036863900000000047}, {'diff': 0.0003685690000000026}, {'diff': 0.0003686110000000013}, {'diff': 0.00036863900000000047},...</msg>
<status status="PASS" starttime="20201030 15:54:58.525" endtime="20201030 15:54:58.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.533" level="INFO">${RESULT} = {'diff': [0.0003685829999999987, 0.0003686379999999975, 0.00036863900000000047, 0.0003685690000000026, 0.0003686110000000013, 0.00036863900000000047, 0.00036863900000000047, 0.00036859700000000176, 0....</msg>
<status status="PASS" starttime="20201030 15:54:58.529" endtime="20201030 15:54:58.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.537" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.536" endtime="20201030 15:54:58.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.540" level="INFO">VALUE: [0.0003685829999999987, 0.0003686379999999975, 0.00036863900000000047, 0.0003685690000000026, 0.0003686110000000013, 0.00036863900000000047, 0.00036863900000000047, 0.00036859700000000176, 0.0003686249999999974, 0.0003686379999999975, 0.0003686250000000009, 0.0003686250000000009, 0.0003686250000000009, 0.00036861099999999786, 0.0003686250000000009, 0.00036863900000000047, 0.0003686669999999996, 0.0003686120000000008, 0.0003686249999999974, 0.0003686249999999974, 0.000368638999999997, 0.00036861099999999786, 0.00036861099999999786, 0.00036861099999999786, 0.00036862500000000437, 0.00036862500000000437, 0.00036863900000000394, 0.00036861099999999786, 0.0003686519999999971, 0.0003686809999999957, 0.0003686249999999974, 0.0003686530000000035, 0.00036863900000000394, 0.00036862500000000437, 0.0003686249999999974, 0.000368638999999997, 0.0003686519999999971, 0.000368638999999997, 0.0003686249999999974, 0.00036863900000000394, 0.00036862500000000437, 0.00036862500000000437, 0.0003685969999999983, 0.0003686949999999953, 0.00036867999999999623, 0.0003686249999999974, 0.00036862500000000437, 0.00036862500000000437, 0.00036862500000000437, 0.00036861199999999733]</msg>
<status status="PASS" starttime="20201030 15:54:58.538" endtime="20201030 15:54:58.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.534" endtime="20201030 15:54:58.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.551" endtime="20201030 15:54:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.550" endtime="20201030 15:54:58.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.549" endtime="20201030 15:54:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.162" endtime="20201030 15:54:58.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.161" endtime="20201030 15:54:58.572"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.580" endtime="20201030 15:54:58.623"></status>
</kw>
<msg timestamp="20201030 15:54:58.624" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.579" endtime="20201030 15:54:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.626" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.625" endtime="20201030 15:54:58.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.627" endtime="20201030 15:54:58.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.576" endtime="20201030 15:54:58.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.574" endtime="20201030 15:54:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.636" endtime="20201030 15:54:58.923"></status>
</kw>
<msg timestamp="20201030 15:54:58.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018639472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019024417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.635" endtime="20201030 15:54:58.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018639472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019024417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.927" endtime="20201030 15:54:58.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.934" endtime="20201030 15:54:58.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.632" endtime="20201030 15:54:58.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.630" endtime="20201030 15:54:58.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:58.941" level="INFO">${PHILIP_RES} = [{'diff': 0.00038494499999999765}, {'diff': 0.00038498600000000036}, {'diff': 0.0003850139999999995}, {'diff': 0.0003850000000000034}, {'diff': 0.0003849309999999981}, {'diff': 0.00038502799999999907}...</msg>
<status status="PASS" starttime="20201030 15:54:58.938" endtime="20201030 15:54:58.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.945" level="INFO">${RESULT} = {'diff': [0.00038494499999999765, 0.00038498600000000036, 0.0003850139999999995, 0.0003850000000000034, 0.0003849309999999981, 0.00038502799999999907, 0.0003849999999999999, 0.0003849999999999999, 0.0...</msg>
<status status="PASS" starttime="20201030 15:54:58.942" endtime="20201030 15:54:58.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.949" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:58.948" endtime="20201030 15:54:58.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.951" level="INFO">VALUE: [0.00038494499999999765, 0.00038498600000000036, 0.0003850139999999995, 0.0003850000000000034, 0.0003849309999999981, 0.00038502799999999907, 0.0003849999999999999, 0.0003849999999999999, 0.0003850139999999995, 0.0003849999999999999, 0.0003849999999999999, 0.00038498600000000036, 0.0003850139999999995, 0.00038504099999999916, 0.00038502799999999907, 0.00038498600000000036, 0.0003850139999999995, 0.0003849999999999999, 0.00038501400000000296, 0.0003849860000000038, 0.0003850000000000034, 0.0003850000000000034, 0.00038499999999999646, 0.0003850279999999956, 0.00038499999999999646, 0.0003850000000000034, 0.0003850000000000034, 0.00038501400000000296, 0.0003849859999999969, 0.0003849859999999969, 0.00038499999999999646, 0.0003849859999999969, 0.0003849859999999969, 0.00038502800000000253, 0.00038501400000000296, 0.00038499999999999646, 0.00038499999999999646, 0.00038499999999999646, 0.0003850000000000034, 0.00038501400000000296, 0.0003849860000000038, 0.00038501400000000296, 0.0003850420000000021, 0.00038499999999999646, 0.0003850279999999956, 0.0003850000000000034, 0.0003850000000000034, 0.00038506900000000177, 0.0003850420000000021, 0.00038501299999999655]</msg>
<status status="PASS" starttime="20201030 15:54:58.950" endtime="20201030 15:54:58.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.946" endtime="20201030 15:54:58.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.956" endtime="20201030 15:54:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.955" endtime="20201030 15:54:58.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.954" endtime="20201030 15:54:58.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.573" endtime="20201030 15:54:58.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.572" endtime="20201030 15:54:58.977"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.985" endtime="20201030 15:54:59.030"></status>
</kw>
<msg timestamp="20201030 15:54:59.030" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.984" endtime="20201030 15:54:59.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.033" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.031" endtime="20201030 15:54:59.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.034" endtime="20201030 15:54:59.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.981" endtime="20201030 15:54:59.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.979" endtime="20201030 15:54:59.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.043" endtime="20201030 15:54:59.345"></status>
</kw>
<msg timestamp="20201030 15:54:59.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020080833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.041" endtime="20201030 15:54:59.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019679194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020080833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.348" endtime="20201030 15:54:59.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.356" endtime="20201030 15:54:59.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.039" endtime="20201030 15:54:59.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.037" endtime="20201030 15:54:59.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.363" level="INFO">${PHILIP_RES} = [{'diff': 0.0004016389999999988}, {'diff': 0.000401679999999998}, {'diff': 0.0004017090000000001}, {'diff': 0.0004016950000000005}, {'diff': 0.0004016809999999975}, {'diff': 0.000401679999999998}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:59.359" endtime="20201030 15:54:59.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.367" level="INFO">${RESULT} = {'diff': [0.0004016389999999988, 0.000401679999999998, 0.0004017090000000001, 0.0004016950000000005, 0.0004016809999999975, 0.000401679999999998, 0.00040169400000000105, 0.00040165200000000234, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:54:59.364" endtime="20201030 15:54:59.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.371" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.370" endtime="20201030 15:54:59.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.374" level="INFO">VALUE: [0.0004016389999999988, 0.000401679999999998, 0.0004017090000000001, 0.0004016950000000005, 0.0004016809999999975, 0.000401679999999998, 0.00040169400000000105, 0.00040165200000000234, 0.0004016950000000005, 0.0004016950000000005, 0.0004016950000000005, 0.00040169400000000105, 0.00040159700000000007, 0.0004017220000000002, 0.00040168100000000095, 0.0004016950000000005, 0.00040168100000000095, 0.0004016800000000015, 0.0004016660000000019, 0.0004017080000000006, 0.0004016950000000005, 0.00040168100000000095, 0.0004016950000000005, 0.000401776999999999, 0.0004016800000000015, 0.0004016800000000015, 0.0004016530000000018, 0.0004016250000000027, 0.00040163900000000224, 0.00040168100000000095, 0.0004017080000000006, 0.00040169400000000105, 0.00040169400000000105, 0.0004017220000000002, 0.0004017090000000001, 0.00040168100000000095, 0.00040167999999999454, 0.0004016389999999953, 0.0004016939999999941, 0.000401680999999994, 0.0004017090000000001, 0.0004017090000000001, 0.0004016800000000015, 0.0004017220000000002, 0.0004016660000000019, 0.0004016950000000005, 0.0004016950000000005, 0.0004016950000000005, 0.00040169400000000105, 0.0004016800000000015]</msg>
<status status="PASS" starttime="20201030 15:54:59.372" endtime="20201030 15:54:59.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.368" endtime="20201030 15:54:59.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.382" endtime="20201030 15:54:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.380" endtime="20201030 15:54:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.379" endtime="20201030 15:54:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.978" endtime="20201030 15:54:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.977" endtime="20201030 15:54:59.402"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.411" endtime="20201030 15:54:59.456"></status>
</kw>
<msg timestamp="20201030 15:54:59.456" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.409" endtime="20201030 15:54:59.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.459" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.457" endtime="20201030 15:54:59.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.460" endtime="20201030 15:54:59.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.407" endtime="20201030 15:54:59.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.405" endtime="20201030 15:54:59.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.469" endtime="20201030 15:54:59.755"></status>
</kw>
<msg timestamp="20201030 15:54:59.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019049208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.467" endtime="20201030 15:54:59.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019049208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.759" endtime="20201030 15:54:59.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.767" endtime="20201030 15:54:59.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.465" endtime="20201030 15:54:59.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.463" endtime="20201030 15:54:59.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:54:59.773" level="INFO">${PHILIP_RES} = [{'diff': 0.00041866600000000156}, {'diff': 0.00041862499999999886}, {'diff': 0.0004186950000000002}, {'diff': 0.0004186810000000006}, {'diff': 0.00041866700000000104}, {'diff': 0.0004186940000000007}...</msg>
<status status="PASS" starttime="20201030 15:54:59.770" endtime="20201030 15:54:59.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:59.781" level="INFO">${RESULT} = {'diff': [0.00041866600000000156, 0.00041862499999999886, 0.0004186950000000002, 0.0004186810000000006, 0.00041866700000000104, 0.0004186940000000007, 0.0004187359999999994, 0.00041872199999999984, 0....</msg>
<status status="PASS" starttime="20201030 15:54:59.774" endtime="20201030 15:54:59.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.789" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:54:59.787" endtime="20201030 15:54:59.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.794" level="INFO">VALUE: [0.00041866600000000156, 0.00041862499999999886, 0.0004186950000000002, 0.0004186810000000006, 0.00041866700000000104, 0.0004186940000000007, 0.0004187359999999994, 0.00041872199999999984, 0.0004186810000000006, 0.00041872199999999984, 0.0004186940000000007, 0.0004186940000000007, 0.00041862500000000233, 0.0004186950000000002, 0.0004186950000000002, 0.0004187080000000003, 0.00041868000000000113, 0.00041869399999999724, 0.000418764000000002, 0.0004186949999999967, 0.0004186810000000041, 0.0004187079999999968, 0.0004186940000000042, 0.0004187089999999963, 0.00041868099999999714, 0.00041869500000000365, 0.0004187499999999955, 0.0004186670000000045, 0.00041868099999999714, 0.0004186810000000041, 0.0004186659999999981, 0.0004187079999999968, 0.00041863899999999843, 0.0004186949999999967, 0.00041869500000000365, 0.00041863899999999843, 0.00041862499999999886, 0.0004187079999999968, 0.00041866699999999757, 0.00041869500000000365, 0.0004186949999999967, 0.0004186940000000042, 0.00041869399999999724, 0.00041869399999999724, 0.0004186810000000041, 0.0004187219999999964, 0.0004186940000000042, 0.00041867999999999767, 0.0004186940000000042, 0.00041868099999999714]</msg>
<status status="PASS" starttime="20201030 15:54:59.790" endtime="20201030 15:54:59.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.782" endtime="20201030 15:54:59.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:59.803" endtime="20201030 15:54:59.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.799" endtime="20201030 15:54:59.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.797" endtime="20201030 15:54:59.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.403" endtime="20201030 15:54:59.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.403" endtime="20201030 15:54:59.824"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.832" endtime="20201030 15:54:59.879"></status>
</kw>
<msg timestamp="20201030 15:54:59.880" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.831" endtime="20201030 15:54:59.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:59.882" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:59.881" endtime="20201030 15:54:59.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.883" endtime="20201030 15:54:59.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.828" endtime="20201030 15:54:59.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.827" endtime="20201030 15:54:59.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:59.892" endtime="20201030 15:55:00.192"></status>
</kw>
<msg timestamp="20201030 15:55:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018916625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:59.891" endtime="20201030 15:55:00.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018916625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.196" endtime="20201030 15:55:00.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.204" endtime="20201030 15:55:00.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.888" endtime="20201030 15:55:00.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.886" endtime="20201030 15:55:00.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.210" level="INFO">${PHILIP_RES} = [{'diff': 0.0004359859999999993}, {'diff': 0.0004359859999999993}, {'diff': 0.00043601399999999846}, {'diff': 0.0004359859999999993}, {'diff': 0.0004359999999999989}, {'diff': 0.00043606900000000073},...</msg>
<status status="PASS" starttime="20201030 15:55:00.207" endtime="20201030 15:55:00.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.214" level="INFO">${RESULT} = {'diff': [0.0004359859999999993, 0.0004359859999999993, 0.00043601399999999846, 0.0004359859999999993, 0.0004359999999999989, 0.00043606900000000073, 0.0004360410000000016, 0.00043601399999999846, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:00.211" endtime="20201030 15:55:00.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.218" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.217" endtime="20201030 15:55:00.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.221" level="INFO">VALUE: [0.0004359859999999993, 0.0004359859999999993, 0.00043601399999999846, 0.0004359859999999993, 0.0004359999999999989, 0.00043606900000000073, 0.0004360410000000016, 0.00043601399999999846, 0.00043601399999999846, 0.00043601399999999846, 0.00043601399999999846, 0.0004359999999999989, 0.00043605500000000116, 0.00043594399999999714, 0.00043601399999999846, 0.0004359579999999967, 0.00043601399999999846, 0.00043602799999999803, 0.00043597199999999975, 0.0004359999999999989, 0.00043602799999999803, 0.00043601399999999846, 0.00043601399999999846, 0.00043601399999999846, 0.0004360690000000042, 0.0004359590000000066, 0.0004359999999999989, 0.0004359859999999993, 0.0004360270000000055, 0.0004360130000000059, 0.00043598600000000626, 0.0004359999999999989, 0.00043602800000000497, 0.00043600000000000583, 0.00043598600000000626, 0.00043600000000000583, 0.0004360140000000054, 0.0004360140000000054, 0.0004360140000000054, 0.00043602799999999803, 0.00043602800000000497, 0.0004359859999999993, 0.00043601399999999846, 0.00043601399999999846, 0.00043602799999999803, 0.00043601399999999846, 0.00043595899999999965, 0.0004359999999999989, 0.00043601399999999846, 0.0004359999999999989]</msg>
<status status="PASS" starttime="20201030 15:55:00.219" endtime="20201030 15:55:00.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.215" endtime="20201030 15:55:00.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.225" endtime="20201030 15:55:00.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.224" endtime="20201030 15:55:00.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.223" endtime="20201030 15:55:00.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.825" endtime="20201030 15:55:00.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:59.825" endtime="20201030 15:55:00.246"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.254" endtime="20201030 15:55:00.303"></status>
</kw>
<msg timestamp="20201030 15:55:00.304" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.253" endtime="20201030 15:55:00.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.306" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.305" endtime="20201030 15:55:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.307" endtime="20201030 15:55:00.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.250" endtime="20201030 15:55:00.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.248" endtime="20201030 15:55:00.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.316" endtime="20201030 15:55:00.602"></status>
</kw>
<msg timestamp="20201030 15:55:00.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.315" endtime="20201030 15:55:00.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019380583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:00.606" endtime="20201030 15:55:00.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.613" endtime="20201030 15:55:00.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.312" endtime="20201030 15:55:00.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.310" endtime="20201030 15:55:00.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:00.620" level="INFO">${PHILIP_RES} = [{'diff': 0.00045357000000000036}, {'diff': 0.0004536530000000018}, {'diff': 0.00045363899999999874}, {'diff': 0.00045362499999999917}, {'diff': 0.00045362499999999917}, {'diff': 0.0004536389999999987...</msg>
<status status="PASS" starttime="20201030 15:55:00.617" endtime="20201030 15:55:00.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:00.624" level="INFO">${RESULT} = {'diff': [0.00045357000000000036, 0.0004536530000000018, 0.00045363899999999874, 0.00045362499999999917, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000022, 0.00045363899999999874, ...</msg>
<status status="PASS" starttime="20201030 15:55:00.621" endtime="20201030 15:55:00.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.628" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:00.627" endtime="20201030 15:55:00.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.630" level="INFO">VALUE: [0.00045357000000000036, 0.0004536530000000018, 0.00045363899999999874, 0.00045362499999999917, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000022, 0.00045363899999999874, 0.00045363799999999926, 0.0004536390000000022, 0.00045363899999999874, 0.0004536669999999979, 0.00045362500000000264, 0.0004536529999999983, 0.00045363899999999874, 0.00045362499999999917, 0.00045368099999999745, 0.000453679999999998, 0.0004536250000000061, 0.00045362499999999917, 0.00045363899999999874, 0.0004536669999999979, 0.00045362499999999917, 0.00045363899999999874, 0.0004536940000000045, 0.00045362499999999917, 0.00045362499999999917, 0.00045365199999999883, 0.00045363899999999874, 0.00045363899999999874, 0.00045363899999999874, 0.00045362499999999917, 0.0004536529999999983, 0.00045362499999999917, 0.0004536109999999996, 0.0004536810000000044, 0.0004536109999999996, 0.0004537219999999967, 0.0004536669999999979, 0.00045363899999999874, 0.0004536390000000057, 0.00045362499999999917, 0.00045363899999999874, 0.00045363899999999874, 0.00045362499999999917, 0.00045363899999999874, 0.0004536390000000057, 0.0004536670000000048, 0.0004536529999999983, 0.00045365199999999883]</msg>
<status status="PASS" starttime="20201030 15:55:00.629" endtime="20201030 15:55:00.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.625" endtime="20201030 15:55:00.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:00.636" endtime="20201030 15:55:00.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.635" endtime="20201030 15:55:00.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.634" endtime="20201030 15:55:00.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.247" endtime="20201030 15:55:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.246" endtime="20201030 15:55:00.657"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.665" endtime="20201030 15:55:00.714"></status>
</kw>
<msg timestamp="20201030 15:55:00.715" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.663" endtime="20201030 15:55:00.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:00.717" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:00.716" endtime="20201030 15:55:00.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.718" endtime="20201030 15:55:00.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.661" endtime="20201030 15:55:00.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.659" endtime="20201030 15:55:00.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:00.727" endtime="20201030 15:55:01.026"></status>
</kw>
<msg timestamp="20201030 15:55:01.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01851925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018990833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:00.726" endtime="20201030 15:55:01.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01851925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018990833, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:01.030" endtime="20201030 15:55:01.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.038" endtime="20201030 15:55:01.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.723" endtime="20201030 15:55:01.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.721" endtime="20201030 15:55:01.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.044" level="INFO">${PHILIP_RES} = [{'diff': 0.00047158299999999764}, {'diff': 0.0004716249999999998}, {'diff': 0.00047159800000000016}, {'diff': 0.00047155600000000145}, {'diff': 0.0004715840000000006}, {'diff': 0.0004716249999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:01.041" endtime="20201030 15:55:01.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.049" level="INFO">${RESULT} = {'diff': [0.00047158299999999764, 0.0004716249999999998, 0.00047159800000000016, 0.00047155600000000145, 0.0004715840000000006, 0.0004716249999999998, 0.00047156900000000154, 0.000471570000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:01.045" endtime="20201030 15:55:01.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.054" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.053" endtime="20201030 15:55:01.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.056" level="INFO">VALUE: [0.00047158299999999764, 0.0004716249999999998, 0.00047159800000000016, 0.00047155600000000145, 0.0004715840000000006, 0.0004716249999999998, 0.00047156900000000154, 0.000471570000000001, 0.0004715840000000006, 0.0004715830000000011, 0.00047158299999999764, 0.0004715840000000006, 0.000471570000000001, 0.0004715969999999972, 0.00047159800000000016, 0.0004715839999999971, 0.0004715689999999981, 0.0004715689999999981, 0.00047159700000000415, 0.0004715560000000049, 0.0004715689999999981, 0.00047151399999999927, 0.0004715839999999971, 0.00047156999999999755, 0.0004715830000000046, 0.000471569000000005, 0.0004715419999999984, 0.00047158299999999764, 0.0004715549999999985, 0.0004715830000000046, 0.0004715560000000049, 0.0004715689999999981, 0.00047152799999999884, 0.0004715419999999984, 0.00047158299999999764, 0.000471569000000005, 0.0004716250000000033, 0.0004715979999999967, 0.00047158299999999764, 0.0004715689999999981, 0.0004715830000000046, 0.00047158400000000406, 0.0004715689999999981, 0.00047158299999999764, 0.00047156999999999755, 0.00047156999999999755, 0.000471569000000005, 0.000471569000000005, 0.0004715839999999971, 0.00047158299999999764]</msg>
<status status="PASS" starttime="20201030 15:55:01.055" endtime="20201030 15:55:01.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.050" endtime="20201030 15:55:01.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.061" endtime="20201030 15:55:01.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.059" endtime="20201030 15:55:01.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.058" endtime="20201030 15:55:01.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.658" endtime="20201030 15:55:01.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:00.657" endtime="20201030 15:55:01.081"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.090" endtime="20201030 15:55:01.140"></status>
</kw>
<msg timestamp="20201030 15:55:01.141" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.088" endtime="20201030 15:55:01.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.143" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.142" endtime="20201030 15:55:01.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.144" endtime="20201030 15:55:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.086" endtime="20201030 15:55:01.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.084" endtime="20201030 15:55:01.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.153" endtime="20201030 15:55:01.441"></status>
</kw>
<msg timestamp="20201030 15:55:01.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.152" endtime="20201030 15:55:01.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018773333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019263111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.445" endtime="20201030 15:55:01.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.453" endtime="20201030 15:55:01.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.149" endtime="20201030 15:55:01.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.147" endtime="20201030 15:55:01.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.459" level="INFO">${PHILIP_RES} = [{'diff': 0.0004897779999999997}, {'diff': 0.0004898469999999981}, {'diff': 0.000489833999999998}, {'diff': 0.000489818999999999}, {'diff': 0.0004898200000000019}, {'diff': 0.000489818999999999}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:01.456" endtime="20201030 15:55:01.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.463" level="INFO">${RESULT} = {'diff': [0.0004897779999999997, 0.0004898469999999981, 0.000489833999999998, 0.000489818999999999, 0.0004898200000000019, 0.000489818999999999, 0.0004898190000000024, 0.0004898060000000024, 0.0004898...</msg>
<status status="PASS" starttime="20201030 15:55:01.460" endtime="20201030 15:55:01.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.468" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.467" endtime="20201030 15:55:01.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.470" level="INFO">VALUE: [0.0004897779999999997, 0.0004898469999999981, 0.000489833999999998, 0.000489818999999999, 0.0004898200000000019, 0.000489818999999999, 0.0004898190000000024, 0.0004898060000000024, 0.0004898610000000012, 0.0004897500000000006, 0.0004898750000000007, 0.0004898329999999985, 0.0004898199999999985, 0.0004898329999999985, 0.000489833000000002, 0.0004898200000000019, 0.0004898060000000024, 0.000489833000000002, 0.0004898200000000019, 0.0004899029999999999, 0.0004898470000000016, 0.0004898340000000015, 0.000489833000000002, 0.0004897780000000032, 0.000489833000000002, 0.0004898610000000012, 0.0004898480000000011, 0.0004898190000000024, 0.000489833000000002, 0.0004898340000000015, 0.0004898190000000024, 0.0004898750000000007, 0.0004897779999999963, 0.0004898190000000024, 0.0004898340000000015, 0.000489833000000002, 0.0004898190000000024, 0.0004898200000000019, 0.0004899029999999999, 0.0004897779999999963, 0.000489819999999995, 0.0004898189999999955, 0.000489819999999995, 0.0004898189999999955, 0.0004898329999999951, 0.000489819999999995, 0.0004898189999999955, 0.0004898610000000012, 0.0004898480000000011, 0.0004897910000000033]</msg>
<status status="PASS" starttime="20201030 15:55:01.469" endtime="20201030 15:55:01.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.464" endtime="20201030 15:55:01.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.475" endtime="20201030 15:55:01.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.473" endtime="20201030 15:55:01.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.472" endtime="20201030 15:55:01.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.082" endtime="20201030 15:55:01.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.082" endtime="20201030 15:55:01.496"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.504" endtime="20201030 15:55:01.557"></status>
</kw>
<msg timestamp="20201030 15:55:01.558" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.502" endtime="20201030 15:55:01.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.563" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.560" endtime="20201030 15:55:01.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.565" endtime="20201030 15:55:01.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.500" endtime="20201030 15:55:01.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.498" endtime="20201030 15:55:01.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.584" endtime="20201030 15:55:01.876"></status>
</kw>
<msg timestamp="20201030 15:55:01.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.581" endtime="20201030 15:55:01.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019403333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019911708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:01.880" endtime="20201030 15:55:01.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.888" endtime="20201030 15:55:01.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.575" endtime="20201030 15:55:01.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.572" endtime="20201030 15:55:01.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:01.895" level="INFO">${PHILIP_RES} = [{'diff': 0.0005083750000000019}, {'diff': 0.0005083749999999984}, {'diff': 0.0005083890000000015}, {'diff': 0.000508388999999998}, {'diff': 0.000508388999999998}, {'diff': 0.0005083890000000015}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:01.892" endtime="20201030 15:55:01.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:01.899" level="INFO">${RESULT} = {'diff': [0.0005083750000000019, 0.0005083749999999984, 0.0005083890000000015, 0.000508388999999998, 0.000508388999999998, 0.0005083890000000015, 0.0005084159999999976, 0.000508403000000001, 0.0005083...</msg>
<status status="PASS" starttime="20201030 15:55:01.896" endtime="20201030 15:55:01.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.904" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:01.903" endtime="20201030 15:55:01.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.906" level="INFO">VALUE: [0.0005083750000000019, 0.0005083749999999984, 0.0005083890000000015, 0.000508388999999998, 0.000508388999999998, 0.0005083890000000015, 0.0005084159999999976, 0.000508403000000001, 0.0005083890000000015, 0.000508403000000001, 0.0005084170000000006, 0.0005083749999999984, 0.000508403000000001, 0.0005083890000000015, 0.0005084029999999976, 0.000508388999999998, 0.0005084029999999976, 0.0005083749999999984, 0.000508388999999998, 0.0005083609999999988, 0.0005083890000000049, 0.0005084029999999976, 0.0005083750000000054, 0.0005083879999999985, 0.0005084170000000041, 0.0005083749999999984, 0.0005084029999999976, 0.0005083749999999984, 0.0005084029999999976, 0.000508402000000005, 0.0005083749999999984, 0.000508402000000005, 0.0005083609999999988, 0.0005083890000000049, 0.0005084169999999971, 0.0005084019999999981, 0.0005084030000000045, 0.000508388999999998, 0.0005083890000000049, 0.0005084159999999976, 0.0005083750000000054, 0.0005084029999999976, 0.0005083890000000049, 0.0005084029999999976, 0.000508388999999998, 0.0005083479999999987, 0.0005084029999999976, 0.0005083890000000049, 0.0005083750000000054, 0.0005084029999999906]</msg>
<status status="PASS" starttime="20201030 15:55:01.905" endtime="20201030 15:55:01.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.900" endtime="20201030 15:55:01.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:01.912" endtime="20201030 15:55:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.911" endtime="20201030 15:55:01.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.910" endtime="20201030 15:55:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.496" endtime="20201030 15:55:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.496" endtime="20201030 15:55:01.933"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.942" endtime="20201030 15:55:01.995"></status>
</kw>
<msg timestamp="20201030 15:55:01.996" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.940" endtime="20201030 15:55:01.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.998" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.997" endtime="20201030 15:55:01.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.999" endtime="20201030 15:55:02.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.938" endtime="20201030 15:55:02.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.936" endtime="20201030 15:55:02.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.009" endtime="20201030 15:55:02.295"></status>
</kw>
<msg timestamp="20201030 15:55:02.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019208389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.007" endtime="20201030 15:55:02.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019208389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019735625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.299" endtime="20201030 15:55:02.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.307" endtime="20201030 15:55:02.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.005" endtime="20201030 15:55:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.003" endtime="20201030 15:55:02.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.313" level="INFO">${PHILIP_RES} = [{'diff': 0.0005272360000000004}, {'diff': 0.0005272639999999995}, {'diff': 0.0005272769999999996}, {'diff': 0.0005272639999999995}, {'diff': 0.0005272639999999995}, {'diff': 0.0005272499999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:55:02.310" endtime="20201030 15:55:02.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.318" level="INFO">${RESULT} = {'diff': [0.0005272360000000004, 0.0005272639999999995, 0.0005272769999999996, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.0005272780000000026, 0.0005272779999999991, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:55:02.314" endtime="20201030 15:55:02.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.323" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.322" endtime="20201030 15:55:02.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.325" level="INFO">VALUE: [0.0005272360000000004, 0.0005272639999999995, 0.0005272769999999996, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.0005272780000000026, 0.0005272779999999991, 0.0005272779999999991, 0.0005272769999999996, 0.0005272639999999995, 0.0005272639999999995, 0.0005272780000000026, 0.0005272080000000012, 0.0005272639999999995, 0.0005272499999999999, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.0005272499999999999, 0.0005273480000000039, 0.0005272639999999995, 0.0005272360000000004, 0.000527278000000006, 0.0005272640000000064, 0.0005272639999999995, 0.0005272639999999995, 0.0005272639999999995, 0.0005273059999999982, 0.0005272639999999995, 0.0005272499999999999, 0.0005272639999999995, 0.0005272639999999995, 0.0005272499999999999, 0.0005272360000000004, 0.0005273199999999978, 0.0005272499999999999, 0.0005272499999999999, 0.0005272639999999995, 0.0005272359999999934, 0.000527278000000006, 0.0005272499999999999, 0.0005272499999999999, 0.0005272639999999995, 0.0005272639999999995, 0.0005272220000000008, 0.0005272779999999991, 0.000527249999999993, 0.0005272910000000131, 0.000527263]</msg>
<status status="PASS" starttime="20201030 15:55:02.324" endtime="20201030 15:55:02.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.319" endtime="20201030 15:55:02.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.330" endtime="20201030 15:55:02.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.329" endtime="20201030 15:55:02.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.328" endtime="20201030 15:55:02.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.934" endtime="20201030 15:55:02.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.934" endtime="20201030 15:55:02.355"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.373" endtime="20201030 15:55:02.431"></status>
</kw>
<msg timestamp="20201030 15:55:02.432" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.370" endtime="20201030 15:55:02.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.438" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.435" endtime="20201030 15:55:02.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.440" endtime="20201030 15:55:02.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.364" endtime="20201030 15:55:02.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.360" endtime="20201030 15:55:02.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.457" endtime="20201030 15:55:02.745"></status>
</kw>
<msg timestamp="20201030 15:55:02.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034246972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034793319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.456" endtime="20201030 15:55:02.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034246972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034793319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.749" endtime="20201030 15:55:02.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.757" endtime="20201030 15:55:02.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.451" endtime="20201030 15:55:02.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.447" endtime="20201030 15:55:02.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:02.763" level="INFO">${PHILIP_RES} = [{'diff': 0.0005463470000000026}, {'diff': 0.0005464590000000061}, {'diff': 0.0005464719999999992}, {'diff': 0.0005464719999999992}, {'diff': 0.0005464589999999991}, {'diff': 0.0005465279999999975}, {...</msg>
<status status="PASS" starttime="20201030 15:55:02.760" endtime="20201030 15:55:02.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:02.767" level="INFO">${RESULT} = {'diff': [0.0005463470000000026, 0.0005464590000000061, 0.0005464719999999992, 0.0005464719999999992, 0.0005464589999999991, 0.0005465279999999975, 0.0005464579999999997, 0.0005464579999999997, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:55:02.764" endtime="20201030 15:55:02.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.772" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:02.771" endtime="20201030 15:55:02.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.774" level="INFO">VALUE: [0.0005463470000000026, 0.0005464590000000061, 0.0005464719999999992, 0.0005464719999999992, 0.0005464589999999991, 0.0005465279999999975, 0.0005464579999999997, 0.0005464579999999997, 0.0005464589999999991, 0.0005464719999999992, 0.0005464300000000005, 0.0005464589999999991, 0.0005464719999999992, 0.0005464030000000009, 0.0005464020000000014, 0.0005464449999999996, 0.0005464440000000001, 0.000546431, 0.0005464730000000056, 0.0005464579999999997, 0.0005464720000000062, 0.0005464449999999996, 0.0005464449999999996, 0.0005464579999999997, 0.0005464440000000001, 0.0005464589999999991, 0.0005464719999999992, 0.000546416000000001, 0.0005464450000000065, 0.0005464579999999997, 0.0005464579999999997, 0.000546513999999998, 0.0005464589999999991, 0.0005464719999999923, 0.0005464579999999997, 0.0005464450000000065, 0.0005464589999999991, 0.0005465000000000053, 0.0005464579999999997, 0.0005464450000000065, 0.0005464579999999997, 0.0005464579999999997, 0.0005464589999999991, 0.0005465130000000124, 0.0005464579999999997, 0.0005464589999999991, 0.0005464449999999926, 0.000546444000000007, 0.0005464999999999914, 0.0005464859999999988]</msg>
<status status="PASS" starttime="20201030 15:55:02.773" endtime="20201030 15:55:02.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.768" endtime="20201030 15:55:02.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:02.779" endtime="20201030 15:55:02.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.778" endtime="20201030 15:55:02.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.777" endtime="20201030 15:55:02.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.357" endtime="20201030 15:55:02.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.356" endtime="20201030 15:55:02.800"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.809" endtime="20201030 15:55:02.867"></status>
</kw>
<msg timestamp="20201030 15:55:02.867" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.807" endtime="20201030 15:55:02.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:02.870" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:02.868" endtime="20201030 15:55:02.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.871" endtime="20201030 15:55:02.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.805" endtime="20201030 15:55:02.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.803" endtime="20201030 15:55:02.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:02.880" endtime="20201030 15:55:03.168"></status>
</kw>
<msg timestamp="20201030 15:55:03.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:02.878" endtime="20201030 15:55:03.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.172" endtime="20201030 15:55:03.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.180" endtime="20201030 15:55:03.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.876" endtime="20201030 15:55:03.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.874" endtime="20201030 15:55:03.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.187" level="INFO">${PHILIP_RES} = [{'diff': 0.0005659169999999991}, {'diff': 0.0005659440000000023}, {'diff': 0.0005659579999999984}, {'diff': 0.0005659719999999979}, {'diff': 0.0005659590000000013}, {'diff': 0.0005659309999999987}, {...</msg>
<status status="PASS" starttime="20201030 15:55:03.183" endtime="20201030 15:55:03.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.191" level="INFO">${RESULT} = {'diff': [0.0005659169999999991, 0.0005659440000000023, 0.0005659579999999984, 0.0005659719999999979, 0.0005659590000000013, 0.0005659309999999987, 0.0005659590000000013, 0.0005659580000000018, 0.0005...</msg>
<status status="PASS" starttime="20201030 15:55:03.188" endtime="20201030 15:55:03.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.195" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.194" endtime="20201030 15:55:03.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.198" level="INFO">VALUE: [0.0005659169999999991, 0.0005659440000000023, 0.0005659579999999984, 0.0005659719999999979, 0.0005659590000000013, 0.0005659309999999987, 0.0005659590000000013, 0.0005659580000000018, 0.0005659439999999988, 0.0005660419999999992, 0.0005659719999999979, 0.0005660000000000005, 0.0005659439999999988, 0.0005659579999999984, 0.0005659029999999995, 0.0005659580000000053, 0.0005659450000000052, 0.0005659579999999984, 0.0005659589999999978, 0.0005659729999999974, 0.0005659589999999978, 0.0005659029999999995, 0.0005659589999999978, 0.0005659439999999988, 0.0005659859999999975, 0.0005659719999999979, 0.0005659449999999983, 0.0005659720000000049, 0.0005659300000000062, 0.0005659580000000053, 0.0005659029999999995, 0.0005659719999999979, 0.0005659719999999979, 0.0005659449999999983, 0.0005659729999999974, 0.0005659859999999975, 0.0005659589999999978, 0.0005659719999999979, 0.0005659020000000001, 0.0005659440000000057, 0.0005659580000000053, 0.0005659439999999988, 0.0005659580000000053, 0.0005659169999999991, 0.0005659719999999979, 0.0005659580000000053, 0.0005659580000000053, 0.0005659729999999974, 0.0005659449999999983, 0.0005659449999999983]</msg>
<status status="PASS" starttime="20201030 15:55:03.196" endtime="20201030 15:55:03.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.192" endtime="20201030 15:55:03.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.206" endtime="20201030 15:55:03.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.205" endtime="20201030 15:55:03.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.203" endtime="20201030 15:55:03.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.801" endtime="20201030 15:55:03.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:02.801" endtime="20201030 15:55:03.227"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.236" endtime="20201030 15:55:03.293"></status>
</kw>
<msg timestamp="20201030 15:55:03.293" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.234" endtime="20201030 15:55:03.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.296" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.294" endtime="20201030 15:55:03.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.297" endtime="20201030 15:55:03.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.231" endtime="20201030 15:55:03.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.229" endtime="20201030 15:55:03.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.306" endtime="20201030 15:55:03.591"></status>
</kw>
<msg timestamp="20201030 15:55:03.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019003347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.304" endtime="20201030 15:55:03.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019003347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.595" endtime="20201030 15:55:03.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.603" endtime="20201030 15:55:03.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.302" endtime="20201030 15:55:03.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.300" endtime="20201030 15:55:03.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:03.610" level="INFO">${PHILIP_RES} = [{'diff': 0.0005857220000000003}, {'diff': 0.0005857769999999991}, {'diff': 0.0005857780000000021}, {'diff': 0.000585763999999999}, {'diff': 0.0005858190000000013}, {'diff': 0.0005857920000000016}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:03.607" endtime="20201030 15:55:03.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:03.615" level="INFO">${RESULT} = {'diff': [0.0005857220000000003, 0.0005857769999999991, 0.0005857780000000021, 0.000585763999999999, 0.0005858190000000013, 0.0005857920000000016, 0.0005857920000000016, 0.0005857919999999982, 0.00058...</msg>
<status status="PASS" starttime="20201030 15:55:03.611" endtime="20201030 15:55:03.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.619" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:03.618" endtime="20201030 15:55:03.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.622" level="INFO">VALUE: [0.0005857220000000003, 0.0005857769999999991, 0.0005857780000000021, 0.000585763999999999, 0.0005858190000000013, 0.0005857920000000016, 0.0005857920000000016, 0.0005857919999999982, 0.0005857779999999986, 0.0005857920000000016, 0.0005857779999999986, 0.0005857080000000008, 0.0005857780000000021, 0.0005857770000000026, 0.000585763000000003, 0.0005857629999999961, 0.0005857909999999952, 0.0005857640000000025, 0.0005857640000000025, 0.0005857500000000029, 0.0005857780000000021, 0.0005857780000000021, 0.0005857639999999956, 0.0005858340000000004, 0.0005857780000000021, 0.0005857780000000021, 0.0005857500000000029, 0.0005857770000000026, 0.0005857629999999961, 0.0005857629999999961, 0.0005857780000000021, 0.0005857640000000025, 0.0005857780000000021, 0.0005857640000000025, 0.0005857919999999947, 0.0005856949999999972, 0.0005857920000000016, 0.0005857780000000021, 0.0005857920000000016, 0.0005857639999999956, 0.0005857780000000021, 0.0005857079999999973, 0.0005857629999999961, 0.0005857909999999952, 0.0005857769999999957, 0.0005857910000000022, 0.000585778000000009, 0.0005857640000000025, 0.000585778000000009, 0.0005857779999999951]</msg>
<status status="PASS" starttime="20201030 15:55:03.620" endtime="20201030 15:55:03.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.616" endtime="20201030 15:55:03.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:03.633" endtime="20201030 15:55:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.631" endtime="20201030 15:55:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.630" endtime="20201030 15:55:03.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.228" endtime="20201030 15:55:03.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.227" endtime="20201030 15:55:03.654"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.663" endtime="20201030 15:55:03.722"></status>
</kw>
<msg timestamp="20201030 15:55:03.723" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.661" endtime="20201030 15:55:03.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:03.725" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:03.724" endtime="20201030 15:55:03.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.726" endtime="20201030 15:55:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.658" endtime="20201030 15:55:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.656" endtime="20201030 15:55:03.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:03.736" endtime="20201030 15:55:04.039"></status>
</kw>
<msg timestamp="20201030 15:55:04.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019252431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:03.734" endtime="20201030 15:55:04.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019252431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.043" endtime="20201030 15:55:04.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.051" endtime="20201030 15:55:04.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.731" endtime="20201030 15:55:04.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.730" endtime="20201030 15:55:04.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.058" level="INFO">${PHILIP_RES} = [{'diff': 0.0006058609999999992}, {'diff': 0.0006059019999999984}, {'diff': 0.0006058749999999988}, {'diff': 0.0006059030000000014}, {'diff': 0.0006059160000000015}, {'diff': 0.0006059030000000014}, {...</msg>
<status status="PASS" starttime="20201030 15:55:04.054" endtime="20201030 15:55:04.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.062" level="INFO">${RESULT} = {'diff': [0.0006058609999999992, 0.0006059019999999984, 0.0006058749999999988, 0.0006059030000000014, 0.0006059160000000015, 0.0006059030000000014, 0.0006059029999999979, 0.000605917000000001, 0.00060...</msg>
<status status="PASS" starttime="20201030 15:55:04.059" endtime="20201030 15:55:04.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.066" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.065" endtime="20201030 15:55:04.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.069" level="INFO">VALUE: [0.0006058609999999992, 0.0006059019999999984, 0.0006058749999999988, 0.0006059030000000014, 0.0006059160000000015, 0.0006059030000000014, 0.0006059029999999979, 0.000605917000000001, 0.0006059020000000019, 0.0006059030000000014, 0.0006059030000000014, 0.000605915999999998, 0.0006059169999999975, 0.0006058889999999983, 0.0006059029999999979, 0.000605915999999998, 0.0006059030000000049, 0.0006059029999999979, 0.0006059020000000054, 0.0006059029999999979, 0.0006059169999999975, 0.000605916000000005, 0.0006059029999999979, 0.0006059170000000044, 0.0006059029999999979, 0.0006059019999999984, 0.0006059029999999979, 0.0006058889999999983, 0.0006059169999999975, 0.0006059169999999975, 0.0006059029999999979, 0.0006059020000000054, 0.0006059019999999984, 0.0006058469999999996, 0.0006059029999999979, 0.0006059029999999979, 0.0006059169999999975, 0.0006059029999999979, 0.0006059440000000041, 0.0006059019999999984, 0.0006058890000000053, 0.0006059029999999979, 0.0006059019999999915, 0.0006059590000000031, 0.0006059030000000049, 0.0006058889999999983, 0.000605915999999998, 0.000605902999999991, 0.0006059169999999975, 0.0006059020000000054]</msg>
<status status="PASS" starttime="20201030 15:55:04.067" endtime="20201030 15:55:04.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.063" endtime="20201030 15:55:04.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.074" endtime="20201030 15:55:04.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.072" endtime="20201030 15:55:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.071" endtime="20201030 15:55:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.655" endtime="20201030 15:55:04.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:03.654" endtime="20201030 15:55:04.095"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.103" endtime="20201030 15:55:04.165"></status>
</kw>
<msg timestamp="20201030 15:55:04.166" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.102" endtime="20201030 15:55:04.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.168" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.167" endtime="20201030 15:55:04.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.169" endtime="20201030 15:55:04.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.099" endtime="20201030 15:55:04.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.097" endtime="20201030 15:55:04.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.179" endtime="20201030 15:55:04.464"></status>
</kw>
<msg timestamp="20201030 15:55:04.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.177" endtime="20201030 15:55:04.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019956903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.468" endtime="20201030 15:55:04.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.476" endtime="20201030 15:55:04.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.175" endtime="20201030 15:55:04.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.173" endtime="20201030 15:55:04.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.483" level="INFO">${PHILIP_RES} = [{'diff': 0.0006263329999999998}, {'diff': 0.0006263469999999993}, {'diff': 0.0006263469999999993}, {'diff': 0.0006263329999999998}, {'diff': 0.0006263609999999989}, {'diff': 0.0006263340000000027}, {...</msg>
<status status="PASS" starttime="20201030 15:55:04.480" endtime="20201030 15:55:04.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.487" level="INFO">${RESULT} = {'diff': [0.0006263329999999998, 0.0006263469999999993, 0.0006263469999999993, 0.0006263329999999998, 0.0006263609999999989, 0.0006263340000000027, 0.0006263339999999992, 0.0006263610000000024, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:55:04.484" endtime="20201030 15:55:04.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.491" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.490" endtime="20201030 15:55:04.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.494" level="INFO">VALUE: [0.0006263329999999998, 0.0006263469999999993, 0.0006263469999999993, 0.0006263329999999998, 0.0006263609999999989, 0.0006263340000000027, 0.0006263339999999992, 0.0006263610000000024, 0.0006263190000000002, 0.0006263060000000001, 0.0006263609999999989, 0.0006263469999999993, 0.0006263479999999988, 0.0006263469999999993, 0.0006263329999999998, 0.0006263469999999993, 0.0006263469999999993, 0.0006263190000000002, 0.0006263610000000058, 0.0006263339999999992, 0.0006263469999999993, 0.0006263609999999989, 0.0006263329999999998, 0.0006263329999999998, 0.0006263329999999998, 0.0006263339999999992, 0.0006263479999999988, 0.0006263470000000063, 0.0006263329999999998, 0.0006263329999999998, 0.0006263329999999998, 0.0006263470000000063, 0.0006263619999999984, 0.0006263190000000002, 0.0006263329999999998, 0.0006264310000000037, 0.0006264029999999976, 0.0006263329999999998, 0.0006263060000000001, 0.0006263750000000054, 0.0006263339999999923, 0.0006263469999999993, 0.0006263329999999928, 0.0006263049999999937, 0.0006263330000000067, 0.000626306000000007, 0.0006263469999999993, 0.000626360999999992, 0.0006263330000000067, 0.0006263469999999993]</msg>
<status status="PASS" starttime="20201030 15:55:04.493" endtime="20201030 15:55:04.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.488" endtime="20201030 15:55:04.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.500" endtime="20201030 15:55:04.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.498" endtime="20201030 15:55:04.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.497" endtime="20201030 15:55:04.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.095" endtime="20201030 15:55:04.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.095" endtime="20201030 15:55:04.521"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.529" endtime="20201030 15:55:04.593"></status>
</kw>
<msg timestamp="20201030 15:55:04.594" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.528" endtime="20201030 15:55:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.596" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.595" endtime="20201030 15:55:04.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.597" endtime="20201030 15:55:04.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.525" endtime="20201030 15:55:04.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.523" endtime="20201030 15:55:04.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.607" endtime="20201030 15:55:04.912"></status>
</kw>
<msg timestamp="20201030 15:55:04.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.605" endtime="20201030 15:55:04.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019149903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019796986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:04.916" endtime="20201030 15:55:04.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.924" endtime="20201030 15:55:04.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.602" endtime="20201030 15:55:04.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.601" endtime="20201030 15:55:04.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:04.931" level="INFO">${PHILIP_RES} = [{'diff': 0.0006470829999999997}, {'diff': 0.0006471660000000011}, {'diff': 0.0006471109999999988}, {'diff': 0.0006470970000000027}, {'diff': 0.0006470969999999993}, {'diff': 0.0006471519999999981}, {...</msg>
<status status="PASS" starttime="20201030 15:55:04.928" endtime="20201030 15:55:04.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:04.936" level="INFO">${RESULT} = {'diff': [0.0006470829999999997, 0.0006471660000000011, 0.0006471109999999988, 0.0006470970000000027, 0.0006470969999999993, 0.0006471519999999981, 0.0006471109999999988, 0.0006470839999999992, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:55:04.932" endtime="20201030 15:55:04.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.941" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:04.940" endtime="20201030 15:55:04.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:04.944" level="INFO">VALUE: [0.0006470829999999997, 0.0006471660000000011, 0.0006471109999999988, 0.0006470970000000027, 0.0006470969999999993, 0.0006471519999999981, 0.0006471109999999988, 0.0006470839999999992, 0.0006470829999999997, 0.0006471520000000015, 0.0006470969999999993, 0.0006470969999999958, 0.0006470829999999997, 0.0006470699999999996, 0.0006470969999999993, 0.0006470979999999987, 0.0006470969999999993, 0.0006470979999999987, 0.0006470690000000001, 0.0006470699999999996, 0.0006471109999999988, 0.0006471530000000045, 0.0006471110000000058, 0.0006470980000000057, 0.000647138999999998, 0.0006471529999999975, 0.0006470829999999997, 0.0006470839999999992, 0.0006470829999999997, 0.0006470979999999987, 0.0006470829999999997, 0.0006471249999999984, 0.0006470969999999993, 0.0006470839999999992, 0.0006470970000000062, 0.0006471110000000058, 0.0006471109999999988, 0.0006471109999999988, 0.0006470969999999993, 0.0006470969999999993, 0.0006470830000000066, 0.0006471109999999919, 0.0006470969999999993, 0.0006470969999999993, 0.0006470969999999993, 0.0006471110000000058, 0.0006470829999999927, 0.0006470969999999993, 0.0006470969999999993, 0.0006470690000000001]</msg>
<status status="PASS" starttime="20201030 15:55:04.942" endtime="20201030 15:55:04.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.937" endtime="20201030 15:55:04.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:04.950" endtime="20201030 15:55:04.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.948" endtime="20201030 15:55:04.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.946" endtime="20201030 15:55:04.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.521" endtime="20201030 15:55:04.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.521" endtime="20201030 15:55:04.970"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:04.979" endtime="20201030 15:55:05.043"></status>
</kw>
<msg timestamp="20201030 15:55:05.043" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:04.978" endtime="20201030 15:55:05.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.045" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.044" endtime="20201030 15:55:05.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.047" endtime="20201030 15:55:05.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.975" endtime="20201030 15:55:05.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.973" endtime="20201030 15:55:05.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.056" endtime="20201030 15:55:05.343"></status>
</kw>
<msg timestamp="20201030 15:55:05.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.054" endtime="20201030 15:55:05.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019162556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019830681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:05.348" endtime="20201030 15:55:05.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.355" endtime="20201030 15:55:05.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.052" endtime="20201030 15:55:05.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.050" endtime="20201030 15:55:05.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.362" level="INFO">${PHILIP_RES} = [{'diff': 0.0006681249999999986}, {'diff': 0.0006681799999999974}, {'diff': 0.0006680970000000029}, {'diff': 0.0006681119999999985}, {'diff': 0.0006681810000000003}, {'diff': 0.0006681670000000008}, {...</msg>
<status status="PASS" starttime="20201030 15:55:05.359" endtime="20201030 15:55:05.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.366" level="INFO">${RESULT} = {'diff': [0.0006681249999999986, 0.0006681799999999974, 0.0006680970000000029, 0.0006681119999999985, 0.0006681810000000003, 0.0006681670000000008, 0.0006681520000000017, 0.000668110999999999, 0.00066...</msg>
<status status="PASS" starttime="20201030 15:55:05.363" endtime="20201030 15:55:05.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.371" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.370" endtime="20201030 15:55:05.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.373" level="INFO">VALUE: [0.0006681249999999986, 0.0006681799999999974, 0.0006680970000000029, 0.0006681119999999985, 0.0006681810000000003, 0.0006681670000000008, 0.0006681520000000017, 0.000668110999999999, 0.0006682219999999996, 0.0006681530000000012, 0.0006681810000000003, 0.0006681529999999977, 0.0006681529999999977, 0.0006681529999999977, 0.0006681519999999982, 0.0006681530000000047, 0.0006681670000000042, 0.0006681659999999978, 0.0006681529999999977, 0.0006681669999999973, 0.0006681529999999977, 0.0006681530000000047, 0.0006681940000000039, 0.0006681810000000038, 0.0006681809999999969, 0.0006682219999999961, 0.0006681389999999982, 0.0006681529999999977, 0.0006682080000000035, 0.0006681389999999982, 0.0006681660000000048, 0.0006681529999999977, 0.0006681389999999982, 0.000668193999999997, 0.0006681669999999973, 0.0006681670000000042, 0.0006681660000000048, 0.0006681389999999982, 0.0006681529999999908, 0.0006681389999999982, 0.0006681389999999982, 0.0006681519999999913, 0.0006681669999999973, 0.0006681530000000047, 0.0006681389999999982, 0.0006681669999999973, 0.000668110999999999, 0.0006681669999999973, 0.0006681669999999973, 0.0006681519999999913]</msg>
<status status="PASS" starttime="20201030 15:55:05.372" endtime="20201030 15:55:05.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.367" endtime="20201030 15:55:05.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.378" endtime="20201030 15:55:05.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.377" endtime="20201030 15:55:05.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.376" endtime="20201030 15:55:05.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.971" endtime="20201030 15:55:05.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:04.971" endtime="20201030 15:55:05.399"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.409" endtime="20201030 15:55:05.476"></status>
</kw>
<msg timestamp="20201030 15:55:05.477" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.406" endtime="20201030 15:55:05.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.482" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:05.479" endtime="20201030 15:55:05.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.485" endtime="20201030 15:55:05.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.404" endtime="20201030 15:55:05.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.402" endtime="20201030 15:55:05.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.505" endtime="20201030 15:55:05.801"></status>
</kw>
<msg timestamp="20201030 15:55:05.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:05.501" endtime="20201030 15:55:05.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02198025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:05.805" endtime="20201030 15:55:05.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:05.813" endtime="20201030 15:55:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.495" endtime="20201030 15:55:05.815"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.492" endtime="20201030 15:55:05.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:55:05.820" level="INFO">${PHILIP_RES} = [{'diff': 0.0006894999999999991}, {'diff': 0.0006895409999999984}, {'diff': 0.0006894589999999999}, {'diff': 0.0006895420000000013}, {'diff': 0.0006895140000000022}, {'diff': 0.000689554999999998}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:05.817" endtime="20201030 15:55:05.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:05.824" level="INFO">${RESULT} = {'diff': [0.0006894999999999991, 0.0006895409999999984, 0.0006894589999999999, 0.0006895420000000013, 0.0006895140000000022, 0.000689554999999998, 0.000689554999999998, 0.0006895420000000013, 0.000689...</msg>
<status status="PASS" starttime="20201030 15:55:05.821" endtime="20201030 15:55:05.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.828" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:55:05.827" endtime="20201030 15:55:05.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.831" level="INFO">VALUE: [0.0006894999999999991, 0.0006895409999999984, 0.0006894589999999999, 0.0006895420000000013, 0.0006895140000000022, 0.000689554999999998, 0.000689554999999998, 0.0006895420000000013, 0.0006895420000000013, 0.000689457999999997, 0.0006895420000000013, 0.0006895420000000013, 0.0006895280000000018, 0.0006895830000000006, 0.0006895279999999948, 0.000689486000000003, 0.0006895280000000018, 0.0006895280000000018, 0.0006895420000000013, 0.0006895419999999944, 0.0006895410000000018, 0.0006895280000000018, 0.0006895420000000013, 0.0006895420000000013, 0.0006895409999999949, 0.0006895280000000018, 0.0006895280000000018, 0.0006895700000000005, 0.0006895550000000014, 0.0006895419999999944, 0.0006895420000000013, 0.0006895420000000013, 0.0006895280000000018, 0.0006895420000000013, 0.0006895419999999944, 0.0006895830000000006, 0.0006895420000000013, 0.0006895420000000013, 0.0006895560000000078, 0.0006895269999999953, 0.000689569000000001, 0.0006895420000000013, 0.0006895279999999948, 0.0006895549999999945, 0.0006895140000000022, 0.0006895420000000013, 0.0006895410000000018, 0.0006895279999999948, 0.0006894999999999957, 0.0006895420000000013]</msg>
<status status="PASS" starttime="20201030 15:55:05.829" endtime="20201030 15:55:05.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.825" endtime="20201030 15:55:05.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:05.837" endtime="20201030 15:55:05.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.835" endtime="20201030 15:55:05.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.834" endtime="20201030 15:55:05.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.400" endtime="20201030 15:55:05.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.399" endtime="20201030 15:55:05.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.486" endtime="20201030 15:55:05.858"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:44.183" endtime="20201030 15:55:05.858" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:23.734" endtime="20201030 15:55:05.867"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:55:05.939" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:55:05.947" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:55:07.157" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:55:05.937" endtime="20201030 15:55:07.159"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.164" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:55:07.161" endtime="20201030 15:55:07.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.936" endtime="20201030 15:55:07.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.170" endtime="20201030 15:55:07.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.167" endtime="20201030 15:55:07.373"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.386" endtime="20201030 15:55:07.399"></status>
</kw>
<msg timestamp="20201030 15:55:07.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 15:55:07.384" endtime="20201030 15:55:07.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.403" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201030 15:55:07.401" endtime="20201030 15:55:07.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.406" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:07.404" endtime="20201030 15:55:07.406"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:07.382" endtime="20201030 15:55:07.407"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:07.379" endtime="20201030 15:55:07.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.378" endtime="20201030 15:55:07.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:07.411" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:07.411" endtime="20201030 15:55:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.408" endtime="20201030 15:55:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.377" endtime="20201030 15:55:07.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.377" endtime="20201030 15:55:07.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.414" endtime="20201030 15:55:07.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.375" endtime="20201030 15:55:07.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.417" endtime="20201030 15:55:07.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.374" endtime="20201030 15:55:07.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:05.935" endtime="20201030 15:55:07.420"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.425" endtime="20201030 15:55:07.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.424" endtime="20201030 15:55:07.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.458" endtime="20201030 15:55:07.472"></status>
</kw>
<msg timestamp="20201030 15:55:07.473" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.457" endtime="20201030 15:55:07.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.475" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.474" endtime="20201030 15:55:07.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.478" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:07.476" endtime="20201030 15:55:07.478"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:07.454" endtime="20201030 15:55:07.479"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:07.452" endtime="20201030 15:55:07.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.451" endtime="20201030 15:55:07.480"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:07.484" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:07.483" endtime="20201030 15:55:07.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.481" endtime="20201030 15:55:07.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.450" endtime="20201030 15:55:07.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.449" endtime="20201030 15:55:07.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.485" endtime="20201030 15:55:07.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.448" endtime="20201030 15:55:07.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.446" endtime="20201030 15:55:07.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.423" endtime="20201030 15:55:07.488"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.499" endtime="20201030 15:55:07.514"></status>
</kw>
<msg timestamp="20201030 15:55:07.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.497" endtime="20201030 15:55:07.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.516" endtime="20201030 15:55:07.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.518" endtime="20201030 15:55:07.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.493" endtime="20201030 15:55:07.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.491" endtime="20201030 15:55:07.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.528" endtime="20201030 15:55:07.821"></status>
</kw>
<msg timestamp="20201030 15:55:07.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065878486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065900597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.526" endtime="20201030 15:55:07.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065878486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065900597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.827" endtime="20201030 15:55:07.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.841" endtime="20201030 15:55:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.523" endtime="20201030 15:55:07.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.521" endtime="20201030 15:55:07.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.851" level="INFO">${RESULT} = [{'diff': 2.211100000000521e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.19169999999963e-05}, {'diff': 2.215299999999698e-05}, {'diff': 2.212499999999784e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:07.847" endtime="20201030 15:55:07.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:07.856" level="INFO">${ACCURACY} = {'diff': [2.211100000000521e-05, 2.212499999999784e-05, 2.1958000000002476e-05, 2.19169999999963e-05, 2.215299999999698e-05, 2.212499999999784e-05, 2.265299999999748e-05, 2.2638999999990972e-05, 2.212...</msg>
<status status="PASS" starttime="20201030 15:55:07.853" endtime="20201030 15:55:07.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.863" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:07.861" endtime="20201030 15:55:07.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.865" level="INFO">VALUE: [2.211100000000521e-05, 2.212499999999784e-05, 2.1958000000002476e-05, 2.19169999999963e-05, 2.215299999999698e-05, 2.212499999999784e-05, 2.265299999999748e-05, 2.2638999999990972e-05, 2.212499999999784e-05, 2.1986000000001615e-05, 2.2069999999999035e-05, 2.220899999999526e-05, 2.191700000001018e-05, 2.216700000000349e-05, 2.2320000000006224e-05, 2.2582999999992692e-05, 2.2499999999994746e-05, 2.2735999999995427e-05, 2.1902000000004196e-05, 2.262499999999834e-05, 2.2471999999995607e-05, 2.190300000000367e-05, 2.212500000001172e-05, 2.213900000000435e-05, 2.1972000000008984e-05, 2.2194000000003156e-05, 2.2278000000000575e-05, 2.19169999999963e-05, 2.230500000000024e-05, 2.191700000001018e-05, 2.2638999999990972e-05, 2.1971999999995107e-05, 2.2055999999992526e-05, 2.2056000000006404e-05, 2.2055999999992526e-05, 2.240300000000417e-05, 2.243100000000331e-05, 2.2221999999988418e-05, 2.2236000000008804e-05, 2.2542000000000395e-05, 2.2416000000011205e-05, 2.213900000000435e-05, 2.2291999999993206e-05, 2.256900000000006e-05, 2.2387999999998187e-05, 2.230500000000024e-05, 2.2054999999993052e-05, 2.240300000000417e-05, 2.280500000000074e-05, 2.2222000000002295e-05]</msg>
<status status="PASS" starttime="20201030 15:55:07.864" endtime="20201030 15:55:07.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.857" endtime="20201030 15:55:07.866"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:07.873" endtime="20201030 15:55:07.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.869" endtime="20201030 15:55:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.867" endtime="20201030 15:55:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.490" endtime="20201030 15:55:07.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.489" endtime="20201030 15:55:07.895"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.916" endtime="20201030 15:55:07.936"></status>
</kw>
<msg timestamp="20201030 15:55:07.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.911" endtime="20201030 15:55:07.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.939" endtime="20201030 15:55:07.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.945" endtime="20201030 15:55:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.905" endtime="20201030 15:55:07.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.899" endtime="20201030 15:55:07.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.966" endtime="20201030 15:55:08.261"></status>
</kw>
<msg timestamp="20201030 15:55:08.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037195153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037217944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.962" endtime="20201030 15:55:08.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037195153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037217944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.267" endtime="20201030 15:55:08.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.275" endtime="20201030 15:55:08.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.956" endtime="20201030 15:55:08.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.953" endtime="20201030 15:55:08.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.282" level="INFO">${RESULT} = [{'diff': 2.279100000000117e-05}, {'diff': 2.2735999999995427e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.212499999999784e-05}, {'diff': 2.2250000000001435e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:08.279" endtime="20201030 15:55:08.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.287" level="INFO">${ACCURACY} = {'diff': [2.279100000000117e-05, 2.2735999999995427e-05, 2.2236000000001865e-05, 2.205499999999999e-05, 2.212499999999784e-05, 2.2250000000001435e-05, 2.2222000000002295e-05, 2.188899999999716e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:08.283" endtime="20201030 15:55:08.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.292" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.291" endtime="20201030 15:55:08.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.295" level="INFO">VALUE: [2.279100000000117e-05, 2.2735999999995427e-05, 2.2236000000001865e-05, 2.205499999999999e-05, 2.212499999999784e-05, 2.2250000000001435e-05, 2.2222000000002295e-05, 2.188899999999716e-05, 2.2500000000001685e-05, 2.18890000000041e-05, 2.215299999999698e-05, 2.2443999999996467e-05, 2.238899999999766e-05, 2.2472000000002545e-05, 2.213899999999741e-05, 2.2041999999999895e-05, 2.2443999999996467e-05, 2.263900000000485e-05, 2.263900000000485e-05, 2.1986000000001615e-05, 2.236099999999852e-05, 2.213899999999741e-05, 2.248700000000159e-05, 2.237499999999809e-05, 2.1986000000001615e-05, 2.187499999999759e-05, 2.2486000000002115e-05, 2.205499999999999e-05, 2.240299999999723e-05, 2.1985999999994676e-05, 2.2736000000002365e-05, 2.2250000000001435e-05, 2.261099999999877e-05, 2.256900000000006e-05, 2.240299999999723e-05, 2.205499999999999e-05, 2.208299999999913e-05, 2.208299999999913e-05, 2.2041999999999895e-05, 2.2583999999999105e-05, 2.2528000000000825e-05, 2.22770000000011e-05, 2.2597999999998675e-05, 2.2221999999995357e-05, 2.272300000000227e-05, 2.262499999999834e-05, 2.240299999999723e-05, 2.2527999999993886e-05, 2.223700000000134e-05, 2.27090000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:55:08.293" endtime="20201030 15:55:08.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.288" endtime="20201030 15:55:08.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.299" endtime="20201030 15:55:08.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.298" endtime="20201030 15:55:08.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.297" endtime="20201030 15:55:08.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.896" endtime="20201030 15:55:08.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.895" endtime="20201030 15:55:08.320"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.329" endtime="20201030 15:55:08.344"></status>
</kw>
<msg timestamp="20201030 15:55:08.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.328" endtime="20201030 15:55:08.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.346" endtime="20201030 15:55:08.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.349" endtime="20201030 15:55:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.325" endtime="20201030 15:55:08.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.323" endtime="20201030 15:55:08.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.358" endtime="20201030 15:55:08.646"></status>
</kw>
<msg timestamp="20201030 15:55:08.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.357" endtime="20201030 15:55:08.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.652" endtime="20201030 15:55:08.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.663" endtime="20201030 15:55:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.354" endtime="20201030 15:55:08.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.352" endtime="20201030 15:55:08.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.671" level="INFO">${RESULT} = [{'diff': 2.2014000000000755e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.1902000000000726e-05}, {'diff': 2.2152000000000976e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.205499999999999e-05...</msg>
<status status="PASS" starttime="20201030 15:55:08.667" endtime="20201030 15:55:08.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:08.675" level="INFO">${ACCURACY} = {'diff': [2.2014000000000755e-05, 2.216700000000002e-05, 2.1902000000000726e-05, 2.2152000000000976e-05, 2.1985999999998146e-05, 2.205499999999999e-05, 2.2402000000001226e-05, 2.212500000000131e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:55:08.672" endtime="20201030 15:55:08.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.680" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:08.679" endtime="20201030 15:55:08.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.682" level="INFO">VALUE: [2.2014000000000755e-05, 2.216700000000002e-05, 2.1902000000000726e-05, 2.2152000000000976e-05, 2.1985999999998146e-05, 2.205499999999999e-05, 2.2402000000001226e-05, 2.212500000000131e-05, 2.233299999999938e-05, 2.206899999999956e-05, 2.24030000000007e-05, 2.2792000000000645e-05, 2.2236000000001865e-05, 2.2527999999997356e-05, 2.2041999999999895e-05, 2.2249999999997966e-05, 2.2235999999998396e-05, 2.2221999999998826e-05, 2.219500000000263e-05, 2.2069999999999035e-05, 2.2735999999998896e-05, 2.2569999999999535e-05, 2.2055999999999465e-05, 2.2764000000001505e-05, 2.2514000000001255e-05, 2.2569999999999535e-05, 2.2763999999998036e-05, 2.27090000000027e-05, 2.262499999999834e-05, 2.20830000000026e-05, 2.2722000000002796e-05, 2.188900000000063e-05, 2.233299999999938e-05, 2.188900000000063e-05, 2.213900000000088e-05, 2.231899999999981e-05, 2.2235999999998396e-05, 2.205499999999999e-05, 2.238900000000113e-05, 2.25969999999992e-05, 2.208299999999913e-05, 2.2736000000002365e-05, 2.2584000000002574e-05, 2.2069999999999035e-05, 2.2235999999998396e-05, 2.2276999999997632e-05, 2.238900000000113e-05, 2.245900000000245e-05, 2.2249999999997966e-05, 2.188899999999716e-05]</msg>
<status status="PASS" starttime="20201030 15:55:08.681" endtime="20201030 15:55:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.676" endtime="20201030 15:55:08.683"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.687" endtime="20201030 15:55:08.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.685" endtime="20201030 15:55:08.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.684" endtime="20201030 15:55:08.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.321" endtime="20201030 15:55:08.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.320" endtime="20201030 15:55:08.708"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.725" endtime="20201030 15:55:08.741"></status>
</kw>
<msg timestamp="20201030 15:55:08.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.715" endtime="20201030 15:55:08.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.743" endtime="20201030 15:55:08.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.745" endtime="20201030 15:55:08.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.712" endtime="20201030 15:55:08.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.710" endtime="20201030 15:55:08.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.755" endtime="20201030 15:55:09.041"></status>
</kw>
<msg timestamp="20201030 15:55:09.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031145528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031168, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:08.753" endtime="20201030 15:55:09.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031145528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031168, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:09.046" endtime="20201030 15:55:09.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.054" endtime="20201030 15:55:09.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.750" endtime="20201030 15:55:09.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.749" endtime="20201030 15:55:09.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.061" level="INFO">${RESULT} = [{'diff': 2.2472000000002545e-05}, {'diff': 2.205499999999999e-05}, {'diff': 2.2152000000000976e-05}, {'diff': 2.2221999999995357e-05}, {'diff': 2.240300000000417e-05}, {'diff': 2.2806000000000215e-05...</msg>
<status status="PASS" starttime="20201030 15:55:09.058" endtime="20201030 15:55:09.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.065" level="INFO">${ACCURACY} = {'diff': [2.2472000000002545e-05, 2.205499999999999e-05, 2.2152000000000976e-05, 2.2221999999995357e-05, 2.240300000000417e-05, 2.2806000000000215e-05, 2.2790999999994233e-05, 2.2221999999995357e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:09.062" endtime="20201030 15:55:09.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.070" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.069" endtime="20201030 15:55:09.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.072" level="INFO">VALUE: [2.2472000000002545e-05, 2.205499999999999e-05, 2.2152000000000976e-05, 2.2221999999995357e-05, 2.240300000000417e-05, 2.2806000000000215e-05, 2.2790999999994233e-05, 2.2221999999995357e-05, 2.2069999999999035e-05, 2.2041999999999895e-05, 2.18890000000041e-05, 2.213899999999741e-05, 2.2805999999993276e-05, 2.2069999999999035e-05, 2.2069999999999035e-05, 2.222300000000177e-05, 2.1901999999997257e-05, 2.231899999999981e-05, 2.205499999999999e-05, 2.2750000000001935e-05, 2.256900000000006e-05, 2.2707999999996287e-05, 2.241700000000374e-05, 2.281900000000031e-05, 2.241700000000374e-05, 2.2486000000002115e-05, 2.233299999999938e-05, 2.1986000000001615e-05, 2.208299999999913e-05, 2.187499999999759e-05, 2.2069999999999035e-05, 2.2333999999998855e-05, 2.262500000000528e-05, 2.2222000000002295e-05, 2.2499999999994746e-05, 2.238899999999766e-05, 2.247299999999508e-05, 2.1944000000002906e-05, 2.2056000000006404e-05, 2.2014000000000755e-05, 2.2069999999999035e-05, 2.2250000000001435e-05, 2.1901999999997257e-05, 2.2694000000003656e-05, 2.2637999999998437e-05, 2.2651999999998007e-05, 2.280500000000074e-05, 2.206899999999956e-05, 2.241700000000374e-05, 2.281900000000031e-05]</msg>
<status status="PASS" starttime="20201030 15:55:09.071" endtime="20201030 15:55:09.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.066" endtime="20201030 15:55:09.074"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.078" endtime="20201030 15:55:09.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.076" endtime="20201030 15:55:09.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.075" endtime="20201030 15:55:09.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.709" endtime="20201030 15:55:09.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.708" endtime="20201030 15:55:09.100"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.115" endtime="20201030 15:55:09.133"></status>
</kw>
<msg timestamp="20201030 15:55:09.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.112" endtime="20201030 15:55:09.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.135" endtime="20201030 15:55:09.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.137" endtime="20201030 15:55:09.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.109" endtime="20201030 15:55:09.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.105" endtime="20201030 15:55:09.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.147" endtime="20201030 15:55:09.432"></status>
</kw>
<msg timestamp="20201030 15:55:09.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031024417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.145" endtime="20201030 15:55:09.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031002153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031024417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.436" endtime="20201030 15:55:09.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.445" endtime="20201030 15:55:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.143" endtime="20201030 15:55:09.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.141" endtime="20201030 15:55:09.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.452" level="INFO">${RESULT} = [{'diff': 2.2263999999997536e-05}, {'diff': 2.27229999999988e-05}, {'diff': 2.1929999999999866e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.2749999999998466e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:09.448" endtime="20201030 15:55:09.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.457" level="INFO">${ACCURACY} = {'diff': [2.2263999999997536e-05, 2.27229999999988e-05, 2.1929999999999866e-05, 2.231899999999981e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.2679999999997147e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:09.453" endtime="20201030 15:55:09.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.461" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.460" endtime="20201030 15:55:09.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.464" level="INFO">VALUE: [2.2263999999997536e-05, 2.27229999999988e-05, 2.1929999999999866e-05, 2.231899999999981e-05, 2.2735999999998896e-05, 2.2749999999998466e-05, 2.2679999999997147e-05, 2.255500000000049e-05, 2.2250000000001435e-05, 2.205499999999999e-05, 2.238899999999766e-05, 2.215300000000392e-05, 2.213900000000435e-05, 2.231899999999981e-05, 2.256900000000006e-05, 2.2735999999995427e-05, 2.2236000000001865e-05, 2.206899999999956e-05, 2.266699999999705e-05, 2.262499999999834e-05, 2.2569999999999535e-05, 2.2041999999999895e-05, 2.2055999999999465e-05, 2.2762999999995093e-05, 2.2555999999999965e-05, 2.2500000000001685e-05, 2.2041999999999895e-05, 2.222299999999483e-05, 2.258299999999963e-05, 2.2041999999999895e-05, 2.206899999999956e-05, 2.2416000000004266e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.1902000000004196e-05, 2.230500000000024e-05, 2.208299999999913e-05, 2.2278000000000575e-05, 2.188899999999716e-05, 2.2486000000002115e-05, 2.2693999999996717e-05, 2.23890000000046e-05, 2.281900000000031e-05, 2.243099999999637e-05, 2.2806000000000215e-05, 2.219499999999569e-05, 2.2555999999999965e-05, 2.2569999999999535e-05, 2.187500000000453e-05, 2.212499999999784e-05]</msg>
<status status="PASS" starttime="20201030 15:55:09.463" endtime="20201030 15:55:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.458" endtime="20201030 15:55:09.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.469" endtime="20201030 15:55:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.467" endtime="20201030 15:55:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.466" endtime="20201030 15:55:09.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.102" endtime="20201030 15:55:09.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.101" endtime="20201030 15:55:09.490"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.499" endtime="20201030 15:55:09.515"></status>
</kw>
<msg timestamp="20201030 15:55:09.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.497" endtime="20201030 15:55:09.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.517" endtime="20201030 15:55:09.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.519" endtime="20201030 15:55:09.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.495" endtime="20201030 15:55:09.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.493" endtime="20201030 15:55:09.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.528" endtime="20201030 15:55:09.816"></status>
</kw>
<msg timestamp="20201030 15:55:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.527" endtime="20201030 15:55:09.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022314375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.820" endtime="20201030 15:55:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.829" endtime="20201030 15:55:09.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.524" endtime="20201030 15:55:09.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.522" endtime="20201030 15:55:09.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:09.835" level="INFO">${RESULT} = [{'diff': 2.1957999999999006e-05}, {'diff': 2.204100000000042e-05}, {'diff': 2.24030000000007e-05}, {'diff': 2.20969999999987e-05}, {'diff': 2.220899999999873e-05}, {'diff': 2.281900000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:09.832" endtime="20201030 15:55:09.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:09.839" level="INFO">${ACCURACY} = {'diff': [2.1957999999999006e-05, 2.204100000000042e-05, 2.24030000000007e-05, 2.20969999999987e-05, 2.220899999999873e-05, 2.281900000000031e-05, 2.2722000000002796e-05, 2.19030000000002e-05, 2.28050...</msg>
<status status="PASS" starttime="20201030 15:55:09.836" endtime="20201030 15:55:09.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.844" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:09.843" endtime="20201030 15:55:09.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.846" level="INFO">VALUE: [2.1957999999999006e-05, 2.204100000000042e-05, 2.24030000000007e-05, 2.20969999999987e-05, 2.220899999999873e-05, 2.281900000000031e-05, 2.2722000000002796e-05, 2.19030000000002e-05, 2.280500000000074e-05, 2.2278000000000575e-05, 2.2542000000000395e-05, 2.2735999999998896e-05, 2.2528000000000825e-05, 2.2055999999999465e-05, 2.2070000000002504e-05, 2.2236000000001865e-05, 2.209700000000217e-05, 2.223700000000134e-05, 2.2027999999996856e-05, 2.238900000000113e-05, 2.2320000000002754e-05, 2.2430000000000366e-05, 2.263900000000138e-05, 2.2651999999998007e-05, 2.2000000000001185e-05, 2.1943999999999436e-05, 2.1943999999999436e-05, 2.245899999999898e-05, 2.231899999999981e-05, 2.206899999999956e-05, 2.258299999999963e-05, 2.2721999999999326e-05, 2.256900000000006e-05, 2.236099999999852e-05, 2.263899999999791e-05, 2.1971999999998576e-05, 2.2236000000001865e-05, 2.2749999999998466e-05, 2.2570000000003004e-05, 2.238900000000113e-05, 2.193099999999934e-05, 2.2041999999999895e-05, 2.2069999999999035e-05, 2.2250000000001435e-05, 2.19030000000002e-05, 2.213900000000088e-05, 2.2652000000001477e-05, 2.197299999999805e-05, 2.2333999999998855e-05, 2.280500000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:55:09.845" endtime="20201030 15:55:09.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.840" endtime="20201030 15:55:09.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:09.852" endtime="20201030 15:55:09.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.851" endtime="20201030 15:55:09.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.849" endtime="20201030 15:55:09.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.491" endtime="20201030 15:55:09.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.490" endtime="20201030 15:55:09.873"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.881" endtime="20201030 15:55:09.898"></status>
</kw>
<msg timestamp="20201030 15:55:09.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.880" endtime="20201030 15:55:09.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:09.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:09.900" endtime="20201030 15:55:09.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.902" endtime="20201030 15:55:09.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.877" endtime="20201030 15:55:09.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.875" endtime="20201030 15:55:09.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:09.911" endtime="20201030 15:55:10.212"></status>
</kw>
<msg timestamp="20201030 15:55:10.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:09.909" endtime="20201030 15:55:10.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022827458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.221" endtime="20201030 15:55:10.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.231" endtime="20201030 15:55:10.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.907" endtime="20201030 15:55:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.905" endtime="20201030 15:55:10.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.238" level="INFO">${RESULT} = [{'diff': 2.244500000000288e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.2806000000000215e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.1916000000000296e-05}, {'diff': 2.1985999999998146e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:10.235" endtime="20201030 15:55:10.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.242" level="INFO">${ACCURACY} = {'diff': [2.244500000000288e-05, 2.19030000000002e-05, 2.2806000000000215e-05, 2.2278000000000575e-05, 2.1916000000000296e-05, 2.1985999999998146e-05, 2.2735999999998896e-05, 2.255500000000049e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:10.239" endtime="20201030 15:55:10.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.248" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.246" endtime="20201030 15:55:10.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.251" level="INFO">VALUE: [2.244500000000288e-05, 2.19030000000002e-05, 2.2806000000000215e-05, 2.2278000000000575e-05, 2.1916000000000296e-05, 2.1985999999998146e-05, 2.2735999999998896e-05, 2.255500000000049e-05, 2.205499999999999e-05, 2.2402000000001226e-05, 2.208299999999913e-05, 2.1957999999999006e-05, 2.2222000000002295e-05, 2.258299999999963e-05, 2.2207999999999256e-05, 2.24030000000007e-05, 2.230500000000024e-05, 2.2528000000000825e-05, 2.237500000000156e-05, 2.283299999999988e-05, 2.2056000000002934e-05, 2.1943999999999436e-05, 2.1971999999998576e-05, 2.2569999999999535e-05, 2.243099999999984e-05, 2.2471999999999076e-05, 2.2735999999998896e-05, 2.238899999999766e-05, 2.245899999999898e-05, 2.19030000000002e-05, 2.2319999999999285e-05, 2.188900000000063e-05, 2.231899999999981e-05, 2.206899999999956e-05, 2.238900000000113e-05, 2.256900000000006e-05, 2.256900000000006e-05, 2.2222000000002295e-05, 2.2014000000000755e-05, 2.187499999999759e-05, 2.213900000000088e-05, 2.1972000000002045e-05, 2.2222000000002295e-05, 2.2000000000001185e-05, 2.24030000000007e-05, 2.1971999999998576e-05, 2.2084000000002074e-05, 2.241700000000027e-05, 2.261100000000224e-05, 2.215300000000045e-05]</msg>
<status status="PASS" starttime="20201030 15:55:10.249" endtime="20201030 15:55:10.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.243" endtime="20201030 15:55:10.253"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.258" endtime="20201030 15:55:10.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.256" endtime="20201030 15:55:10.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.254" endtime="20201030 15:55:10.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.874" endtime="20201030 15:55:10.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:09.873" endtime="20201030 15:55:10.279"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.288" endtime="20201030 15:55:10.303"></status>
</kw>
<msg timestamp="20201030 15:55:10.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.286" endtime="20201030 15:55:10.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.305" endtime="20201030 15:55:10.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.307" endtime="20201030 15:55:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.284" endtime="20201030 15:55:10.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.281" endtime="20201030 15:55:10.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.319" endtime="20201030 15:55:10.607"></status>
</kw>
<msg timestamp="20201030 15:55:10.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.318" endtime="20201030 15:55:10.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022528861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.611" endtime="20201030 15:55:10.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.619" endtime="20201030 15:55:10.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.314" endtime="20201030 15:55:10.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.311" endtime="20201030 15:55:10.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:10.626" level="INFO">${RESULT} = [{'diff': 2.2471999999999076e-05}, {'diff': 2.240299999999723e-05}, {'diff': 2.2278000000000575e-05}, {'diff': 2.183300000000235e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.238900000000113e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:10.623" endtime="20201030 15:55:10.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:10.631" level="INFO">${ACCURACY} = {'diff': [2.2471999999999076e-05, 2.240299999999723e-05, 2.2278000000000575e-05, 2.183300000000235e-05, 2.2443999999999936e-05, 2.238900000000113e-05, 2.283299999999988e-05, 2.194499999999891e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:55:10.627" endtime="20201030 15:55:10.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.636" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:10.635" endtime="20201030 15:55:10.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.639" level="INFO">VALUE: [2.2471999999999076e-05, 2.240299999999723e-05, 2.2278000000000575e-05, 2.183300000000235e-05, 2.2443999999999936e-05, 2.238900000000113e-05, 2.283299999999988e-05, 2.194499999999891e-05, 2.208299999999913e-05, 2.2000000000001185e-05, 2.24030000000007e-05, 2.261100000000224e-05, 2.1999999999997716e-05, 2.2070000000002504e-05, 2.237499999999809e-05, 2.2320000000002754e-05, 2.211099999999827e-05, 2.2570000000003004e-05, 2.1847999999997925e-05, 2.215300000000045e-05, 2.2792000000000645e-05, 2.2763999999998036e-05, 2.19030000000002e-05, 2.1972000000002045e-05, 2.206899999999956e-05, 2.206899999999956e-05, 2.2388000000001657e-05, 2.1986000000001615e-05, 2.1916000000000296e-05, 2.231899999999981e-05, 2.2736000000002365e-05, 2.2236000000001865e-05, 2.258299999999963e-05, 2.2736000000002365e-05, 2.19030000000002e-05, 2.216700000000002e-05, 2.1999999999997716e-05, 2.2055999999999465e-05, 2.219499999999916e-05, 2.2763999999998036e-05, 2.2736000000002365e-05, 2.220899999999873e-05, 2.188900000000063e-05, 2.195899999999848e-05, 2.2069999999999035e-05, 2.238900000000113e-05, 2.2166000000000546e-05, 2.247300000000202e-05, 2.2806000000000215e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:55:10.637" endtime="20201030 15:55:10.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.632" endtime="20201030 15:55:10.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:10.644" endtime="20201030 15:55:10.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.643" endtime="20201030 15:55:10.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.641" endtime="20201030 15:55:10.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.280" endtime="20201030 15:55:10.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.279" endtime="20201030 15:55:10.665"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.674" endtime="20201030 15:55:10.690"></status>
</kw>
<msg timestamp="20201030 15:55:10.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.673" endtime="20201030 15:55:10.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:10.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:10.692" endtime="20201030 15:55:10.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.695" endtime="20201030 15:55:10.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.670" endtime="20201030 15:55:10.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.668" endtime="20201030 15:55:10.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:10.704" endtime="20201030 15:55:10.992"></status>
</kw>
<msg timestamp="20201030 15:55:10.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.703" endtime="20201030 15:55:10.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:10.996" endtime="20201030 15:55:11.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.005" endtime="20201030 15:55:11.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.700" endtime="20201030 15:55:11.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.698" endtime="20201030 15:55:11.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.012" level="INFO">${RESULT} = [{'diff': 2.279100000000117e-05}, {'diff': 2.2443999999999936e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.25969999999992e-05}, {'diff': 2.27090000000027e-05}, {'diff': 2.2471999999999076e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:11.008" endtime="20201030 15:55:11.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.016" level="INFO">${ACCURACY} = {'diff': [2.279100000000117e-05, 2.2443999999999936e-05, 2.19030000000002e-05, 2.25969999999992e-05, 2.27090000000027e-05, 2.2471999999999076e-05, 2.193099999999934e-05, 2.237499999999809e-05, 2.25699...</msg>
<status status="PASS" starttime="20201030 15:55:11.013" endtime="20201030 15:55:11.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.021" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.019" endtime="20201030 15:55:11.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.023" level="INFO">VALUE: [2.279100000000117e-05, 2.2443999999999936e-05, 2.19030000000002e-05, 2.25969999999992e-05, 2.27090000000027e-05, 2.2471999999999076e-05, 2.193099999999934e-05, 2.237499999999809e-05, 2.2569999999999535e-05, 2.243099999999984e-05, 2.1985999999998146e-05, 2.24030000000007e-05, 2.2000000000001185e-05, 2.2707999999999756e-05, 2.2555999999999965e-05, 2.2235999999998396e-05, 2.241700000000027e-05, 2.2319999999999285e-05, 2.219499999999916e-05, 2.2512999999998312e-05, 2.2028000000000325e-05, 2.1971999999998576e-05, 2.2000000000001185e-05, 2.184700000000192e-05, 2.2471999999999076e-05, 2.2235999999998396e-05, 2.2736000000002365e-05, 2.2430000000000366e-05, 2.19030000000002e-05, 2.2305999999999715e-05, 2.2749999999998466e-05, 2.2735999999998896e-05, 2.191699999999977e-05, 2.2472000000002545e-05, 2.240299999999723e-05, 2.19030000000002e-05, 2.237499999999809e-05, 2.216700000000002e-05, 2.2305999999999715e-05, 2.2555999999999965e-05, 2.2235999999998396e-05, 2.2235999999998396e-05, 2.226300000000153e-05, 2.24030000000007e-05, 2.197299999999805e-05, 2.2402000000001226e-05, 2.213899999999741e-05, 2.245900000000245e-05, 2.1902000000000726e-05, 2.2221999999998826e-05]</msg>
<status status="PASS" starttime="20201030 15:55:11.022" endtime="20201030 15:55:11.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.017" endtime="20201030 15:55:11.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.028" endtime="20201030 15:55:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.027" endtime="20201030 15:55:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.026" endtime="20201030 15:55:11.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.666" endtime="20201030 15:55:11.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:10.665" endtime="20201030 15:55:11.049"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.058" endtime="20201030 15:55:11.078"></status>
</kw>
<msg timestamp="20201030 15:55:11.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.057" endtime="20201030 15:55:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.079" endtime="20201030 15:55:11.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.082" endtime="20201030 15:55:11.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.054" endtime="20201030 15:55:11.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.052" endtime="20201030 15:55:11.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.091" endtime="20201030 15:55:11.379"></status>
</kw>
<msg timestamp="20201030 15:55:11.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026192042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026214097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.090" endtime="20201030 15:55:11.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026192042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026214097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.384" endtime="20201030 15:55:11.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.392" endtime="20201030 15:55:11.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.087" endtime="20201030 15:55:11.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.085" endtime="20201030 15:55:11.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.399" level="INFO">${RESULT} = [{'diff': 2.205499999999999e-05}, {'diff': 2.195899999999848e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.2721999999999326e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.2235999999998396e-05...</msg>
<status status="PASS" starttime="20201030 15:55:11.396" endtime="20201030 15:55:11.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.403" level="INFO">${ACCURACY} = {'diff': [2.205499999999999e-05, 2.195899999999848e-05, 2.1958000000002476e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2235999999998396e-05, 2.2069999999999035e-05, 2.2221999999998826e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:11.400" endtime="20201030 15:55:11.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.408" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.407" endtime="20201030 15:55:11.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.410" level="INFO">VALUE: [2.205499999999999e-05, 2.195899999999848e-05, 2.1958000000002476e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.2235999999998396e-05, 2.2069999999999035e-05, 2.2221999999998826e-05, 2.1971999999998576e-05, 2.2457999999999506e-05, 2.191699999999977e-05, 2.2305999999999715e-05, 2.238900000000113e-05, 2.2098000000001644e-05, 2.2806000000000215e-05, 2.237500000000156e-05, 2.2249999999997966e-05, 2.2069999999999035e-05, 2.2263999999997536e-05, 2.2278000000000575e-05, 2.254100000000092e-05, 2.205499999999999e-05, 2.2721999999999326e-05, 2.2735999999998896e-05, 2.19030000000002e-05, 2.1958000000002476e-05, 2.188900000000063e-05, 2.280500000000074e-05, 2.233299999999938e-05, 2.280500000000074e-05, 2.2041999999999895e-05, 2.2637999999998437e-05, 2.2569999999999535e-05, 2.2221999999998826e-05, 2.2098000000001644e-05, 2.2236000000001865e-05, 2.24030000000007e-05, 2.265300000000095e-05, 2.212500000000131e-05, 2.215300000000045e-05, 2.265300000000095e-05, 2.2305999999999715e-05, 2.2457999999999506e-05, 2.2416000000000796e-05, 2.22229999999983e-05, 2.2235999999998396e-05, 2.256900000000006e-05, 2.2721999999999326e-05, 2.2221999999998826e-05, 2.256900000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:55:11.409" endtime="20201030 15:55:11.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.404" endtime="20201030 15:55:11.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.416" endtime="20201030 15:55:11.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.415" endtime="20201030 15:55:11.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.414" endtime="20201030 15:55:11.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.050" endtime="20201030 15:55:11.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.050" endtime="20201030 15:55:11.437"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.447" endtime="20201030 15:55:11.462"></status>
</kw>
<msg timestamp="20201030 15:55:11.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.445" endtime="20201030 15:55:11.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.464" endtime="20201030 15:55:11.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.466" endtime="20201030 15:55:11.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.442" endtime="20201030 15:55:11.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.440" endtime="20201030 15:55:11.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.476" endtime="20201030 15:55:11.761"></status>
</kw>
<msg timestamp="20201030 15:55:11.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.474" endtime="20201030 15:55:11.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022571917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:11.766" endtime="20201030 15:55:11.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.774" endtime="20201030 15:55:11.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.471" endtime="20201030 15:55:11.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.470" endtime="20201030 15:55:11.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:11.781" level="INFO">${RESULT} = [{'diff': 2.3235999999999396e-05}, {'diff': 2.3306000000000715e-05}, {'diff': 2.3735999999999896e-05}, {'diff': 2.3320000000000285e-05}, {'diff': 2.37229999999998e-05}, {'diff': 2.345899999999998e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:11.777" endtime="20201030 15:55:11.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:11.786" level="INFO">${ACCURACY} = {'diff': [2.3235999999999396e-05, 2.3306000000000715e-05, 2.3735999999999896e-05, 2.3320000000000285e-05, 2.37229999999998e-05, 2.345899999999998e-05, 2.2792000000000645e-05, 2.32229999999993e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:55:11.782" endtime="20201030 15:55:11.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.790" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:11.789" endtime="20201030 15:55:11.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.793" level="INFO">VALUE: [2.3235999999999396e-05, 2.3306000000000715e-05, 2.3735999999999896e-05, 2.3320000000000285e-05, 2.37229999999998e-05, 2.345899999999998e-05, 2.2792000000000645e-05, 2.32229999999993e-05, 2.3028000000001325e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.3485999999999646e-05, 2.363900000000238e-05, 2.304100000000142e-05, 2.29030000000012e-05, 2.306900000000056e-05, 2.3221999999999826e-05, 2.3485999999999646e-05, 2.2764000000001505e-05, 2.283299999999988e-05, 2.338899999999866e-05, 2.3221999999999826e-05, 2.3472000000000076e-05, 2.2999999999998716e-05, 2.2806000000000215e-05, 2.34169999999978e-05, 2.3236000000002865e-05, 2.313899999999841e-05, 2.29030000000012e-05, 2.320899999999973e-05, 2.348699999999912e-05, 2.3306000000000715e-05, 2.3056000000000465e-05, 2.3235999999999396e-05, 2.2958000000000006e-05, 2.329100000000167e-05, 2.3458000000000506e-05, 2.306900000000056e-05, 2.308300000000013e-05, 2.308300000000013e-05, 2.341700000000127e-05, 2.3722000000000326e-05, 2.365299999999848e-05, 2.288899999999816e-05, 2.3735999999999896e-05, 2.3318999999997342e-05, 2.338899999999866e-05, 2.3722000000000326e-05, 2.3485999999999646e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201030 15:55:11.792" endtime="20201030 15:55:11.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.787" endtime="20201030 15:55:11.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:11.798" endtime="20201030 15:55:11.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.797" endtime="20201030 15:55:11.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.796" endtime="20201030 15:55:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.438" endtime="20201030 15:55:11.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.438" endtime="20201030 15:55:11.819"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.828" endtime="20201030 15:55:11.845"></status>
</kw>
<msg timestamp="20201030 15:55:11.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.826" endtime="20201030 15:55:11.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.846" endtime="20201030 15:55:11.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.849" endtime="20201030 15:55:11.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.824" endtime="20201030 15:55:11.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.821" endtime="20201030 15:55:11.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.858" endtime="20201030 15:55:12.145"></status>
</kw>
<msg timestamp="20201030 15:55:12.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:11.856" endtime="20201030 15:55:12.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022141847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02216575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:12.150" endtime="20201030 15:55:12.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.158" endtime="20201030 15:55:12.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.854" endtime="20201030 15:55:12.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.852" endtime="20201030 15:55:12.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.165" level="INFO">${RESULT} = [{'diff': 2.39030000000022e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.4236000000000396e-05}, {'diff': 2.4472000000001076e-05}, {'diff': 2.3805999999997746e-05}, {'diff': 2.4236000000000396e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:12.162" endtime="20201030 15:55:12.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.169" level="INFO">${ACCURACY} = {'diff': [2.39030000000022e-05, 2.440299999999923e-05, 2.4236000000000396e-05, 2.4472000000001076e-05, 2.3805999999997746e-05, 2.4236000000000396e-05, 2.3819999999997316e-05, 2.44030000000027e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:55:12.166" endtime="20201030 15:55:12.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.174" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.173" endtime="20201030 15:55:12.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.177" level="INFO">VALUE: [2.39030000000022e-05, 2.440299999999923e-05, 2.4236000000000396e-05, 2.4472000000001076e-05, 2.3805999999997746e-05, 2.4236000000000396e-05, 2.3819999999997316e-05, 2.44030000000027e-05, 2.4415999999999327e-05, 2.44169999999988e-05, 2.420899999999726e-05, 2.447300000000055e-05, 2.447299999999708e-05, 2.411100000000027e-05, 2.4554999999999022e-05, 2.4721999999997857e-05, 2.415299999999898e-05, 2.4722000000001326e-05, 2.4318999999998342e-05, 2.4236000000000396e-05, 2.412499999999984e-05, 2.463899999999991e-05, 2.4735999999997427e-05, 2.4541999999998926e-05, 2.413899999999941e-05, 2.4582999999998162e-05, 2.4222000000000826e-05, 2.4486000000000646e-05, 2.3972000000000576e-05, 2.4486000000000646e-05, 2.4334000000000855e-05, 2.44030000000027e-05, 2.4570000000001535e-05, 2.4096999999997232e-05, 2.438899999999966e-05, 2.411100000000027e-05, 2.4249999999999966e-05, 2.463899999999991e-05, 2.4750000000000466e-05, 2.383300000000088e-05, 2.4415999999999327e-05, 2.438899999999966e-05, 2.4208000000001256e-05, 2.4486000000000646e-05, 2.3972000000000576e-05, 2.419500000000116e-05, 2.394500000000091e-05, 2.4236000000000396e-05, 2.413899999999941e-05, 2.383300000000088e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.175" endtime="20201030 15:55:12.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.170" endtime="20201030 15:55:12.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.182" endtime="20201030 15:55:12.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.180" endtime="20201030 15:55:12.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.179" endtime="20201030 15:55:12.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.820" endtime="20201030 15:55:12.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.819" endtime="20201030 15:55:12.202"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.211" endtime="20201030 15:55:12.229"></status>
</kw>
<msg timestamp="20201030 15:55:12.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.210" endtime="20201030 15:55:12.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.230" endtime="20201030 15:55:12.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.233" endtime="20201030 15:55:12.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.207" endtime="20201030 15:55:12.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.205" endtime="20201030 15:55:12.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.242" endtime="20201030 15:55:12.529"></status>
</kw>
<msg timestamp="20201030 15:55:12.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.241" endtime="20201030 15:55:12.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023223389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023249125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.533" endtime="20201030 15:55:12.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.541" endtime="20201030 15:55:12.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.238" endtime="20201030 15:55:12.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.236" endtime="20201030 15:55:12.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.548" level="INFO">${RESULT} = [{'diff': 2.5735999999998427e-05}, {'diff': 2.513900000000041e-05}, {'diff': 2.487500000000059e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.490299999999973e-05}, {'diff': 2.562500000000134e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:12.545" endtime="20201030 15:55:12.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.553" level="INFO">${ACCURACY} = {'diff': [2.5735999999998427e-05, 2.513900000000041e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.562500000000134e-05, 2.5722000000002326e-05, 2.5319999999998816e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:55:12.549" endtime="20201030 15:55:12.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.557" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.556" endtime="20201030 15:55:12.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.560" level="INFO">VALUE: [2.5735999999998427e-05, 2.513900000000041e-05, 2.487500000000059e-05, 2.490299999999973e-05, 2.490299999999973e-05, 2.562500000000134e-05, 2.5722000000002326e-05, 2.5319999999998816e-05, 2.488899999999669e-05, 2.52230000000013e-05, 2.5305999999999246e-05, 2.512499999999737e-05, 2.57230000000018e-05, 2.5319999999998816e-05, 2.540300000000023e-05, 2.5402000000000757e-05, 2.5416000000000327e-05, 2.5693999999999717e-05, 2.5014000000000286e-05, 2.4986000000001146e-05, 2.5291000000000202e-05, 2.5235999999997927e-05, 2.4750000000000466e-05, 2.540300000000023e-05, 2.5555000000000022e-05, 2.5068999999999092e-05, 2.538900000000066e-05, 2.5735999999998427e-05, 2.5471999999998607e-05, 2.563900000000091e-05, 2.5583999999998636e-05, 2.5707999999999287e-05, 2.565300000000048e-05, 2.5721999999998857e-05, 2.5486000000001646e-05, 2.4986000000001146e-05, 2.547299999999808e-05, 2.4832999999998412e-05, 2.5528000000000356e-05, 2.5555000000000022e-05, 2.5736000000001896e-05, 2.5471999999998607e-05, 2.4804999999999272e-05, 2.493099999999887e-05, 2.506900000000256e-05, 2.5250000000000966e-05, 2.4957999999998537e-05, 2.481900000000231e-05, 2.490299999999973e-05, 2.540300000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.558" endtime="20201030 15:55:12.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.554" endtime="20201030 15:55:12.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.566" endtime="20201030 15:55:12.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.564" endtime="20201030 15:55:12.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.563" endtime="20201030 15:55:12.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.203" endtime="20201030 15:55:12.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.203" endtime="20201030 15:55:12.587"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.596" endtime="20201030 15:55:12.612"></status>
</kw>
<msg timestamp="20201030 15:55:12.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.594" endtime="20201030 15:55:12.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.614" endtime="20201030 15:55:12.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.616" endtime="20201030 15:55:12.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.591" endtime="20201030 15:55:12.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.589" endtime="20201030 15:55:12.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.626" endtime="20201030 15:55:12.911"></status>
</kw>
<msg timestamp="20201030 15:55:12.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.624" endtime="20201030 15:55:12.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022561292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:12.915" endtime="20201030 15:55:12.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.923" endtime="20201030 15:55:12.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.621" endtime="20201030 15:55:12.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.620" endtime="20201030 15:55:12.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:12.930" level="INFO">${RESULT} = [{'diff': 2.645899999999951e-05}, {'diff': 2.6360999999999052e-05}, {'diff': 2.6235999999998927e-05}, {'diff': 2.613900000000141e-05}, {'diff': 2.6750000000002466e-05}, {'diff': 2.615300000000098e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:12.927" endtime="20201030 15:55:12.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:12.935" level="INFO">${ACCURACY} = {'diff': [2.645899999999951e-05, 2.6360999999999052e-05, 2.6235999999998927e-05, 2.613900000000141e-05, 2.6750000000002466e-05, 2.615300000000098e-05, 2.637500000000209e-05, 2.6735999999999427e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:55:12.931" endtime="20201030 15:55:12.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.940" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:12.939" endtime="20201030 15:55:12.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.943" level="INFO">VALUE: [2.645899999999951e-05, 2.6360999999999052e-05, 2.6235999999998927e-05, 2.613900000000141e-05, 2.6750000000002466e-05, 2.615300000000098e-05, 2.637500000000209e-05, 2.6735999999999427e-05, 2.6610999999999302e-05, 2.6556000000000496e-05, 2.6249999999998497e-05, 2.6528000000001356e-05, 2.5930000000000397e-05, 2.648700000000212e-05, 2.5985999999998677e-05, 2.5832999999999412e-05, 2.587500000000159e-05, 2.6055000000000522e-05, 2.6735999999999427e-05, 2.5957999999999537e-05, 2.615300000000098e-05, 2.6555000000001022e-05, 2.6749999999998997e-05, 2.6513999999998317e-05, 2.6346999999999482e-05, 2.6471999999999607e-05, 2.6236000000002396e-05, 2.663900000000191e-05, 2.6263999999998067e-05, 2.6306000000000246e-05, 2.590300000000073e-05, 2.6083999999999136e-05, 2.6235999999998927e-05, 2.595900000000248e-05, 2.5999999999998247e-05, 2.6651999999998538e-05, 2.6749999999998997e-05, 2.5943999999999967e-05, 2.6028000000000856e-05, 2.6028000000000856e-05, 2.6693999999997248e-05, 2.6721999999999857e-05, 2.5985999999998677e-05, 2.615300000000098e-05, 2.641699999999733e-05, 2.6069000000000092e-05, 2.5860999999998552e-05, 2.6708000000000287e-05, 2.6486000000002646e-05, 2.6124999999998372e-05]</msg>
<status status="PASS" starttime="20201030 15:55:12.941" endtime="20201030 15:55:12.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.936" endtime="20201030 15:55:12.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:12.948" endtime="20201030 15:55:12.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.946" endtime="20201030 15:55:12.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.945" endtime="20201030 15:55:12.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.588" endtime="20201030 15:55:12.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.587" endtime="20201030 15:55:12.969"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.978" endtime="20201030 15:55:12.994"></status>
</kw>
<msg timestamp="20201030 15:55:12.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.976" endtime="20201030 15:55:12.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:12.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:12.996" endtime="20201030 15:55:12.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:12.998" endtime="20201030 15:55:13.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.973" endtime="20201030 15:55:13.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.971" endtime="20201030 15:55:13.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.008" endtime="20201030 15:55:13.295"></status>
</kw>
<msg timestamp="20201030 15:55:13.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:13.006" endtime="20201030 15:55:13.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022633375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02266025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:13.299" endtime="20201030 15:55:13.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.308" endtime="20201030 15:55:13.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.003" endtime="20201030 15:55:13.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.002" endtime="20201030 15:55:13.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.315" level="INFO">${RESULT} = [{'diff': 2.6874999999999122e-05}, {'diff': 2.7569999999997596e-05}, {'diff': 2.6888999999998692e-05}, {'diff': 2.7263999999999067e-05}, {'diff': 2.7194000000001217e-05}, {'diff': 2.7749999999999997e-...</msg>
<status status="PASS" starttime="20201030 15:55:13.311" endtime="20201030 15:55:13.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.319" level="INFO">${ACCURACY} = {'diff': [2.6874999999999122e-05, 2.7569999999997596e-05, 2.6888999999998692e-05, 2.7263999999999067e-05, 2.7194000000001217e-05, 2.7749999999999997e-05, 2.766699999999858e-05, 2.6888999999998692e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:13.316" endtime="20201030 15:55:13.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.323" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.322" endtime="20201030 15:55:13.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.326" level="INFO">VALUE: [2.6874999999999122e-05, 2.7569999999997596e-05, 2.6888999999998692e-05, 2.7263999999999067e-05, 2.7194000000001217e-05, 2.7749999999999997e-05, 2.766699999999858e-05, 2.6888999999998692e-05, 2.7041999999997957e-05, 2.7443999999997998e-05, 2.722299999999983e-05, 2.6972000000000107e-05, 2.7165999999998608e-05, 2.7721999999997388e-05, 2.6972000000000107e-05, 2.6805000000001272e-05, 2.693100000000087e-05, 2.7179999999998178e-05, 2.6804999999997803e-05, 2.7068999999997623e-05, 2.7736000000000427e-05, 2.6972000000000107e-05, 2.7319000000001342e-05, 2.6888999999998692e-05, 2.740300000000223e-05, 2.7263999999999067e-05, 2.715300000000198e-05, 2.7388999999999192e-05, 2.7262999999999593e-05, 2.7652999999999012e-05, 2.6888999999998692e-05, 2.722299999999983e-05, 2.698700000000262e-05, 2.7292000000001676e-05, 2.7069000000001092e-05, 2.7222000000000357e-05, 2.6819000000000842e-05, 2.6888999999998692e-05, 2.7569000000001592e-05, 2.7388999999999192e-05, 2.690300000000173e-05, 2.6874999999999122e-05, 2.7388999999999192e-05, 2.6846999999999982e-05, 2.7069000000001092e-05, 2.7069000000001092e-05, 2.7749999999999997e-05, 2.7013999999998817e-05, 2.6972000000000107e-05, 2.7334000000000386e-05]</msg>
<status status="PASS" starttime="20201030 15:55:13.324" endtime="20201030 15:55:13.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.320" endtime="20201030 15:55:13.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.331" endtime="20201030 15:55:13.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.329" endtime="20201030 15:55:13.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.328" endtime="20201030 15:55:13.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.970" endtime="20201030 15:55:13.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:12.969" endtime="20201030 15:55:13.352"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.361" endtime="20201030 15:55:13.378"></status>
</kw>
<msg timestamp="20201030 15:55:13.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.359" endtime="20201030 15:55:13.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.380" endtime="20201030 15:55:13.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.382" endtime="20201030 15:55:13.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.356" endtime="20201030 15:55:13.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.354" endtime="20201030 15:55:13.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.391" endtime="20201030 15:55:13.677"></status>
</kw>
<msg timestamp="20201030 15:55:13.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.390" endtime="20201030 15:55:13.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023585542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.681" endtime="20201030 15:55:13.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.689" endtime="20201030 15:55:13.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.387" endtime="20201030 15:55:13.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.385" endtime="20201030 15:55:13.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:13.696" level="INFO">${RESULT} = [{'diff': 2.8068999999998623e-05}, {'diff': 2.8707999999998818e-05}, {'diff': 2.7819000000001842e-05}, {'diff': 2.8722000000001857e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.7888999999999692e-...</msg>
<status status="PASS" starttime="20201030 15:55:13.693" endtime="20201030 15:55:13.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:13.701" level="INFO">${ACCURACY} = {'diff': [2.8068999999998623e-05, 2.8707999999998818e-05, 2.7819000000001842e-05, 2.8722000000001857e-05, 2.8138999999999942e-05, 2.7888999999999692e-05, 2.8332999999998443e-05, 2.7944000000001967e-05...</msg>
<status status="PASS" starttime="20201030 15:55:13.697" endtime="20201030 15:55:13.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.705" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:13.704" endtime="20201030 15:55:13.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.708" level="INFO">VALUE: [2.8068999999998623e-05, 2.8707999999998818e-05, 2.7819000000001842e-05, 2.8722000000001857e-05, 2.8138999999999942e-05, 2.7888999999999692e-05, 2.8332999999998443e-05, 2.7944000000001967e-05, 2.8721999999998388e-05, 2.8291999999999207e-05, 2.8750000000000997e-05, 2.8639000000000442e-05, 2.8083000000001662e-05, 2.872300000000133e-05, 2.8332999999998443e-05, 2.7901999999999788e-05, 2.8222000000001357e-05, 2.8639000000000442e-05, 2.8082999999998193e-05, 2.8693999999999248e-05, 2.8318999999998873e-05, 2.8736000000001427e-05, 2.8471999999998138e-05, 2.8013999999999817e-05, 2.8319000000002342e-05, 2.8541999999999457e-05, 2.8750000000000997e-05, 2.8666999999999582e-05, 2.8235999999997458e-05, 2.7820000000001316e-05, 2.8250000000000497e-05, 2.8333999999997916e-05, 2.8736000000001427e-05, 2.8277999999999637e-05, 2.872299999999786e-05, 2.847299999999761e-05, 2.8138999999999942e-05, 2.8056000000001996e-05, 2.7901999999999788e-05, 2.8236000000000927e-05, 2.8486000000001177e-05, 2.8596999999998263e-05, 2.790300000000273e-05, 2.845899999999804e-05, 2.8485999999997708e-05, 2.841699999999933e-05, 2.8250000000000497e-05, 2.7986000000000677e-05, 2.7833000000001412e-05, 2.8041999999998957e-05]</msg>
<status status="PASS" starttime="20201030 15:55:13.706" endtime="20201030 15:55:13.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.702" endtime="20201030 15:55:13.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:13.714" endtime="20201030 15:55:13.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.712" endtime="20201030 15:55:13.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.711" endtime="20201030 15:55:13.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.353" endtime="20201030 15:55:13.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.352" endtime="20201030 15:55:13.735"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.744" endtime="20201030 15:55:13.761"></status>
</kw>
<msg timestamp="20201030 15:55:13.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.742" endtime="20201030 15:55:13.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:13.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:13.762" endtime="20201030 15:55:13.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.765" endtime="20201030 15:55:13.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.739" endtime="20201030 15:55:13.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.737" endtime="20201030 15:55:13.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:13.774" endtime="20201030 15:55:14.060"></status>
</kw>
<msg timestamp="20201030 15:55:14.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:13.772" endtime="20201030 15:55:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022455347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022484903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.065" endtime="20201030 15:55:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.073" endtime="20201030 15:55:14.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.770" endtime="20201030 15:55:14.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.768" endtime="20201030 15:55:14.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.080" level="INFO">${RESULT} = [{'diff': 2.9556000000000027e-05}, {'diff': 2.9777999999997667e-05}, {'diff': 2.9152999999997042e-05}, {'diff': 2.923699999999793e-05}, {'diff': 2.948699999999818e-05}, {'diff': 2.9277000000001163e-05...</msg>
<status status="PASS" starttime="20201030 15:55:14.077" endtime="20201030 15:55:14.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.085" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 2.9777999999997667e-05, 2.9152999999997042e-05, 2.923699999999793e-05, 2.948699999999818e-05, 2.9277000000001163e-05, 2.9569000000000123e-05, 2.9221999999998888e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:14.081" endtime="20201030 15:55:14.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.090" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.089" endtime="20201030 15:55:14.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.093" level="INFO">VALUE: [2.9556000000000027e-05, 2.9777999999997667e-05, 2.9152999999997042e-05, 2.923699999999793e-05, 2.948699999999818e-05, 2.9277000000001163e-05, 2.9569000000000123e-05, 2.9221999999998888e-05, 2.96379999999985e-05, 2.940199999999782e-05, 2.9041000000000483e-05, 2.9582999999999693e-05, 2.9680000000000678e-05, 2.8999999999997778e-05, 2.9402000000001288e-05, 2.9221999999998888e-05, 2.9653000000001012e-05, 2.9749999999998528e-05, 2.9138999999997472e-05, 2.9583999999999167e-05, 2.9402999999997292e-05, 2.9235999999998458e-05, 2.8875000000001122e-05, 2.8903000000000262e-05, 2.8888999999997222e-05, 2.9556000000000027e-05, 2.9055999999999527e-05, 2.9556000000000027e-05, 2.9555000000000553e-05, 2.9236000000001927e-05, 2.8957999999999068e-05, 2.9000000000001247e-05, 2.9639000000001442e-05, 2.9222000000002357e-05, 2.8804999999999803e-05, 2.9332999999999443e-05, 2.9721999999999388e-05, 2.9305000000000303e-05, 2.9402999999997292e-05, 2.9221999999998888e-05, 2.9485999999998708e-05, 2.8791999999999707e-05, 2.920900000000226e-05, 2.9152999999997042e-05, 2.9735999999998958e-05, 2.9000000000001247e-05, 2.8805999999999277e-05, 2.9389000000001192e-05, 2.8889000000000692e-05, 2.970899999999929e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.092" endtime="20201030 15:55:14.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.086" endtime="20201030 15:55:14.100"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.104" endtime="20201030 15:55:14.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.103" endtime="20201030 15:55:14.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.101" endtime="20201030 15:55:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.736" endtime="20201030 15:55:14.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:13.735" endtime="20201030 15:55:14.125"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.134" endtime="20201030 15:55:14.151"></status>
</kw>
<msg timestamp="20201030 15:55:14.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.132" endtime="20201030 15:55:14.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.152" endtime="20201030 15:55:14.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.155" endtime="20201030 15:55:14.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.130" endtime="20201030 15:55:14.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.128" endtime="20201030 15:55:14.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.164" endtime="20201030 15:55:14.452"></status>
</kw>
<msg timestamp="20201030 15:55:14.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.163" endtime="20201030 15:55:14.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.456" endtime="20201030 15:55:14.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.465" endtime="20201030 15:55:14.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.160" endtime="20201030 15:55:14.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.158" endtime="20201030 15:55:14.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.476" level="INFO">${RESULT} = [{'diff': 3.0235999999999458e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.073599999999996e-05}, {'diff': 3.066700000000158e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:14.471" endtime="20201030 15:55:14.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.483" level="INFO">${ACCURACY} = {'diff': [3.0235999999999458e-05, 3.0472000000000138e-05, 3.068100000000115e-05, 3.061099999999983e-05, 3.073599999999996e-05, 3.066700000000158e-05, 3.0235999999999458e-05, 2.9985999999999208e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:55:14.478" endtime="20201030 15:55:14.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.490" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.489" endtime="20201030 15:55:14.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.495" level="INFO">VALUE: [3.0235999999999458e-05, 3.0472000000000138e-05, 3.068100000000115e-05, 3.061099999999983e-05, 3.073599999999996e-05, 3.066700000000158e-05, 3.0235999999999458e-05, 2.9985999999999208e-05, 3.0402999999998293e-05, 3.069400000000125e-05, 3.077799999999867e-05, 2.998700000000215e-05, 3.0124999999998903e-05, 2.9902000000001788e-05, 2.988799999999875e-05, 3.0069000000000623e-05, 3.074999999999953e-05, 3.0305000000001303e-05, 3.073599999999996e-05, 3.0096999999999763e-05, 3.0068999999997154e-05, 3.0194000000000748e-05, 3.0306000000000777e-05, 3.0416999999997862e-05, 3.073599999999996e-05, 3.066699999999811e-05, 3.0056000000000527e-05, 2.9903000000001262e-05, 3.0360999999999583e-05, 3.06249999999994e-05, 3.019500000000022e-05, 3.06249999999994e-05, 3.0070000000000097e-05, 3.072299999999986e-05, 3.066599999999864e-05, 3.0250000000002497e-05, 2.9805000000000803e-05, 3.0069000000000623e-05, 2.9903000000001262e-05, 3.073599999999996e-05, 2.9819000000000373e-05, 3.042999999999796e-05, 3.0069000000000623e-05, 2.9888999999998223e-05, 3.0584000000000167e-05, 3.0236000000002927e-05, 2.9806000000000277e-05, 3.072200000000039e-05, 2.9819999999999847e-05, 3.0221999999999888e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.493" endtime="20201030 15:55:14.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.485" endtime="20201030 15:55:14.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.502" endtime="20201030 15:55:14.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.500" endtime="20201030 15:55:14.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.499" endtime="20201030 15:55:14.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.126" endtime="20201030 15:55:14.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.125" endtime="20201030 15:55:14.523"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.531" endtime="20201030 15:55:14.552"></status>
</kw>
<msg timestamp="20201030 15:55:14.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.530" endtime="20201030 15:55:14.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.553" endtime="20201030 15:55:14.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.556" endtime="20201030 15:55:14.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.527" endtime="20201030 15:55:14.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.525" endtime="20201030 15:55:14.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.565" endtime="20201030 15:55:14.851"></status>
</kw>
<msg timestamp="20201030 15:55:14.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025959181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025990403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.564" endtime="20201030 15:55:14.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025959181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025990403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.855" endtime="20201030 15:55:14.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.863" endtime="20201030 15:55:14.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.561" endtime="20201030 15:55:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.559" endtime="20201030 15:55:14.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:14.870" level="INFO">${RESULT} = [{'diff': 3.122199999999742e-05}, {'diff': 3.115299999999904e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.09579999999976e-05}, {'diff': 3.170900000000129e-05}, {'diff': 3.127799999999917e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:14.867" endtime="20201030 15:55:14.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:14.874" level="INFO">${ACCURACY} = {'diff': [3.122199999999742e-05, 3.115299999999904e-05, 3.10700000000011e-05, 3.09579999999976e-05, 3.170900000000129e-05, 3.127799999999917e-05, 3.102799999999892e-05, 3.1554999999999084e-05, 3.09159...</msg>
<status status="PASS" starttime="20201030 15:55:14.871" endtime="20201030 15:55:14.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.879" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:14.878" endtime="20201030 15:55:14.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.882" level="INFO">VALUE: [3.122199999999742e-05, 3.115299999999904e-05, 3.10700000000011e-05, 3.09579999999976e-05, 3.170900000000129e-05, 3.127799999999917e-05, 3.102799999999892e-05, 3.1554999999999084e-05, 3.091599999999889e-05, 3.1054999999998584e-05, 3.138900000000319e-05, 3.105500000000205e-05, 3.1582999999998224e-05, 3.1554999999999084e-05, 3.179200000000271e-05, 3.134700000000101e-05, 3.1554999999999084e-05, 3.123600000000046e-05, 3.098600000000021e-05, 3.097200000000064e-05, 3.077799999999867e-05, 3.105600000000153e-05, 3.17640000000001e-05, 3.16250000000004e-05, 3.1763000000000624e-05, 3.134700000000101e-05, 3.125000000000003e-05, 3.101399999999935e-05, 3.1304999999998834e-05, 3.090199999999932e-05, 3.175000000000053e-05, 3.119400000000175e-05, 3.123600000000046e-05, 3.11249999999999e-05, 3.093099999999793e-05, 3.140300000000276e-05, 3.1082999999997724e-05, 3.166699999999911e-05, 3.147199999999767e-05, 3.16250000000004e-05, 3.173600000000096e-05, 3.113899999999947e-05, 3.14310000000019e-05, 3.140300000000276e-05, 3.123600000000046e-05, 3.133399999999745e-05, 3.0847999999999987e-05, 3.156900000000212e-05, 3.122300000000036e-05, 3.133300000000144e-05]</msg>
<status status="PASS" starttime="20201030 15:55:14.880" endtime="20201030 15:55:14.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.875" endtime="20201030 15:55:14.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:14.887" endtime="20201030 15:55:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.886" endtime="20201030 15:55:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.885" endtime="20201030 15:55:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.523" endtime="20201030 15:55:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.523" endtime="20201030 15:55:14.908"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.917" endtime="20201030 15:55:14.934"></status>
</kw>
<msg timestamp="20201030 15:55:14.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.916" endtime="20201030 15:55:14.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:14.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:14.935" endtime="20201030 15:55:14.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.938" endtime="20201030 15:55:14.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.913" endtime="20201030 15:55:14.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.911" endtime="20201030 15:55:14.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:14.947" endtime="20201030 15:55:15.234"></status>
</kw>
<msg timestamp="20201030 15:55:15.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:14.946" endtime="20201030 15:55:15.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022252917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.238" endtime="20201030 15:55:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.246" endtime="20201030 15:55:15.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.943" endtime="20201030 15:55:15.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.941" endtime="20201030 15:55:15.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.253" level="INFO">${RESULT} = [{'diff': 3.202799999999992e-05}, {'diff': 3.2777000000001194e-05}, {'diff': 3.205500000000305e-05}, {'diff': 3.192999999999946e-05}, {'diff': 3.21250000000009e-05}, {'diff': 3.277800000000067e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:15.250" endtime="20201030 15:55:15.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.258" level="INFO">${ACCURACY} = {'diff': [3.202799999999992e-05, 3.2777000000001194e-05, 3.205500000000305e-05, 3.192999999999946e-05, 3.21250000000009e-05, 3.277800000000067e-05, 3.265200000000107e-05, 3.223600000000146e-05, 3.2179...</msg>
<status status="PASS" starttime="20201030 15:55:15.254" endtime="20201030 15:55:15.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.263" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.262" endtime="20201030 15:55:15.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.266" level="INFO">VALUE: [3.202799999999992e-05, 3.2777000000001194e-05, 3.205500000000305e-05, 3.192999999999946e-05, 3.21250000000009e-05, 3.277800000000067e-05, 3.265200000000107e-05, 3.223600000000146e-05, 3.217999999999971e-05, 3.2068999999999154e-05, 3.2568999999999654e-05, 3.273599999999849e-05, 3.2304999999999834e-05, 3.190299999999979e-05, 3.187500000000065e-05, 3.191699999999936e-05, 3.255599999999956e-05, 3.222200000000189e-05, 3.213900000000047e-05, 3.2374999999997683e-05, 3.20839999999982e-05, 3.20700000000021e-05, 3.241699999999986e-05, 3.272300000000186e-05, 3.213900000000047e-05, 3.2013000000000874e-05, 3.255599999999956e-05, 3.275000000000153e-05, 3.201399999999688e-05, 3.181900000000237e-05, 3.269399999999978e-05, 3.247200000000214e-05, 3.2304999999999834e-05, 3.2555000000000084e-05, 3.258300000000269e-05, 3.258300000000269e-05, 3.273600000000196e-05, 3.265300000000054e-05, 3.205599999999906e-05, 3.190299999999979e-05, 3.255599999999956e-05, 3.273599999999849e-05, 3.248600000000171e-05, 3.183400000000142e-05, 3.273600000000196e-05, 3.248600000000171e-05, 3.231999999999888e-05, 3.225000000000103e-05, 3.2304999999999834e-05, 3.263900000000097e-05]</msg>
<status status="PASS" starttime="20201030 15:55:15.264" endtime="20201030 15:55:15.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.259" endtime="20201030 15:55:15.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.271" endtime="20201030 15:55:15.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.269" endtime="20201030 15:55:15.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.268" endtime="20201030 15:55:15.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.909" endtime="20201030 15:55:15.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:14.909" endtime="20201030 15:55:15.292"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.301" endtime="20201030 15:55:15.318"></status>
</kw>
<msg timestamp="20201030 15:55:15.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.299" endtime="20201030 15:55:15.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.319" endtime="20201030 15:55:15.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.322" endtime="20201030 15:55:15.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.296" endtime="20201030 15:55:15.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.294" endtime="20201030 15:55:15.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.331" endtime="20201030 15:55:15.619"></status>
</kw>
<msg timestamp="20201030 15:55:15.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.329" endtime="20201030 15:55:15.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022444972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.623" endtime="20201030 15:55:15.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.631" endtime="20201030 15:55:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.327" endtime="20201030 15:55:15.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.325" endtime="20201030 15:55:15.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:15.638" level="INFO">${RESULT} = [{'diff': 3.373599999999949e-05}, {'diff': 3.366600000000164e-05}, {'diff': 3.291600000000089e-05}, {'diff': 3.325000000000203e-05}, {'diff': 3.298599999999874e-05}, {'diff': 3.365300000000154e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:15.635" endtime="20201030 15:55:15.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:15.642" level="INFO">${ACCURACY} = {'diff': [3.373599999999949e-05, 3.366600000000164e-05, 3.291600000000089e-05, 3.325000000000203e-05, 3.298599999999874e-05, 3.365300000000154e-05, 3.374999999999906e-05, 3.2818999999999904e-05, 3.306...</msg>
<status status="PASS" starttime="20201030 15:55:15.639" endtime="20201030 15:55:15.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.647" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:15.646" endtime="20201030 15:55:15.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.650" level="INFO">VALUE: [3.373599999999949e-05, 3.366600000000164e-05, 3.291600000000089e-05, 3.325000000000203e-05, 3.298599999999874e-05, 3.365300000000154e-05, 3.374999999999906e-05, 3.2818999999999904e-05, 3.3069000000000154e-05, 3.323599999999899e-05, 3.298600000000221e-05, 3.348600000000271e-05, 3.365299999999807e-05, 3.340300000000129e-05, 3.340300000000129e-05, 3.3262999999998655e-05, 3.313900000000147e-05, 3.355600000000056e-05, 3.323700000000193e-05, 3.2818999999999904e-05, 3.290199999999785e-05, 3.369400000000078e-05, 3.315200000000157e-05, 3.288899999999775e-05, 3.323599999999899e-05, 3.2818999999999904e-05, 3.3569000000000654e-05, 3.341700000000086e-05, 3.340300000000129e-05, 3.3569000000000654e-05, 3.291700000000036e-05, 3.288899999999775e-05, 3.355600000000056e-05, 3.357000000000013e-05, 3.306999999999963e-05, 3.322300000000236e-05, 3.359800000000274e-05, 3.319499999999975e-05, 3.330600000000031e-05, 3.372300000000286e-05, 3.2846999999999044e-05, 3.288800000000175e-05, 3.290200000000132e-05, 3.366600000000164e-05, 3.313900000000147e-05, 3.3555000000001084e-05, 3.3569000000000654e-05, 3.3569000000000654e-05, 3.288899999999775e-05, 3.322199999999942e-05]</msg>
<status status="PASS" starttime="20201030 15:55:15.648" endtime="20201030 15:55:15.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.643" endtime="20201030 15:55:15.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:15.655" endtime="20201030 15:55:15.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.654" endtime="20201030 15:55:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.652" endtime="20201030 15:55:15.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.293" endtime="20201030 15:55:15.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.292" endtime="20201030 15:55:15.676"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.685" endtime="20201030 15:55:15.703"></status>
</kw>
<msg timestamp="20201030 15:55:15.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.683" endtime="20201030 15:55:15.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:15.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:15.704" endtime="20201030 15:55:15.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.707" endtime="20201030 15:55:15.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.680" endtime="20201030 15:55:15.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.678" endtime="20201030 15:55:15.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:15.716" endtime="20201030 15:55:16.003"></status>
</kw>
<msg timestamp="20201030 15:55:16.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:15.715" endtime="20201030 15:55:16.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023320583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023354847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.007" endtime="20201030 15:55:16.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.015" endtime="20201030 15:55:16.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.712" endtime="20201030 15:55:16.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.710" endtime="20201030 15:55:16.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.022" level="INFO">${RESULT} = [{'diff': 3.42640000000026e-05}, {'diff': 3.4319000000001404e-05}, {'diff': 3.438799999999978e-05}, {'diff': 3.425000000000303e-05}, {'diff': 3.448600000000024e-05}, {'diff': 3.4138999999999003e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.019" endtime="20201030 15:55:16.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.027" level="INFO">${ACCURACY} = {'diff': [3.42640000000026e-05, 3.4319000000001404e-05, 3.438799999999978e-05, 3.425000000000303e-05, 3.448600000000024e-05, 3.4138999999999003e-05, 3.4388999999999253e-05, 3.472199999999745e-05, 3.39...</msg>
<status status="PASS" starttime="20201030 15:55:16.023" endtime="20201030 15:55:16.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.031" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.030" endtime="20201030 15:55:16.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.034" level="INFO">VALUE: [3.42640000000026e-05, 3.4319000000001404e-05, 3.438799999999978e-05, 3.425000000000303e-05, 3.448600000000024e-05, 3.4138999999999003e-05, 3.4388999999999253e-05, 3.472199999999745e-05, 3.399999999999931e-05, 3.4152999999998573e-05, 3.4069000000001154e-05, 3.472200000000092e-05, 3.380600000000081e-05, 3.3888999999998753e-05, 3.473600000000049e-05, 3.397200000000017e-05, 3.383399999999995e-05, 3.473699999999996e-05, 3.398699999999921e-05, 3.4638999999999504e-05, 3.476399999999963e-05, 3.415200000000257e-05, 3.4082999999997254e-05, 3.4583000000001224e-05, 3.388900000000222e-05, 3.4569000000001654e-05, 3.4388999999999253e-05, 3.426399999999913e-05, 3.4361000000000114e-05, 3.473600000000049e-05, 3.466699999999864e-05, 3.402799999999845e-05, 3.473600000000049e-05, 3.432000000000088e-05, 3.402799999999845e-05, 3.475000000000006e-05, 3.449999999999981e-05, 3.449999999999981e-05, 3.399999999999931e-05, 3.465300000000254e-05, 3.387500000000265e-05, 3.423599999999999e-05, 3.3804999999997865e-05, 3.473599999999702e-05, 3.4638999999999504e-05, 3.423599999999999e-05, 3.4152999999998573e-05, 3.4388999999999253e-05, 3.441699999999839e-05, 3.455599999999809e-05]</msg>
<status status="PASS" starttime="20201030 15:55:16.032" endtime="20201030 15:55:16.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.027" endtime="20201030 15:55:16.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.040" endtime="20201030 15:55:16.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.038" endtime="20201030 15:55:16.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.037" endtime="20201030 15:55:16.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.677" endtime="20201030 15:55:16.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:15.676" endtime="20201030 15:55:16.062"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.076" endtime="20201030 15:55:16.093"></status>
</kw>
<msg timestamp="20201030 15:55:16.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.072" endtime="20201030 15:55:16.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.094" endtime="20201030 15:55:16.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.097" endtime="20201030 15:55:16.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.069" endtime="20201030 15:55:16.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.066" endtime="20201030 15:55:16.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.106" endtime="20201030 15:55:16.393"></status>
</kw>
<msg timestamp="20201030 15:55:16.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029926556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029962181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.105" endtime="20201030 15:55:16.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029926556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029962181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.397" endtime="20201030 15:55:16.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.406" endtime="20201030 15:55:16.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.102" endtime="20201030 15:55:16.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.100" endtime="20201030 15:55:16.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.413" level="INFO">${RESULT} = [{'diff': 3.5625000000000934e-05}, {'diff': 3.52779999999997e-05}, {'diff': 3.529200000000274e-05}, {'diff': 3.4902999999999323e-05}, {'diff': 3.555600000000256e-05}, {'diff': 3.572200000000192e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:16.409" endtime="20201030 15:55:16.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.418" level="INFO">${ACCURACY} = {'diff': [3.5625000000000934e-05, 3.52779999999997e-05, 3.529200000000274e-05, 3.4902999999999323e-05, 3.555600000000256e-05, 3.572200000000192e-05, 3.5666999999999643e-05, 3.522200000000142e-05, 3.56...</msg>
<status status="PASS" starttime="20201030 15:55:16.414" endtime="20201030 15:55:16.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.423" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.421" endtime="20201030 15:55:16.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.425" level="INFO">VALUE: [3.5625000000000934e-05, 3.52779999999997e-05, 3.529200000000274e-05, 3.4902999999999323e-05, 3.555600000000256e-05, 3.572200000000192e-05, 3.5666999999999643e-05, 3.522200000000142e-05, 3.5653000000000074e-05, 3.4888999999999754e-05, 3.4888999999999754e-05, 3.555599999999909e-05, 3.573600000000149e-05, 3.552799999999995e-05, 3.5347000000001544e-05, 3.4875000000000184e-05, 3.4888999999999754e-05, 3.5069000000002154e-05, 3.5389000000000254e-05, 3.569399999999931e-05, 3.5347000000001544e-05, 3.575000000000106e-05, 3.498599999999727e-05, 3.483399999999748e-05, 3.5166999999995674e-05, 3.5360999999997644e-05, 3.486100000000408e-05, 3.4902999999995854e-05, 3.569500000000225e-05, 3.548600000000124e-05, 3.5332999999998504e-05, 3.572200000000192e-05, 3.547200000000167e-05, 3.565199999999713e-05, 3.490200000000332e-05, 3.522200000000142e-05, 3.497200000000117e-05, 3.515300000000304e-05, 3.572199999999498e-05, 3.548600000000124e-05, 3.563900000000397e-05, 3.522199999999448e-05, 3.513900000000347e-05, 3.522200000000142e-05, 3.4930999999994994e-05, 3.5110999999997394e-05, 3.544400000000253e-05, 3.525000000000056e-05, 3.480599999999834e-05, 3.522300000000089e-05]</msg>
<status status="PASS" starttime="20201030 15:55:16.424" endtime="20201030 15:55:16.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.419" endtime="20201030 15:55:16.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.430" endtime="20201030 15:55:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.429" endtime="20201030 15:55:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.427" endtime="20201030 15:55:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.063" endtime="20201030 15:55:16.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.063" endtime="20201030 15:55:16.451"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.460" endtime="20201030 15:55:16.477"></status>
</kw>
<msg timestamp="20201030 15:55:16.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.459" endtime="20201030 15:55:16.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.479" endtime="20201030 15:55:16.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.481" endtime="20201030 15:55:16.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.456" endtime="20201030 15:55:16.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.454" endtime="20201030 15:55:16.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.490" endtime="20201030 15:55:16.778"></status>
</kw>
<msg timestamp="20201030 15:55:16.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.489" endtime="20201030 15:55:16.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022483667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022520403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.782" endtime="20201030 15:55:16.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.790" endtime="20201030 15:55:16.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.486" endtime="20201030 15:55:16.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.484" endtime="20201030 15:55:16.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:16.797" level="INFO">${RESULT} = [{'diff': 3.673600000000249e-05}, {'diff': 3.6167000000000143e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.645900000000257e-05}, {'diff': 3.6624999999998464e-05}, {'diff': 3.6403000000000824e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:16.794" endtime="20201030 15:55:16.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:16.802" level="INFO">${ACCURACY} = {'diff': [3.673600000000249e-05, 3.6167000000000143e-05, 3.623599999999852e-05, 3.645900000000257e-05, 3.6624999999998464e-05, 3.6403000000000824e-05, 3.604200000000002e-05, 3.657000000000313e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 15:55:16.798" endtime="20201030 15:55:16.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.806" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:16.805" endtime="20201030 15:55:16.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.809" level="INFO">VALUE: [3.673600000000249e-05, 3.6167000000000143e-05, 3.623599999999852e-05, 3.645900000000257e-05, 3.6624999999998464e-05, 3.6403000000000824e-05, 3.604200000000002e-05, 3.657000000000313e-05, 3.6388999999997784e-05, 3.672199999999945e-05, 3.6346999999999074e-05, 3.623599999999852e-05, 3.5888999999997284e-05, 3.6417000000000394e-05, 3.6388999999997784e-05, 3.6417000000000394e-05, 3.604200000000002e-05, 3.6054999999996645e-05, 3.6430999999999963e-05, 3.5874999999997714e-05, 3.623599999999852e-05, 3.644499999999953e-05, 3.6333000000002974e-05, 3.6610999999998894e-05, 3.623599999999852e-05, 3.6139000000001004e-05, 3.672300000000239e-05, 3.6139000000001004e-05, 3.6068999999999685e-05, 3.590199999999738e-05, 3.6597000000002794e-05, 3.622200000000242e-05, 3.6624999999998464e-05, 3.5916999999999893e-05, 3.601400000000088e-05, 3.6068999999999685e-05, 3.599999999999784e-05, 3.626400000000113e-05, 3.645799999999963e-05, 3.631999999999941e-05, 3.607000000000263e-05, 3.6403000000000824e-05, 3.6375000000001684e-05, 3.5902999999996854e-05, 3.656999999999966e-05, 3.623699999999799e-05, 3.6638999999998034e-05, 3.623599999999852e-05, 3.6083000000002724e-05, 3.622199999999895e-05]</msg>
<status status="PASS" starttime="20201030 15:55:16.808" endtime="20201030 15:55:16.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.803" endtime="20201030 15:55:16.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:16.814" endtime="20201030 15:55:16.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.813" endtime="20201030 15:55:16.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.811" endtime="20201030 15:55:16.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.452" endtime="20201030 15:55:16.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.451" endtime="20201030 15:55:16.835"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.844" endtime="20201030 15:55:16.862"></status>
</kw>
<msg timestamp="20201030 15:55:16.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.842" endtime="20201030 15:55:16.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:16.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:16.864" endtime="20201030 15:55:16.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.866" endtime="20201030 15:55:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.839" endtime="20201030 15:55:16.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.837" endtime="20201030 15:55:16.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:16.875" endtime="20201030 15:55:17.162"></status>
</kw>
<msg timestamp="20201030 15:55:17.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:16.874" endtime="20201030 15:55:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023297403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.166" endtime="20201030 15:55:17.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.175" endtime="20201030 15:55:17.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.871" endtime="20201030 15:55:17.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.869" endtime="20201030 15:55:17.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.182" level="INFO">${RESULT} = [{'diff': 3.774999999999959e-05}, {'diff': 3.7652999999998604e-05}, {'diff': 3.7417000000001394e-05}, {'diff': 3.7403000000001824e-05}, {'diff': 3.708399999999973e-05}, {'diff': 3.7526999999999006e-05...</msg>
<status status="PASS" starttime="20201030 15:55:17.178" endtime="20201030 15:55:17.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.186" level="INFO">${ACCURACY} = {'diff': [3.774999999999959e-05, 3.7652999999998604e-05, 3.7417000000001394e-05, 3.7403000000001824e-05, 3.708399999999973e-05, 3.7526999999999006e-05, 3.6874999999998714e-05, 3.722299999999942e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:55:17.183" endtime="20201030 15:55:17.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.191" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.189" endtime="20201030 15:55:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.193" level="INFO">VALUE: [3.774999999999959e-05, 3.7652999999998604e-05, 3.7417000000001394e-05, 3.7403000000001824e-05, 3.708399999999973e-05, 3.7526999999999006e-05, 3.6874999999998714e-05, 3.722299999999942e-05, 3.74720000000002e-05, 3.74720000000002e-05, 3.7333000000000505e-05, 3.694500000000003e-05, 3.7360999999999644e-05, 3.7555000000001615e-05, 3.723599999999952e-05, 3.7681000000001214e-05, 3.7583000000000755e-05, 3.705600000000059e-05, 3.774999999999959e-05, 3.695800000000013e-05, 3.698599999999927e-05, 3.744400000000106e-05, 3.7153000000001574e-05, 3.705600000000059e-05, 3.722300000000289e-05, 3.7125000000002434e-05, 3.723599999999952e-05, 3.7305000000001365e-05, 3.776399999999916e-05, 3.702799999999798e-05, 3.6833000000000005e-05, 3.7417000000001394e-05, 3.7083000000000255e-05, 3.704200000000102e-05, 3.774999999999959e-05, 3.7653000000002074e-05, 3.757000000000066e-05, 3.6931000000000463e-05, 3.707000000000016e-05, 3.702800000000145e-05, 3.722199999999995e-05, 3.680600000000034e-05, 3.720899999999985e-05, 3.748699999999924e-05, 3.6888999999998284e-05, 3.7569000000001185e-05, 3.740200000000235e-05, 3.7610999999999895e-05, 3.780600000000134e-05, 3.7666999999998174e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.192" endtime="20201030 15:55:17.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.187" endtime="20201030 15:55:17.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.199" endtime="20201030 15:55:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.198" endtime="20201030 15:55:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.196" endtime="20201030 15:55:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.836" endtime="20201030 15:55:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:16.835" endtime="20201030 15:55:17.220"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.229" endtime="20201030 15:55:17.246"></status>
</kw>
<msg timestamp="20201030 15:55:17.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.227" endtime="20201030 15:55:17.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.247" endtime="20201030 15:55:17.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.250" endtime="20201030 15:55:17.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.225" endtime="20201030 15:55:17.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.222" endtime="20201030 15:55:17.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.259" endtime="20201030 15:55:17.546"></status>
</kw>
<msg timestamp="20201030 15:55:17.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.258" endtime="20201030 15:55:17.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022316111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.550" endtime="20201030 15:55:17.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.559" endtime="20201030 15:55:17.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.255" endtime="20201030 15:55:17.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.253" endtime="20201030 15:55:17.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.566" level="INFO">${RESULT} = [{'diff': 3.8568999999998715e-05}, {'diff': 3.7888999999999284e-05}, {'diff': 3.823600000000052e-05}, {'diff': 3.7819000000001435e-05}, {'diff': 3.8416999999998924e-05}, {'diff': 3.7917000000001894e-0...</msg>
<status status="PASS" starttime="20201030 15:55:17.562" endtime="20201030 15:55:17.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.571" level="INFO">${ACCURACY} = {'diff': [3.8568999999998715e-05, 3.7888999999999284e-05, 3.823600000000052e-05, 3.7819000000001435e-05, 3.8416999999998924e-05, 3.7917000000001894e-05, 3.8194999999997814e-05, 3.8152999999999104e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:17.567" endtime="20201030 15:55:17.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.576" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.575" endtime="20201030 15:55:17.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.578" level="INFO">VALUE: [3.8568999999998715e-05, 3.7888999999999284e-05, 3.823600000000052e-05, 3.7819000000001435e-05, 3.8416999999998924e-05, 3.7917000000001894e-05, 3.8194999999997814e-05, 3.8152999999999104e-05, 3.873599999999755e-05, 3.8138999999999534e-05, 3.8402999999999354e-05, 3.807000000000116e-05, 3.823699999999999e-05, 3.7832999999997535e-05, 3.827799999999923e-05, 3.799999999999984e-05, 3.7790999999998826e-05, 3.8054999999998645e-05, 3.875000000000059e-05, 3.7832999999997535e-05, 3.852799999999948e-05, 3.8568999999998715e-05, 3.8554999999999146e-05, 3.819400000000181e-05, 3.782000000000091e-05, 3.855600000000209e-05, 3.805600000000159e-05, 3.8375000000000214e-05, 3.8709000000001353e-05, 3.832000000000141e-05, 3.872300000000092e-05, 3.8153000000002574e-05, 3.8388999999999784e-05, 3.8555000000002615e-05, 3.838799999999684e-05, 3.8625000000000465e-05, 3.875000000000059e-05, 3.848600000000077e-05, 3.7819000000001435e-05, 3.8568999999998715e-05, 3.873599999999755e-05, 3.7818999999997965e-05, 3.823600000000052e-05, 3.8166999999998674e-05, 3.8402999999999354e-05, 3.855600000000209e-05, 3.857000000000166e-05, 3.8416999999998924e-05, 3.873700000000049e-05, 3.865200000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.577" endtime="20201030 15:55:17.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.572" endtime="20201030 15:55:17.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.584" endtime="20201030 15:55:17.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.582" endtime="20201030 15:55:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.581" endtime="20201030 15:55:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.221" endtime="20201030 15:55:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.220" endtime="20201030 15:55:17.604"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.613" endtime="20201030 15:55:17.631"></status>
</kw>
<msg timestamp="20201030 15:55:17.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.612" endtime="20201030 15:55:17.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.633" endtime="20201030 15:55:17.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.635" endtime="20201030 15:55:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.609" endtime="20201030 15:55:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.607" endtime="20201030 15:55:17.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.644" endtime="20201030 15:55:17.934"></status>
</kw>
<msg timestamp="20201030 15:55:17.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.643" endtime="20201030 15:55:17.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022794417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.941" endtime="20201030 15:55:17.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.955" endtime="20201030 15:55:17.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.640" endtime="20201030 15:55:17.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.638" endtime="20201030 15:55:17.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.965" level="INFO">${RESULT} = [{'diff': 3.973599999999855e-05}, {'diff': 3.897300000000117e-05}, {'diff': 3.89859999999978e-05}, {'diff': 3.881999999999844e-05}, {'diff': 3.9403000000000354e-05}, {'diff': 3.891599999999995e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:17.960" endtime="20201030 15:55:17.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:17.970" level="INFO">${ACCURACY} = {'diff': [3.973599999999855e-05, 3.897300000000117e-05, 3.89859999999978e-05, 3.881999999999844e-05, 3.9403000000000354e-05, 3.891599999999995e-05, 3.940200000000088e-05, 3.930599999999937e-05, 3.9139...</msg>
<status status="PASS" starttime="20201030 15:55:17.966" endtime="20201030 15:55:17.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.974" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:17.973" endtime="20201030 15:55:17.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.977" level="INFO">VALUE: [3.973599999999855e-05, 3.897300000000117e-05, 3.89859999999978e-05, 3.881999999999844e-05, 3.9403000000000354e-05, 3.891599999999995e-05, 3.940200000000088e-05, 3.930599999999937e-05, 3.9139000000000534e-05, 3.973600000000202e-05, 3.9068999999999215e-05, 3.9416999999999924e-05, 3.9403000000000354e-05, 3.976399999999769e-05, 3.9153000000000104e-05, 3.925000000000109e-05, 3.89859999999978e-05, 3.950000000000134e-05, 3.930599999999937e-05, 3.922199999999848e-05, 3.930599999999937e-05, 3.975000000000159e-05, 3.948700000000124e-05, 3.8805000000002865e-05, 3.9582999999999285e-05, 3.938800000000131e-05, 3.925000000000109e-05, 3.94720000000022e-05, 3.89720000000017e-05, 3.895799999999866e-05, 3.9153000000000104e-05, 3.8902999999999854e-05, 3.9596999999998855e-05, 3.906999999999869e-05, 3.8902999999999854e-05, 3.9375000000001215e-05, 3.9360999999998175e-05, 3.905599999999912e-05, 3.9416999999999924e-05, 3.9375000000001215e-05, 3.923700000000099e-05, 3.9473000000001673e-05, 3.898600000000127e-05, 3.9304999999999896e-05, 3.891599999999995e-05, 3.9555000000000146e-05, 3.973599999999855e-05, 3.8790999999999826e-05, 3.8916999999999424e-05, 3.9374999999997745e-05]</msg>
<status status="PASS" starttime="20201030 15:55:17.975" endtime="20201030 15:55:17.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.970" endtime="20201030 15:55:17.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.982" endtime="20201030 15:55:18.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.980" endtime="20201030 15:55:18.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.979" endtime="20201030 15:55:18.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.605" endtime="20201030 15:55:18.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.605" endtime="20201030 15:55:18.003"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.012" endtime="20201030 15:55:18.033"></status>
</kw>
<msg timestamp="20201030 15:55:18.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.010" endtime="20201030 15:55:18.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.034" endtime="20201030 15:55:18.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.037" endtime="20201030 15:55:18.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.008" endtime="20201030 15:55:18.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.005" endtime="20201030 15:55:18.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.046" endtime="20201030 15:55:18.346"></status>
</kw>
<msg timestamp="20201030 15:55:18.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026320903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026360972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.044" endtime="20201030 15:55:18.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026320903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026360972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.350" endtime="20201030 15:55:18.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.359" endtime="20201030 15:55:18.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.042" endtime="20201030 15:55:18.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.040" endtime="20201030 15:55:18.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.366" level="INFO">${RESULT} = [{'diff': 4.0069000000000216e-05}, {'diff': 4.0569000000000716e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 4.073600000000302e-05}, {'diff': 3.997199999999923e-05}, {'diff': 4.0152999999997635e-05...</msg>
<status status="PASS" starttime="20201030 15:55:18.363" endtime="20201030 15:55:18.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.370" level="INFO">${ACCURACY} = {'diff': [4.0069000000000216e-05, 4.0569000000000716e-05, 3.9903000000000854e-05, 4.073600000000302e-05, 3.997199999999923e-05, 4.0152999999997635e-05, 4.073599999999955e-05, 4.0167000000000674e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:55:18.367" endtime="20201030 15:55:18.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.375" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.374" endtime="20201030 15:55:18.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.377" level="INFO">VALUE: [4.0069000000000216e-05, 4.0569000000000716e-05, 3.9903000000000854e-05, 4.073600000000302e-05, 3.997199999999923e-05, 4.0152999999997635e-05, 4.073599999999955e-05, 4.0167000000000674e-05, 4.0360999999999175e-05, 4.0389000000001785e-05, 4.0625000000002465e-05, 4.0389000000001785e-05, 4.001399999999794e-05, 4.006999999999969e-05, 3.991599999999748e-05, 4.073599999999955e-05, 4.0304999999997426e-05, 4.026400000000166e-05, 4.0305000000000896e-05, 4.074999999999912e-05, 4.0096999999999355e-05, 4.0082999999999785e-05, 4.0082999999999785e-05, 4.0167000000000674e-05, 3.981999999999944e-05, 4.023599999999905e-05, 4.022199999999948e-05, 4.0374999999998745e-05, 4.0417000000000924e-05, 4.0194999999999814e-05, 3.983400000000248e-05, 4.0236999999998524e-05, 4.001400000000141e-05, 4.066599999999823e-05, 3.988800000000181e-05, 4.0082999999999785e-05, 4.019400000000034e-05, 4.0333000000000035e-05, 4.027799999999776e-05, 4.02920000000008e-05, 4.023599999999905e-05, 4.000000000000184e-05, 4.0653000000001605e-05, 4.055600000000062e-05, 4.054200000000105e-05, 4.0776999999998786e-05, 3.980599999999987e-05, 4.0082999999999785e-05, 3.9874999999998245e-05, 3.9875000000001715e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.376" endtime="20201030 15:55:18.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.371" endtime="20201030 15:55:18.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.383" endtime="20201030 15:55:18.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.382" endtime="20201030 15:55:18.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.380" endtime="20201030 15:55:18.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.004" endtime="20201030 15:55:18.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.003" endtime="20201030 15:55:18.404"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.414" endtime="20201030 15:55:18.431"></status>
</kw>
<msg timestamp="20201030 15:55:18.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.412" endtime="20201030 15:55:18.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.433" endtime="20201030 15:55:18.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.435" endtime="20201030 15:55:18.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.409" endtime="20201030 15:55:18.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.407" endtime="20201030 15:55:18.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.444" endtime="20201030 15:55:18.730"></status>
</kw>
<msg timestamp="20201030 15:55:18.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.443" endtime="20201030 15:55:18.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022774069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.734" endtime="20201030 15:55:18.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.743" endtime="20201030 15:55:18.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.440" endtime="20201030 15:55:18.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.438" endtime="20201030 15:55:18.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:18.750" level="INFO">${RESULT} = [{'diff': 4.1583000000001286e-05}, {'diff': 4.1403000000002355e-05}, {'diff': 4.140199999999941e-05}, {'diff': 4.140199999999941e-05}, {'diff': 4.166599999999923e-05}, {'diff': 4.0791000000001826e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:18.746" endtime="20201030 15:55:18.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:18.755" level="INFO">${ACCURACY} = {'diff': [4.1583000000001286e-05, 4.1403000000002355e-05, 4.140199999999941e-05, 4.140199999999941e-05, 4.166599999999923e-05, 4.0791000000001826e-05, 4.0888999999998815e-05, 4.1068999999997746e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:55:18.751" endtime="20201030 15:55:18.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.760" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:18.758" endtime="20201030 15:55:18.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.762" level="INFO">VALUE: [4.1583000000001286e-05, 4.1403000000002355e-05, 4.140199999999941e-05, 4.140199999999941e-05, 4.166599999999923e-05, 4.0791000000001826e-05, 4.0888999999998815e-05, 4.1068999999997746e-05, 4.1069000000001216e-05, 4.175000000000012e-05, 4.080600000000087e-05, 4.1389000000002785e-05, 4.107000000000069e-05, 4.172200000000098e-05, 4.130600000000137e-05, 4.123600000000005e-05, 4.09859999999998e-05, 4.14860000000003e-05, 4.0972999999999704e-05, 4.0860999999999675e-05, 4.1624999999999995e-05, 4.170800000000141e-05, 4.115199999999916e-05, 4.140199999999941e-05, 4.175000000000012e-05, 4.1097000000000355e-05, 4.1180999999997775e-05, 4.1152999999998635e-05, 4.0931000000000994e-05, 4.123600000000005e-05, 4.147200000000073e-05, 4.1152999999998635e-05, 4.1402999999998885e-05, 4.154200000000205e-05, 4.107000000000069e-05, 4.106999999999722e-05, 4.175000000000012e-05, 4.0972999999999704e-05, 4.14860000000003e-05, 4.1290999999998856e-05, 4.1402999999998885e-05, 4.170799999999794e-05, 4.14860000000003e-05, 4.1152999999998635e-05, 4.123600000000005e-05, 4.0805000000001396e-05, 4.1430999999998025e-05, 4.157000000000119e-05, 4.123600000000005e-05, 4.097200000000023e-05]</msg>
<status status="PASS" starttime="20201030 15:55:18.761" endtime="20201030 15:55:18.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.756" endtime="20201030 15:55:18.764"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.767" endtime="20201030 15:55:18.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.766" endtime="20201030 15:55:18.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.765" endtime="20201030 15:55:18.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.405" endtime="20201030 15:55:18.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.405" endtime="20201030 15:55:18.788"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.797" endtime="20201030 15:55:18.813"></status>
</kw>
<msg timestamp="20201030 15:55:18.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.795" endtime="20201030 15:55:18.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:18.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.815" endtime="20201030 15:55:18.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.818" endtime="20201030 15:55:18.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.793" endtime="20201030 15:55:18.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.791" endtime="20201030 15:55:18.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.827" endtime="20201030 15:55:19.115"></status>
</kw>
<msg timestamp="20201030 15:55:19.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:18.825" endtime="20201030 15:55:19.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022241931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.119" endtime="20201030 15:55:19.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.128" endtime="20201030 15:55:19.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.823" endtime="20201030 15:55:19.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.821" endtime="20201030 15:55:19.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.135" level="INFO">${RESULT} = [{'diff': 4.2223000000000954e-05}, {'diff': 4.195799999999819e-05}, {'diff': 4.1847000000001106e-05}, {'diff': 4.240199999999694e-05}, {'diff': 4.275000000000112e-05}, {'diff': 4.2375000000000745e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:19.131" endtime="20201030 15:55:19.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.139" level="INFO">${ACCURACY} = {'diff': [4.2223000000000954e-05, 4.195799999999819e-05, 4.1847000000001106e-05, 4.240199999999694e-05, 4.275000000000112e-05, 4.2375000000000745e-05, 4.2402999999999885e-05, 4.227799999999976e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:19.136" endtime="20201030 15:55:19.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.144" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.142" endtime="20201030 15:55:19.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.146" level="INFO">VALUE: [4.2223000000000954e-05, 4.195799999999819e-05, 4.1847000000001106e-05, 4.240199999999694e-05, 4.275000000000112e-05, 4.2375000000000745e-05, 4.2402999999999885e-05, 4.227799999999976e-05, 4.238800000000084e-05, 4.223599999999758e-05, 4.2152999999999635e-05, 4.279099999999689e-05, 4.2541000000000107e-05, 4.2639000000000565e-05, 4.2583000000002286e-05, 4.1902999999999385e-05, 4.2737000000001024e-05, 4.179199999999883e-05, 4.273599999999808e-05, 4.247199999999826e-05, 4.2096999999997886e-05, 4.269399999999937e-05, 4.24860000000013e-05, 4.2347000000001606e-05, 4.1902999999999385e-05, 4.1888999999999815e-05, 4.2444999999998595e-05, 4.1888999999999815e-05, 4.206999999999822e-05, 4.220800000000191e-05, 4.2639000000000565e-05, 4.207000000000169e-05, 4.206999999999822e-05, 4.1888999999999815e-05, 4.2582999999998816e-05, 4.1875000000000245e-05, 4.2111000000000925e-05, 4.223600000000105e-05, 4.266600000000023e-05, 4.2083000000001786e-05, 4.2068999999998746e-05, 4.2554999999999676e-05, 4.2083000000001786e-05, 4.2290999999999856e-05, 4.248599999999783e-05, 4.232000000000194e-05, 4.1917000000002425e-05, 4.275000000000112e-05, 4.181999999999797e-05, 4.2653000000000135e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.145" endtime="20201030 15:55:19.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.140" endtime="20201030 15:55:19.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.156" endtime="20201030 15:55:19.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.154" endtime="20201030 15:55:19.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.153" endtime="20201030 15:55:19.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.789" endtime="20201030 15:55:19.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.788" endtime="20201030 15:55:19.177"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.186" endtime="20201030 15:55:19.203"></status>
</kw>
<msg timestamp="20201030 15:55:19.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.184" endtime="20201030 15:55:19.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.205" endtime="20201030 15:55:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.208" endtime="20201030 15:55:19.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.181" endtime="20201030 15:55:19.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.179" endtime="20201030 15:55:19.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.217" endtime="20201030 15:55:19.503"></status>
</kw>
<msg timestamp="20201030 15:55:19.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.215" endtime="20201030 15:55:19.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023544708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023587792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.507" endtime="20201030 15:55:19.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.516" endtime="20201030 15:55:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.213" endtime="20201030 15:55:19.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.211" endtime="20201030 15:55:19.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.522" level="INFO">${RESULT} = [{'diff': 4.308399999999879e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.281999999999897e-05}, {'diff': 4.338800000000184e-05}, {'diff': 4.2903000000000385e-05}, {'diff': 4.323600000000205e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:19.519" endtime="20201030 15:55:19.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.527" level="INFO">${ACCURACY} = {'diff': [4.308399999999879e-05, 4.373599999999908e-05, 4.281999999999897e-05, 4.338800000000184e-05, 4.2903000000000385e-05, 4.323600000000205e-05, 4.365200000000166e-05, 4.340200000000141e-05, 4.308...</msg>
<status status="PASS" starttime="20201030 15:55:19.523" endtime="20201030 15:55:19.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.531" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.530" endtime="20201030 15:55:19.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.534" level="INFO">VALUE: [4.308399999999879e-05, 4.373599999999908e-05, 4.281999999999897e-05, 4.338800000000184e-05, 4.2903000000000385e-05, 4.323600000000205e-05, 4.365200000000166e-05, 4.340200000000141e-05, 4.3082999999999316e-05, 4.2903000000000385e-05, 4.326400000000119e-05, 4.347199999999926e-05, 4.3639000000001565e-05, 4.3389000000001315e-05, 4.322199999999901e-05, 4.3652999999997666e-05, 4.3402999999997416e-05, 4.2903000000000385e-05, 4.31800000000003e-05, 4.3167000000000205e-05, 4.325000000000162e-05, 4.3153000000000635e-05, 4.373600000000255e-05, 4.365200000000166e-05, 4.323600000000205e-05, 4.2832999999999066e-05, 4.3417000000000455e-05, 4.3555000000000677e-05, 4.373600000000255e-05, 4.298599999999833e-05, 4.33059999999999e-05, 4.3388999999997846e-05, 4.306999999999922e-05, 4.2875000000001245e-05, 4.3138999999997596e-05, 4.355600000000015e-05, 4.3582999999999816e-05, 4.3082999999999316e-05, 4.356999999999972e-05, 4.288799999999787e-05, 4.290199999999744e-05, 4.3388999999997846e-05, 4.375000000000212e-05, 4.2832999999999066e-05, 4.373600000000255e-05, 4.2889000000000815e-05, 4.3068999999999746e-05, 4.377800000000126e-05, 4.345799999999969e-05, 4.331999999999947e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.532" endtime="20201030 15:55:19.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.527" endtime="20201030 15:55:19.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.540" endtime="20201030 15:55:19.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.538" endtime="20201030 15:55:19.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.537" endtime="20201030 15:55:19.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.178" endtime="20201030 15:55:19.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.177" endtime="20201030 15:55:19.561"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.570" endtime="20201030 15:55:19.587"></status>
</kw>
<msg timestamp="20201030 15:55:19.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.568" endtime="20201030 15:55:19.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.588" endtime="20201030 15:55:19.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.591" endtime="20201030 15:55:19.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.565" endtime="20201030 15:55:19.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.563" endtime="20201030 15:55:19.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.600" endtime="20201030 15:55:19.886"></status>
</kw>
<msg timestamp="20201030 15:55:19.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.599" endtime="20201030 15:55:19.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022335014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.890" endtime="20201030 15:55:19.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.899" endtime="20201030 15:55:19.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.596" endtime="20201030 15:55:19.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.594" endtime="20201030 15:55:19.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:19.906" level="INFO">${RESULT} = [{'diff': 4.4417000000001455e-05}, {'diff': 4.4736999999999555e-05}, {'diff': 4.43060000000009e-05}, {'diff': 4.4069000000000746e-05}, {'diff': 4.4069000000000746e-05}, {'diff': 4.3888999999998346e-05...</msg>
<status status="PASS" starttime="20201030 15:55:19.902" endtime="20201030 15:55:19.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:19.911" level="INFO">${ACCURACY} = {'diff': [4.4417000000001455e-05, 4.4736999999999555e-05, 4.43060000000009e-05, 4.4069000000000746e-05, 4.4069000000000746e-05, 4.3888999999998346e-05, 4.423599999999958e-05, 4.4653000000002135e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:55:19.907" endtime="20201030 15:55:19.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.916" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:19.915" endtime="20201030 15:55:19.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.919" level="INFO">VALUE: [4.4417000000001455e-05, 4.4736999999999555e-05, 4.43060000000009e-05, 4.4069000000000746e-05, 4.4069000000000746e-05, 4.3888999999998346e-05, 4.423599999999958e-05, 4.4653000000002135e-05, 4.423599999999958e-05, 4.4153000000001635e-05, 4.424999999999915e-05, 4.432000000000047e-05, 4.423600000000305e-05, 4.448599999999983e-05, 4.4638999999999096e-05, 4.407000000000022e-05, 4.475000000000312e-05, 4.3972999999999235e-05, 4.39999999999989e-05, 4.4319999999997e-05, 4.440199999999894e-05, 4.3875000000002246e-05, 4.423600000000305e-05, 4.4138999999998596e-05, 4.4389000000002315e-05, 4.4583000000000816e-05, 4.3874999999998776e-05, 4.3916999999997486e-05, 4.3889000000001815e-05, 4.470799999999747e-05, 4.4125000000002496e-05, 4.4360999999999706e-05, 4.3861000000002676e-05, 4.3917000000000955e-05, 4.407000000000022e-05, 4.4236999999999055e-05, 4.3945000000000095e-05, 4.448599999999983e-05, 4.448599999999983e-05, 4.466600000000223e-05, 4.4069000000000746e-05, 4.473600000000008e-05, 4.393000000000105e-05, 4.429200000000133e-05, 4.422200000000001e-05, 4.4167000000001205e-05, 4.473600000000008e-05, 4.39860000000028e-05, 4.397199999999976e-05, 4.4152999999998166e-05]</msg>
<status status="PASS" starttime="20201030 15:55:19.917" endtime="20201030 15:55:19.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.912" endtime="20201030 15:55:19.920"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:19.923" endtime="20201030 15:55:19.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.922" endtime="20201030 15:55:19.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.921" endtime="20201030 15:55:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.562" endtime="20201030 15:55:19.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.561" endtime="20201030 15:55:19.944"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.953" endtime="20201030 15:55:19.971"></status>
</kw>
<msg timestamp="20201030 15:55:19.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.951" endtime="20201030 15:55:19.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:19.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:19.973" endtime="20201030 15:55:19.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.975" endtime="20201030 15:55:19.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.949" endtime="20201030 15:55:19.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.947" endtime="20201030 15:55:19.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:19.984" endtime="20201030 15:55:20.289"></status>
</kw>
<msg timestamp="20201030 15:55:20.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:19.982" endtime="20201030 15:55:20.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022121708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022166944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.294" endtime="20201030 15:55:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.302" endtime="20201030 15:55:20.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.980" endtime="20201030 15:55:20.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.978" endtime="20201030 15:55:20.306"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.310" level="INFO">${RESULT} = [{'diff': 4.523600000000058e-05}, {'diff': 4.5583000000001817e-05}, {'diff': 4.5069000000001747e-05}, {'diff': 4.4888999999999346e-05}, {'diff': 4.5402999999999416e-05}, {'diff': 4.5138999999999596e-0...</msg>
<status status="PASS" starttime="20201030 15:55:20.307" endtime="20201030 15:55:20.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.315" level="INFO">${ACCURACY} = {'diff': [4.523600000000058e-05, 4.5583000000001817e-05, 4.5069000000001747e-05, 4.4888999999999346e-05, 4.5402999999999416e-05, 4.5138999999999596e-05, 4.5445000000001595e-05, 4.555499999999921e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:20.311" endtime="20201030 15:55:20.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.320" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.319" endtime="20201030 15:55:20.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.323" level="INFO">VALUE: [4.523600000000058e-05, 4.5583000000001817e-05, 4.5069000000001747e-05, 4.4888999999999346e-05, 4.5402999999999416e-05, 4.5138999999999596e-05, 4.5445000000001595e-05, 4.555499999999921e-05, 4.575000000000065e-05, 4.497199999999729e-05, 4.482000000000097e-05, 4.573599999999761e-05, 4.5167000000002205e-05, 4.507000000000122e-05, 4.505600000000165e-05, 4.4889000000002816e-05, 4.5223000000000485e-05, 4.5319000000001997e-05, 4.572199999999804e-05, 4.516599999999926e-05, 4.51939999999984e-05, 4.502799999999904e-05, 4.5611000000000956e-05, 4.4902999999998916e-05, 4.573600000000108e-05, 4.5652999999999666e-05, 4.573600000000108e-05, 4.532000000000147e-05, 4.525000000000015e-05, 4.5111000000000456e-05, 4.558399999999782e-05, 4.5723000000000985e-05, 4.5152999999999166e-05, 4.522200000000101e-05, 4.480499999999846e-05, 4.523600000000058e-05, 4.5333000000001566e-05, 4.579199999999936e-05, 4.529100000000286e-05, 4.506899999999828e-05, 4.5459000000001165e-05, 4.4902999999998916e-05, 4.520800000000144e-05, 4.5652999999999666e-05, 4.522199999999754e-05, 4.48199999999975e-05, 4.5402999999999416e-05, 4.4917000000001955e-05, 4.491599999999901e-05, 4.557000000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.321" endtime="20201030 15:55:20.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.316" endtime="20201030 15:55:20.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.328" endtime="20201030 15:55:20.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.327" endtime="20201030 15:55:20.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.325" endtime="20201030 15:55:20.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.945" endtime="20201030 15:55:20.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:19.945" endtime="20201030 15:55:20.349"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.358" endtime="20201030 15:55:20.376"></status>
</kw>
<msg timestamp="20201030 15:55:20.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.356" endtime="20201030 15:55:20.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.377" endtime="20201030 15:55:20.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.380" endtime="20201030 15:55:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.354" endtime="20201030 15:55:20.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.351" endtime="20201030 15:55:20.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.389" endtime="20201030 15:55:20.674"></status>
</kw>
<msg timestamp="20201030 15:55:20.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023405389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.388" endtime="20201030 15:55:20.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023405389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023451458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.678" endtime="20201030 15:55:20.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.687" endtime="20201030 15:55:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.385" endtime="20201030 15:55:20.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.383" endtime="20201030 15:55:20.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:20.694" level="INFO">${RESULT} = [{'diff': 4.606900000000275e-05}, {'diff': 4.629199999999986e-05}, {'diff': 4.581899999999903e-05}, {'diff': 4.6375000000001276e-05}, {'diff': 4.608299999999885e-05}, {'diff': 4.6416999999999986e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:20.690" endtime="20201030 15:55:20.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:20.698" level="INFO">${ACCURACY} = {'diff': [4.606900000000275e-05, 4.629199999999986e-05, 4.581899999999903e-05, 4.6375000000001276e-05, 4.608299999999885e-05, 4.6416999999999986e-05, 4.656899999999978e-05, 4.5902999999999916e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 15:55:20.695" endtime="20201030 15:55:20.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.703" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:20.701" endtime="20201030 15:55:20.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.705" level="INFO">VALUE: [4.606900000000275e-05, 4.629199999999986e-05, 4.581899999999903e-05, 4.6375000000001276e-05, 4.608299999999885e-05, 4.6416999999999986e-05, 4.656899999999978e-05, 4.5902999999999916e-05, 4.623600000000158e-05, 4.648600000000183e-05, 4.663899999999763e-05, 4.623600000000158e-05, 4.5973000000001235e-05, 4.5972999999997766e-05, 4.58060000000024e-05, 4.673599999999861e-05, 4.58190000000025e-05, 4.673599999999861e-05, 4.631899999999953e-05, 4.606899999999928e-05, 4.6444999999999126e-05, 4.662499999999806e-05, 4.625000000000115e-05, 4.6625000000001526e-05, 4.675000000000165e-05, 4.6139000000000596e-05, 4.634699999999867e-05, 4.6208999999998446e-05, 4.58199999999985e-05, 4.612499999999756e-05, 4.65269999999976e-05, 4.5875000000000776e-05, 4.58879999999974e-05, 4.594399999999915e-05, 4.656899999999978e-05, 4.606899999999928e-05, 4.673599999999861e-05, 4.581899999999903e-05, 4.606899999999928e-05, 4.5916999999999486e-05, 4.673600000000208e-05, 4.580599999999893e-05, 4.655599999999968e-05, 4.5861000000001206e-05, 4.677699999999785e-05, 4.580599999999893e-05, 4.655599999999968e-05, 4.640200000000094e-05, 4.673599999999861e-05, 4.60000000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:55:20.704" endtime="20201030 15:55:20.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.699" endtime="20201030 15:55:20.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:20.711" endtime="20201030 15:55:20.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.710" endtime="20201030 15:55:20.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.708" endtime="20201030 15:55:20.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.350" endtime="20201030 15:55:20.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.349" endtime="20201030 15:55:20.732"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.741" endtime="20201030 15:55:20.758"></status>
</kw>
<msg timestamp="20201030 15:55:20.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.739" endtime="20201030 15:55:20.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:20.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:20.760" endtime="20201030 15:55:20.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.762" endtime="20201030 15:55:20.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.737" endtime="20201030 15:55:20.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.734" endtime="20201030 15:55:20.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:20.772" endtime="20201030 15:55:21.058"></status>
</kw>
<msg timestamp="20201030 15:55:21.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:20.770" endtime="20201030 15:55:21.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022402944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.063" endtime="20201030 15:55:21.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.071" endtime="20201030 15:55:21.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.767" endtime="20201030 15:55:21.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.766" endtime="20201030 15:55:21.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.078" level="INFO">${RESULT} = [{'diff': 4.7736999999999086e-05}, {'diff': 4.741600000000151e-05}, {'diff': 4.677699999999785e-05}, {'diff': 4.690199999999797e-05}, {'diff': 4.754100000000164e-05}, {'diff': 4.736099999999924e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:21.074" endtime="20201030 15:55:21.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.083" level="INFO">${ACCURACY} = {'diff': [4.7736999999999086e-05, 4.741600000000151e-05, 4.677699999999785e-05, 4.690199999999797e-05, 4.754100000000164e-05, 4.736099999999924e-05, 4.772200000000004e-05, 4.681900000000003e-05, 4.723...</msg>
<status status="PASS" starttime="20201030 15:55:21.079" endtime="20201030 15:55:21.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.088" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.087" endtime="20201030 15:55:21.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.090" level="INFO">VALUE: [4.7736999999999086e-05, 4.741600000000151e-05, 4.677699999999785e-05, 4.690199999999797e-05, 4.754100000000164e-05, 4.736099999999924e-05, 4.772200000000004e-05, 4.681900000000003e-05, 4.723599999999911e-05, 4.748599999999936e-05, 4.7653000000001666e-05, 4.704199999999714e-05, 4.738899999999838e-05, 4.7222999999999016e-05, 4.6986999999998336e-05, 4.68199999999995e-05, 4.756999999999678e-05, 4.740199999999847e-05, 4.722199999999954e-05, 4.731900000000053e-05, 4.720799999999997e-05, 4.681900000000003e-05, 4.6903000000000916e-05, 4.773599999999961e-05, 4.681900000000003e-05, 4.758300000000035e-05, 4.7431000000000556e-05, 4.755600000000068e-05, 4.7403000000001416e-05, 4.7736999999999086e-05, 4.763899999999863e-05, 4.708300000000332e-05, 4.6903000000000916e-05, 4.722200000000301e-05, 4.715199999999822e-05, 4.705499999999724e-05, 4.743000000000108e-05, 4.723599999999911e-05, 4.73330000000001e-05, 4.740299999999795e-05, 4.6903000000000916e-05, 4.7181000000000306e-05, 4.698599999999886e-05, 4.733399999999957e-05, 4.773599999999961e-05, 4.730600000000043e-05, 4.737499999999881e-05, 4.754200000000111e-05, 4.7708999999999946e-05, 4.730600000000043e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.089" endtime="20201030 15:55:21.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.084" endtime="20201030 15:55:21.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.095" endtime="20201030 15:55:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.094" endtime="20201030 15:55:21.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.093" endtime="20201030 15:55:21.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.733" endtime="20201030 15:55:21.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:20.732" endtime="20201030 15:55:21.116"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.125" endtime="20201030 15:55:21.142"></status>
</kw>
<msg timestamp="20201030 15:55:21.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.123" endtime="20201030 15:55:21.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.144" endtime="20201030 15:55:21.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.146" endtime="20201030 15:55:21.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.121" endtime="20201030 15:55:21.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.119" endtime="20201030 15:55:21.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.155" endtime="20201030 15:55:21.443"></status>
</kw>
<msg timestamp="20201030 15:55:21.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.154" endtime="20201030 15:55:21.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022374722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.447" endtime="20201030 15:55:21.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.455" endtime="20201030 15:55:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.151" endtime="20201030 15:55:21.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.149" endtime="20201030 15:55:21.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.462" level="INFO">${RESULT} = [{'diff': 4.854199999999864e-05}, {'diff': 4.805599999999771e-05}, {'diff': 4.7889000000002346e-05}, {'diff': 4.840299999999895e-05}, {'diff': 4.80269999999991e-05}, {'diff': 4.858299999999788e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:21.459" endtime="20201030 15:55:21.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.466" level="INFO">${ACCURACY} = {'diff': [4.854199999999864e-05, 4.805599999999771e-05, 4.7889000000002346e-05, 4.840299999999895e-05, 4.80269999999991e-05, 4.858299999999788e-05, 4.791600000000201e-05, 4.855499999999874e-05, 4.7888...</msg>
<status status="PASS" starttime="20201030 15:55:21.463" endtime="20201030 15:55:21.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.471" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.470" endtime="20201030 15:55:21.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.474" level="INFO">VALUE: [4.854199999999864e-05, 4.805599999999771e-05, 4.7889000000002346e-05, 4.840299999999895e-05, 4.80269999999991e-05, 4.858299999999788e-05, 4.791600000000201e-05, 4.855499999999874e-05, 4.788899999999888e-05, 4.804099999999867e-05, 4.7917000000001486e-05, 4.804199999999814e-05, 4.8417000000001986e-05, 4.808300000000085e-05, 4.8389000000002846e-05, 4.874999999999671e-05, 4.86529999999992e-05, 4.807000000000075e-05, 4.804200000000161e-05, 4.85139999999995e-05, 4.856999999999778e-05, 4.840199999999947e-05, 4.822200000000054e-05, 4.831899999999806e-05, 4.855500000000221e-05, 4.788899999999888e-05, 4.806900000000128e-05, 4.790299999999845e-05, 4.8459000000000696e-05, 4.872200000000104e-05, 4.849999999999993e-05, 4.862500000000006e-05, 4.840299999999895e-05, 4.8681000000001806e-05, 4.837499999999981e-05, 4.876300000000028e-05, 4.8472999999996796e-05, 4.8486999999999836e-05, 4.865199999999972e-05, 4.787499999999931e-05, 4.806899999999781e-05, 4.854099999999917e-05, 4.823600000000011e-05, 4.848600000000036e-05, 4.826399999999925e-05, 4.808300000000085e-05, 4.807000000000075e-05, 4.791699999999802e-05, 4.823600000000011e-05, 4.863899999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.472" endtime="20201030 15:55:21.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.467" endtime="20201030 15:55:21.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.479" endtime="20201030 15:55:21.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.477" endtime="20201030 15:55:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.476" endtime="20201030 15:55:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.117" endtime="20201030 15:55:21.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.116" endtime="20201030 15:55:21.499"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.508" endtime="20201030 15:55:21.529"></status>
</kw>
<msg timestamp="20201030 15:55:21.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.507" endtime="20201030 15:55:21.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.531" endtime="20201030 15:55:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.534" endtime="20201030 15:55:21.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.504" endtime="20201030 15:55:21.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.502" endtime="20201030 15:55:21.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.543" endtime="20201030 15:55:21.829"></status>
</kw>
<msg timestamp="20201030 15:55:21.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025620639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.541" endtime="20201030 15:55:21.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025571403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025620639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:21.834" endtime="20201030 15:55:21.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.842" endtime="20201030 15:55:21.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.539" endtime="20201030 15:55:21.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.537" endtime="20201030 15:55:21.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:21.849" level="INFO">${RESULT} = [{'diff': 4.923600000000111e-05}, {'diff': 4.966699999999977e-05}, {'diff': 4.941699999999952e-05}, {'diff': 4.940299999999995e-05}, {'diff': 4.942999999999961e-05}, {'diff': 4.911100000000099e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:21.845" endtime="20201030 15:55:21.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:21.853" level="INFO">${ACCURACY} = {'diff': [4.923600000000111e-05, 4.966699999999977e-05, 4.941699999999952e-05, 4.940299999999995e-05, 4.942999999999961e-05, 4.911100000000099e-05, 4.973600000000161e-05, 4.948599999999789e-05, 4.8833...</msg>
<status status="PASS" starttime="20201030 15:55:21.850" endtime="20201030 15:55:21.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.858" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:55:21.856" endtime="20201030 15:55:21.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.860" level="INFO">VALUE: [4.923600000000111e-05, 4.966699999999977e-05, 4.941699999999952e-05, 4.940299999999995e-05, 4.942999999999961e-05, 4.911100000000099e-05, 4.973600000000161e-05, 4.948599999999789e-05, 4.88330000000016e-05, 4.955499999999974e-05, 4.91940000000024e-05, 4.913900000000013e-05, 4.956900000000278e-05, 4.906899999999881e-05, 4.887500000000031e-05, 4.908400000000132e-05, 4.926299999999731e-05, 4.88339999999976e-05, 4.9222999999997546e-05, 4.930600000000243e-05, 4.955600000000268e-05, 4.9237000000000586e-05, 4.916600000000326e-05, 4.887500000000031e-05, 4.923600000000111e-05, 4.898600000000086e-05, 4.902799999999957e-05, 4.916699999999927e-05, 4.925000000000068e-05, 4.963899999999716e-05, 4.890299999999945e-05, 4.925000000000068e-05, 4.96530000000002e-05, 4.943000000000308e-05, 4.907000000000175e-05, 4.9723000000001516e-05, 4.9473000000001266e-05, 4.963899999999716e-05, 4.922200000000154e-05, 4.880500000000246e-05, 4.923599999999764e-05, 4.898600000000086e-05, 4.930499999999949e-05, 4.906899999999881e-05, 4.908299999999838e-05, 4.934700000000167e-05, 4.905600000000218e-05, 4.938900000000038e-05, 4.972199999999857e-05, 4.879200000000236e-05]</msg>
<status status="PASS" starttime="20201030 15:55:21.859" endtime="20201030 15:55:21.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.854" endtime="20201030 15:55:21.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:21.866" endtime="20201030 15:55:21.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.864" endtime="20201030 15:55:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.863" endtime="20201030 15:55:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.500" endtime="20201030 15:55:21.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.500" endtime="20201030 15:55:21.887"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.896" endtime="20201030 15:55:21.913"></status>
</kw>
<msg timestamp="20201030 15:55:21.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.894" endtime="20201030 15:55:21.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.915" endtime="20201030 15:55:21.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.917" endtime="20201030 15:55:21.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.891" endtime="20201030 15:55:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.889" endtime="20201030 15:55:21.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.927" endtime="20201030 15:55:22.212"></status>
</kw>
<msg timestamp="20201030 15:55:22.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:21.925" endtime="20201030 15:55:22.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022516, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:22.217" endtime="20201030 15:55:22.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.226" endtime="20201030 15:55:22.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.922" endtime="20201030 15:55:22.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.921" endtime="20201030 15:55:22.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.234" level="INFO">${RESULT} = [{'diff': 5.072199999999957e-05}, {'diff': 5.012500000000156e-05}, {'diff': 4.990300000000045e-05}, {'diff': 5.041699999999705e-05}, {'diff': 5.023600000000211e-05}, {'diff': 5.048599999999889e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:22.230" endtime="20201030 15:55:22.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.239" level="INFO">${ACCURACY} = {'diff': [5.072199999999957e-05, 5.012500000000156e-05, 4.990300000000045e-05, 5.041699999999705e-05, 5.023600000000211e-05, 5.048599999999889e-05, 5.063899999999816e-05, 5.074999999999871e-05, 4.9791...</msg>
<status status="PASS" starttime="20201030 15:55:22.235" endtime="20201030 15:55:22.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.244" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.243" endtime="20201030 15:55:22.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.246" level="INFO">VALUE: [5.072199999999957e-05, 5.012500000000156e-05, 4.990300000000045e-05, 5.041699999999705e-05, 5.023600000000211e-05, 5.048599999999889e-05, 5.063899999999816e-05, 5.074999999999871e-05, 4.979199999999989e-05, 4.990300000000045e-05, 4.987500000000131e-05, 5.037500000000181e-05, 5.056900000000031e-05, 5.055499999999727e-05, 5.0415999999997574e-05, 5.004200000000014e-05, 4.988900000000088e-05, 5.073599999999914e-05, 4.997199999999882e-05, 5.029200000000039e-05, 5.075000000000218e-05, 4.980599999999946e-05, 4.990300000000045e-05, 5.005599999999971e-05, 5.041700000000052e-05, 5.057000000000325e-05, 5.0237000000001586e-05, 4.981899999999956e-05, 4.9888000000001403e-05, 5.005500000000024e-05, 4.990300000000045e-05, 5.052800000000107e-05, 5.056900000000031e-05, 5.038899999999791e-05, 5.073599999999914e-05, 5.063900000000163e-05, 5.041700000000052e-05, 5.023599999999864e-05, 5.031999999999953e-05, 5.038900000000138e-05, 5.058399999999935e-05, 4.988899999999741e-05, 5.072299999999905e-05, 5.063900000000163e-05, 5.076399999999828e-05, 4.998599999999839e-05, 5.031900000000006e-05, 5.072199999999957e-05, 5.054199999999717e-05, 4.980499999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.245" endtime="20201030 15:55:22.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.240" endtime="20201030 15:55:22.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.251" endtime="20201030 15:55:22.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.250" endtime="20201030 15:55:22.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.248" endtime="20201030 15:55:22.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.888" endtime="20201030 15:55:22.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.887" endtime="20201030 15:55:22.272"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.281" endtime="20201030 15:55:22.299"></status>
</kw>
<msg timestamp="20201030 15:55:22.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.279" endtime="20201030 15:55:22.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.300" endtime="20201030 15:55:22.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.303" endtime="20201030 15:55:22.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.277" endtime="20201030 15:55:22.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.275" endtime="20201030 15:55:22.306"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.312" endtime="20201030 15:55:22.599"></status>
</kw>
<msg timestamp="20201030 15:55:22.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.311" endtime="20201030 15:55:22.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022489806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022541222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.604" endtime="20201030 15:55:22.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.612" endtime="20201030 15:55:22.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.308" endtime="20201030 15:55:22.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.306" endtime="20201030 15:55:22.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:22.619" level="INFO">${RESULT} = [{'diff': 5.1415999999998574e-05}, {'diff': 5.156900000000131e-05}, {'diff': 5.172200000000057e-05}, {'diff': 5.1651999999999254e-05}, {'diff': 5.156900000000131e-05}, {'diff': 5.138899999999891e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:22.616" endtime="20201030 15:55:22.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:22.623" level="INFO">${ACCURACY} = {'diff': [5.1415999999998574e-05, 5.156900000000131e-05, 5.172200000000057e-05, 5.1651999999999254e-05, 5.156900000000131e-05, 5.138899999999891e-05, 5.091700000000102e-05, 5.168100000000134e-05, 5.11...</msg>
<status status="PASS" starttime="20201030 15:55:22.620" endtime="20201030 15:55:22.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.628" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:55:22.627" endtime="20201030 15:55:22.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.630" level="INFO">VALUE: [5.1415999999998574e-05, 5.156900000000131e-05, 5.172200000000057e-05, 5.1651999999999254e-05, 5.156900000000131e-05, 5.138899999999891e-05, 5.091700000000102e-05, 5.168100000000134e-05, 5.113899999999866e-05, 5.090299999999798e-05, 5.1721999999997104e-05, 5.165299999999873e-05, 5.141700000000152e-05, 5.126299999999931e-05, 5.113899999999866e-05, 5.122200000000007e-05, 5.1651999999999254e-05, 5.088900000000188e-05, 5.163899999999916e-05, 5.11530000000017e-05, 5.113900000000213e-05, 5.173600000000014e-05, 5.148599999999989e-05, 5.16669999999983e-05, 5.123599999999964e-05, 5.098599999999939e-05, 5.130599999999749e-05, 5.090300000000145e-05, 5.105600000000071e-05, 5.140300000000195e-05, 5.1387999999999434e-05, 5.162499999999959e-05, 5.140300000000195e-05, 5.123599999999964e-05, 5.081900000000056e-05, 5.090300000000145e-05, 5.156900000000131e-05, 5.138900000000238e-05, 5.143100000000109e-05, 5.173600000000014e-05, 5.076399999999828e-05, 5.138900000000238e-05, 5.157000000000078e-05, 5.143000000000161e-05, 5.1237000000002586e-05, 5.15279999999986e-05, 5.133300000000063e-05, 5.105500000000124e-05, 5.091600000000154e-05, 5.172200000000057e-05]</msg>
<status status="PASS" starttime="20201030 15:55:22.629" endtime="20201030 15:55:22.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.624" endtime="20201030 15:55:22.632"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:22.636" endtime="20201030 15:55:22.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.634" endtime="20201030 15:55:22.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.633" endtime="20201030 15:55:22.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.273" endtime="20201030 15:55:22.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.272" endtime="20201030 15:55:22.656"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.665" endtime="20201030 15:55:22.684"></status>
</kw>
<msg timestamp="20201030 15:55:22.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.664" endtime="20201030 15:55:22.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:22.686" endtime="20201030 15:55:22.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.688" endtime="20201030 15:55:22.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.661" endtime="20201030 15:55:22.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.659" endtime="20201030 15:55:22.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.697" endtime="20201030 15:55:22.984"></status>
</kw>
<msg timestamp="20201030 15:55:22.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.696" endtime="20201030 15:55:22.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:22.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023395861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023448111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:22.989" endtime="20201030 15:55:22.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:22.997" endtime="20201030 15:55:22.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.693" endtime="20201030 15:55:22.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.691" endtime="20201030 15:55:23.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.004" level="INFO">${RESULT} = [{'diff': 5.225000000000021e-05}, {'diff': 5.21669999999988e-05}, {'diff': 5.256900000000231e-05}, {'diff': 5.188899999999941e-05}, {'diff': 5.2249999999996743e-05}, {'diff': 5.212500000000009e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:23.001" endtime="20201030 15:55:23.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.008" level="INFO">${ACCURACY} = {'diff': [5.225000000000021e-05, 5.21669999999988e-05, 5.256900000000231e-05, 5.188899999999941e-05, 5.2249999999996743e-05, 5.212500000000009e-05, 5.190300000000245e-05, 5.273600000000114e-05, 5.2597...</msg>
<status status="PASS" starttime="20201030 15:55:23.005" endtime="20201030 15:55:23.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.013" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.012" endtime="20201030 15:55:23.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.015" level="INFO">VALUE: [5.225000000000021e-05, 5.21669999999988e-05, 5.256900000000231e-05, 5.188899999999941e-05, 5.2249999999996743e-05, 5.212500000000009e-05, 5.190300000000245e-05, 5.273600000000114e-05, 5.259799999999745e-05, 5.272300000000105e-05, 5.250000000000046e-05, 5.230599999999849e-05, 5.206900000000181e-05, 5.223600000000064e-05, 5.181899999999809e-05, 5.240299999999948e-05, 5.223600000000064e-05, 5.26669999999993e-05, 5.276400000000028e-05, 5.180600000000146e-05, 5.256999999999831e-05, 5.2221999999997604e-05, 5.263900000000016e-05, 5.2749999999997244e-05, 5.182000000000103e-05, 5.1915999999999074e-05, 5.206900000000181e-05, 5.273600000000114e-05, 5.183300000000113e-05, 5.255499999999927e-05, 5.225000000000021e-05, 5.231899999999859e-05, 5.238899999999991e-05, 5.223600000000064e-05, 5.1971999999997354e-05, 5.233399999999763e-05, 5.188899999999941e-05, 5.256999999999831e-05, 5.238899999999991e-05, 5.223700000000012e-05, 5.232000000000153e-05, 5.206899999999834e-05, 5.256899999999884e-05, 5.255499999999927e-05, 5.191700000000202e-05, 5.208399999999738e-05, 5.256899999999884e-05, 5.190299999999898e-05, 5.225000000000021e-05, 5.26530000000032e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.014" endtime="20201030 15:55:23.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.009" endtime="20201030 15:55:23.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.021" endtime="20201030 15:55:23.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.020" endtime="20201030 15:55:23.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.019" endtime="20201030 15:55:23.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.657" endtime="20201030 15:55:23.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:22.657" endtime="20201030 15:55:23.042"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.051" endtime="20201030 15:55:23.068"></status>
</kw>
<msg timestamp="20201030 15:55:23.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.049" endtime="20201030 15:55:23.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.070" endtime="20201030 15:55:23.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.073" endtime="20201030 15:55:23.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.047" endtime="20201030 15:55:23.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.045" endtime="20201030 15:55:23.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.082" endtime="20201030 15:55:23.368"></status>
</kw>
<msg timestamp="20201030 15:55:23.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.080" endtime="20201030 15:55:23.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.372" endtime="20201030 15:55:23.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.380" endtime="20201030 15:55:23.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.078" endtime="20201030 15:55:23.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.076" endtime="20201030 15:55:23.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.387" level="INFO">${RESULT} = [{'diff': 5.356899999999984e-05}, {'diff': 5.3388000000001434e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.355500000000027e-05}, {'diff': 5.356899999999984e-05}, {'diff': 5.373600000000214e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:23.384" endtime="20201030 15:55:23.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.392" level="INFO">${ACCURACY} = {'diff': [5.356899999999984e-05, 5.3388000000001434e-05, 5.336100000000177e-05, 5.355500000000027e-05, 5.356899999999984e-05, 5.373600000000214e-05, 5.333299999999916e-05, 5.3235999999998174e-05, 5.33...</msg>
<status status="PASS" starttime="20201030 15:55:23.388" endtime="20201030 15:55:23.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.397" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.396" endtime="20201030 15:55:23.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.400" level="INFO">VALUE: [5.356899999999984e-05, 5.3388000000001434e-05, 5.336100000000177e-05, 5.355500000000027e-05, 5.356899999999984e-05, 5.373600000000214e-05, 5.333299999999916e-05, 5.3235999999998174e-05, 5.331999999999906e-05, 5.307000000000228e-05, 5.345800000000275e-05, 5.35280000000006e-05, 5.343099999999962e-05, 5.370899999999901e-05, 5.333300000000263e-05, 5.327800000000035e-05, 5.3471999999998854e-05, 5.363900000000116e-05, 5.3749999999998244e-05, 5.315300000000023e-05, 5.3735999999998674e-05, 5.354200000000017e-05, 5.365300000000073e-05, 5.3221999999998604e-05, 5.280599999999899e-05, 5.306999999999881e-05, 5.341700000000005e-05, 5.356999999999931e-05, 5.322300000000155e-05, 5.343099999999962e-05, 5.3666000000000824e-05, 5.288900000000041e-05, 5.323600000000164e-05, 5.354200000000017e-05, 5.330500000000002e-05, 5.343099999999962e-05, 5.337500000000134e-05, 5.283300000000213e-05, 5.308399999999838e-05, 5.3707999999999534e-05, 5.315299999999676e-05, 5.33609999999983e-05, 5.290299999999998e-05, 5.372300000000205e-05, 5.330500000000002e-05, 5.376400000000128e-05, 5.281899999999909e-05, 5.372200000000257e-05, 5.315300000000023e-05, 5.356899999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.398" endtime="20201030 15:55:23.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.393" endtime="20201030 15:55:23.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.405" endtime="20201030 15:55:23.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.403" endtime="20201030 15:55:23.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.402" endtime="20201030 15:55:23.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.043" endtime="20201030 15:55:23.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.042" endtime="20201030 15:55:23.426"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.434" endtime="20201030 15:55:23.452"></status>
</kw>
<msg timestamp="20201030 15:55:23.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.433" endtime="20201030 15:55:23.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.454" endtime="20201030 15:55:23.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.456" endtime="20201030 15:55:23.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.430" endtime="20201030 15:55:23.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.428" endtime="20201030 15:55:23.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.466" endtime="20201030 15:55:23.753"></status>
</kw>
<msg timestamp="20201030 15:55:23.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.464" endtime="20201030 15:55:23.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.757" endtime="20201030 15:55:23.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.765" endtime="20201030 15:55:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.461" endtime="20201030 15:55:23.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.460" endtime="20201030 15:55:23.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:23.772" level="INFO">${RESULT} = [{'diff': 5.45280000000016e-05}, {'diff': 5.457000000000031e-05}, {'diff': 5.441700000000105e-05}, {'diff': 5.406999999999981e-05}, {'diff': 5.407000000000328e-05}, {'diff': 5.454200000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:23.769" endtime="20201030 15:55:23.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:23.776" level="INFO">${ACCURACY} = {'diff': [5.45280000000016e-05, 5.457000000000031e-05, 5.441700000000105e-05, 5.406999999999981e-05, 5.407000000000328e-05, 5.454200000000117e-05, 5.390300000000098e-05, 5.406900000000034e-05, 5.40829...</msg>
<status status="PASS" starttime="20201030 15:55:23.773" endtime="20201030 15:55:23.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.781" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:55:23.780" endtime="20201030 15:55:23.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.783" level="INFO">VALUE: [5.45280000000016e-05, 5.457000000000031e-05, 5.441700000000105e-05, 5.406999999999981e-05, 5.407000000000328e-05, 5.454200000000117e-05, 5.390300000000098e-05, 5.406900000000034e-05, 5.408299999999991e-05, 5.4235999999999174e-05, 5.4458000000000284e-05, 5.41670000000008e-05, 5.481900000000109e-05, 5.4458000000000284e-05, 5.387500000000184e-05, 5.440300000000148e-05, 5.457000000000031e-05, 5.387499999999837e-05, 5.407000000000328e-05, 5.457000000000031e-05, 5.457000000000031e-05, 5.455600000000074e-05, 5.4013999999998064e-05, 5.3901999999998035e-05, 5.3916000000001074e-05, 5.482000000000056e-05, 5.431900000000059e-05, 5.423600000000264e-05, 5.413899999999819e-05, 5.441700000000105e-05, 5.406999999999981e-05, 5.438899999999844e-05, 5.390300000000098e-05, 5.388900000000141e-05, 5.387499999999837e-05, 5.473699999999915e-05, 5.4152000000001754e-05, 5.4402000000002004e-05, 5.4401999999998535e-05, 5.423600000000264e-05, 5.400000000000196e-05, 5.431900000000059e-05, 5.4263999999998314e-05, 5.4499999999998994e-05, 5.3971999999999354e-05, 5.432000000000006e-05, 5.458399999999988e-05, 5.408399999999938e-05, 5.4749999999999244e-05, 5.415299999999776e-05]</msg>
<status status="PASS" starttime="20201030 15:55:23.782" endtime="20201030 15:55:23.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.777" endtime="20201030 15:55:23.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:23.789" endtime="20201030 15:55:23.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.787" endtime="20201030 15:55:23.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.786" endtime="20201030 15:55:23.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.426" endtime="20201030 15:55:23.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.426" endtime="20201030 15:55:23.809"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.818" endtime="20201030 15:55:23.837"></status>
</kw>
<msg timestamp="20201030 15:55:23.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.817" endtime="20201030 15:55:23.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:23.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:23.839" endtime="20201030 15:55:23.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.841" endtime="20201030 15:55:23.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.814" endtime="20201030 15:55:23.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.812" endtime="20201030 15:55:23.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:23.850" endtime="20201030 15:55:24.137"></status>
</kw>
<msg timestamp="20201030 15:55:24.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:23.849" endtime="20201030 15:55:24.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023227986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023283458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.142" endtime="20201030 15:55:24.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.150" endtime="20201030 15:55:24.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.846" endtime="20201030 15:55:24.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.845" endtime="20201030 15:55:24.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.157" level="INFO">${RESULT} = [{'diff': 5.5472000000000854e-05}, {'diff': 5.53610000000003e-05}, {'diff': 5.579100000000295e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.51670000000018e-05}, {'diff': 5.488899999999894e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:24.154" endtime="20201030 15:55:24.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.161" level="INFO">${ACCURACY} = {'diff': [5.5472000000000854e-05, 5.53610000000003e-05, 5.579100000000295e-05, 5.4985999999999924e-05, 5.51670000000018e-05, 5.488899999999894e-05, 5.5236000000000174e-05, 5.5151999999999285e-05, 5.52...</msg>
<status status="PASS" starttime="20201030 15:55:24.158" endtime="20201030 15:55:24.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.166" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.165" endtime="20201030 15:55:24.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.168" level="INFO">VALUE: [5.5472000000000854e-05, 5.53610000000003e-05, 5.579100000000295e-05, 5.4985999999999924e-05, 5.51670000000018e-05, 5.488899999999894e-05, 5.5236000000000174e-05, 5.5151999999999285e-05, 5.5222000000000604e-05, 5.534700000000073e-05, 5.5236000000000174e-05, 5.56670000000023e-05, 5.5236000000000174e-05, 5.563899999999969e-05, 5.5763999999999814e-05, 5.5291999999998453e-05, 5.509799999999995e-05, 5.555600000000174e-05, 5.5750000000000244e-05, 5.483300000000066e-05, 5.520900000000051e-05, 5.529099999999898e-05, 5.506900000000134e-05, 5.508299999999744e-05, 5.541699999999858e-05, 5.506900000000134e-05, 5.50549999999983e-05, 5.5236000000000174e-05, 5.4999999999999494e-05, 5.513900000000266e-05, 5.541699999999858e-05, 5.537499999999987e-05, 5.490300000000198e-05, 5.557000000000131e-05, 5.540300000000248e-05, 5.5387999999999965e-05, 5.556899999999837e-05, 5.5722000000001104e-05, 5.563899999999969e-05, 5.540300000000248e-05, 5.508300000000091e-05, 5.484700000000023e-05, 5.5736000000000674e-05, 5.53480000000002e-05, 5.5236000000000174e-05, 5.529200000000192e-05, 5.491700000000155e-05, 5.5444000000001714e-05, 5.523699999999965e-05, 5.515299999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.167" endtime="20201030 15:55:24.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.162" endtime="20201030 15:55:24.176"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.180" endtime="20201030 15:55:24.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.178" endtime="20201030 15:55:24.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.177" endtime="20201030 15:55:24.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.810" endtime="20201030 15:55:24.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:23.810" endtime="20201030 15:55:24.200"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.209" endtime="20201030 15:55:24.228"></status>
</kw>
<msg timestamp="20201030 15:55:24.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.208" endtime="20201030 15:55:24.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.229" endtime="20201030 15:55:24.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.232" endtime="20201030 15:55:24.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.205" endtime="20201030 15:55:24.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.203" endtime="20201030 15:55:24.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.241" endtime="20201030 15:55:24.528"></status>
</kw>
<msg timestamp="20201030 15:55:24.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:24.240" endtime="20201030 15:55:24.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022358486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:24.532" endtime="20201030 15:55:24.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.540" endtime="20201030 15:55:24.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.237" endtime="20201030 15:55:24.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.235" endtime="20201030 15:55:24.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.547" level="INFO">${RESULT} = [{'diff': 5.6236000000001174e-05}, {'diff': 5.663900000000069e-05}, {'diff': 5.638900000000044e-05}, {'diff': 5.6055999999998773e-05}, {'diff': 5.629099999999998e-05}, {'diff': 5.6485999999997955e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:24.544" endtime="20201030 15:55:24.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.552" level="INFO">${ACCURACY} = {'diff': [5.6236000000001174e-05, 5.663900000000069e-05, 5.638900000000044e-05, 5.6055999999998773e-05, 5.629099999999998e-05, 5.6485999999997955e-05, 5.6305999999999023e-05, 5.604200000000267e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:55:24.548" endtime="20201030 15:55:24.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.557" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.556" endtime="20201030 15:55:24.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.560" level="INFO">VALUE: [5.6236000000001174e-05, 5.663900000000069e-05, 5.638900000000044e-05, 5.6055999999998773e-05, 5.629099999999998e-05, 5.6485999999997955e-05, 5.6305999999999023e-05, 5.604200000000267e-05, 5.623700000000065e-05, 5.632000000000206e-05, 5.606900000000234e-05, 5.658300000000241e-05, 5.6236000000001174e-05, 5.581899999999862e-05, 5.6249999999997274e-05, 5.61670000000028e-05, 5.606999999999834e-05, 5.591699999999908e-05, 5.593099999999865e-05, 5.587500000000037e-05, 5.658399999999841e-05, 5.641699999999958e-05, 5.6749999999997774e-05, 5.581899999999862e-05, 5.6736000000001674e-05, 5.633300000000216e-05, 5.6235999999997704e-05, 5.613900000000019e-05, 5.608299999999844e-05, 5.60549999999993e-05, 5.591700000000255e-05, 5.594500000000169e-05, 5.605600000000224e-05, 5.611100000000105e-05, 5.6721999999998635e-05, 5.61670000000028e-05, 5.669499999999897e-05, 5.6152000000000285e-05, 5.6429999999999675e-05, 5.612500000000062e-05, 5.6416000000000105e-05, 5.588899999999994e-05, 5.6250000000000744e-05, 5.615299999999976e-05, 5.6652000000000785e-05, 5.588899999999994e-05, 5.640300000000001e-05, 5.658400000000188e-05, 5.630499999999955e-05, 5.6666000000000355e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.558" endtime="20201030 15:55:24.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.553" endtime="20201030 15:55:24.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.565" endtime="20201030 15:55:24.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.563" endtime="20201030 15:55:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.562" endtime="20201030 15:55:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.201" endtime="20201030 15:55:24.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.201" endtime="20201030 15:55:24.585"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.595" endtime="20201030 15:55:24.612"></status>
</kw>
<msg timestamp="20201030 15:55:24.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.593" endtime="20201030 15:55:24.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.613" endtime="20201030 15:55:24.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.616" endtime="20201030 15:55:24.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.590" endtime="20201030 15:55:24.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.588" endtime="20201030 15:55:24.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.625" endtime="20201030 15:55:24.912"></status>
</kw>
<msg timestamp="20201030 15:55:24.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.624" endtime="20201030 15:55:24.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022468306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022526042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:24.917" endtime="20201030 15:55:24.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.925" endtime="20201030 15:55:24.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.621" endtime="20201030 15:55:24.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.619" endtime="20201030 15:55:24.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:24.932" level="INFO">${RESULT} = [{'diff': 5.7735999999999205e-05}, {'diff': 5.7694000000000495e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.7292000000000454e-05}, {'diff': 5.6985999999998455e-05}, {'diff': 5.680500000000005e-0...</msg>
<status status="PASS" starttime="20201030 15:55:24.929" endtime="20201030 15:55:24.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:24.936" level="INFO">${ACCURACY} = {'diff': [5.7735999999999205e-05, 5.7694000000000495e-05, 5.7055999999999774e-05, 5.7292000000000454e-05, 5.6985999999998455e-05, 5.680500000000005e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:55:24.933" endtime="20201030 15:55:24.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.941" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:55:24.940" endtime="20201030 15:55:24.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:24.944" level="INFO">VALUE: [5.7735999999999205e-05, 5.7694000000000495e-05, 5.7055999999999774e-05, 5.7292000000000454e-05, 5.6985999999998455e-05, 5.680500000000005e-05, 5.741700000000058e-05, 5.691700000000008e-05, 5.740300000000101e-05, 5.706899999999987e-05, 5.7749999999998775e-05, 5.682000000000256e-05, 5.690300000000051e-05, 5.740300000000101e-05, 5.688899999999747e-05, 5.6902000000001035e-05, 5.758299999999994e-05, 5.7736000000002674e-05, 5.7680000000000925e-05, 5.738899999999797e-05, 5.759699999999951e-05, 5.7749999999998775e-05, 5.7485999999998955e-05, 5.731900000000012e-05, 5.7083999999998913e-05, 5.729099999999751e-05, 5.715300000000076e-05, 5.71809999999999e-05, 5.765299999999779e-05, 5.7457999999999815e-05, 5.759699999999951e-05, 5.688900000000094e-05, 5.706899999999987e-05, 5.7235999999998705e-05, 5.681899999999962e-05, 5.715300000000076e-05, 5.7471999999999385e-05, 5.681899999999962e-05, 5.688899999999747e-05, 5.7236000000002174e-05, 5.6985999999998455e-05, 5.6750000000001244e-05, 5.7069999999999343e-05, 5.688900000000094e-05, 5.7250000000001744e-05, 5.733299999999969e-05, 5.7708000000000065e-05, 5.7457999999999815e-05, 5.731900000000012e-05, 5.7207999999999565e-05]</msg>
<status status="PASS" starttime="20201030 15:55:24.942" endtime="20201030 15:55:24.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.937" endtime="20201030 15:55:24.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:24.949" endtime="20201030 15:55:24.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.947" endtime="20201030 15:55:24.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.946" endtime="20201030 15:55:24.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.586" endtime="20201030 15:55:24.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.586" endtime="20201030 15:55:24.969"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:24.978" endtime="20201030 15:55:24.999"></status>
</kw>
<msg timestamp="20201030 15:55:25.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:24.977" endtime="20201030 15:55:25.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.001" endtime="20201030 15:55:25.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.004" endtime="20201030 15:55:25.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.974" endtime="20201030 15:55:25.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.972" endtime="20201030 15:55:25.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.013" endtime="20201030 15:55:25.299"></status>
</kw>
<msg timestamp="20201030 15:55:25.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025939875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025998444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.011" endtime="20201030 15:55:25.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025939875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025998444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.304" endtime="20201030 15:55:25.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.312" endtime="20201030 15:55:25.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.009" endtime="20201030 15:55:25.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.007" endtime="20201030 15:55:25.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.319" level="INFO">${RESULT} = [{'diff': 5.85689999999979e-05}, {'diff': 5.8264000000002314e-05}, {'diff': 5.8137999999999246e-05}, {'diff': 5.8721999999997165e-05}, {'diff': 5.8485999999999955e-05}, {'diff': 5.7999999999999025e-05...</msg>
<status status="PASS" starttime="20201030 15:55:25.315" endtime="20201030 15:55:25.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.323" level="INFO">${ACCURACY} = {'diff': [5.85689999999979e-05, 5.8264000000002314e-05, 5.8137999999999246e-05, 5.8721999999997165e-05, 5.8485999999999955e-05, 5.7999999999999025e-05, 5.8485999999999955e-05, 5.7971999999999885e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:25.320" endtime="20201030 15:55:25.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.328" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.327" endtime="20201030 15:55:25.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.330" level="INFO">VALUE: [5.85689999999979e-05, 5.8264000000002314e-05, 5.8137999999999246e-05, 5.8721999999997165e-05, 5.8485999999999955e-05, 5.7999999999999025e-05, 5.8485999999999955e-05, 5.7971999999999885e-05, 5.7986000000002924e-05, 5.8472000000000385e-05, 5.787500000000237e-05, 5.8235999999999705e-05, 5.8249999999999275e-05, 5.8235999999999705e-05, 5.836099999999983e-05, 5.806900000000087e-05, 5.8208000000000565e-05, 5.8651999999999316e-05, 5.806900000000087e-05, 5.838899999999897e-05, 5.8721999999997165e-05, 5.816700000000133e-05, 5.8292000000001454e-05, 5.865299999999879e-05, 5.8249999999999275e-05, 5.8320000000000594e-05, 5.838899999999897e-05, 5.838899999999897e-05, 5.8514000000002564e-05, 5.808300000000044e-05, 5.8263999999998844e-05, 5.863899999999922e-05, 5.8415999999998636e-05, 5.791699999999761e-05, 5.806900000000087e-05, 5.840300000000201e-05, 5.791700000000108e-05, 5.8056000000000774e-05, 5.8083999999999913e-05, 5.840299999999854e-05, 5.823699999999918e-05, 5.865299999999879e-05, 5.859700000000051e-05, 5.806900000000087e-05, 5.7901999999998566e-05, 5.8235999999999705e-05, 5.780500000000105e-05, 5.790300000000151e-05, 5.808300000000044e-05, 5.856900000000137e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.329" endtime="20201030 15:55:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.324" endtime="20201030 15:55:25.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.336" endtime="20201030 15:55:25.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.335" endtime="20201030 15:55:25.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.334" endtime="20201030 15:55:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.970" endtime="20201030 15:55:25.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:24.970" endtime="20201030 15:55:25.357"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.366" endtime="20201030 15:55:25.384"></status>
</kw>
<msg timestamp="20201030 15:55:25.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.364" endtime="20201030 15:55:25.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.386" endtime="20201030 15:55:25.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.388" endtime="20201030 15:55:25.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.362" endtime="20201030 15:55:25.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.360" endtime="20201030 15:55:25.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.398" endtime="20201030 15:55:25.684"></status>
</kw>
<msg timestamp="20201030 15:55:25.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.396" endtime="20201030 15:55:25.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.689" endtime="20201030 15:55:25.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.697" endtime="20201030 15:55:25.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.394" endtime="20201030 15:55:25.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.392" endtime="20201030 15:55:25.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:25.704" level="INFO">${RESULT} = [{'diff': 5.9499999999997055e-05}, {'diff': 5.913899999999972e-05}, {'diff': 5.943099999999868e-05}, {'diff': 5.9541999999999234e-05}, {'diff': 5.8887999999999996e-05}, {'diff': 5.9750000000000775e-05...</msg>
<status status="PASS" starttime="20201030 15:55:25.701" endtime="20201030 15:55:25.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:25.709" level="INFO">${ACCURACY} = {'diff': [5.9499999999997055e-05, 5.913899999999972e-05, 5.943099999999868e-05, 5.9541999999999234e-05, 5.8887999999999996e-05, 5.9750000000000775e-05, 5.9472000000001385e-05, 5.9165999999999386e-05, ...</msg>
<status status="PASS" starttime="20201030 15:55:25.705" endtime="20201030 15:55:25.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.714" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:55:25.713" endtime="20201030 15:55:25.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.716" level="INFO">VALUE: [5.9499999999997055e-05, 5.913899999999972e-05, 5.943099999999868e-05, 5.9541999999999234e-05, 5.8887999999999996e-05, 5.9750000000000775e-05, 5.9472000000001385e-05, 5.9165999999999386e-05, 5.9707999999998596e-05, 5.963900000000022e-05, 5.958299999999847e-05, 5.940299999999954e-05, 5.9764000000000345e-05, 5.916699999999886e-05, 5.9570000000001844e-05, 5.9055999999998304e-05, 5.9013999999999595e-05, 5.95689999999989e-05, 5.9250000000000275e-05, 5.9165999999999386e-05, 5.9443999999998776e-05, 5.954099999999976e-05, 5.9221999999997665e-05, 5.88749999999999e-05, 5.9236000000000705e-05, 5.9485999999997485e-05, 5.9500000000000525e-05, 5.911100000000058e-05, 5.9569999999998374e-05, 5.9555999999998804e-05, 5.9070000000001344e-05, 5.9070000000001344e-05, 5.9402000000000066e-05, 5.9736000000001205e-05, 5.881899999999815e-05, 5.938899999999997e-05, 5.9736000000001205e-05, 5.934700000000126e-05, 5.944499999999825e-05, 5.906900000000187e-05, 5.890299999999904e-05, 5.9055999999998304e-05, 5.9070000000001344e-05, 5.9236000000000705e-05, 5.930499999999908e-05, 5.8915999999999136e-05, 5.912500000000015e-05, 5.9236000000000705e-05, 5.880499999999858e-05, 5.890299999999904e-05]</msg>
<status status="PASS" starttime="20201030 15:55:25.715" endtime="20201030 15:55:25.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.710" endtime="20201030 15:55:25.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:25.721" endtime="20201030 15:55:25.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.720" endtime="20201030 15:55:25.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.719" endtime="20201030 15:55:25.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.358" endtime="20201030 15:55:25.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.357" endtime="20201030 15:55:25.742"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.751" endtime="20201030 15:55:25.770"></status>
</kw>
<msg timestamp="20201030 15:55:25.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.750" endtime="20201030 15:55:25.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:25.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:25.771" endtime="20201030 15:55:25.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.774" endtime="20201030 15:55:25.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.747" endtime="20201030 15:55:25.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.745" endtime="20201030 15:55:25.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:25.783" endtime="20201030 15:55:26.069"></status>
</kw>
<msg timestamp="20201030 15:55:26.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022518153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:25.781" endtime="20201030 15:55:26.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022458069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022518153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.074" endtime="20201030 15:55:26.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.082" endtime="20201030 15:55:26.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.779" endtime="20201030 15:55:26.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.777" endtime="20201030 15:55:26.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.089" level="INFO">${RESULT} = [{'diff': 6.0083999999998444e-05}, {'diff': 5.991699999999961e-05}, {'diff': 5.990300000000004e-05}, {'diff': 5.990300000000004e-05}, {'diff': 6.040300000000054e-05}, {'diff': 5.9902000000000566e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:26.086" endtime="20201030 15:55:26.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.093" level="INFO">${ACCURACY} = {'diff': [6.0083999999998444e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.990300000000004e-05, 6.040300000000054e-05, 5.9902000000000566e-05, 6.0666000000000886e-05, 5.981899999999915e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 15:55:26.090" endtime="20201030 15:55:26.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.098" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.097" endtime="20201030 15:55:26.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.100" level="INFO">VALUE: [6.0083999999998444e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.990300000000004e-05, 6.040300000000054e-05, 5.9902000000000566e-05, 6.0666000000000886e-05, 5.981899999999915e-05, 6.0750000000001775e-05, 6.065300000000079e-05, 6.0735999999998735e-05, 6.0471999999998916e-05, 5.9957999999998846e-05, 6.013899999999725e-05, 6.043099999999968e-05, 6.0069999999998874e-05, 6.0236000000001705e-05, 6.063900000000122e-05, 6.0069999999998874e-05, 6.0792000000000485e-05, 6.0651999999997847e-05, 6.0735999999998735e-05, 6.0000000000001025e-05, 6.0305999999999554e-05, 6.058299999999947e-05, 6.0735999999998735e-05, 6.0320000000002594e-05, 6.0749999999998305e-05, 6.0486000000001955e-05, 6.066700000000036e-05, 5.9929999999999706e-05, 6.073700000000168e-05, 6.0638000000001746e-05, 6.0264000000000845e-05, 6.0152000000000816e-05, 6.00689999999994e-05, 6.0513999999997625e-05, 6.0735999999998735e-05, 6.0000000000001025e-05, 6.0499999999998055e-05, 6.0472000000002385e-05, 5.9986000000001455e-05, 6.0306000000003024e-05, 6.040300000000054e-05, 6.023700000000118e-05, 5.995899999999832e-05, 6.0194999999999e-05, 6.0500000000001525e-05, 6.05689999999999e-05, 6.0250000000001275e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.099" endtime="20201030 15:55:26.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.094" endtime="20201030 15:55:26.102"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.106" endtime="20201030 15:55:26.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.104" endtime="20201030 15:55:26.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.103" endtime="20201030 15:55:26.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.743" endtime="20201030 15:55:26.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:25.743" endtime="20201030 15:55:26.126"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.135" endtime="20201030 15:55:26.155"></status>
</kw>
<msg timestamp="20201030 15:55:26.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.134" endtime="20201030 15:55:26.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.156" endtime="20201030 15:55:26.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.164" endtime="20201030 15:55:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.131" endtime="20201030 15:55:26.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.129" endtime="20201030 15:55:26.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.176" endtime="20201030 15:55:26.467"></status>
</kw>
<msg timestamp="20201030 15:55:26.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.173" endtime="20201030 15:55:26.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023476625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023538167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.471" endtime="20201030 15:55:26.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.479" endtime="20201030 15:55:26.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.169" endtime="20201030 15:55:26.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.167" endtime="20201030 15:55:26.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.486" level="INFO">${RESULT} = [{'diff': 6.154199999999777e-05}, {'diff': 6.16950000000005e-05}, {'diff': 6.081900000000015e-05}, {'diff': 6.131900000000065e-05}, {'diff': 6.133300000000022e-05}, {'diff': 6.108299999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:26.483" endtime="20201030 15:55:26.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.490" level="INFO">${ACCURACY} = {'diff': [6.154199999999777e-05, 6.16950000000005e-05, 6.081900000000015e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.108299999999997e-05, 6.12080000000001e-05, 6.131899999999718e-05, 6.122199...</msg>
<status status="PASS" starttime="20201030 15:55:26.487" endtime="20201030 15:55:26.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.495" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.494" endtime="20201030 15:55:26.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.498" level="INFO">VALUE: [6.154199999999777e-05, 6.16950000000005e-05, 6.081900000000015e-05, 6.131900000000065e-05, 6.133300000000022e-05, 6.108299999999997e-05, 6.12080000000001e-05, 6.131899999999718e-05, 6.122199999999967e-05, 6.127799999999795e-05, 6.162500000000265e-05, 6.091700000000061e-05, 6.123599999999924e-05, 6.115300000000129e-05, 6.15690000000009e-05, 6.15690000000009e-05, 6.0901999999998097e-05, 6.12080000000001e-05, 6.080500000000058e-05, 6.158300000000047e-05, 6.087499999999843e-05, 6.172200000000017e-05, 6.0986000000002455e-05, 6.1014000000001595e-05, 6.165300000000179e-05, 6.123599999999924e-05, 6.0999999999998555e-05, 6.149999999999906e-05, 6.0792000000000485e-05, 6.105500000000083e-05, 6.0902000000001566e-05, 6.122199999999967e-05, 6.163899999999875e-05, 6.105500000000083e-05, 6.105500000000083e-05, 6.109699999999954e-05, 6.090300000000104e-05, 6.122199999999967e-05, 6.102700000000169e-05, 6.113900000000172e-05, 6.162500000000265e-05, 6.141599999999817e-05, 6.0915999999997666e-05, 6.176399999999888e-05, 6.0944000000000276e-05, 6.165299999999832e-05, 6.108299999999997e-05, 6.091700000000061e-05, 6.158300000000047e-05, 6.090300000000104e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.496" endtime="20201030 15:55:26.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.491" endtime="20201030 15:55:26.500"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.504" endtime="20201030 15:55:26.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.502" endtime="20201030 15:55:26.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.501" endtime="20201030 15:55:26.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.127" endtime="20201030 15:55:26.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.127" endtime="20201030 15:55:26.525"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.534" endtime="20201030 15:55:26.553"></status>
</kw>
<msg timestamp="20201030 15:55:26.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.532" endtime="20201030 15:55:26.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.554" endtime="20201030 15:55:26.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.557" endtime="20201030 15:55:26.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.530" endtime="20201030 15:55:26.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.528" endtime="20201030 15:55:26.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.566" endtime="20201030 15:55:26.852"></status>
</kw>
<msg timestamp="20201030 15:55:26.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.565" endtime="20201030 15:55:26.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022496194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.856" endtime="20201030 15:55:26.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.865" endtime="20201030 15:55:26.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.562" endtime="20201030 15:55:26.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.560" endtime="20201030 15:55:26.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:26.871" level="INFO">${RESULT} = [{'diff': 6.27080000000016e-05}, {'diff': 6.190299999999857e-05}, {'diff': 6.25699999999979e-05}, {'diff': 6.205500000000183e-05}, {'diff': 6.255499999999886e-05}, {'diff': 6.191599999999867e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:26.868" endtime="20201030 15:55:26.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:26.877" level="INFO">${ACCURACY} = {'diff': [6.27080000000016e-05, 6.190299999999857e-05, 6.25699999999979e-05, 6.205500000000183e-05, 6.255499999999886e-05, 6.191599999999867e-05, 6.272200000000117e-05, 6.184699999999682e-05, 6.238899...</msg>
<status status="PASS" starttime="20201030 15:55:26.873" endtime="20201030 15:55:26.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.881" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:55:26.880" endtime="20201030 15:55:26.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.884" level="INFO">VALUE: [6.27080000000016e-05, 6.190299999999857e-05, 6.25699999999979e-05, 6.205500000000183e-05, 6.255499999999886e-05, 6.191599999999867e-05, 6.272200000000117e-05, 6.184699999999682e-05, 6.23889999999995e-05, 6.236100000000036e-05, 6.22080000000011e-05, 6.244500000000125e-05, 6.232000000000112e-05, 6.240299999999907e-05, 6.190299999999857e-05, 6.265299999999932e-05, 6.25690000000019e-05, 6.22080000000011e-05, 6.266599999999942e-05, 6.256899999999843e-05, 6.256899999999843e-05, 6.261100000000061e-05, 6.188900000000247e-05, 6.220900000000057e-05, 6.248599999999702e-05, 6.215299999999882e-05, 6.255599999999834e-05, 6.277799999999945e-05, 6.216599999999892e-05, 6.208300000000097e-05, 6.231899999999818e-05, 6.277799999999945e-05, 6.213900000000272e-05, 6.256899999999843e-05, 6.237499999999993e-05, 6.206899999999793e-05, 6.27500000000003e-05, 6.23340000000007e-05, 6.195800000000085e-05, 6.27500000000003e-05, 6.232000000000112e-05, 6.20560000000013e-05, 6.238800000000003e-05, 6.205500000000183e-05, 6.187499999999943e-05, 6.277799999999945e-05, 6.250000000000006e-05, 6.199999999999956e-05, 6.250000000000006e-05, 6.197200000000042e-05]</msg>
<status status="PASS" starttime="20201030 15:55:26.882" endtime="20201030 15:55:26.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.878" endtime="20201030 15:55:26.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:26.889" endtime="20201030 15:55:26.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.887" endtime="20201030 15:55:26.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.886" endtime="20201030 15:55:26.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.526" endtime="20201030 15:55:26.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.525" endtime="20201030 15:55:26.910"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.919" endtime="20201030 15:55:26.937"></status>
</kw>
<msg timestamp="20201030 15:55:26.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.917" endtime="20201030 15:55:26.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:26.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:26.938" endtime="20201030 15:55:26.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.941" endtime="20201030 15:55:26.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.915" endtime="20201030 15:55:26.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.912" endtime="20201030 15:55:26.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:26.950" endtime="20201030 15:55:27.238"></status>
</kw>
<msg timestamp="20201030 15:55:27.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:26.949" endtime="20201030 15:55:27.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022278569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022341653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.242" endtime="20201030 15:55:27.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.251" endtime="20201030 15:55:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.946" endtime="20201030 15:55:27.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.944" endtime="20201030 15:55:27.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.258" level="INFO">${RESULT} = [{'diff': 6.308399999999798e-05}, {'diff': 6.361100000000161e-05}, {'diff': 6.323600000000124e-05}, {'diff': 6.363900000000075e-05}, {'diff': 6.340300000000007e-05}, {'diff': 6.372300000000164e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:27.254" endtime="20201030 15:55:27.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.262" level="INFO">${ACCURACY} = {'diff': [6.308399999999798e-05, 6.361100000000161e-05, 6.323600000000124e-05, 6.363900000000075e-05, 6.340300000000007e-05, 6.372300000000164e-05, 6.37080000000026e-05, 6.323600000000124e-05, 6.28049...</msg>
<status status="PASS" starttime="20201030 15:55:27.259" endtime="20201030 15:55:27.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.267" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.266" endtime="20201030 15:55:27.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.269" level="INFO">VALUE: [6.308399999999798e-05, 6.361100000000161e-05, 6.323600000000124e-05, 6.363900000000075e-05, 6.340300000000007e-05, 6.372300000000164e-05, 6.37080000000026e-05, 6.323600000000124e-05, 6.280499999999911e-05, 6.37219999999987e-05, 6.363900000000075e-05, 6.306899999999893e-05, 6.362499999999771e-05, 6.287500000000043e-05, 6.340300000000007e-05, 6.373599999999827e-05, 6.361200000000108e-05, 6.323700000000071e-05, 6.333299999999875e-05, 6.374999999999784e-05, 6.348600000000149e-05, 6.348600000000149e-05, 6.327799999999995e-05, 6.30690000000024e-05, 6.355499999999986e-05, 6.291699999999914e-05, 6.308400000000144e-05, 6.32630000000009e-05, 6.300000000000056e-05, 6.316699999999939e-05, 6.32500000000008e-05, 6.365300000000032e-05, 6.334700000000179e-05, 6.2889e-05, 6.291699999999914e-05, 6.2889e-05, 6.30279999999997e-05, 6.373600000000174e-05, 6.281899999999868e-05, 6.323599999999777e-05, 6.298600000000099e-05, 6.316699999999939e-05, 6.323699999999724e-05, 6.284700000000129e-05, 6.329200000000298e-05, 6.298599999999752e-05, 6.315199999999688e-05, 6.30690000000024e-05, 6.338899999999703e-05, 6.355500000000333e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.268" endtime="20201030 15:55:27.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.263" endtime="20201030 15:55:27.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.274" endtime="20201030 15:55:27.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.273" endtime="20201030 15:55:27.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.271" endtime="20201030 15:55:27.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.911" endtime="20201030 15:55:27.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:26.910" endtime="20201030 15:55:27.295"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.305" endtime="20201030 15:55:27.324"></status>
</kw>
<msg timestamp="20201030 15:55:27.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.304" endtime="20201030 15:55:27.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.326" endtime="20201030 15:55:27.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.329" endtime="20201030 15:55:27.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.301" endtime="20201030 15:55:27.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.298" endtime="20201030 15:55:27.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.338" endtime="20201030 15:55:27.624"></status>
</kw>
<msg timestamp="20201030 15:55:27.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.337" endtime="20201030 15:55:27.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025006139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025070722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.629" endtime="20201030 15:55:27.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.637" endtime="20201030 15:55:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.334" endtime="20201030 15:55:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.332" endtime="20201030 15:55:27.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.644" level="INFO">${RESULT} = [{'diff': 6.4583e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.449999999999859e-05}, {'diff': 6.381899999999968e-05}, {'diff': 6.440300000000107e-05}, {'diff': 6.391700000000014e-05}, {'diff': 6.3...</msg>
<status status="PASS" starttime="20201030 15:55:27.641" endtime="20201030 15:55:27.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:27.648" level="INFO">${ACCURACY} = {'diff': [6.4583e-05, 6.423599999999877e-05, 6.449999999999859e-05, 6.381899999999968e-05, 6.440300000000107e-05, 6.391700000000014e-05, 6.388899999999753e-05, 6.440300000000107e-05, 6.422300000000214...</msg>
<status status="PASS" starttime="20201030 15:55:27.645" endtime="20201030 15:55:27.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.653" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:55:27.652" endtime="20201030 15:55:27.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.656" level="INFO">VALUE: [6.4583e-05, 6.423599999999877e-05, 6.449999999999859e-05, 6.381899999999968e-05, 6.440300000000107e-05, 6.391700000000014e-05, 6.388899999999753e-05, 6.440300000000107e-05, 6.422300000000214e-05, 6.387499999999796e-05, 6.411099999999864e-05, 6.436099999999889e-05, 6.402700000000122e-05, 6.39020000000011e-05, 6.391700000000014e-05, 6.40829999999995e-05, 6.456900000000043e-05, 6.423599999999877e-05, 6.412499999999821e-05, 6.390300000000057e-05, 6.40280000000007e-05, 6.45699999999999e-05, 6.455600000000034e-05, 6.472299999999917e-05, 6.413800000000178e-05, 6.384699999999882e-05, 6.424999999999834e-05, 6.463900000000175e-05, 6.42500000000018e-05, 6.380599999999959e-05, 6.412499999999821e-05, 6.473599999999927e-05, 6.398600000000199e-05, 6.415300000000082e-05, 6.45699999999999e-05, 6.40829999999995e-05, 6.406899999999993e-05, 6.423599999999877e-05, 6.431900000000018e-05, 6.416600000000092e-05, 6.409699999999907e-05, 6.455499999999739e-05, 6.473600000000274e-05, 6.415300000000082e-05, 6.404200000000027e-05, 6.40699999999994e-05, 6.408400000000244e-05, 6.408399999999898e-05, 6.472299999999917e-05, 6.398700000000146e-05]</msg>
<status status="PASS" starttime="20201030 15:55:27.654" endtime="20201030 15:55:27.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.649" endtime="20201030 15:55:27.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.662" endtime="20201030 15:55:27.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.660" endtime="20201030 15:55:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.659" endtime="20201030 15:55:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.296" endtime="20201030 15:55:27.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.296" endtime="20201030 15:55:27.682"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.691" endtime="20201030 15:55:27.709"></status>
</kw>
<msg timestamp="20201030 15:55:27.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.690" endtime="20201030 15:55:27.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.710" endtime="20201030 15:55:27.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.713" endtime="20201030 15:55:27.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.687" endtime="20201030 15:55:27.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.685" endtime="20201030 15:55:27.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.722" endtime="20201030 15:55:28.008"></status>
</kw>
<msg timestamp="20201030 15:55:28.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:27.721" endtime="20201030 15:55:28.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022294847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:28.012" endtime="20201030 15:55:28.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.021" endtime="20201030 15:55:28.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.718" endtime="20201030 15:55:28.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.716" endtime="20201030 15:55:28.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.027" level="INFO">${RESULT} = [{'diff': 6.490300000000157e-05}, {'diff': 6.505599999999737e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.565300000000232e-05}, {'diff': 6.552799999999873e-05}, {'diff': 6.490300000000157e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:28.024" endtime="20201030 15:55:28.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.033" level="INFO">${ACCURACY} = {'diff': [6.490300000000157e-05, 6.505599999999737e-05, 6.523599999999977e-05, 6.565300000000232e-05, 6.552799999999873e-05, 6.490300000000157e-05, 6.50700000000004e-05, 6.555500000000186e-05, 6.54300...</msg>
<status status="PASS" starttime="20201030 15:55:28.028" endtime="20201030 15:55:28.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.037" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.036" endtime="20201030 15:55:28.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.040" level="INFO">VALUE: [6.490300000000157e-05, 6.505599999999737e-05, 6.523599999999977e-05, 6.565300000000232e-05, 6.552799999999873e-05, 6.490300000000157e-05, 6.50700000000004e-05, 6.555500000000186e-05, 6.543000000000174e-05, 6.526400000000238e-05, 6.483299999999678e-05, 6.574999999999984e-05, 6.565300000000232e-05, 6.541699999999817e-05, 6.50280000000017e-05, 6.543100000000121e-05, 6.543100000000121e-05, 6.555600000000134e-05, 6.523699999999924e-05, 6.498599999999952e-05, 6.515200000000235e-05, 6.562499999999971e-05, 6.523599999999977e-05, 6.563899999999928e-05, 6.506900000000093e-05, 6.5583000000001e-05, 6.536099999999989e-05, 6.486100000000286e-05, 6.556999999999744e-05, 6.522299999999967e-05, 6.482000000000016e-05, 6.540199999999913e-05, 6.573600000000027e-05, 6.533300000000075e-05, 6.505500000000136e-05, 6.57220000000007e-05, 6.565299999999885e-05, 6.541700000000164e-05, 6.523599999999977e-05, 6.548600000000002e-05, 6.498599999999952e-05, 6.480600000000059e-05, 6.49029999999981e-05, 6.50700000000004e-05, 6.522299999999967e-05, 6.552799999999873e-05, 6.548600000000002e-05, 6.549999999999959e-05, 6.498599999999952e-05, 6.498599999999952e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.038" endtime="20201030 15:55:28.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.033" endtime="20201030 15:55:28.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.045" endtime="20201030 15:55:28.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.043" endtime="20201030 15:55:28.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.042" endtime="20201030 15:55:28.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.683" endtime="20201030 15:55:28.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.683" endtime="20201030 15:55:28.066"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.075" endtime="20201030 15:55:28.093"></status>
</kw>
<msg timestamp="20201030 15:55:28.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.073" endtime="20201030 15:55:28.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.094" endtime="20201030 15:55:28.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.097" endtime="20201030 15:55:28.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.070" endtime="20201030 15:55:28.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.068" endtime="20201030 15:55:28.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.106" endtime="20201030 15:55:28.393"></status>
</kw>
<msg timestamp="20201030 15:55:28.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.105" endtime="20201030 15:55:28.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022553639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022620042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.397" endtime="20201030 15:55:28.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.405" endtime="20201030 15:55:28.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.102" endtime="20201030 15:55:28.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.100" endtime="20201030 15:55:28.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.412" level="INFO">${RESULT} = [{'diff': 6.64029999999996e-05}, {'diff': 6.672300000000117e-05}, {'diff': 6.598699999999999e-05}, {'diff': 6.577800000000245e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.586100000000039e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:28.409" endtime="20201030 15:55:28.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.416" level="INFO">${ACCURACY} = {'diff': [6.64029999999996e-05, 6.672300000000117e-05, 6.598699999999999e-05, 6.577800000000245e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.655499999999939e-05, 6.605499999999889e-05, 6.67219...</msg>
<status status="PASS" starttime="20201030 15:55:28.413" endtime="20201030 15:55:28.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.421" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.420" endtime="20201030 15:55:28.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.424" level="INFO">VALUE: [6.64029999999996e-05, 6.672300000000117e-05, 6.598699999999999e-05, 6.577800000000245e-05, 6.587499999999996e-05, 6.586100000000039e-05, 6.655499999999939e-05, 6.605499999999889e-05, 6.672199999999823e-05, 6.648600000000102e-05, 6.631999999999819e-05, 6.64029999999996e-05, 6.672199999999823e-05, 6.669400000000256e-05, 6.590300000000257e-05, 6.642999999999927e-05, 6.64159999999997e-05, 6.590199999999963e-05, 6.600000000000009e-05, 6.636100000000089e-05, 6.656900000000243e-05, 6.637500000000046e-05, 6.618100000000196e-05, 6.620799999999816e-05, 6.625000000000034e-05, 6.643099999999874e-05, 6.665299999999985e-05, 6.675000000000084e-05, 6.634700000000132e-05, 6.64159999999997e-05, 6.59020000000031e-05, 6.67220000000017e-05, 6.665299999999985e-05, 6.656899999999896e-05, 6.59029999999991e-05, 6.606899999999846e-05, 6.623600000000077e-05, 6.612500000000021e-05, 6.65700000000019e-05, 6.609700000000107e-05, 6.60700000000014e-05, 6.602699999999975e-05, 6.60830000000015e-05, 6.655499999999939e-05, 6.656899999999896e-05, 6.641699999999917e-05, 6.623600000000077e-05, 6.630599999999862e-05, 6.606999999999794e-05, 6.65700000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.422" endtime="20201030 15:55:28.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.417" endtime="20201030 15:55:28.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.429" endtime="20201030 15:55:28.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.427" endtime="20201030 15:55:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.426" endtime="20201030 15:55:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.067" endtime="20201030 15:55:28.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.066" endtime="20201030 15:55:28.449"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.458" endtime="20201030 15:55:28.481"></status>
</kw>
<msg timestamp="20201030 15:55:28.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.457" endtime="20201030 15:55:28.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.482" endtime="20201030 15:55:28.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.485" endtime="20201030 15:55:28.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.454" endtime="20201030 15:55:28.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.452" endtime="20201030 15:55:28.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.494" endtime="20201030 15:55:28.780"></status>
</kw>
<msg timestamp="20201030 15:55:28.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025604736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025672083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.493" endtime="20201030 15:55:28.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025604736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025672083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.785" endtime="20201030 15:55:28.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.793" endtime="20201030 15:55:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.490" endtime="20201030 15:55:28.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.488" endtime="20201030 15:55:28.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:28.800" level="INFO">${RESULT} = [{'diff': 6.734699999999885e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.74030000000006e-05}, {'diff': 6.691699999999967e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.741700000000017e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:28.797" endtime="20201030 15:55:28.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:28.804" level="INFO">${ACCURACY} = {'diff': [6.734699999999885e-05, 6.69030000000001e-05, 6.74030000000006e-05, 6.691699999999967e-05, 6.688900000000053e-05, 6.741700000000017e-05, 6.755599999999987e-05, 6.77359999999988e-05, 6.6860999...</msg>
<status status="PASS" starttime="20201030 15:55:28.801" endtime="20201030 15:55:28.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.809" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:55:28.808" endtime="20201030 15:55:28.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.811" level="INFO">VALUE: [6.734699999999885e-05, 6.69030000000001e-05, 6.74030000000006e-05, 6.691699999999967e-05, 6.688900000000053e-05, 6.741700000000017e-05, 6.755599999999987e-05, 6.77359999999988e-05, 6.686099999999792e-05, 6.706999999999894e-05, 6.758299999999953e-05, 6.705499999999989e-05, 6.772199999999923e-05, 6.737500000000146e-05, 6.695899999999838e-05, 6.755500000000039e-05, 6.77359999999988e-05, 6.715299999999688e-05, 6.69030000000001e-05, 6.758400000000248e-05, 6.740299999999713e-05, 6.70830000000025e-05, 6.774999999999837e-05, 6.733300000000275e-05, 6.708299999999903e-05, 6.755500000000039e-05, 6.706900000000293e-05, 6.722199999999873e-05, 6.763900000000128e-05, 6.705600000000284e-05, 6.74030000000006e-05, 6.755599999999987e-05, 6.755599999999987e-05, 6.723699999999777e-05, 6.763899999999781e-05, 6.740200000000113e-05, 6.705499999999989e-05, 6.690200000000063e-05, 6.774999999999837e-05, 6.731899999999971e-05, 6.706899999999946e-05, 6.77220000000027e-05, 6.681999999999869e-05, 6.706999999999894e-05, 6.77220000000027e-05, 6.748599999999855e-05, 6.713899999999731e-05, 6.738900000000103e-05, 6.72359999999983e-05, 6.681899999999921e-05]</msg>
<status status="PASS" starttime="20201030 15:55:28.810" endtime="20201030 15:55:28.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.805" endtime="20201030 15:55:28.814"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:28.817" endtime="20201030 15:55:28.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.816" endtime="20201030 15:55:28.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.815" endtime="20201030 15:55:28.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.450" endtime="20201030 15:55:28.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.450" endtime="20201030 15:55:28.838"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.847" endtime="20201030 15:55:28.865"></status>
</kw>
<msg timestamp="20201030 15:55:28.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.845" endtime="20201030 15:55:28.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:28.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:28.867" endtime="20201030 15:55:28.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.870" endtime="20201030 15:55:28.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.843" endtime="20201030 15:55:28.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.841" endtime="20201030 15:55:28.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:28.879" endtime="20201030 15:55:29.165"></status>
</kw>
<msg timestamp="20201030 15:55:29.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:28.877" endtime="20201030 15:55:29.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022432083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.169" endtime="20201030 15:55:29.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.177" endtime="20201030 15:55:29.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.875" endtime="20201030 15:55:29.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.873" endtime="20201030 15:55:29.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.184" level="INFO">${RESULT} = [{'diff': 6.805499999999742e-05}, {'diff': 6.840200000000213e-05}, {'diff': 6.805500000000089e-05}, {'diff': 6.874999999999937e-05}, {'diff': 6.863900000000228e-05}, {'diff': 6.84030000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:29.181" endtime="20201030 15:55:29.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.189" level="INFO">${ACCURACY} = {'diff': [6.805499999999742e-05, 6.840200000000213e-05, 6.805500000000089e-05, 6.874999999999937e-05, 6.863900000000228e-05, 6.84030000000016e-05, 6.790299999999763e-05, 6.805600000000037e-05, 6.80969...</msg>
<status status="PASS" starttime="20201030 15:55:29.185" endtime="20201030 15:55:29.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.194" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.193" endtime="20201030 15:55:29.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.197" level="INFO">VALUE: [6.805499999999742e-05, 6.840200000000213e-05, 6.805500000000089e-05, 6.874999999999937e-05, 6.863900000000228e-05, 6.84030000000016e-05, 6.790299999999763e-05, 6.805600000000037e-05, 6.80969999999996e-05, 6.791700000000067e-05, 6.823699999999877e-05, 6.815200000000188e-05, 6.806899999999699e-05, 6.82359999999993e-05, 6.812499999999874e-05, 6.856900000000096e-05, 6.822199999999973e-05, 6.862499999999924e-05, 6.794499999999981e-05, 6.80839999999995e-05, 6.859799999999958e-05, 6.79030000000011e-05, 6.82229999999992e-05, 6.781900000000021e-05, 6.870800000000066e-05, 6.816600000000145e-05, 6.806900000000046e-05, 6.806900000000046e-05, 6.82359999999993e-05, 6.813899999999831e-05, 6.838900000000203e-05, 6.841700000000117e-05, 6.857000000000044e-05, 6.791700000000067e-05, 6.85559999999974e-05, 6.822300000000267e-05, 6.798599999999905e-05, 6.847199999999998e-05, 6.813900000000178e-05, 6.808300000000003e-05, 6.872200000000023e-05, 6.865299999999838e-05, 6.847299999999945e-05, 6.798599999999905e-05, 6.8584e-05, 6.788900000000153e-05, 6.823699999999877e-05, 6.851400000000216e-05, 6.85970000000001e-05, 6.855499999999792e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.195" endtime="20201030 15:55:29.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.190" endtime="20201030 15:55:29.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.206" endtime="20201030 15:55:29.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.205" endtime="20201030 15:55:29.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.204" endtime="20201030 15:55:29.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.839" endtime="20201030 15:55:29.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:28.838" endtime="20201030 15:55:29.227"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.236" endtime="20201030 15:55:29.255"></status>
</kw>
<msg timestamp="20201030 15:55:29.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.235" endtime="20201030 15:55:29.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.256" endtime="20201030 15:55:29.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.259" endtime="20201030 15:55:29.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.232" endtime="20201030 15:55:29.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.230" endtime="20201030 15:55:29.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.268" endtime="20201030 15:55:29.555"></status>
</kw>
<msg timestamp="20201030 15:55:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.266" endtime="20201030 15:55:29.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022336181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:29.559" endtime="20201030 15:55:29.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.568" endtime="20201030 15:55:29.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.264" endtime="20201030 15:55:29.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.262" endtime="20201030 15:55:29.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.574" level="INFO">${RESULT} = [{'diff': 6.92360000000003e-05}, {'diff': 6.899999999999962e-05}, {'diff': 6.931900000000171e-05}, {'diff': 6.894399999999787e-05}, {'diff': 6.912499999999974e-05}, {'diff': 6.891700000000167e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:29.571" endtime="20201030 15:55:29.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.579" level="INFO">${ACCURACY} = {'diff': [6.92360000000003e-05, 6.899999999999962e-05, 6.931900000000171e-05, 6.894399999999787e-05, 6.912499999999974e-05, 6.891700000000167e-05, 6.905500000000189e-05, 6.883300000000078e-05, 6.90970...</msg>
<status status="PASS" starttime="20201030 15:55:29.575" endtime="20201030 15:55:29.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.583" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.582" endtime="20201030 15:55:29.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.586" level="INFO">VALUE: [6.92360000000003e-05, 6.899999999999962e-05, 6.931900000000171e-05, 6.894399999999787e-05, 6.912499999999974e-05, 6.891700000000167e-05, 6.905500000000189e-05, 6.883300000000078e-05, 6.90970000000006e-05, 6.957000000000144e-05, 6.90840000000005e-05, 6.890299999999863e-05, 6.956999999999797e-05, 6.958299999999806e-05, 6.923599999999683e-05, 6.898600000000005e-05, 6.915299999999888e-05, 6.886099999999992e-05, 6.919499999999759e-05, 6.950000000000012e-05, 6.897200000000048e-05, 6.965300000000285e-05, 6.907000000000094e-05, 6.92360000000003e-05, 6.899999999999962e-05, 6.901400000000266e-05, 6.949999999999665e-05, 6.922200000000073e-05, 6.956899999999849e-05, 6.92360000000003e-05, 6.898600000000005e-05, 6.930499999999867e-05, 6.97360000000008e-05, 6.948600000000055e-05, 6.898600000000005e-05, 6.913899999999931e-05, 6.94030000000026e-05, 6.943000000000227e-05, 6.92360000000003e-05, 6.948600000000055e-05, 6.948600000000055e-05, 6.931899999999824e-05, 6.970800000000166e-05, 6.92360000000003e-05, 6.906900000000146e-05, 6.926399999999944e-05, 6.882000000000069e-05, 6.922200000000073e-05, 6.936100000000042e-05, 6.973700000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.584" endtime="20201030 15:55:29.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.579" endtime="20201030 15:55:29.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.591" endtime="20201030 15:55:29.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.589" endtime="20201030 15:55:29.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.588" endtime="20201030 15:55:29.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.228" endtime="20201030 15:55:29.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.228" endtime="20201030 15:55:29.612"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.621" endtime="20201030 15:55:29.640"></status>
</kw>
<msg timestamp="20201030 15:55:29.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.619" endtime="20201030 15:55:29.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:29.641" endtime="20201030 15:55:29.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.644" endtime="20201030 15:55:29.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.616" endtime="20201030 15:55:29.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.614" endtime="20201030 15:55:29.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.653" endtime="20201030 15:55:29.940"></status>
</kw>
<msg timestamp="20201030 15:55:29.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:29.652" endtime="20201030 15:55:29.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023248, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023318236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:29.944" endtime="20201030 15:55:29.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:29.952" endtime="20201030 15:55:29.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.649" endtime="20201030 15:55:29.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.647" endtime="20201030 15:55:29.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:29.959" level="INFO">${RESULT} = [{'diff': 7.023599999999783e-05}, {'diff': 7.027800000000001e-05}, {'diff': 7.056999999999897e-05}, {'diff': 7.043099999999927e-05}, {'diff': 7.054199999999983e-05}, {'diff': 7.002799999999976e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:29.956" endtime="20201030 15:55:29.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:29.964" level="INFO">${ACCURACY} = {'diff': [7.023599999999783e-05, 7.027800000000001e-05, 7.056999999999897e-05, 7.043099999999927e-05, 7.054199999999983e-05, 7.002799999999976e-05, 7.02499999999974e-05, 7.013900000000031e-05, 7.03880...</msg>
<status status="PASS" starttime="20201030 15:55:29.960" endtime="20201030 15:55:29.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.968" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:55:29.967" endtime="20201030 15:55:29.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:29.971" level="INFO">VALUE: [7.023599999999783e-05, 7.027800000000001e-05, 7.056999999999897e-05, 7.043099999999927e-05, 7.054199999999983e-05, 7.002799999999976e-05, 7.02499999999974e-05, 7.013900000000031e-05, 7.038800000000109e-05, 6.988900000000006e-05, 7.04169999999997e-05, 7.072199999999876e-05, 7.033299999999881e-05, 6.988900000000006e-05, 6.990299999999963e-05, 7.073599999999833e-05, 7.015299999999988e-05, 7.025000000000087e-05, 7.065300000000038e-05, 7.040300000000013e-05, 7.004099999999985e-05, 7.006899999999899e-05, 7.004099999999985e-05, 7.006899999999899e-05, 7.073599999999833e-05, 7.034699999999838e-05, 7.072200000000223e-05, 7.033400000000176e-05, 7.040300000000013e-05, 7.02629999999975e-05, 7.04169999999997e-05, 7.041600000000023e-05, 6.981899999999874e-05, 6.993100000000224e-05, 7.005499999999942e-05, 7.020799999999869e-05, 7.015299999999988e-05, 6.99169999999992e-05, 7.040300000000013e-05, 7.008399999999804e-05, 7.072200000000223e-05, 7.017999999999955e-05, 7.056999999999897e-05, 7.007000000000194e-05, 7.006900000000246e-05, 7.026400000000044e-05, 6.99299999999993e-05, 7.013900000000031e-05, 7.009699999999813e-05, 6.990299999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:55:29.969" endtime="20201030 15:55:29.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.964" endtime="20201030 15:55:29.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:29.977" endtime="20201030 15:55:29.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.975" endtime="20201030 15:55:29.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.974" endtime="20201030 15:55:29.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.613" endtime="20201030 15:55:29.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.612" endtime="20201030 15:55:29.997"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.007" endtime="20201030 15:55:30.026"></status>
</kw>
<msg timestamp="20201030 15:55:30.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.005" endtime="20201030 15:55:30.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.027" endtime="20201030 15:55:30.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.030" endtime="20201030 15:55:30.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.002" endtime="20201030 15:55:30.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.000" endtime="20201030 15:55:30.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.039" endtime="20201030 15:55:30.325"></status>
</kw>
<msg timestamp="20201030 15:55:30.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.037" endtime="20201030 15:55:30.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022604972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022676694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.329" endtime="20201030 15:55:30.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.337" endtime="20201030 15:55:30.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.035" endtime="20201030 15:55:30.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.033" endtime="20201030 15:55:30.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.344" level="INFO">${RESULT} = [{'diff': 7.172199999999976e-05}, {'diff': 7.098599999999858e-05}, {'diff': 7.084700000000235e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.131900000000024e-05}, {'diff': 7.090300000000063e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:30.341" endtime="20201030 15:55:30.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.350" level="INFO">${ACCURACY} = {'diff': [7.172199999999976e-05, 7.098599999999858e-05, 7.084700000000235e-05, 7.172199999999976e-05, 7.131900000000024e-05, 7.090300000000063e-05, 7.147199999999951e-05, 7.17499999999989e-05, 7.09859...</msg>
<status status="PASS" starttime="20201030 15:55:30.345" endtime="20201030 15:55:30.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.355" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.353" endtime="20201030 15:55:30.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.357" level="INFO">VALUE: [7.172199999999976e-05, 7.098599999999858e-05, 7.084700000000235e-05, 7.172199999999976e-05, 7.131900000000024e-05, 7.090300000000063e-05, 7.147199999999951e-05, 7.17499999999989e-05, 7.098599999999858e-05, 7.133399999999929e-05, 7.084799999999836e-05, 7.10559999999999e-05, 7.083299999999931e-05, 7.1069e-05, 7.137500000000199e-05, 7.125000000000187e-05, 7.080500000000017e-05, 7.172199999999976e-05, 7.116700000000045e-05, 7.10840000000025e-05, 7.131900000000024e-05, 7.127800000000101e-05, 7.126399999999797e-05, 7.148699999999855e-05, 7.101400000000119e-05, 7.131900000000024e-05, 7.152799999999779e-05, 7.158300000000006e-05, 7.172199999999976e-05, 7.113900000000131e-05, 7.090299999999716e-05, 7.14170000000007e-05, 7.127699999999806e-05, 7.159799999999911e-05, 7.123700000000177e-05, 7.101400000000119e-05, 7.113799999999837e-05, 7.180600000000065e-05, 7.081899999999974e-05, 7.090299999999716e-05, 7.168000000000105e-05, 7.075000000000137e-05, 7.138899999999809e-05, 7.123599999999883e-05, 7.098599999999858e-05, 7.163899999999834e-05, 7.138900000000156e-05, 7.172199999999976e-05, 7.09300000000003e-05, 7.165199999999844e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.356" endtime="20201030 15:55:30.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.351" endtime="20201030 15:55:30.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.362" endtime="20201030 15:55:30.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.360" endtime="20201030 15:55:30.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.359" endtime="20201030 15:55:30.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.998" endtime="20201030 15:55:30.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:29.998" endtime="20201030 15:55:30.382"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.391" endtime="20201030 15:55:30.410"></status>
</kw>
<msg timestamp="20201030 15:55:30.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.390" endtime="20201030 15:55:30.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.412" endtime="20201030 15:55:30.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.414" endtime="20201030 15:55:30.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.387" endtime="20201030 15:55:30.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.385" endtime="20201030 15:55:30.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.423" endtime="20201030 15:55:30.710"></status>
</kw>
<msg timestamp="20201030 15:55:30.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.422" endtime="20201030 15:55:30.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022117444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022189514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.715" endtime="20201030 15:55:30.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.723" endtime="20201030 15:55:30.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.419" endtime="20201030 15:55:30.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.418" endtime="20201030 15:55:30.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:30.729" level="INFO">${RESULT} = [{'diff': 7.207000000000047e-05}, {'diff': 7.223599999999983e-05}, {'diff': 7.248600000000008e-05}, {'diff': 7.182000000000022e-05}, {'diff': 7.257000000000097e-05}, {'diff': 7.25560000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:30.726" endtime="20201030 15:55:30.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:30.733" level="INFO">${ACCURACY} = {'diff': [7.207000000000047e-05, 7.223599999999983e-05, 7.248600000000008e-05, 7.182000000000022e-05, 7.257000000000097e-05, 7.25560000000014e-05, 7.229199999999811e-05, 7.200000000000262e-05, 7.23749...</msg>
<status status="PASS" starttime="20201030 15:55:30.730" endtime="20201030 15:55:30.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.738" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:55:30.737" endtime="20201030 15:55:30.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.740" level="INFO">VALUE: [7.207000000000047e-05, 7.223599999999983e-05, 7.248600000000008e-05, 7.182000000000022e-05, 7.257000000000097e-05, 7.25560000000014e-05, 7.229199999999811e-05, 7.200000000000262e-05, 7.237499999999952e-05, 7.223599999999983e-05, 7.215299999999841e-05, 7.241699999999823e-05, 7.223599999999983e-05, 7.216700000000145e-05, 7.25560000000014e-05, 7.208400000000004e-05, 7.209700000000013e-05, 7.190300000000163e-05, 7.184799999999936e-05, 7.256899999999802e-05, 7.22499999999994e-05, 7.231900000000124e-05, 7.258300000000106e-05, 7.240300000000213e-05, 7.2069000000001e-05, 7.240300000000213e-05, 7.20560000000009e-05, 7.273600000000033e-05, 7.199999999999915e-05, 7.216600000000198e-05, 7.202699999999881e-05, 7.190199999999869e-05, 7.238899999999909e-05, 7.190299999999816e-05, 7.223599999999983e-05, 7.198599999999958e-05, 7.244500000000084e-05, 7.17499999999989e-05, 7.27499999999999e-05, 7.183399999999979e-05, 7.237499999999952e-05, 7.240300000000213e-05, 7.238800000000309e-05, 7.222200000000026e-05, 7.266599999999901e-05, 7.188900000000206e-05, 7.187499999999902e-05, 7.261199999999968e-05, 7.198599999999958e-05, 7.240299999999866e-05]</msg>
<status status="PASS" starttime="20201030 15:55:30.739" endtime="20201030 15:55:30.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.734" endtime="20201030 15:55:30.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:30.745" endtime="20201030 15:55:30.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.744" endtime="20201030 15:55:30.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.742" endtime="20201030 15:55:30.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.384" endtime="20201030 15:55:30.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.383" endtime="20201030 15:55:30.766"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.774" endtime="20201030 15:55:30.794"></status>
</kw>
<msg timestamp="20201030 15:55:30.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.773" endtime="20201030 15:55:30.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.795" endtime="20201030 15:55:30.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.798" endtime="20201030 15:55:30.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.770" endtime="20201030 15:55:30.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.768" endtime="20201030 15:55:30.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.811" endtime="20201030 15:55:31.107"></status>
</kw>
<msg timestamp="20201030 15:55:31.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023110542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:30.808" endtime="20201030 15:55:31.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023037153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023110542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.111" endtime="20201030 15:55:31.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.120" endtime="20201030 15:55:31.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.803" endtime="20201030 15:55:31.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.801" endtime="20201030 15:55:31.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.126" level="INFO">${RESULT} = [{'diff': 7.338900000000009e-05}, {'diff': 7.32370000000003e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.305500000000242e-05}, {'diff': 7.373600000000133e-05}, {'diff': 7.348600000000108e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:31.123" endtime="20201030 15:55:31.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.130" level="INFO">${ACCURACY} = {'diff': [7.338900000000009e-05, 7.32370000000003e-05, 7.284700000000088e-05, 7.305500000000242e-05, 7.373600000000133e-05, 7.348600000000108e-05, 7.283300000000131e-05, 7.319399999999865e-05, 7.28059...</msg>
<status status="PASS" starttime="20201030 15:55:31.127" endtime="20201030 15:55:31.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.135" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.134" endtime="20201030 15:55:31.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.137" level="INFO">VALUE: [7.338900000000009e-05, 7.32370000000003e-05, 7.284700000000088e-05, 7.305500000000242e-05, 7.373600000000133e-05, 7.348600000000108e-05, 7.283300000000131e-05, 7.319399999999865e-05, 7.280599999999818e-05, 7.305599999999843e-05, 7.307000000000147e-05, 7.357000000000197e-05, 7.372300000000123e-05, 7.313899999999984e-05, 7.290199999999969e-05, 7.291599999999926e-05, 7.356899999999902e-05, 7.306899999999852e-05, 7.338900000000009e-05, 7.306899999999852e-05, 7.326399999999997e-05, 7.281999999999775e-05, 7.291699999999873e-05, 7.29439999999984e-05, 7.305599999999843e-05, 7.370800000000219e-05, 7.331900000000224e-05, 7.340200000000019e-05, 7.301399999999972e-05, 7.362500000000077e-05, 7.322200000000126e-05, 7.361099999999773e-05, 7.35699999999985e-05, 7.3069999999998e-05, 7.369499999999862e-05, 7.309800000000061e-05, 7.357000000000197e-05, 7.287500000000002e-05, 7.320800000000169e-05, 7.283299999999784e-05, 7.30829999999981e-05, 7.323600000000083e-05, 7.365299999999991e-05, 7.373599999999786e-05, 7.298600000000058e-05, 7.351400000000022e-05, 7.300000000000015e-05, 7.332000000000172e-05, 7.36110000000012e-05, 7.340200000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.136" endtime="20201030 15:55:31.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.131" endtime="20201030 15:55:31.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.143" endtime="20201030 15:55:31.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.141" endtime="20201030 15:55:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.140" endtime="20201030 15:55:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.767" endtime="20201030 15:55:31.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.766" endtime="20201030 15:55:31.163"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.172" endtime="20201030 15:55:31.191"></status>
</kw>
<msg timestamp="20201030 15:55:31.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.170" endtime="20201030 15:55:31.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.193" endtime="20201030 15:55:31.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.195" endtime="20201030 15:55:31.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.168" endtime="20201030 15:55:31.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.166" endtime="20201030 15:55:31.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.204" endtime="20201030 15:55:31.489"></status>
</kw>
<msg timestamp="20201030 15:55:31.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.202" endtime="20201030 15:55:31.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022227333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022301403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.493" endtime="20201030 15:55:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.501" endtime="20201030 15:55:31.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.200" endtime="20201030 15:55:31.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.198" endtime="20201030 15:55:31.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.508" level="INFO">${RESULT} = [{'diff': 7.407000000000247e-05}, {'diff': 7.388900000000059e-05}, {'diff': 7.473699999999833e-05}, {'diff': 7.448700000000155e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.473599999999886e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:31.505" endtime="20201030 15:55:31.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.513" level="INFO">${ACCURACY} = {'diff': [7.407000000000247e-05, 7.388900000000059e-05, 7.473699999999833e-05, 7.448700000000155e-05, 7.433299999999934e-05, 7.473599999999886e-05, 7.433299999999934e-05, 7.42639999999975e-05, 7.46529...</msg>
<status status="PASS" starttime="20201030 15:55:31.509" endtime="20201030 15:55:31.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.517" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.516" endtime="20201030 15:55:31.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.519" level="INFO">VALUE: [7.407000000000247e-05, 7.388900000000059e-05, 7.473699999999833e-05, 7.448700000000155e-05, 7.433299999999934e-05, 7.473599999999886e-05, 7.433299999999934e-05, 7.42639999999975e-05, 7.465299999999744e-05, 7.429100000000063e-05, 7.413900000000084e-05, 7.44309999999998e-05, 7.458399999999907e-05, 7.391699999999973e-05, 7.45829999999996e-05, 7.41110000000017e-05, 7.4069000000003e-05, 7.388899999999712e-05, 7.423600000000183e-05, 7.383299999999884e-05, 7.440300000000066e-05, 7.473599999999886e-05, 7.398599999999811e-05, 7.451400000000122e-05, 7.381999999999875e-05, 7.438900000000109e-05, 7.456900000000002e-05, 7.395799999999897e-05, 7.455500000000045e-05, 7.406899999999952e-05, 7.440300000000066e-05, 7.440300000000066e-05, 7.391699999999973e-05, 7.454200000000036e-05, 7.423600000000183e-05, 7.447300000000198e-05, 7.384700000000188e-05, 7.473599999999886e-05, 7.415200000000094e-05, 7.433299999999934e-05, 7.41110000000017e-05, 7.387499999999755e-05, 7.473600000000233e-05, 7.415300000000041e-05, 7.472199999999929e-05, 7.450000000000165e-05, 7.382000000000222e-05, 7.392999999999983e-05, 7.404099999999691e-05, 7.390200000000069e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.518" endtime="20201030 15:55:31.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.513" endtime="20201030 15:55:31.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.524" endtime="20201030 15:55:31.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.523" endtime="20201030 15:55:31.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.522" endtime="20201030 15:55:31.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.164" endtime="20201030 15:55:31.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.164" endtime="20201030 15:55:31.545"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.553" endtime="20201030 15:55:31.572"></status>
</kw>
<msg timestamp="20201030 15:55:31.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.552" endtime="20201030 15:55:31.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.574" endtime="20201030 15:55:31.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.576" endtime="20201030 15:55:31.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.549" endtime="20201030 15:55:31.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.547" endtime="20201030 15:55:31.579"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.585" endtime="20201030 15:55:31.871"></status>
</kw>
<msg timestamp="20201030 15:55:31.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.583" endtime="20201030 15:55:31.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021644806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.875" endtime="20201030 15:55:31.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.883" endtime="20201030 15:55:31.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.581" endtime="20201030 15:55:31.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.579" endtime="20201030 15:55:31.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:31.890" level="INFO">${RESULT} = [{'diff': 7.574999999999943e-05}, {'diff': 7.559799999999964e-05}, {'diff': 7.505600000000043e-05}, {'diff': 7.506900000000052e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.524999999999893e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:31.887" endtime="20201030 15:55:31.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:31.894" level="INFO">${ACCURACY} = {'diff': [7.574999999999943e-05, 7.559799999999964e-05, 7.505600000000043e-05, 7.506900000000052e-05, 7.55830000000006e-05, 7.524999999999893e-05, 7.548599999999961e-05, 7.555600000000093e-05, 7.54720...</msg>
<status status="PASS" starttime="20201030 15:55:31.891" endtime="20201030 15:55:31.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.898" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:55:31.897" endtime="20201030 15:55:31.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.901" level="INFO">VALUE: [7.574999999999943e-05, 7.559799999999964e-05, 7.505600000000043e-05, 7.506900000000052e-05, 7.55830000000006e-05, 7.524999999999893e-05, 7.548599999999961e-05, 7.555600000000093e-05, 7.547200000000004e-05, 7.482000000000322e-05, 7.51249999999988e-05, 7.523599999999936e-05, 7.483400000000279e-05, 7.488900000000159e-05, 7.523599999999936e-05, 7.548599999999961e-05, 7.500000000000215e-05, 7.515300000000141e-05, 7.559700000000016e-05, 7.573599999999986e-05, 7.548599999999961e-05, 7.515300000000141e-05, 7.523599999999936e-05, 7.483399999999932e-05, 7.495799999999997e-05, 7.501399999999825e-05, 7.524999999999893e-05, 7.543000000000133e-05, 7.513899999999837e-05, 7.540300000000166e-05, 7.491700000000073e-05, 7.53890000000021e-05, 7.540300000000166e-05, 7.54310000000008e-05, 7.55700000000005e-05, 7.55830000000006e-05, 7.573699999999933e-05, 7.497199999999954e-05, 7.531900000000077e-05, 7.572200000000029e-05, 7.548599999999961e-05, 7.551399999999875e-05, 7.479200000000061e-05, 7.569500000000062e-05, 7.480600000000018e-05, 7.488900000000159e-05, 7.561099999999973e-05, 7.520899999999969e-05, 7.565199999999897e-05, 7.488799999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:55:31.899" endtime="20201030 15:55:31.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.895" endtime="20201030 15:55:31.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:31.906" endtime="20201030 15:55:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.904" endtime="20201030 15:55:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.903" endtime="20201030 15:55:31.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.546" endtime="20201030 15:55:31.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.545" endtime="20201030 15:55:31.926"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.935" endtime="20201030 15:55:31.957"></status>
</kw>
<msg timestamp="20201030 15:55:31.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.933" endtime="20201030 15:55:31.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:31.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:31.958" endtime="20201030 15:55:31.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.961" endtime="20201030 15:55:31.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.931" endtime="20201030 15:55:31.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.929" endtime="20201030 15:55:31.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:31.970" endtime="20201030 15:55:32.256"></status>
</kw>
<msg timestamp="20201030 15:55:32.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:31.968" endtime="20201030 15:55:32.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025163431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025239486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.260" endtime="20201030 15:55:32.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.268" endtime="20201030 15:55:32.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.966" endtime="20201030 15:55:32.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.964" endtime="20201030 15:55:32.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.275" level="INFO">${RESULT} = [{'diff': 7.605499999999848e-05}, {'diff': 7.655500000000245e-05}, {'diff': 7.620800000000122e-05}, {'diff': 7.64310000000018e-05}, {'diff': 7.665299999999944e-05}, {'diff': 7.6070000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:32.272" endtime="20201030 15:55:32.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.279" level="INFO">${ACCURACY} = {'diff': [7.605499999999848e-05, 7.655500000000245e-05, 7.620800000000122e-05, 7.64310000000018e-05, 7.665299999999944e-05, 7.6070000000001e-05, 7.587499999999955e-05, 7.602700000000281e-05, 7.6735999...</msg>
<status status="PASS" starttime="20201030 15:55:32.276" endtime="20201030 15:55:32.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.283" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.282" endtime="20201030 15:55:32.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.286" level="INFO">VALUE: [7.605499999999848e-05, 7.655500000000245e-05, 7.620800000000122e-05, 7.64310000000018e-05, 7.665299999999944e-05, 7.6070000000001e-05, 7.587499999999955e-05, 7.602700000000281e-05, 7.673599999999739e-05, 7.590199999999922e-05, 7.630499999999873e-05, 7.606899999999805e-05, 7.672200000000129e-05, 7.648600000000061e-05, 7.583400000000032e-05, 7.623600000000036e-05, 7.620800000000122e-05, 7.59440000000014e-05, 7.640300000000266e-05, 7.588799999999965e-05, 7.622200000000079e-05, 7.615199999999947e-05, 7.624999999999993e-05, 7.634700000000091e-05, 7.624999999999993e-05, 7.631900000000177e-05, 7.640300000000266e-05, 7.620900000000069e-05, 7.665299999999944e-05, 7.672300000000076e-05, 7.666599999999954e-05, 7.630599999999821e-05, 7.593000000000183e-05, 7.61249999999998e-05, 7.672200000000129e-05, 7.597200000000054e-05, 7.618099999999808e-05, 7.64029999999992e-05, 7.641700000000223e-05, 7.609700000000066e-05, 7.624999999999993e-05, 7.59449999999974e-05, 7.652799999999932e-05, 7.647199999999757e-05, 7.666700000000248e-05, 7.605499999999848e-05, 7.656900000000202e-05, 7.659800000000064e-05, 7.619499999999765e-05, 7.582000000000075e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.284" endtime="20201030 15:55:32.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.280" endtime="20201030 15:55:32.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.291" endtime="20201030 15:55:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.290" endtime="20201030 15:55:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.289" endtime="20201030 15:55:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.927" endtime="20201030 15:55:32.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:31.926" endtime="20201030 15:55:32.312"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.320" endtime="20201030 15:55:32.339"></status>
</kw>
<msg timestamp="20201030 15:55:32.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.319" endtime="20201030 15:55:32.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.341" endtime="20201030 15:55:32.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.343" endtime="20201030 15:55:32.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.316" endtime="20201030 15:55:32.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.314" endtime="20201030 15:55:32.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.352" endtime="20201030 15:55:32.638"></status>
</kw>
<msg timestamp="20201030 15:55:32.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:32.351" endtime="20201030 15:55:32.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:32.642" endtime="20201030 15:55:32.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.650" endtime="20201030 15:55:32.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.348" endtime="20201030 15:55:32.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.346" endtime="20201030 15:55:32.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:32.656" level="INFO">${RESULT} = [{'diff': 7.773599999999839e-05}, {'diff': 7.763900000000087e-05}, {'diff': 7.745800000000247e-05}, {'diff': 7.725000000000093e-05}, {'diff': 7.76250000000013e-05}, {'diff': 7.704100000000338e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:32.653" endtime="20201030 15:55:32.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:32.661" level="INFO">${ACCURACY} = {'diff': [7.773599999999839e-05, 7.763900000000087e-05, 7.745800000000247e-05, 7.725000000000093e-05, 7.76250000000013e-05, 7.704100000000338e-05, 7.722199999999832e-05, 7.765200000000097e-05, 7.72500...</msg>
<status status="PASS" starttime="20201030 15:55:32.657" endtime="20201030 15:55:32.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.666" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:55:32.665" endtime="20201030 15:55:32.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.668" level="INFO">VALUE: [7.773599999999839e-05, 7.763900000000087e-05, 7.745800000000247e-05, 7.725000000000093e-05, 7.76250000000013e-05, 7.704100000000338e-05, 7.722199999999832e-05, 7.765200000000097e-05, 7.725000000000093e-05, 7.715299999999994e-05, 7.691699999999926e-05, 7.773599999999839e-05, 7.69029999999997e-05, 7.730599999999921e-05, 7.730499999999974e-05, 7.748600000000161e-05, 7.683300000000184e-05, 7.691599999999979e-05, 7.772199999999882e-05, 7.763900000000087e-05, 7.772199999999882e-05, 7.766700000000001e-05, 7.70830000000021e-05, 7.706899999999905e-05, 7.690300000000316e-05, 7.774999999999796e-05, 7.683399999999785e-05, 7.774999999999796e-05, 7.763900000000087e-05, 7.773599999999839e-05, 7.694399999999893e-05, 7.681900000000227e-05, 7.723600000000136e-05, 7.700000000000068e-05, 7.679199999999914e-05, 7.701400000000025e-05, 7.691700000000273e-05, 7.724999999999746e-05, 7.684699999999794e-05, 7.708299999999862e-05, 7.736100000000148e-05, 7.706899999999905e-05, 7.709700000000166e-05, 7.75830000000026e-05, 7.773599999999839e-05, 7.683299999999837e-05, 7.723600000000136e-05, 7.765300000000044e-05, 7.774999999999796e-05, 7.731999999999878e-05]</msg>
<status status="PASS" starttime="20201030 15:55:32.667" endtime="20201030 15:55:32.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.662" endtime="20201030 15:55:32.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:32.673" endtime="20201030 15:55:32.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.672" endtime="20201030 15:55:32.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.670" endtime="20201030 15:55:32.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.313" endtime="20201030 15:55:32.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.312" endtime="20201030 15:55:32.694"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.702" endtime="20201030 15:55:32.721"></status>
</kw>
<msg timestamp="20201030 15:55:32.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.701" endtime="20201030 15:55:32.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:32.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:32.722" endtime="20201030 15:55:32.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.725" endtime="20201030 15:55:32.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.698" endtime="20201030 15:55:32.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.696" endtime="20201030 15:55:32.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:32.734" endtime="20201030 15:55:33.021"></status>
</kw>
<msg timestamp="20201030 15:55:33.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:32.732" endtime="20201030 15:55:33.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.025" endtime="20201030 15:55:33.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.033" endtime="20201030 15:55:33.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.730" endtime="20201030 15:55:33.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.728" endtime="20201030 15:55:33.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.039" level="INFO">${RESULT} = [{'diff': 7.79030000000007e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.838899999999815e-05}, {'diff': 7.843100000000033e-05}, {'diff': 7.822199999999932e-05}, {'diff': 7.815300000000094e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:33.036" endtime="20201030 15:55:33.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.043" level="INFO">${ACCURACY} = {'diff': [7.79030000000007e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.843100000000033e-05, 7.822199999999932e-05, 7.815300000000094e-05, 7.80839999999991e-05, 7.791700000000026e-05, 7.806999...</msg>
<status status="PASS" starttime="20201030 15:55:33.040" endtime="20201030 15:55:33.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.048" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.047" endtime="20201030 15:55:33.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.050" level="INFO">VALUE: [7.79030000000007e-05, 7.843100000000033e-05, 7.838899999999815e-05, 7.843100000000033e-05, 7.822199999999932e-05, 7.815300000000094e-05, 7.80839999999991e-05, 7.791700000000026e-05, 7.806999999999953e-05, 7.82640000000015e-05, 7.818100000000008e-05, 7.806900000000006e-05, 7.791700000000026e-05, 7.790299999999722e-05, 7.858300000000012e-05, 7.838899999999815e-05, 7.84030000000012e-05, 7.84169999999973e-05, 7.8070000000003e-05, 7.84030000000012e-05, 7.783299999999937e-05, 7.840199999999825e-05, 7.805500000000049e-05, 7.874999999999896e-05, 7.780500000000024e-05, 7.806900000000006e-05, 7.843100000000033e-05, 7.875000000000243e-05, 7.798599999999864e-05, 7.81389999999979e-05, 7.82229999999988e-05, 7.784699999999894e-05, 7.840299999999772e-05, 7.825000000000193e-05, 7.78189999999998e-05, 7.84030000000012e-05, 7.855600000000046e-05, 7.806999999999953e-05, 7.787499999999808e-05, 7.84030000000012e-05, 7.824999999999846e-05, 7.831999999999978e-05, 7.873599999999939e-05, 7.781900000000327e-05, 7.872199999999982e-05, 7.866700000000101e-05, 7.872199999999982e-05, 7.83190000000003e-05, 7.848599999999914e-05, 7.873599999999939e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.049" endtime="20201030 15:55:33.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.044" endtime="20201030 15:55:33.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.055" endtime="20201030 15:55:33.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.054" endtime="20201030 15:55:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.052" endtime="20201030 15:55:33.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.695" endtime="20201030 15:55:33.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:32.694" endtime="20201030 15:55:33.076"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.084" endtime="20201030 15:55:33.104"></status>
</kw>
<msg timestamp="20201030 15:55:33.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.083" endtime="20201030 15:55:33.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.106" endtime="20201030 15:55:33.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.108" endtime="20201030 15:55:33.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.080" endtime="20201030 15:55:33.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.078" endtime="20201030 15:55:33.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.117" endtime="20201030 15:55:33.403"></status>
</kw>
<msg timestamp="20201030 15:55:33.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023077375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.115" endtime="20201030 15:55:33.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022997806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023077375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.407" endtime="20201030 15:55:33.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.415" endtime="20201030 15:55:33.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.113" endtime="20201030 15:55:33.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.111" endtime="20201030 15:55:33.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.422" level="INFO">${RESULT} = [{'diff': 7.956900000000156e-05}, {'diff': 7.952800000000232e-05}, {'diff': 7.954199999999842e-05}, {'diff': 7.973599999999692e-05}, {'diff': 7.965299999999897e-05}, {'diff': 7.905599999999749e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:33.418" endtime="20201030 15:55:33.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.426" level="INFO">${ACCURACY} = {'diff': [7.956900000000156e-05, 7.952800000000232e-05, 7.954199999999842e-05, 7.973599999999692e-05, 7.965299999999897e-05, 7.905599999999749e-05, 7.907000000000053e-05, 7.952699999999938e-05, 7.8875...</msg>
<status status="PASS" starttime="20201030 15:55:33.423" endtime="20201030 15:55:33.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.430" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.429" endtime="20201030 15:55:33.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.432" level="INFO">VALUE: [7.956900000000156e-05, 7.952800000000232e-05, 7.954199999999842e-05, 7.973599999999692e-05, 7.965299999999897e-05, 7.905599999999749e-05, 7.907000000000053e-05, 7.952699999999938e-05, 7.887500000000255e-05, 7.938899999999915e-05, 7.923599999999989e-05, 7.966700000000201e-05, 7.958300000000113e-05, 7.940299999999872e-05, 7.956999999999756e-05, 7.955599999999799e-05, 7.943099999999786e-05, 7.899999999999921e-05, 7.973600000000039e-05, 7.926399999999903e-05, 7.954099999999895e-05, 7.972200000000082e-05, 7.927800000000207e-05, 7.972199999999735e-05, 7.929199999999817e-05, 7.89030000000017e-05, 7.905599999999749e-05, 7.95970000000007e-05, 7.94169999999983e-05, 7.941599999999882e-05, 7.888899999999865e-05, 7.925000000000293e-05, 7.948600000000014e-05, 7.898599999999964e-05, 7.966699999999854e-05, 7.973600000000039e-05, 7.930599999999774e-05, 7.891700000000126e-05, 7.976399999999953e-05, 7.898699999999911e-05, 7.886099999999951e-05, 7.906899999999759e-05, 7.888900000000212e-05, 7.905499999999802e-05, 7.973600000000039e-05, 7.883300000000037e-05, 7.923599999999989e-05, 7.91389999999989e-05, 7.906999999999706e-05, 7.954099999999895e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.431" endtime="20201030 15:55:33.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.426" endtime="20201030 15:55:33.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.438" endtime="20201030 15:55:33.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.437" endtime="20201030 15:55:33.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.436" endtime="20201030 15:55:33.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.077" endtime="20201030 15:55:33.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.076" endtime="20201030 15:55:33.459"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.467" endtime="20201030 15:55:33.486"></status>
</kw>
<msg timestamp="20201030 15:55:33.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.466" endtime="20201030 15:55:33.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.488" endtime="20201030 15:55:33.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.490" endtime="20201030 15:55:33.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.463" endtime="20201030 15:55:33.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.461" endtime="20201030 15:55:33.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.499" endtime="20201030 15:55:33.785"></status>
</kw>
<msg timestamp="20201030 15:55:33.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.498" endtime="20201030 15:55:33.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021734153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.789" endtime="20201030 15:55:33.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.798" endtime="20201030 15:55:33.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.495" endtime="20201030 15:55:33.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.493" endtime="20201030 15:55:33.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:33.804" level="INFO">${RESULT} = [{'diff': 8.038900000000015e-05}, {'diff': 8.020899999999775e-05}, {'diff': 8.06390000000004e-05}, {'diff': 8.006900000000206e-05}, {'diff': 8.073600000000139e-05}, {'diff': 8.048600000000114e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:33.801" endtime="20201030 15:55:33.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:33.809" level="INFO">${ACCURACY} = {'diff': [8.038900000000015e-05, 8.020899999999775e-05, 8.06390000000004e-05, 8.006900000000206e-05, 8.073600000000139e-05, 8.048600000000114e-05, 8.06390000000004e-05, 8.04169999999993e-05, 8.0236000...</msg>
<status status="PASS" starttime="20201030 15:55:33.805" endtime="20201030 15:55:33.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.813" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:55:33.812" endtime="20201030 15:55:33.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.816" level="INFO">VALUE: [8.038900000000015e-05, 8.020899999999775e-05, 8.06390000000004e-05, 8.006900000000206e-05, 8.073600000000139e-05, 8.048600000000114e-05, 8.06390000000004e-05, 8.04169999999993e-05, 8.023600000000089e-05, 8.004200000000239e-05, 8.018100000000208e-05, 8.073600000000139e-05, 8.002699999999988e-05, 8.015299999999947e-05, 8.073700000000086e-05, 8.0152e-05, 7.991599999999932e-05, 8.041599999999982e-05, 8.080599999999924e-05, 7.98329999999979e-05, 8.026400000000003e-05, 8.016699999999904e-05, 8.073600000000139e-05, 7.998600000000064e-05, 8.031999999999831e-05, 7.990299999999922e-05, 8.006899999999859e-05, 8.008299999999816e-05, 8.073600000000139e-05, 8.018099999999861e-05, 8.036099999999755e-05, 7.993099999999836e-05, 8.070899999999825e-05, 7.998599999999717e-05, 8.015299999999947e-05, 8.041599999999982e-05, 8.040299999999972e-05, 8.00970000000012e-05, 7.988899999999965e-05, 8.076400000000053e-05, 8.048600000000114e-05, 8.015299999999947e-05, 8.019500000000165e-05, 8.015300000000294e-05, 8.055599999999899e-05, 7.988899999999965e-05, 7.990299999999922e-05, 8.07780000000001e-05, 7.980499999999877e-05, 8.005500000000249e-05]</msg>
<status status="PASS" starttime="20201030 15:55:33.814" endtime="20201030 15:55:33.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.810" endtime="20201030 15:55:33.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:33.821" endtime="20201030 15:55:33.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.819" endtime="20201030 15:55:33.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.818" endtime="20201030 15:55:33.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.460" endtime="20201030 15:55:33.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.459" endtime="20201030 15:55:33.841"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.850" endtime="20201030 15:55:33.869"></status>
</kw>
<msg timestamp="20201030 15:55:33.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.848" endtime="20201030 15:55:33.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:33.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:33.871" endtime="20201030 15:55:33.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.873" endtime="20201030 15:55:33.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.846" endtime="20201030 15:55:33.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.844" endtime="20201030 15:55:33.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:33.882" endtime="20201030 15:55:34.167"></status>
</kw>
<msg timestamp="20201030 15:55:34.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:33.881" endtime="20201030 15:55:34.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.171" endtime="20201030 15:55:34.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.179" endtime="20201030 15:55:34.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.878" endtime="20201030 15:55:34.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.876" endtime="20201030 15:55:34.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.186" level="INFO">${RESULT} = [{'diff': 8.090300000000022e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.116700000000004e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.126400000000103e-05}, {'diff': 8.14719999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:34.182" endtime="20201030 15:55:34.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.190" level="INFO">${ACCURACY} = {'diff': [8.090300000000022e-05, 8.125000000000146e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.126400000000103e-05, 8.14719999999991e-05, 8.140199999999778e-05, 8.148600000000214e-05, 8.11389...</msg>
<status status="PASS" starttime="20201030 15:55:34.187" endtime="20201030 15:55:34.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.194" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.193" endtime="20201030 15:55:34.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.197" level="INFO">VALUE: [8.090300000000022e-05, 8.125000000000146e-05, 8.116700000000004e-05, 8.102800000000035e-05, 8.126400000000103e-05, 8.14719999999991e-05, 8.140199999999778e-05, 8.148600000000214e-05, 8.113899999999744e-05, 8.172199999999935e-05, 8.08190000000028e-05, 8.172199999999935e-05, 8.11390000000009e-05, 8.173599999999892e-05, 8.115300000000047e-05, 8.140200000000125e-05, 8.144399999999996e-05, 8.091600000000032e-05, 8.12780000000006e-05, 8.13329999999994e-05, 8.090300000000022e-05, 8.105599999999949e-05, 8.138900000000115e-05, 8.124999999999799e-05, 8.082000000000228e-05, 8.090300000000022e-05, 8.090200000000075e-05, 8.159699999999923e-05, 8.106899999999959e-05, 8.13329999999994e-05, 8.138899999999769e-05, 8.168100000000011e-05, 8.080599999999924e-05, 8.174999999999849e-05, 8.097299999999807e-05, 8.088900000000065e-05, 8.120799999999928e-05, 8.081899999999934e-05, 8.087500000000108e-05, 8.165300000000097e-05, 8.134699999999898e-05, 8.123600000000189e-05, 8.166699999999708e-05, 8.155599999999999e-05, 8.09169999999998e-05, 8.091600000000032e-05, 8.104099999999698e-05, 8.138800000000168e-05, 8.173599999999892e-05, 8.144399999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.195" endtime="20201030 15:55:34.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.190" endtime="20201030 15:55:34.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.207" endtime="20201030 15:55:34.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.206" endtime="20201030 15:55:34.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.205" endtime="20201030 15:55:34.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.842" endtime="20201030 15:55:34.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:33.842" endtime="20201030 15:55:34.228"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.236" endtime="20201030 15:55:34.256"></status>
</kw>
<msg timestamp="20201030 15:55:34.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.235" endtime="20201030 15:55:34.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.258" endtime="20201030 15:55:34.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.260" endtime="20201030 15:55:34.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.232" endtime="20201030 15:55:34.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.230" endtime="20201030 15:55:34.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.269" endtime="20201030 15:55:34.555"></status>
</kw>
<msg timestamp="20201030 15:55:34.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.267" endtime="20201030 15:55:34.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022979139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.559" endtime="20201030 15:55:34.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.567" endtime="20201030 15:55:34.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.265" endtime="20201030 15:55:34.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.263" endtime="20201030 15:55:34.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.573" level="INFO">${RESULT} = [{'diff': 8.204199999999745e-05}, {'diff': 8.223599999999942e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.198600000000264e-05}, {'diff': 8.190300000000122e-05}, {'diff': 8.206900000000059e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.570" endtime="20201030 15:55:34.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.577" level="INFO">${ACCURACY} = {'diff': [8.204199999999745e-05, 8.223599999999942e-05, 8.198599999999917e-05, 8.198600000000264e-05, 8.190300000000122e-05, 8.206900000000059e-05, 8.256900000000109e-05, 8.222199999999985e-05, 8.2167...</msg>
<status status="PASS" starttime="20201030 15:55:34.574" endtime="20201030 15:55:34.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.582" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.581" endtime="20201030 15:55:34.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.584" level="INFO">VALUE: [8.204199999999745e-05, 8.223599999999942e-05, 8.198599999999917e-05, 8.198600000000264e-05, 8.190300000000122e-05, 8.206900000000059e-05, 8.256900000000109e-05, 8.222199999999985e-05, 8.216700000000104e-05, 8.190300000000122e-05, 8.24170000000013e-05, 8.240299999999826e-05, 8.187499999999862e-05, 8.205600000000049e-05, 8.259700000000023e-05, 8.224999999999899e-05, 8.215199999999853e-05, 8.273599999999992e-05, 8.250000000000271e-05, 8.236099999999955e-05, 8.256899999999762e-05, 8.273599999999992e-05, 8.270799999999731e-05, 8.207000000000006e-05, 8.240299999999826e-05, 8.257000000000056e-05, 8.223599999999942e-05, 8.181900000000034e-05, 8.230600000000074e-05, 8.26109999999998e-05, 8.240299999999826e-05, 8.258300000000066e-05, 8.276399999999906e-05, 8.215300000000147e-05, 8.24170000000013e-05, 8.274999999999949e-05, 8.200000000000221e-05, 8.201400000000178e-05, 8.21659999999981e-05, 8.190299999999776e-05, 8.226400000000203e-05, 8.18329999999999e-05, 8.240299999999826e-05, 8.223599999999942e-05, 8.238899999999869e-05, 8.268099999999765e-05, 8.26529999999985e-05, 8.240199999999878e-05, 8.190200000000175e-05, 8.240199999999878e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.583" endtime="20201030 15:55:34.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.578" endtime="20201030 15:55:34.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.590" endtime="20201030 15:55:34.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.589" endtime="20201030 15:55:34.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.587" endtime="20201030 15:55:34.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.229" endtime="20201030 15:55:34.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.228" endtime="20201030 15:55:34.611"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.619" endtime="20201030 15:55:34.638"></status>
</kw>
<msg timestamp="20201030 15:55:34.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.618" endtime="20201030 15:55:34.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.640" endtime="20201030 15:55:34.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.642" endtime="20201030 15:55:34.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.615" endtime="20201030 15:55:34.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.613" endtime="20201030 15:55:34.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.651" endtime="20201030 15:55:34.936"></status>
</kw>
<msg timestamp="20201030 15:55:34.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.649" endtime="20201030 15:55:34.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:34.940" endtime="20201030 15:55:34.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:34.949" endtime="20201030 15:55:34.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.647" endtime="20201030 15:55:34.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.645" endtime="20201030 15:55:34.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:34.955" level="INFO">${RESULT} = [{'diff': 8.334800000000045e-05}, {'diff': 8.288799999999971e-05}, {'diff': 8.340199999999978e-05}, {'diff': 8.341599999999935e-05}, {'diff': 8.356899999999862e-05}, {'diff': 8.306899999999812e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:34.952" endtime="20201030 15:55:34.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:34.960" level="INFO">${ACCURACY} = {'diff': [8.334800000000045e-05, 8.288799999999971e-05, 8.340199999999978e-05, 8.341599999999935e-05, 8.356899999999862e-05, 8.306899999999812e-05, 8.308300000000116e-05, 8.306899999999812e-05, 8.3290...</msg>
<status status="PASS" starttime="20201030 15:55:34.956" endtime="20201030 15:55:34.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.964" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:55:34.963" endtime="20201030 15:55:34.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:34.967" level="INFO">VALUE: [8.334800000000045e-05, 8.288799999999971e-05, 8.340199999999978e-05, 8.341599999999935e-05, 8.356899999999862e-05, 8.306899999999812e-05, 8.308300000000116e-05, 8.306899999999812e-05, 8.329099999999923e-05, 8.316699999999858e-05, 8.336100000000055e-05, 8.295800000000103e-05, 8.290299999999876e-05, 8.36110000000008e-05, 8.373600000000092e-05, 8.281899999999787e-05, 8.308299999999769e-05, 8.340300000000272e-05, 8.340299999999926e-05, 8.34309999999984e-05, 8.290299999999876e-05, 8.337500000000012e-05, 8.357000000000156e-05, 8.356899999999862e-05, 8.375000000000049e-05, 8.31110000000003e-05, 8.305499999999855e-05, 8.358300000000166e-05, 8.288899999999919e-05, 8.286100000000005e-05, 8.340299999999926e-05, 8.290299999999876e-05, 8.323600000000042e-05, 8.350000000000024e-05, 8.31659999999991e-05, 8.373600000000092e-05, 8.34720000000011e-05, 8.351399999999981e-05, 8.331900000000184e-05, 8.358300000000166e-05, 8.288899999999919e-05, 8.355599999999852e-05, 8.337500000000012e-05, 8.340299999999926e-05, 8.32369999999999e-05, 8.298600000000017e-05, 8.315199999999953e-05, 8.377799999999963e-05, 8.281900000000134e-05, 8.358299999999819e-05]</msg>
<status status="PASS" starttime="20201030 15:55:34.965" endtime="20201030 15:55:34.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.961" endtime="20201030 15:55:34.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:34.972" endtime="20201030 15:55:34.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.970" endtime="20201030 15:55:34.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.969" endtime="20201030 15:55:34.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.611" endtime="20201030 15:55:34.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.611" endtime="20201030 15:55:34.992"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.001" endtime="20201030 15:55:35.021"></status>
</kw>
<msg timestamp="20201030 15:55:35.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:34.999" endtime="20201030 15:55:35.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.023" endtime="20201030 15:55:35.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.027" endtime="20201030 15:55:35.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.997" endtime="20201030 15:55:35.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.995" endtime="20201030 15:55:35.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.040" endtime="20201030 15:55:35.326"></status>
</kw>
<msg timestamp="20201030 15:55:35.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.037" endtime="20201030 15:55:35.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.331" endtime="20201030 15:55:35.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.339" endtime="20201030 15:55:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.033" endtime="20201030 15:55:35.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.031" endtime="20201030 15:55:35.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.345" level="INFO">${RESULT} = [{'diff': 8.442999999999992e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.438900000000069e-05}, {'diff': 8.438900000000069e-05}, {'diff': 8.457000000000256e-05}, {'diff': 8.408400000000163e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.342" endtime="20201030 15:55:35.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.349" level="INFO">${ACCURACY} = {'diff': [8.442999999999992e-05, 8.390299999999976e-05, 8.438900000000069e-05, 8.438900000000069e-05, 8.457000000000256e-05, 8.408400000000163e-05, 8.405599999999902e-05, 8.47370000000014e-05, 8.46519...</msg>
<status status="PASS" starttime="20201030 15:55:35.346" endtime="20201030 15:55:35.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.354" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.353" endtime="20201030 15:55:35.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.356" level="INFO">VALUE: [8.442999999999992e-05, 8.390299999999976e-05, 8.438900000000069e-05, 8.438900000000069e-05, 8.457000000000256e-05, 8.408400000000163e-05, 8.405599999999902e-05, 8.47370000000014e-05, 8.465199999999756e-05, 8.423599999999795e-05, 8.399999999999727e-05, 8.416699999999958e-05, 8.438900000000069e-05, 8.404200000000292e-05, 8.391699999999933e-05, 8.443100000000286e-05, 8.440300000000026e-05, 8.441699999999983e-05, 8.458299999999919e-05, 8.438800000000121e-05, 8.406900000000259e-05, 8.441699999999983e-05, 8.391699999999933e-05, 8.456899999999962e-05, 8.440300000000026e-05, 8.461200000000127e-05, 8.390299999999976e-05, 8.444399999999949e-05, 8.419499999999872e-05, 8.38330000000019e-05, 8.423599999999795e-05, 8.415200000000053e-05, 8.456899999999962e-05, 8.470799999999931e-05, 8.381999999999834e-05, 8.459799999999823e-05, 8.438900000000069e-05, 8.406999999999859e-05, 8.406999999999859e-05, 8.456999999999909e-05, 8.423600000000142e-05, 8.431899999999937e-05, 8.455500000000005e-05, 8.456899999999962e-05, 8.475000000000149e-05, 8.39720000000016e-05, 8.382000000000181e-05, 8.406999999999859e-05, 8.388900000000019e-05, 8.405599999999902e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.355" endtime="20201030 15:55:35.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.350" endtime="20201030 15:55:35.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.361" endtime="20201030 15:55:35.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.360" endtime="20201030 15:55:35.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.359" endtime="20201030 15:55:35.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.993" endtime="20201030 15:55:35.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:34.993" endtime="20201030 15:55:35.382"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.390" endtime="20201030 15:55:35.413"></status>
</kw>
<msg timestamp="20201030 15:55:35.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.389" endtime="20201030 15:55:35.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.414" endtime="20201030 15:55:35.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.417" endtime="20201030 15:55:35.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.386" endtime="20201030 15:55:35.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.384" endtime="20201030 15:55:35.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.427" endtime="20201030 15:55:35.713"></status>
</kw>
<msg timestamp="20201030 15:55:35.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024933778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.425" endtime="20201030 15:55:35.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024933778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025018667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.718" endtime="20201030 15:55:35.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.726" endtime="20201030 15:55:35.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.423" endtime="20201030 15:55:35.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.421" endtime="20201030 15:55:35.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:35.733" level="INFO">${RESULT} = [{'diff': 8.488900000000119e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.524999999999852e-05}, {'diff': 8.530600000000027e-05}, {'diff': 8.573599999999945e-05}, {'diff': 8.565199999999856e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:35.730" endtime="20201030 15:55:35.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:35.737" level="INFO">${ACCURACY} = {'diff': [8.488900000000119e-05, 8.501400000000131e-05, 8.524999999999852e-05, 8.530600000000027e-05, 8.573599999999945e-05, 8.565199999999856e-05, 8.506900000000012e-05, 8.488899999999772e-05, 8.5235...</msg>
<status status="PASS" starttime="20201030 15:55:35.734" endtime="20201030 15:55:35.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.742" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:55:35.741" endtime="20201030 15:55:35.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.745" level="INFO">VALUE: [8.488900000000119e-05, 8.501400000000131e-05, 8.524999999999852e-05, 8.530600000000027e-05, 8.573599999999945e-05, 8.565199999999856e-05, 8.506900000000012e-05, 8.488899999999772e-05, 8.523599999999895e-05, 8.533299999999994e-05, 8.540300000000126e-05, 8.506900000000012e-05, 8.541700000000083e-05, 8.540299999999779e-05, 8.487499999999815e-05, 8.502800000000088e-05, 8.554100000000148e-05, 8.574999999999902e-05, 8.498600000000217e-05, 8.495799999999956e-05, 8.531999999999984e-05, 8.558399999999966e-05, 8.519400000000024e-05, 8.534700000000298e-05, 8.509700000000273e-05, 8.494399999999999e-05, 8.573600000000292e-05, 8.513900000000144e-05, 8.522199999999938e-05, 8.547199999999963e-05, 8.484799999999848e-05, 8.509799999999873e-05, 8.523600000000242e-05, 8.476400000000106e-05, 8.522299999999886e-05, 8.565199999999856e-05, 8.505500000000055e-05, 8.573599999999945e-05, 8.497199999999913e-05, 8.550000000000224e-05, 8.481899999999987e-05, 8.509799999999873e-05, 8.575000000000249e-05, 8.533399999999941e-05, 8.540299999999779e-05, 8.523600000000242e-05, 8.523600000000242e-05, 8.505500000000055e-05, 8.508299999999969e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:55:35.743" endtime="20201030 15:55:35.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.738" endtime="20201030 15:55:35.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:35.750" endtime="20201030 15:55:35.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.749" endtime="20201030 15:55:35.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.748" endtime="20201030 15:55:35.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.383" endtime="20201030 15:55:35.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.382" endtime="20201030 15:55:35.771"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.780" endtime="20201030 15:55:35.799"></status>
</kw>
<msg timestamp="20201030 15:55:35.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.779" endtime="20201030 15:55:35.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:35.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:35.801" endtime="20201030 15:55:35.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.804" endtime="20201030 15:55:35.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.776" endtime="20201030 15:55:35.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.774" endtime="20201030 15:55:35.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:35.813" endtime="20201030 15:55:36.124"></status>
</kw>
<msg timestamp="20201030 15:55:36.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:35.811" endtime="20201030 15:55:36.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022455778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.128" endtime="20201030 15:55:36.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.137" endtime="20201030 15:55:36.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.809" endtime="20201030 15:55:36.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.807" endtime="20201030 15:55:36.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.144" level="INFO">${RESULT} = [{'diff': 8.638899999999922e-05}, {'diff': 8.608400000000016e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.665299999999904e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.607000000000059e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:36.140" endtime="20201030 15:55:36.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.149" level="INFO">${ACCURACY} = {'diff': [8.638899999999922e-05, 8.608400000000016e-05, 8.673600000000045e-05, 8.665299999999904e-05, 8.605600000000102e-05, 8.607000000000059e-05, 8.623599999999995e-05, 8.597200000000013e-05, 8.6070...</msg>
<status status="PASS" starttime="20201030 15:55:36.145" endtime="20201030 15:55:36.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.153" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.152" endtime="20201030 15:55:36.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.156" level="INFO">VALUE: [8.638899999999922e-05, 8.608400000000016e-05, 8.673600000000045e-05, 8.665299999999904e-05, 8.605600000000102e-05, 8.607000000000059e-05, 8.623599999999995e-05, 8.597200000000013e-05, 8.607000000000059e-05, 8.636100000000008e-05, 8.624999999999952e-05, 8.665299999999904e-05, 8.59310000000009e-05, 8.623599999999995e-05, 8.648699999999968e-05, 8.632000000000084e-05, 8.588800000000271e-05, 8.609700000000026e-05, 8.66249999999999e-05, 8.640300000000226e-05, 8.59729999999996e-05, 8.59310000000009e-05, 8.638899999999922e-05, 8.641699999999836e-05, 8.655600000000152e-05, 8.66249999999999e-05, 8.611099999999983e-05, 8.638899999999922e-05, 8.655500000000205e-05, 8.675000000000002e-05, 8.637499999999965e-05, 8.588899999999872e-05, 8.590300000000176e-05, 8.673600000000045e-05, 8.622200000000038e-05, 8.658300000000119e-05, 8.673600000000045e-05, 8.64860000000002e-05, 8.634699999999704e-05, 8.656900000000162e-05, 8.658299999999772e-05, 8.658300000000119e-05, 8.657000000000109e-05, 8.656999999999762e-05, 8.59310000000009e-05, 8.619500000000072e-05, 8.582000000000034e-05, 8.590200000000228e-05, 8.608300000000069e-05, 8.656899999999815e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.155" endtime="20201030 15:55:36.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.150" endtime="20201030 15:55:36.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.161" endtime="20201030 15:55:36.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.159" endtime="20201030 15:55:36.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.158" endtime="20201030 15:55:36.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.772" endtime="20201030 15:55:36.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:35.772" endtime="20201030 15:55:36.182"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.191" endtime="20201030 15:55:36.209"></status>
</kw>
<msg timestamp="20201030 15:55:36.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.189" endtime="20201030 15:55:36.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.211" endtime="20201030 15:55:36.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.214" endtime="20201030 15:55:36.215"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.186" endtime="20201030 15:55:36.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.184" endtime="20201030 15:55:36.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.223" endtime="20201030 15:55:36.511"></status>
</kw>
<msg timestamp="20201030 15:55:36.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.221" endtime="20201030 15:55:36.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022472569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.515" endtime="20201030 15:55:36.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.524" endtime="20201030 15:55:36.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.219" endtime="20201030 15:55:36.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.217" endtime="20201030 15:55:36.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.530" level="INFO">${RESULT} = [{'diff': 8.755499999999958e-05}, {'diff': 8.758300000000219e-05}, {'diff': 8.706900000000212e-05}, {'diff': 8.76669999999996e-05}, {'diff': 8.695799999999809e-05}, {'diff': 8.752799999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:36.527" endtime="20201030 15:55:36.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.535" level="INFO">${ACCURACY} = {'diff': [8.755499999999958e-05, 8.758300000000219e-05, 8.706900000000212e-05, 8.76669999999996e-05, 8.695799999999809e-05, 8.752799999999991e-05, 8.732000000000184e-05, 8.688899999999972e-05, 8.70700...</msg>
<status status="PASS" starttime="20201030 15:55:36.531" endtime="20201030 15:55:36.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.539" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.538" endtime="20201030 15:55:36.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.542" level="INFO">VALUE: [8.755499999999958e-05, 8.758300000000219e-05, 8.706900000000212e-05, 8.76669999999996e-05, 8.695799999999809e-05, 8.752799999999991e-05, 8.732000000000184e-05, 8.688899999999972e-05, 8.707000000000159e-05, 8.729199999999923e-05, 8.750000000000077e-05, 8.769499999999875e-05, 8.773600000000145e-05, 8.67920000000022e-05, 8.736100000000108e-05, 8.758299999999872e-05, 8.690299999999929e-05, 8.755599999999905e-05, 8.756999999999862e-05, 8.756999999999862e-05, 8.719399999999877e-05, 8.769500000000222e-05, 8.740299999999979e-05, 8.722200000000138e-05, 8.718100000000215e-05, 8.73470000000015e-05, 8.757000000000209e-05, 8.773600000000145e-05, 8.720799999999834e-05, 8.688899999999972e-05, 8.687500000000015e-05, 8.758299999999872e-05, 8.773600000000145e-05, 8.69860000000007e-05, 8.683299999999797e-05, 8.74449999999985e-05, 8.776400000000059e-05, 8.682000000000134e-05, 8.705599999999855e-05, 8.698599999999723e-05, 8.759700000000176e-05, 8.723600000000095e-05, 8.697200000000113e-05, 8.763900000000047e-05, 8.690300000000276e-05, 8.741699999999936e-05, 8.723599999999748e-05, 8.750000000000077e-05, 8.763900000000047e-05, 8.690299999999929e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.540" endtime="20201030 15:55:36.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.536" endtime="20201030 15:55:36.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.547" endtime="20201030 15:55:36.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.545" endtime="20201030 15:55:36.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.544" endtime="20201030 15:55:36.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.183" endtime="20201030 15:55:36.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.182" endtime="20201030 15:55:36.568"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.577" endtime="20201030 15:55:36.597"></status>
</kw>
<msg timestamp="20201030 15:55:36.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.575" endtime="20201030 15:55:36.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.599" endtime="20201030 15:55:36.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.601" endtime="20201030 15:55:36.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.572" endtime="20201030 15:55:36.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.570" endtime="20201030 15:55:36.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.610" endtime="20201030 15:55:36.896"></status>
</kw>
<msg timestamp="20201030 15:55:36.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.609" endtime="20201030 15:55:36.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023332111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.901" endtime="20201030 15:55:36.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.909" endtime="20201030 15:55:36.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.606" endtime="20201030 15:55:36.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.604" endtime="20201030 15:55:36.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.916" level="INFO">${RESULT} = [{'diff': 8.84449999999995e-05}, {'diff': 8.876400000000159e-05}, {'diff': 8.831999999999937e-05}, {'diff': 8.818099999999968e-05}, {'diff': 8.813800000000149e-05}, {'diff': 8.806899999999965e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:36.913" endtime="20201030 15:55:36.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:36.920" level="INFO">${ACCURACY} = {'diff': [8.84449999999995e-05, 8.876400000000159e-05, 8.831999999999937e-05, 8.818099999999968e-05, 8.813800000000149e-05, 8.806899999999965e-05, 8.840300000000079e-05, 8.84730000000021e-05, 8.823599...</msg>
<status status="PASS" starttime="20201030 15:55:36.917" endtime="20201030 15:55:36.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.925" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:55:36.924" endtime="20201030 15:55:36.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.927" level="INFO">VALUE: [8.84449999999995e-05, 8.876400000000159e-05, 8.831999999999937e-05, 8.818099999999968e-05, 8.813800000000149e-05, 8.806899999999965e-05, 8.840300000000079e-05, 8.84730000000021e-05, 8.823599999999848e-05, 8.850000000000177e-05, 8.781999999999887e-05, 8.823599999999848e-05, 8.833399999999894e-05, 8.840300000000079e-05, 8.86800000000007e-05, 8.81389999999975e-05, 8.808299999999922e-05, 8.843000000000045e-05, 8.808299999999922e-05, 8.806999999999912e-05, 8.875000000000202e-05, 8.801400000000084e-05, 8.815299999999707e-05, 8.823700000000143e-05, 8.845799999999959e-05, 8.86519999999981e-05, 8.840300000000079e-05, 8.872199999999941e-05, 8.865300000000104e-05, 8.872200000000288e-05, 8.79999999999978e-05, 8.834699999999904e-05, 8.858299999999972e-05, 8.825000000000152e-05, 8.862499999999843e-05, 8.825000000000152e-05, 8.797200000000213e-05, 8.865300000000104e-05, 8.823599999999848e-05, 8.79860000000017e-05, 8.865300000000104e-05, 8.826300000000162e-05, 8.869400000000027e-05, 8.874999999999855e-05, 8.83189999999999e-05, 8.790199999999734e-05, 8.823600000000195e-05, 8.83189999999999e-05, 8.876400000000159e-05, 8.847199999999916e-05]</msg>
<status status="PASS" starttime="20201030 15:55:36.926" endtime="20201030 15:55:36.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.921" endtime="20201030 15:55:36.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:36.934" endtime="20201030 15:55:36.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.932" endtime="20201030 15:55:36.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.931" endtime="20201030 15:55:36.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.569" endtime="20201030 15:55:36.954"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.568" endtime="20201030 15:55:36.954"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.963" endtime="20201030 15:55:36.982"></status>
</kw>
<msg timestamp="20201030 15:55:36.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.962" endtime="20201030 15:55:36.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.984" endtime="20201030 15:55:36.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.986" endtime="20201030 15:55:36.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.959" endtime="20201030 15:55:36.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.957" endtime="20201030 15:55:36.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.996" endtime="20201030 15:55:37.282"></status>
</kw>
<msg timestamp="20201030 15:55:37.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.994" endtime="20201030 15:55:37.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022224306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.286" endtime="20201030 15:55:37.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.295" endtime="20201030 15:55:37.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.991" endtime="20201030 15:55:37.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.990" endtime="20201030 15:55:37.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.302" level="INFO">${RESULT} = [{'diff': 8.956900000000115e-05}, {'diff': 8.938900000000222e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.965299999999857e-05}, {'diff': 8.908399999999969e-05}, {'diff': 8.912499999999893e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:37.298" endtime="20201030 15:55:37.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.307" level="INFO">${ACCURACY} = {'diff': [8.956900000000115e-05, 8.938900000000222e-05, 8.973599999999998e-05, 8.965299999999857e-05, 8.908399999999969e-05, 8.912499999999893e-05, 8.905500000000108e-05, 8.908300000000022e-05, 8.8903...</msg>
<status status="PASS" starttime="20201030 15:55:37.303" endtime="20201030 15:55:37.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.311" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.310" endtime="20201030 15:55:37.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.314" level="INFO">VALUE: [8.956900000000115e-05, 8.938900000000222e-05, 8.973599999999998e-05, 8.965299999999857e-05, 8.908399999999969e-05, 8.912499999999893e-05, 8.905500000000108e-05, 8.908300000000022e-05, 8.890300000000129e-05, 8.956900000000115e-05, 8.890300000000129e-05, 8.907000000000012e-05, 8.934700000000004e-05, 8.954199999999801e-05, 8.924999999999905e-05, 8.966600000000213e-05, 8.905500000000108e-05, 8.923599999999948e-05, 8.966699999999814e-05, 8.938899999999875e-05, 8.923599999999948e-05, 8.88060000000003e-05, 8.922199999999991e-05, 8.933400000000341e-05, 8.908399999999969e-05, 8.925000000000252e-05, 8.963799999999952e-05, 8.906900000000065e-05, 8.890300000000129e-05, 8.906900000000065e-05, 8.908300000000022e-05, 8.938899999999875e-05, 8.940299999999832e-05, 8.941699999999789e-05, 8.893000000000095e-05, 8.974999999999955e-05, 8.880500000000083e-05, 8.955499999999811e-05, 8.959700000000029e-05, 8.888900000000172e-05, 8.956900000000115e-05, 8.891700000000086e-05, 8.958400000000019e-05, 8.891700000000086e-05, 8.891700000000086e-05, 8.902800000000141e-05, 8.908299999999675e-05, 8.940299999999832e-05, 8.906900000000065e-05, 8.974999999999955e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.312" endtime="20201030 15:55:37.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.308" endtime="20201030 15:55:37.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.319" endtime="20201030 15:55:37.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.318" endtime="20201030 15:55:37.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.316" endtime="20201030 15:55:37.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.955" endtime="20201030 15:55:37.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.955" endtime="20201030 15:55:37.340"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.349" endtime="20201030 15:55:37.369"></status>
</kw>
<msg timestamp="20201030 15:55:37.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.348" endtime="20201030 15:55:37.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.370" endtime="20201030 15:55:37.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.373" endtime="20201030 15:55:37.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.345" endtime="20201030 15:55:37.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.343" endtime="20201030 15:55:37.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.382" endtime="20201030 15:55:37.669"></status>
</kw>
<msg timestamp="20201030 15:55:37.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.381" endtime="20201030 15:55:37.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022636958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.674" endtime="20201030 15:55:37.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.682" endtime="20201030 15:55:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.378" endtime="20201030 15:55:37.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.376" endtime="20201030 15:55:37.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.689" level="INFO">${RESULT} = [{'diff': 8.990199999999934e-05}, {'diff': 9.040299999999932e-05}, {'diff': 9.041700000000236e-05}, {'diff': 9.073600000000098e-05}, {'diff': 9.0639e-05}, {'diff': 9.041699999999889e-05}, {'diff': 9.0...</msg>
<status status="PASS" starttime="20201030 15:55:37.686" endtime="20201030 15:55:37.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:37.693" level="INFO">${ACCURACY} = {'diff': [8.990199999999934e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.073600000000098e-05, 9.0639e-05, 9.041699999999889e-05, 9.044400000000202e-05, 8.990299999999882e-05, 9.023600000000048...</msg>
<status status="PASS" starttime="20201030 15:55:37.690" endtime="20201030 15:55:37.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.698" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:55:37.697" endtime="20201030 15:55:37.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.700" level="INFO">VALUE: [8.990199999999934e-05, 9.040299999999932e-05, 9.041700000000236e-05, 9.073600000000098e-05, 9.0639e-05, 9.041699999999889e-05, 9.044400000000202e-05, 8.990299999999882e-05, 9.023600000000048e-05, 9.03190000000019e-05, 9.036100000000061e-05, 9.008300000000122e-05, 9.055599999999858e-05, 9.073600000000098e-05, 9.009700000000079e-05, 9.041699999999889e-05, 8.990299999999882e-05, 9.040299999999932e-05, 9.055500000000258e-05, 9.056900000000215e-05, 9.008299999999775e-05, 8.986100000000011e-05, 8.990299999999882e-05, 9.075000000000055e-05, 9.048600000000073e-05, 9.032000000000137e-05, 8.990300000000229e-05, 9.056900000000215e-05, 9.038800000000027e-05, 9.027799999999919e-05, 8.98190000000014e-05, 9.056900000000215e-05, 9.041700000000236e-05, 9.073600000000098e-05, 8.997199999999719e-05, 8.980599999999783e-05, 9.009700000000079e-05, 9.041599999999941e-05, 9.058300000000172e-05, 8.991600000000238e-05, 9.017999999999873e-05, 9.05000000000003e-05, 9.048600000000073e-05, 9.03199999999979e-05, 8.988899999999925e-05, 9.055600000000205e-05, 8.988899999999925e-05, 9.012499999999993e-05, 8.990199999999934e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:55:37.699" endtime="20201030 15:55:37.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.694" endtime="20201030 15:55:37.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.705" endtime="20201030 15:55:37.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.704" endtime="20201030 15:55:37.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.703" endtime="20201030 15:55:37.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.341" endtime="20201030 15:55:37.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.340" endtime="20201030 15:55:37.726"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.735" endtime="20201030 15:55:37.755"></status>
</kw>
<msg timestamp="20201030 15:55:37.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.734" endtime="20201030 15:55:37.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.757" endtime="20201030 15:55:37.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.760" endtime="20201030 15:55:37.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.731" endtime="20201030 15:55:37.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.729" endtime="20201030 15:55:37.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.769" endtime="20201030 15:55:38.055"></status>
</kw>
<msg timestamp="20201030 15:55:38.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023758264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.767" endtime="20201030 15:55:38.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023758264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023849833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.059" endtime="20201030 15:55:38.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.068" endtime="20201030 15:55:38.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.765" endtime="20201030 15:55:38.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.763" endtime="20201030 15:55:38.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.075" level="INFO">${RESULT} = [{'diff': 9.156899999999968e-05}, {'diff': 9.140299999999685e-05}, {'diff': 9.088900000000025e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.173600000000198e-05}, {'diff': 9.115300000000007e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.071" endtime="20201030 15:55:38.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.079" level="INFO">${ACCURACY} = {'diff': [9.156899999999968e-05, 9.140299999999685e-05, 9.088900000000025e-05, 9.140300000000032e-05, 9.173600000000198e-05, 9.115300000000007e-05, 9.090299999999982e-05, 9.091700000000286e-05, 9.1653...</msg>
<status status="PASS" starttime="20201030 15:55:38.076" endtime="20201030 15:55:38.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.084" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.082" endtime="20201030 15:55:38.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.086" level="INFO">VALUE: [9.156899999999968e-05, 9.140299999999685e-05, 9.088900000000025e-05, 9.140300000000032e-05, 9.173600000000198e-05, 9.115300000000007e-05, 9.090299999999982e-05, 9.091700000000286e-05, 9.165300000000057e-05, 9.142999999999998e-05, 9.122199999999844e-05, 9.079099999999979e-05, 9.140300000000032e-05, 9.106899999999918e-05, 9.108400000000169e-05, 9.140300000000032e-05, 9.173599999999851e-05, 9.15000000000013e-05, 9.1332999999999e-05, 9.175000000000155e-05, 9.113899999999703e-05, 9.144499999999903e-05, 9.123600000000148e-05, 9.144400000000302e-05, 9.132000000000237e-05, 9.104199999999951e-05, 9.140300000000032e-05, 9.158299999999925e-05, 9.106899999999918e-05, 9.090200000000034e-05, 9.173600000000198e-05, 9.166700000000014e-05, 9.173599999999851e-05, 9.151400000000087e-05, 9.129199999999976e-05, 9.173599999999851e-05, 9.163899999999753e-05, 9.105600000000255e-05, 9.106899999999918e-05, 9.106899999999918e-05, 9.174999999999808e-05, 9.115300000000007e-05, 9.158299999999925e-05, 9.158399999999872e-05, 9.106999999999865e-05, 9.140299999999685e-05, 9.102799999999994e-05, 9.088900000000025e-05, 9.124999999999758e-05, 9.080499999999936e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.085" endtime="20201030 15:55:38.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.080" endtime="20201030 15:55:38.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.092" endtime="20201030 15:55:38.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.090" endtime="20201030 15:55:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.089" endtime="20201030 15:55:38.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.727" endtime="20201030 15:55:38.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.727" endtime="20201030 15:55:38.113"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.122" endtime="20201030 15:55:38.142"></status>
</kw>
<msg timestamp="20201030 15:55:38.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.120" endtime="20201030 15:55:38.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.143" endtime="20201030 15:55:38.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.146" endtime="20201030 15:55:38.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.118" endtime="20201030 15:55:38.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.115" endtime="20201030 15:55:38.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.155" endtime="20201030 15:55:38.442"></status>
</kw>
<msg timestamp="20201030 15:55:38.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.154" endtime="20201030 15:55:38.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022603542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.446" endtime="20201030 15:55:38.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.454" endtime="20201030 15:55:38.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.151" endtime="20201030 15:55:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.149" endtime="20201030 15:55:38.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.462" level="INFO">${RESULT} = [{'diff': 9.193099999999996e-05}, {'diff': 9.208399999999922e-05}, {'diff': 9.255599999999711e-05}, {'diff': 9.222299999999892e-05}, {'diff': 9.199999999999833e-05}, {'diff': 9.26520000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:38.458" endtime="20201030 15:55:38.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.468" level="INFO">${ACCURACY} = {'diff': [9.193099999999996e-05, 9.208399999999922e-05, 9.255599999999711e-05, 9.222299999999892e-05, 9.199999999999833e-05, 9.26520000000021e-05, 9.277800000000169e-05, 9.198600000000223e-05, 9.19999...</msg>
<status status="PASS" starttime="20201030 15:55:38.463" endtime="20201030 15:55:38.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.474" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.472" endtime="20201030 15:55:38.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.476" level="INFO">VALUE: [9.193099999999996e-05, 9.208399999999922e-05, 9.255599999999711e-05, 9.222299999999892e-05, 9.199999999999833e-05, 9.26520000000021e-05, 9.277800000000169e-05, 9.198600000000223e-05, 9.199999999999833e-05, 9.180599999999983e-05, 9.238900000000175e-05, 9.226399999999815e-05, 9.206900000000018e-05, 9.198600000000223e-05, 9.201400000000137e-05, 9.198599999999876e-05, 9.204200000000051e-05, 9.181899999999993e-05, 9.258300000000025e-05, 9.188900000000125e-05, 9.241699999999742e-05, 9.273699999999899e-05, 9.197299999999867e-05, 9.2333e-05, 9.255500000000111e-05, 9.238899999999828e-05, 9.222199999999944e-05, 9.216700000000064e-05, 9.193099999999996e-05, 9.257000000000015e-05, 9.208399999999922e-05, 9.190299999999735e-05, 9.193000000000048e-05, 9.206900000000018e-05, 9.238900000000175e-05, 9.238900000000175e-05, 9.188900000000125e-05, 9.241699999999742e-05, 9.227800000000119e-05, 9.18199999999994e-05, 9.208399999999922e-05, 9.205600000000008e-05, 9.190199999999787e-05, 9.241600000000141e-05, 9.240200000000184e-05, 9.20139999999979e-05, 9.190300000000082e-05, 9.209700000000279e-05, 9.275000000000255e-05, 9.21390000000015e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.475" endtime="20201030 15:55:38.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.469" endtime="20201030 15:55:38.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.481" endtime="20201030 15:55:38.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.480" endtime="20201030 15:55:38.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.479" endtime="20201030 15:55:38.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.114" endtime="20201030 15:55:38.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.113" endtime="20201030 15:55:38.502"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.511" endtime="20201030 15:55:38.531"></status>
</kw>
<msg timestamp="20201030 15:55:38.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.509" endtime="20201030 15:55:38.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.533" endtime="20201030 15:55:38.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.535" endtime="20201030 15:55:38.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.507" endtime="20201030 15:55:38.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.505" endtime="20201030 15:55:38.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.544" endtime="20201030 15:55:38.832"></status>
</kw>
<msg timestamp="20201030 15:55:38.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:38.543" endtime="20201030 15:55:38.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02241, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:55:38.837" endtime="20201030 15:55:38.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.845" endtime="20201030 15:55:38.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.540" endtime="20201030 15:55:38.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.538" endtime="20201030 15:55:38.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:38.852" level="INFO">${RESULT} = [{'diff': 9.306899999999771e-05}, {'diff': 9.338899999999928e-05}, {'diff': 9.372200000000094e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.307000000000065e-05}, {'diff': 9.341600000000241e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:38.848" endtime="20201030 15:55:38.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:38.856" level="INFO">${ACCURACY} = {'diff': [9.306899999999771e-05, 9.338899999999928e-05, 9.372200000000094e-05, 9.283399999999997e-05, 9.307000000000065e-05, 9.341600000000241e-05, 9.323600000000001e-05, 9.31659999999987e-05, 9.35829...</msg>
<status status="PASS" starttime="20201030 15:55:38.853" endtime="20201030 15:55:38.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.861" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:55:38.859" endtime="20201030 15:55:38.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.863" level="INFO">VALUE: [9.306899999999771e-05, 9.338899999999928e-05, 9.372200000000094e-05, 9.283399999999997e-05, 9.307000000000065e-05, 9.341600000000241e-05, 9.323600000000001e-05, 9.31659999999987e-05, 9.358299999999778e-05, 9.340299999999885e-05, 9.323600000000001e-05, 9.298599999999976e-05, 9.363899999999953e-05, 9.306999999999718e-05, 9.307000000000065e-05, 9.34720000000007e-05, 9.373600000000051e-05, 9.298599999999976e-05, 9.298599999999976e-05, 9.31529999999986e-05, 9.307000000000065e-05, 9.313899999999903e-05, 9.340299999999885e-05, 9.354199999999854e-05, 9.373600000000051e-05, 9.367999999999876e-05, 9.308300000000075e-05, 9.324999999999958e-05, 9.348600000000026e-05, 9.316700000000164e-05, 9.352799999999897e-05, 9.373600000000051e-05, 9.33469999999971e-05, 9.355599999999811e-05, 9.320800000000087e-05, 9.365199999999962e-05, 9.377799999999922e-05, 9.34720000000007e-05, 9.302800000000194e-05, 9.295800000000062e-05, 9.280600000000083e-05, 9.307000000000065e-05, 9.375000000000008e-05, 9.35000000000033e-05, 9.284700000000007e-05, 9.355599999999811e-05, 9.375000000000008e-05, 9.334700000000057e-05, 9.349999999999983e-05, 9.306999999999718e-05]</msg>
<status status="PASS" starttime="20201030 15:55:38.862" endtime="20201030 15:55:38.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.857" endtime="20201030 15:55:38.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:38.868" endtime="20201030 15:55:38.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.867" endtime="20201030 15:55:38.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.865" endtime="20201030 15:55:38.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.503" endtime="20201030 15:55:38.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.502" endtime="20201030 15:55:38.889"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.898" endtime="20201030 15:55:38.921"></status>
</kw>
<msg timestamp="20201030 15:55:38.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.896" endtime="20201030 15:55:38.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:38.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:38.923" endtime="20201030 15:55:38.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.925" endtime="20201030 15:55:38.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.894" endtime="20201030 15:55:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.891" endtime="20201030 15:55:38.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:38.935" endtime="20201030 15:55:39.221"></status>
</kw>
<msg timestamp="20201030 15:55:39.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025608153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:38.933" endtime="20201030 15:55:39.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025608153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025702556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.225" endtime="20201030 15:55:39.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.234" endtime="20201030 15:55:39.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.931" endtime="20201030 15:55:39.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.929" endtime="20201030 15:55:39.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.241" level="INFO">${RESULT} = [{'diff': 9.440299999999985e-05}, {'diff': 9.445799999999865e-05}, {'diff': 9.474999999999761e-05}, {'diff': 9.391699999999892e-05}, {'diff': 9.436100000000114e-05}, {'diff': 9.405600000000208e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.237" endtime="20201030 15:55:39.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.245" level="INFO">${ACCURACY} = {'diff': [9.440299999999985e-05, 9.445799999999865e-05, 9.474999999999761e-05, 9.391699999999892e-05, 9.436100000000114e-05, 9.405600000000208e-05, 9.473599999999804e-05, 9.418099999999874e-05, 9.4736...</msg>
<status status="PASS" starttime="20201030 15:55:39.242" endtime="20201030 15:55:39.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.249" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.248" endtime="20201030 15:55:39.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.252" level="INFO">VALUE: [9.440299999999985e-05, 9.445799999999865e-05, 9.474999999999761e-05, 9.391699999999892e-05, 9.436100000000114e-05, 9.405600000000208e-05, 9.473599999999804e-05, 9.418099999999874e-05, 9.473600000000151e-05, 9.46530000000001e-05, 9.391599999999944e-05, 9.391600000000291e-05, 9.390300000000282e-05, 9.406899999999871e-05, 9.45140000000004e-05, 9.456999999999868e-05, 9.441699999999942e-05, 9.408400000000122e-05, 9.390300000000282e-05, 9.457000000000215e-05, 9.455499999999964e-05, 9.386100000000064e-05, 9.408300000000175e-05, 9.425000000000058e-05, 9.380599999999836e-05, 9.472199999999847e-05, 9.4333999999998e-05, 9.455600000000258e-05, 9.440300000000332e-05, 9.422199999999797e-05, 9.447199999999822e-05, 9.436100000000114e-05, 9.456900000000268e-05, 9.406900000000218e-05, 9.459699999999835e-05, 9.459799999999782e-05, 9.459800000000129e-05, 9.387500000000021e-05, 9.406899999999871e-05, 9.390199999999987e-05, 9.475000000000108e-05, 9.46530000000001e-05, 9.474999999999761e-05, 9.45140000000004e-05, 9.447199999999822e-05, 9.380600000000183e-05, 9.390299999999935e-05, 9.440299999999985e-05, 9.423600000000101e-05, 9.431899999999896e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.251" endtime="20201030 15:55:39.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.246" endtime="20201030 15:55:39.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.262" endtime="20201030 15:55:39.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.261" endtime="20201030 15:55:39.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.260" endtime="20201030 15:55:39.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.890" endtime="20201030 15:55:39.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:38.889" endtime="20201030 15:55:39.283"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.292" endtime="20201030 15:55:39.313"></status>
</kw>
<msg timestamp="20201030 15:55:39.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.290" endtime="20201030 15:55:39.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.314" endtime="20201030 15:55:39.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.317" endtime="20201030 15:55:39.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.288" endtime="20201030 15:55:39.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.286" endtime="20201030 15:55:39.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.326" endtime="20201030 15:55:39.612"></status>
</kw>
<msg timestamp="20201030 15:55:39.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.325" endtime="20201030 15:55:39.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022397569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:39.616" endtime="20201030 15:55:39.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.625" endtime="20201030 15:55:39.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.322" endtime="20201030 15:55:39.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.320" endtime="20201030 15:55:39.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:39.631" level="INFO">${RESULT} = [{'diff': 9.573599999999904e-05}, {'diff': 9.565200000000162e-05}, {'diff': 9.540300000000085e-05}, {'diff': 9.555500000000064e-05}, {'diff': 9.574999999999861e-05}, {'diff': 9.498600000000176e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:39.628" endtime="20201030 15:55:39.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:39.637" level="INFO">${ACCURACY} = {'diff': [9.573599999999904e-05, 9.565200000000162e-05, 9.540300000000085e-05, 9.555500000000064e-05, 9.574999999999861e-05, 9.498600000000176e-05, 9.565299999999763e-05, 9.524999999999811e-05, 9.5166...</msg>
<status status="PASS" starttime="20201030 15:55:39.633" endtime="20201030 15:55:39.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.641" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:55:39.640" endtime="20201030 15:55:39.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.644" level="INFO">VALUE: [9.573599999999904e-05, 9.565200000000162e-05, 9.540300000000085e-05, 9.555500000000064e-05, 9.574999999999861e-05, 9.498600000000176e-05, 9.565299999999763e-05, 9.524999999999811e-05, 9.51669999999967e-05, 9.556900000000021e-05, 9.490200000000087e-05, 9.540200000000137e-05, 9.488900000000078e-05, 9.523600000000201e-05, 9.533299999999953e-05, 9.554200000000054e-05, 9.490300000000035e-05, 9.506999999999918e-05, 9.523699999999802e-05, 9.480499999999989e-05, 9.518000000000026e-05, 9.481900000000293e-05, 9.505500000000014e-05, 9.491699999999992e-05, 9.509699999999885e-05, 9.525000000000158e-05, 9.548600000000226e-05, 9.483400000000197e-05, 9.555600000000011e-05, 9.506899999999971e-05, 9.488899999999731e-05, 9.540300000000085e-05, 9.538900000000128e-05, 9.522199999999897e-05, 9.565299999999763e-05, 9.523599999999854e-05, 9.563900000000153e-05, 9.527800000000072e-05, 9.497199999999872e-05, 9.515200000000112e-05, 9.490299999999688e-05, 9.572199999999947e-05, 9.563900000000153e-05, 9.540300000000085e-05, 9.540300000000085e-05, 9.522299999999845e-05, 9.568000000000076e-05, 9.541600000000094e-05, 9.526400000000115e-05, 9.483299999999903e-05]</msg>
<status status="PASS" starttime="20201030 15:55:39.642" endtime="20201030 15:55:39.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.638" endtime="20201030 15:55:39.645"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:39.649" endtime="20201030 15:55:39.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.647" endtime="20201030 15:55:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.646" endtime="20201030 15:55:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.284" endtime="20201030 15:55:39.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.284" endtime="20201030 15:55:39.670"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.679" endtime="20201030 15:55:39.699"></status>
</kw>
<msg timestamp="20201030 15:55:39.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.677" endtime="20201030 15:55:39.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:39.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:39.700" endtime="20201030 15:55:39.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.703" endtime="20201030 15:55:39.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.674" endtime="20201030 15:55:39.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.672" endtime="20201030 15:55:39.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:39.712" endtime="20201030 15:55:40.000"></status>
</kw>
<msg timestamp="20201030 15:55:40.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:39.711" endtime="20201030 15:55:40.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02251925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022615986, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:40.005" endtime="20201030 15:55:40.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.013" endtime="20201030 15:55:40.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.708" endtime="20201030 15:55:40.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.706" endtime="20201030 15:55:40.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.020" level="INFO">${RESULT} = [{'diff': 9.673600000000004e-05}, {'diff': 9.581900000000046e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.615299999999813e-05}, {'diff': 9.662499999999949e-05}, {'diff': 9.673600000000004e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:40.017" endtime="20201030 15:55:40.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.024" level="INFO">${ACCURACY} = {'diff': [9.673600000000004e-05, 9.581900000000046e-05, 9.62080000000004e-05, 9.615299999999813e-05, 9.662499999999949e-05, 9.673600000000004e-05, 9.632000000000043e-05, 9.647200000000022e-05, 9.64310...</msg>
<status status="PASS" starttime="20201030 15:55:40.021" endtime="20201030 15:55:40.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.029" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.028" endtime="20201030 15:55:40.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.031" level="INFO">VALUE: [9.673600000000004e-05, 9.581900000000046e-05, 9.62080000000004e-05, 9.615299999999813e-05, 9.662499999999949e-05, 9.673600000000004e-05, 9.632000000000043e-05, 9.647200000000022e-05, 9.643100000000099e-05, 9.623599999999954e-05, 9.581900000000046e-05, 9.623599999999954e-05, 9.597199999999972e-05, 9.64859999999998e-05, 9.580600000000036e-05, 9.655499999999817e-05, 9.663899999999906e-05, 9.623599999999954e-05, 9.597199999999972e-05, 9.600000000000233e-05, 9.583300000000003e-05, 9.645800000000065e-05, 9.643100000000099e-05, 9.590300000000135e-05, 9.640299999999838e-05, 9.590200000000187e-05, 9.655499999999817e-05, 9.658300000000078e-05, 9.609699999999985e-05, 9.609699999999985e-05, 9.622199999999997e-05, 9.581999999999993e-05, 9.619500000000031e-05, 9.663899999999906e-05, 9.588899999999831e-05, 9.638799999999934e-05, 9.601399999999843e-05, 9.640299999999838e-05, 9.591700000000092e-05, 9.641700000000142e-05, 9.675000000000308e-05, 9.649999999999936e-05, 9.650000000000283e-05, 9.601299999999896e-05, 9.599999999999886e-05, 9.616599999999823e-05, 9.640300000000185e-05, 9.624999999999911e-05, 9.581900000000046e-05, 9.59019999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.030" endtime="20201030 15:55:40.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.025" endtime="20201030 15:55:40.033"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.037" endtime="20201030 15:55:40.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.035" endtime="20201030 15:55:40.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.034" endtime="20201030 15:55:40.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.671" endtime="20201030 15:55:40.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:39.670" endtime="20201030 15:55:40.057"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.066" endtime="20201030 15:55:40.087"></status>
</kw>
<msg timestamp="20201030 15:55:40.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.065" endtime="20201030 15:55:40.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.089" endtime="20201030 15:55:40.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.092" endtime="20201030 15:55:40.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.062" endtime="20201030 15:55:40.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.060" endtime="20201030 15:55:40.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.101" endtime="20201030 15:55:40.387"></status>
</kw>
<msg timestamp="20201030 15:55:40.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.099" endtime="20201030 15:55:40.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023294917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023392514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.391" endtime="20201030 15:55:40.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.400" endtime="20201030 15:55:40.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.097" endtime="20201030 15:55:40.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.095" endtime="20201030 15:55:40.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.407" level="INFO">${RESULT} = [{'diff': 9.759700000000135e-05}, {'diff': 9.740299999999938e-05}, {'diff': 9.740299999999938e-05}, {'diff': 9.725000000000011e-05}, {'diff': 9.698699999999977e-05}, {'diff': 9.75279999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:40.403" endtime="20201030 15:55:40.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.411" level="INFO">${ACCURACY} = {'diff': [9.759700000000135e-05, 9.740299999999938e-05, 9.740299999999938e-05, 9.725000000000011e-05, 9.698699999999977e-05, 9.75279999999995e-05, 9.750000000000036e-05, 9.718099999999827e-05, 9.68470...</msg>
<status status="PASS" starttime="20201030 15:55:40.408" endtime="20201030 15:55:40.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.415" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.414" endtime="20201030 15:55:40.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.418" level="INFO">VALUE: [9.759700000000135e-05, 9.740299999999938e-05, 9.740299999999938e-05, 9.725000000000011e-05, 9.698699999999977e-05, 9.75279999999995e-05, 9.750000000000036e-05, 9.718099999999827e-05, 9.68470000000006e-05, 9.702800000000247e-05, 9.775000000000061e-05, 9.733399999999753e-05, 9.707000000000118e-05, 9.690299999999888e-05, 9.7027999999999e-05, 9.773600000000104e-05, 9.680500000000189e-05, 9.690299999999888e-05, 9.691699999999845e-05, 9.691699999999845e-05, 9.723600000000054e-05, 9.765299999999963e-05, 9.773600000000104e-05, 9.750000000000036e-05, 9.731899999999849e-05, 9.74019999999999e-05, 9.780600000000236e-05, 9.731899999999849e-05, 9.726399999999968e-05, 9.69860000000003e-05, 9.699999999999986e-05, 9.683399999999703e-05, 9.741599999999948e-05, 9.688799999999984e-05, 9.756899999999874e-05, 9.723600000000054e-05, 9.713899999999956e-05, 9.71669999999987e-05, 9.68059999999979e-05, 9.690300000000235e-05, 9.722300000000045e-05, 9.68470000000006e-05, 9.692999999999855e-05, 9.695800000000115e-05, 9.752800000000297e-05, 9.722200000000097e-05, 9.747200000000122e-05, 9.770900000000138e-05, 9.755599999999864e-05, 9.709800000000032e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.416" endtime="20201030 15:55:40.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.412" endtime="20201030 15:55:40.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.424" endtime="20201030 15:55:40.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.422" endtime="20201030 15:55:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.421" endtime="20201030 15:55:40.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.058" endtime="20201030 15:55:40.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.058" endtime="20201030 15:55:40.445"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.454" endtime="20201030 15:55:40.474"></status>
</kw>
<msg timestamp="20201030 15:55:40.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.452" endtime="20201030 15:55:40.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.475" endtime="20201030 15:55:40.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.478" endtime="20201030 15:55:40.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.449" endtime="20201030 15:55:40.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.447" endtime="20201030 15:55:40.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.488" endtime="20201030 15:55:40.775"></status>
</kw>
<msg timestamp="20201030 15:55:40.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.486" endtime="20201030 15:55:40.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022240972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.779" endtime="20201030 15:55:40.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.788" endtime="20201030 15:55:40.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.483" endtime="20201030 15:55:40.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.481" endtime="20201030 15:55:40.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:40.794" level="INFO">${RESULT} = [{'diff': 9.788900000000031e-05}, {'diff': 9.808300000000228e-05}, {'diff': 9.794499999999859e-05}, {'diff': 9.865300000000063e-05}, {'diff': 9.875000000000161e-05}, {'diff': 9.815300000000013e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:40.791" endtime="20201030 15:55:40.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:40.799" level="INFO">${ACCURACY} = {'diff': [9.788900000000031e-05, 9.808300000000228e-05, 9.794499999999859e-05, 9.865300000000063e-05, 9.875000000000161e-05, 9.815300000000013e-05, 9.805499999999967e-05, 9.856899999999974e-05, 9.8430...</msg>
<status status="PASS" starttime="20201030 15:55:40.795" endtime="20201030 15:55:40.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.804" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:55:40.803" endtime="20201030 15:55:40.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.807" level="INFO">VALUE: [9.788900000000031e-05, 9.808300000000228e-05, 9.794499999999859e-05, 9.865300000000063e-05, 9.875000000000161e-05, 9.815300000000013e-05, 9.805499999999967e-05, 9.856899999999974e-05, 9.843000000000005e-05, 9.806899999999924e-05, 9.790299999999988e-05, 9.873599999999857e-05, 9.777799999999975e-05, 9.823599999999807e-05, 9.782000000000193e-05, 9.806899999999924e-05, 9.80410000000001e-05, 9.787499999999727e-05, 9.813899999999709e-05, 9.788900000000031e-05, 9.841699999999995e-05, 9.826300000000121e-05, 9.865300000000063e-05, 9.855599999999964e-05, 9.875000000000161e-05, 9.865200000000116e-05, 9.808299999999881e-05, 9.843099999999952e-05, 9.841699999999995e-05, 9.854200000000007e-05, 9.873700000000152e-05, 9.831999999999896e-05, 9.819499999999884e-05, 9.831999999999896e-05, 9.808300000000228e-05, 9.841600000000048e-05, 9.790299999999988e-05, 9.856899999999974e-05, 9.804199999999957e-05, 9.873599999999857e-05, 9.863900000000106e-05, 9.840300000000038e-05, 9.873600000000204e-05, 9.841600000000048e-05, 9.844399999999962e-05, 9.797199999999825e-05, 9.84860000000018e-05, 9.79860000000013e-05, 9.833399999999853e-05, 9.844500000000256e-05]</msg>
<status status="PASS" starttime="20201030 15:55:40.805" endtime="20201030 15:55:40.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.800" endtime="20201030 15:55:40.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:40.812" endtime="20201030 15:55:40.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.810" endtime="20201030 15:55:40.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.809" endtime="20201030 15:55:40.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.446" endtime="20201030 15:55:40.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.445" endtime="20201030 15:55:40.833"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.842" endtime="20201030 15:55:40.862"></status>
</kw>
<msg timestamp="20201030 15:55:40.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.840" endtime="20201030 15:55:40.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.863" endtime="20201030 15:55:40.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.866" endtime="20201030 15:55:40.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.837" endtime="20201030 15:55:40.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.835" endtime="20201030 15:55:40.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.875" endtime="20201030 15:55:41.162"></status>
</kw>
<msg timestamp="20201030 15:55:41.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:40.874" endtime="20201030 15:55:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022497181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.167" endtime="20201030 15:55:41.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.175" endtime="20201030 15:55:41.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.871" endtime="20201030 15:55:41.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.869" endtime="20201030 15:55:41.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.182" level="INFO">${RESULT} = [{'diff': 9.908400000000275e-05}, {'diff': 9.906999999999971e-05}, {'diff': 9.908299999999981e-05}, {'diff': 9.95549999999977e-05}, {'diff': 9.95410000000016e-05}, {'diff': 9.890299999999741e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:41.179" endtime="20201030 15:55:41.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.186" level="INFO">${ACCURACY} = {'diff': [9.908400000000275e-05, 9.906999999999971e-05, 9.908299999999981e-05, 9.95549999999977e-05, 9.95410000000016e-05, 9.890299999999741e-05, 9.976399999999871e-05, 9.898599999999882e-05, 9.948599...</msg>
<status status="PASS" starttime="20201030 15:55:41.183" endtime="20201030 15:55:41.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.191" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.190" endtime="20201030 15:55:41.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.193" level="INFO">VALUE: [9.908400000000275e-05, 9.906999999999971e-05, 9.908299999999981e-05, 9.95549999999977e-05, 9.95410000000016e-05, 9.890299999999741e-05, 9.976399999999871e-05, 9.898599999999882e-05, 9.948599999999932e-05, 9.89860000000023e-05, 9.89869999999983e-05, 9.945800000000019e-05, 9.883299999999956e-05, 9.963900000000206e-05, 9.974999999999914e-05, 9.88609999999987e-05, 9.890300000000088e-05, 9.891700000000045e-05, 9.974999999999914e-05, 9.915299999999766e-05, 9.963900000000206e-05, 9.906900000000024e-05, 9.973599999999957e-05, 9.940300000000138e-05, 9.976400000000218e-05, 9.965299999999816e-05, 9.890299999999741e-05, 9.957000000000021e-05, 9.908300000000328e-05, 9.958300000000031e-05, 9.98060000000009e-05, 9.948599999999932e-05, 9.898599999999882e-05, 9.915300000000113e-05, 9.888900000000131e-05, 9.906999999999971e-05, 9.890300000000088e-05, 9.905600000000014e-05, 9.909699999999938e-05, 9.920799999999994e-05, 9.931900000000049e-05, 9.973599999999957e-05, 9.965299999999816e-05, 9.975000000000261e-05, 9.883399999999903e-05, 9.958399999999978e-05, 9.906999999999971e-05, 9.959699999999988e-05, 9.905500000000067e-05, 9.923600000000254e-05]</msg>
<status status="PASS" starttime="20201030 15:55:41.192" endtime="20201030 15:55:41.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.187" endtime="20201030 15:55:41.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.199" endtime="20201030 15:55:41.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.197" endtime="20201030 15:55:41.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.196" endtime="20201030 15:55:41.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.834" endtime="20201030 15:55:41.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.833" endtime="20201030 15:55:41.219"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.228" endtime="20201030 15:55:41.249"></status>
</kw>
<msg timestamp="20201030 15:55:41.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.227" endtime="20201030 15:55:41.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.250" endtime="20201030 15:55:41.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.253" endtime="20201030 15:55:41.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.224" endtime="20201030 15:55:41.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.222" endtime="20201030 15:55:41.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.262" endtime="20201030 15:55:41.549"></status>
</kw>
<msg timestamp="20201030 15:55:41.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.260" endtime="20201030 15:55:41.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023337125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023437208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.553" endtime="20201030 15:55:41.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.561" endtime="20201030 15:55:41.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.258" endtime="20201030 15:55:41.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.256" endtime="20201030 15:55:41.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.568" level="INFO">${RESULT} = [{'diff': 0.00010008300000000081}, {'diff': 0.00010056899999999827}, {'diff': 0.00010022199999999704}, {'diff': 9.99999999999994e-05}, {'diff': 9.981900000000099e-05}, {'diff': 9.990300000000188e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:41.565" endtime="20201030 15:55:41.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.572" level="INFO">${ACCURACY} = {'diff': [0.00010008300000000081, 0.00010056899999999827, 0.00010022199999999704, 9.99999999999994e-05, 9.981900000000099e-05, 9.990300000000188e-05, 9.988899999999884e-05, 0.00010040299999999891, 0.0...</msg>
<status status="PASS" starttime="20201030 15:55:41.569" endtime="20201030 15:55:41.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.577" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.576" endtime="20201030 15:55:41.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.579" level="INFO">VALUE: [0.00010008300000000081, 0.00010056899999999827, 0.00010022199999999704, 9.99999999999994e-05, 9.981900000000099e-05, 9.990300000000188e-05, 9.988899999999884e-05, 0.00010040299999999891, 0.00010073700000000005, 0.00010044400000000162, 0.00010015199999999919, 9.995900000000016e-05, 0.00010073600000000058, 0.0001006670000000022, 9.98609999999997e-05, 0.00010073600000000058, 0.00010032000000000096, 0.00010055599999999817, 0.00010059700000000088, 0.00010024999999999964, 9.998599999999983e-05, 0.00010048600000000033, 0.00010031900000000149, 0.00010005600000000114, 0.00010040299999999891, 0.00010040300000000238, 0.00010024999999999964, 0.00010061100000000045, 0.0001002220000000005, 9.981899999999752e-05, 0.00010041700000000195, 0.00010040300000000238, 0.00010009799999999985, 0.00010073600000000058, 0.00010033400000000053, 0.00010022299999999998, 9.997200000000026e-05, 0.00010012499999999952, 0.00010038899999999934, 0.00010020800000000094, 0.00010000000000000286, 0.00010048600000000033, 0.00010070799999999797, 0.00010062500000000002, 0.00010058300000000131, 0.00010006900000000124, 0.00010008300000000081, 0.0001007359999999971, 0.00010015299999999866, 0.00010004200000000157]</msg>
<status status="PASS" starttime="20201030 15:55:41.578" endtime="20201030 15:55:41.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.573" endtime="20201030 15:55:41.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.586" endtime="20201030 15:55:41.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.584" endtime="20201030 15:55:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.583" endtime="20201030 15:55:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.220" endtime="20201030 15:55:41.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.220" endtime="20201030 15:55:41.606"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.615" endtime="20201030 15:55:41.635"></status>
</kw>
<msg timestamp="20201030 15:55:41.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.614" endtime="20201030 15:55:41.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.637" endtime="20201030 15:55:41.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.639" endtime="20201030 15:55:41.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.611" endtime="20201030 15:55:41.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.609" endtime="20201030 15:55:41.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.649" endtime="20201030 15:55:41.934"></status>
</kw>
<msg timestamp="20201030 15:55:41.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.647" endtime="20201030 15:55:41.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022247389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022348306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:41.939" endtime="20201030 15:55:41.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:41.947" endtime="20201030 15:55:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.644" endtime="20201030 15:55:41.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.643" endtime="20201030 15:55:41.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:41.953" level="INFO">${RESULT} = [{'diff': 0.00010091699999999898}, {'diff': 0.00010156999999999874}, {'diff': 0.00010091600000000298}, {'diff': 0.00010088899999999984}, {'diff': 0.000101722000000002}, {'diff': 0.00010145799999999872...</msg>
<status status="PASS" starttime="20201030 15:55:41.950" endtime="20201030 15:55:41.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:41.958" level="INFO">${ACCURACY} = {'diff': [0.00010091699999999898, 0.00010156999999999874, 0.00010091600000000298, 0.00010088899999999984, 0.000101722000000002, 0.00010145799999999872, 0.00010098600000000083, 0.00010166699999999973, ...</msg>
<status status="PASS" starttime="20201030 15:55:41.954" endtime="20201030 15:55:41.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.963" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:55:41.962" endtime="20201030 15:55:41.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:41.966" level="INFO">VALUE: [0.00010091699999999898, 0.00010156999999999874, 0.00010091600000000298, 0.00010088899999999984, 0.000101722000000002, 0.00010145799999999872, 0.00010098600000000083, 0.00010166699999999973, 0.00010108399999999781, 0.00010172300000000148, 0.00010155599999999917, 0.00010147199999999829, 0.00010162500000000102, 0.00010105500000000267, 0.00010106900000000224, 0.00010120799999999847, 0.0001011809999999988, 0.00010090299999999941, 0.00010140299999999991, 0.00010143099999999905, 0.00010122199999999804, 0.00010115199999999672, 0.00010104099999999963, 0.00010173600000000158, 0.0001013199999999985, 0.00010156999999999874, 0.0001017359999999981, 0.00010115299999999966, 0.00010140200000000044, 0.000101722000000002, 0.00010130500000000292, 0.0001017359999999981, 0.00010165300000000016, 0.00010156999999999874, 0.00010108300000000181, 0.000101722000000002, 0.0001010000000000004, 0.00010109800000000085, 0.00010108299999999834, 0.00010140200000000044, 0.00010123600000000108, 0.00010148599999999786, 0.00010163900000000059, 0.00010172199999999854, 0.0001015000000000009, 0.000101028000000003, 0.00010148699999999733, 0.00010081899999999852, 0.00010156899999999927, 0.00010123600000000108]</msg>
<status status="PASS" starttime="20201030 15:55:41.964" endtime="20201030 15:55:41.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.959" endtime="20201030 15:55:41.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:41.971" endtime="20201030 15:55:41.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.969" endtime="20201030 15:55:41.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.968" endtime="20201030 15:55:41.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.607" endtime="20201030 15:55:41.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.607" endtime="20201030 15:55:41.991"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.000" endtime="20201030 15:55:42.021"></status>
</kw>
<msg timestamp="20201030 15:55:42.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:41.999" endtime="20201030 15:55:42.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.022" endtime="20201030 15:55:42.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.025" endtime="20201030 15:55:42.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.996" endtime="20201030 15:55:42.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.994" endtime="20201030 15:55:42.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.034" endtime="20201030 15:55:42.322"></status>
</kw>
<msg timestamp="20201030 15:55:42.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:42.032" endtime="20201030 15:55:42.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022391764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022494, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:42.326" endtime="20201030 15:55:42.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.334" endtime="20201030 15:55:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.030" endtime="20201030 15:55:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.028" endtime="20201030 15:55:42.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.341" level="INFO">${RESULT} = [{'diff': 0.0001022359999999986}, {'diff': 0.00010233299999999959}, {'diff': 0.00010212499999999805}, {'diff': 0.00010230500000000045}, {'diff': 0.00010249999999999843}, {'diff': 0.000102513999999998}...</msg>
<status status="PASS" starttime="20201030 15:55:42.338" endtime="20201030 15:55:42.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.345" level="INFO">${ACCURACY} = {'diff': [0.0001022359999999986, 0.00010233299999999959, 0.00010212499999999805, 0.00010230500000000045, 0.00010249999999999843, 0.000102513999999998, 0.00010245799999999972, 0.00010183299999999909, 0...</msg>
<status status="PASS" starttime="20201030 15:55:42.342" endtime="20201030 15:55:42.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.350" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.349" endtime="20201030 15:55:42.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.352" level="INFO">VALUE: [0.0001022359999999986, 0.00010233299999999959, 0.00010212499999999805, 0.00010230500000000045, 0.00010249999999999843, 0.000102513999999998, 0.00010245799999999972, 0.00010183299999999909, 0.00010240300000000091, 0.00010276399999999825, 0.000102513999999998, 0.0001020000000000014, 0.00010183400000000203, 0.00010193000000000008, 0.00010230599999999992, 0.00010183300000000256, 0.00010220800000000294, 0.00010198600000000183, 0.00010197199999999879, 0.00010252799999999757, 0.00010248599999999886, 0.00010265299999999769, 0.00010274999999999868, 0.00010198600000000183, 0.00010247199999999929, 0.00010215299999999719, 0.00010206899999999977, 0.00010240300000000091, 0.00010207000000000271, 0.00010215300000000066, 0.00010263900000000159, 0.00010240200000000144, 0.00010240200000000144, 0.000102416000000001, 0.00010258299999999984, 0.00010277799999999782, 0.00010177800000000028, 0.00010209799999999838, 0.00010188899999999737, 0.00010275000000000215, 0.00010215300000000066, 0.00010273600000000258, 0.00010266600000000126, 0.0001020420000000001, 0.00010208300000000281, 0.00010275000000000215, 0.0001025000000000019, 0.00010183400000000203, 0.00010241700000000048, 0.00010273700000000205]</msg>
<status status="PASS" starttime="20201030 15:55:42.351" endtime="20201030 15:55:42.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.346" endtime="20201030 15:55:42.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.358" endtime="20201030 15:55:42.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.356" endtime="20201030 15:55:42.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.355" endtime="20201030 15:55:42.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.992" endtime="20201030 15:55:42.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:41.992" endtime="20201030 15:55:42.378"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.387" endtime="20201030 15:55:42.411"></status>
</kw>
<msg timestamp="20201030 15:55:42.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.386" endtime="20201030 15:55:42.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.413" endtime="20201030 15:55:42.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.415" endtime="20201030 15:55:42.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.383" endtime="20201030 15:55:42.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.381" endtime="20201030 15:55:42.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.425" endtime="20201030 15:55:42.711"></status>
</kw>
<msg timestamp="20201030 15:55:42.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.423" endtime="20201030 15:55:42.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025748889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025851778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.715" endtime="20201030 15:55:42.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.724" endtime="20201030 15:55:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.420" endtime="20201030 15:55:42.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.419" endtime="20201030 15:55:42.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:42.730" level="INFO">${RESULT} = [{'diff': 0.00010288899999999837}, {'diff': 0.00010307000000000024}, {'diff': 0.00010307000000000024}, {'diff': 0.0001029160000000015}, {'diff': 0.00010340199999999897}, {'diff': 0.0001029030000000014...</msg>
<status status="PASS" starttime="20201030 15:55:42.727" endtime="20201030 15:55:42.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:42.734" level="INFO">${ACCURACY} = {'diff': [0.00010288899999999837, 0.00010307000000000024, 0.00010307000000000024, 0.0001029160000000015, 0.00010340199999999897, 0.00010290300000000141, 0.0001037360000000001, 0.00010299999999999893, ...</msg>
<status status="PASS" starttime="20201030 15:55:42.731" endtime="20201030 15:55:42.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.739" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:55:42.738" endtime="20201030 15:55:42.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.741" level="INFO">VALUE: [0.00010288899999999837, 0.00010307000000000024, 0.00010307000000000024, 0.0001029160000000015, 0.00010340199999999897, 0.00010290300000000141, 0.0001037360000000001, 0.00010299999999999893, 0.00010302800000000154, 0.00010354099999999866, 0.00010283399999999956, 0.00010308300000000034, 0.00010304199999999764, 0.00010358299999999737, 0.00010324999999999918, 0.00010333300000000059, 0.00010374999999999968, 0.00010366699999999826, 0.00010291700000000098, 0.00010290299999999794, 0.00010288800000000237, 0.00010324999999999918, 0.00010281900000000052, 0.00010308300000000034, 0.00010290299999999794, 0.00010344500000000062, 0.00010340299999999844, 0.00010343000000000158, 0.00010376400000000272, 0.00010315199999999872, 0.00010359700000000041, 0.00010376399999999925, 0.00010297199999999979, 0.000103207999999997, 0.0001035420000000016, 0.00010324999999999918, 0.00010301299999999902, 0.00010315300000000166, 0.0001037360000000001, 0.00010281900000000052, 0.00010352799999999857, 0.00010306900000000077, 0.0001031940000000009, 0.00010282, 0.0001033889999999954, 0.00010336200000000267, 0.0001032359999999996, 0.00010348599999999986, 0.00010351400000000593, 0.00010373700000000652]</msg>
<status status="PASS" starttime="20201030 15:55:42.740" endtime="20201030 15:55:42.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.735" endtime="20201030 15:55:42.744"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:42.747" endtime="20201030 15:55:42.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.746" endtime="20201030 15:55:42.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.745" endtime="20201030 15:55:42.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.379" endtime="20201030 15:55:42.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.379" endtime="20201030 15:55:42.768"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.777" endtime="20201030 15:55:42.798"></status>
</kw>
<msg timestamp="20201030 15:55:42.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.776" endtime="20201030 15:55:42.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:42.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:42.799" endtime="20201030 15:55:42.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.802" endtime="20201030 15:55:42.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.773" endtime="20201030 15:55:42.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.771" endtime="20201030 15:55:42.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:42.811" endtime="20201030 15:55:43.097"></status>
</kw>
<msg timestamp="20201030 15:55:43.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:42.809" endtime="20201030 15:55:43.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022407458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.101" endtime="20201030 15:55:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.109" endtime="20201030 15:55:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.807" endtime="20201030 15:55:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.805" endtime="20201030 15:55:43.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.116" level="INFO">${RESULT} = [{'diff': 0.00010456999999999828}, {'diff': 0.0001042360000000006}, {'diff': 0.00010445900000000119}, {'diff': 0.00010381900000000152}, {'diff': 0.00010440199999999997}, {'diff': 0.0001039029999999989...</msg>
<status status="PASS" starttime="20201030 15:55:43.113" endtime="20201030 15:55:43.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.121" level="INFO">${ACCURACY} = {'diff': [0.00010456999999999828, 0.0001042360000000006, 0.00010445900000000119, 0.00010381900000000152, 0.00010440199999999997, 0.00010390299999999894, 0.00010444500000000162, 0.00010441699999999901,...</msg>
<status status="PASS" starttime="20201030 15:55:43.117" endtime="20201030 15:55:43.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.126" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.125" endtime="20201030 15:55:43.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.128" level="INFO">VALUE: [0.00010456999999999828, 0.0001042360000000006, 0.00010445900000000119, 0.00010381900000000152, 0.00010440199999999997, 0.00010390299999999894, 0.00010444500000000162, 0.00010441699999999901, 0.00010390299999999894, 0.00010422300000000051, 0.00010383400000000056, 0.000104207999999998, 0.000104514, 0.00010399999999999993, 0.00010416699999999876, 0.00010408300000000134, 0.00010425000000000018, 0.00010461100000000098, 0.00010438899999999987, 0.00010388899999999937, 0.00010390199999999947, 0.0001045689999999988, 0.00010391700000000198, 0.00010475000000000068, 0.00010441700000000248, 0.00010398599999999689, 0.00010415299999999919, 0.00010436100000000073, 0.00010390199999999947, 0.00010444399999999868, 0.00010406900000000177, 0.00010475000000000068, 0.00010380499999999848, 0.00010473599999999764, 0.00010415299999999919, 0.00010390299999999894, 0.00010406999999999778, 0.0001039160000000025, 0.0001040689999999983, 0.00010422199999999757, 0.00010433299999999812, 0.00010425000000000018, 0.00010380599999999796, 0.00010440299999999944, 0.00010440299999999944, 0.00010458299999999837, 0.00010391599999999904, 0.00010390199999999947, 0.0001040689999999983, 0.00010440299999999944]</msg>
<status status="PASS" starttime="20201030 15:55:43.127" endtime="20201030 15:55:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.122" endtime="20201030 15:55:43.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.133" endtime="20201030 15:55:43.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.132" endtime="20201030 15:55:43.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.131" endtime="20201030 15:55:43.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.769" endtime="20201030 15:55:43.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:42.768" endtime="20201030 15:55:43.154"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.163" endtime="20201030 15:55:43.183"></status>
</kw>
<msg timestamp="20201030 15:55:43.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.161" endtime="20201030 15:55:43.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.185" endtime="20201030 15:55:43.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.188" endtime="20201030 15:55:43.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.159" endtime="20201030 15:55:43.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.157" endtime="20201030 15:55:43.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.197" endtime="20201030 15:55:43.484"></status>
</kw>
<msg timestamp="20201030 15:55:43.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.195" endtime="20201030 15:55:43.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022452028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022557264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.489" endtime="20201030 15:55:43.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.497" endtime="20201030 15:55:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.193" endtime="20201030 15:55:43.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.191" endtime="20201030 15:55:43.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.504" level="INFO">${RESULT} = [{'diff': 0.0001052360000000016}, {'diff': 0.00010531999999999903}, {'diff': 0.00010572300000000201}, {'diff': 0.00010566599999999732}, {'diff': 0.000104901999999997}, {'diff': 0.00010525000000000118}...</msg>
<status status="PASS" starttime="20201030 15:55:43.500" endtime="20201030 15:55:43.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.508" level="INFO">${ACCURACY} = {'diff': [0.0001052360000000016, 0.00010531999999999903, 0.00010572300000000201, 0.00010566599999999732, 0.000104901999999997, 0.00010525000000000118, 0.00010534699999999869, 0.0001052499999999977, 0....</msg>
<status status="PASS" starttime="20201030 15:55:43.505" endtime="20201030 15:55:43.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.512" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.511" endtime="20201030 15:55:43.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.515" level="INFO">VALUE: [0.0001052360000000016, 0.00010531999999999903, 0.00010572300000000201, 0.00010566599999999732, 0.000104901999999997, 0.00010525000000000118, 0.00010534699999999869, 0.0001052499999999977, 0.0001050689999999993, 0.00010509700000000191, 0.0001050140000000005, 0.00010575000000000168, 0.00010513900000000062, 0.0001052360000000016, 0.00010548599999999839, 0.00010504199999999964, 0.00010550000000000143, 0.00010548599999999839, 0.000104820000000002, 0.00010523599999999814, 0.00010481999999999853, 0.00010488900000000037, 0.00010541600000000054, 0.00010541600000000054, 0.00010509700000000191, 0.00010533299999999912, 0.00010523599999999814, 0.0001053200000000025, 0.00010541700000000001, 0.0001050140000000005, 0.00010573599999999864, 0.00010516600000000029, 0.00010573599999999864, 0.00010531899999999955, 0.0001052360000000016, 0.0001048339999999981, 0.00010545799999999925, 0.00010557000000000274, 0.00010573700000000158, 0.00010531899999999955, 0.00010490200000000047, 0.00010523599999999814, 0.00010530499999999998, 0.00010572200000000254, 0.00010500000000000093, 0.00010566699999999679, 0.00010536100000000173, 0.00010526399999999728, 0.00010549999999999796, 0.00010566599999999732]</msg>
<status status="PASS" starttime="20201030 15:55:43.514" endtime="20201030 15:55:43.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.509" endtime="20201030 15:55:43.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.520" endtime="20201030 15:55:43.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.519" endtime="20201030 15:55:43.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.517" endtime="20201030 15:55:43.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.155" endtime="20201030 15:55:43.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.155" endtime="20201030 15:55:43.541"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.551" endtime="20201030 15:55:43.573"></status>
</kw>
<msg timestamp="20201030 15:55:43.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.549" endtime="20201030 15:55:43.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.574" endtime="20201030 15:55:43.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.577" endtime="20201030 15:55:43.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.546" endtime="20201030 15:55:43.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.544" endtime="20201030 15:55:43.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.586" endtime="20201030 15:55:43.873"></status>
</kw>
<msg timestamp="20201030 15:55:43.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.585" endtime="20201030 15:55:43.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024230944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024336861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:43.878" endtime="20201030 15:55:43.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.886" endtime="20201030 15:55:43.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.582" endtime="20201030 15:55:43.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.580" endtime="20201030 15:55:43.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:43.893" level="INFO">${RESULT} = [{'diff': 0.00010591700000000051}, {'diff': 0.00010627800000000132}, {'diff': 0.0001060279999999976}, {'diff': 0.00010647199999999982}, {'diff': 0.00010665300000000169}, {'diff': 0.0001065419999999976...</msg>
<status status="PASS" starttime="20201030 15:55:43.889" endtime="20201030 15:55:43.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:43.897" level="INFO">${ACCURACY} = {'diff': [0.00010591700000000051, 0.00010627800000000132, 0.0001060279999999976, 0.00010647199999999982, 0.00010665300000000169, 0.00010654199999999767, 0.0001062360000000026, 0.0001062499999999987, 0...</msg>
<status status="PASS" starttime="20201030 15:55:43.894" endtime="20201030 15:55:43.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.901" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:55:43.900" endtime="20201030 15:55:43.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.904" level="INFO">VALUE: [0.00010591700000000051, 0.00010627800000000132, 0.0001060279999999976, 0.00010647199999999982, 0.00010665300000000169, 0.00010654199999999767, 0.0001062360000000026, 0.0001062499999999987, 0.00010673599999999964, 0.00010597199999999932, 0.00010615299999999772, 0.00010640299999999797, 0.00010640299999999797, 0.00010630500000000098, 0.00010632000000000003, 0.00010641600000000154, 0.00010632000000000003, 0.00010612499999999858, 0.00010676399999999878, 0.00010615300000000119, 0.00010591700000000051, 0.00010622200000000304, 0.00010598599999999889, 0.00010649999999999896, 0.00010630500000000098, 0.000105901999999998, 0.00010658300000000037, 0.00010680599999999749, 0.00010647199999999982, 0.00010609699999999944, 0.00010588900000000137, 0.00010606999999999978, 0.00010657000000000028, 0.0001060690000000003, 0.00010602700000000159, 0.00010590300000000094, 0.00010673599999999964, 0.0001061949999999999, 0.00010590300000000094, 0.00010609799999999892, 0.0001067499999999992, 0.00010668000000000136, 0.00010608299999999987, 0.00010605500000000073, 0.00010655499999999776, 0.00010591700000000051, 0.00010673599999999964, 0.00010647199999999982, 0.00010581999999999953, 0.00010640200000000197]</msg>
<status status="PASS" starttime="20201030 15:55:43.902" endtime="20201030 15:55:43.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.898" endtime="20201030 15:55:43.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:43.910" endtime="20201030 15:55:43.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.908" endtime="20201030 15:55:43.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.907" endtime="20201030 15:55:43.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.542" endtime="20201030 15:55:43.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.541" endtime="20201030 15:55:43.931"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.940" endtime="20201030 15:55:43.960"></status>
</kw>
<msg timestamp="20201030 15:55:43.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.938" endtime="20201030 15:55:43.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:43.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:43.962" endtime="20201030 15:55:43.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.964" endtime="20201030 15:55:43.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.935" endtime="20201030 15:55:43.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.933" endtime="20201030 15:55:43.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:43.974" endtime="20201030 15:55:44.261"></status>
</kw>
<msg timestamp="20201030 15:55:44.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:43.972" endtime="20201030 15:55:44.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02271125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:55:44.265" endtime="20201030 15:55:44.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.274" endtime="20201030 15:55:44.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.969" endtime="20201030 15:55:44.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.968" endtime="20201030 15:55:44.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.280" level="INFO">${RESULT} = [{'diff': 0.00010715300000000219}, {'diff': 0.00010683300000000062}, {'diff': 0.00010759700000000094}, {'diff': 0.00010744400000000168}, {'diff': 0.00010740299999999897}, {'diff': 0.000106902999999998...</msg>
<status status="PASS" starttime="20201030 15:55:44.277" endtime="20201030 15:55:44.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.285" level="INFO">${ACCURACY} = {'diff': [0.00010715300000000219, 0.00010683300000000062, 0.00010759700000000094, 0.00010744400000000168, 0.00010740299999999897, 0.00010690299999999847, 0.0001073889999999994, 0.00010768099999999836,...</msg>
<status status="PASS" starttime="20201030 15:55:44.281" endtime="20201030 15:55:44.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.290" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.289" endtime="20201030 15:55:44.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.292" level="INFO">VALUE: [0.00010715300000000219, 0.00010683300000000062, 0.00010759700000000094, 0.00010744400000000168, 0.00010740299999999897, 0.00010690299999999847, 0.0001073889999999994, 0.00010768099999999836, 0.00010684699999999672, 0.00010705500000000173, 0.00010722200000000057, 0.00010730499999999851, 0.00010726399999999928, 0.00010695800000000075, 0.00010715300000000219, 0.0001070560000000012, 0.00010740299999999897, 0.0001075829999999979, 0.00010684700000000019, 0.00010729200000000189, 0.00010749999999999996, 0.00010716699999999829, 0.00010758300000000137, 0.00010758400000000085, 0.0001068750000000028, 0.00010752699999999962, 0.00010755499999999876, 0.00010706899999999783, 0.00010740299999999897, 0.0001077219999999976, 0.00010768099999999836, 0.0001077500000000002, 0.00010698599999999989, 0.0001068340000000001, 0.00010697200000000032, 0.00010709700000000044, 0.00010691600000000204, 0.00010690299999999847, 0.0001077500000000002, 0.00010700000000000293, 0.00010704099999999869, 0.0001073340000000006, 0.00010741699999999854, 0.00010723600000000014, 0.00010683300000000062, 0.00010726399999999928, 0.00010713900000000262, 0.0001068889999999989, 0.00010707000000000078, 0.00010729099999999894]</msg>
<status status="PASS" starttime="20201030 15:55:44.291" endtime="20201030 15:55:44.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.286" endtime="20201030 15:55:44.300"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.304" endtime="20201030 15:55:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.302" endtime="20201030 15:55:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.301" endtime="20201030 15:55:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.932" endtime="20201030 15:55:44.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:43.931" endtime="20201030 15:55:44.325"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.334" endtime="20201030 15:55:44.354"></status>
</kw>
<msg timestamp="20201030 15:55:44.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.332" endtime="20201030 15:55:44.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.356" endtime="20201030 15:55:44.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.358" endtime="20201030 15:55:44.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.330" endtime="20201030 15:55:44.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.327" endtime="20201030 15:55:44.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.368" endtime="20201030 15:55:44.656"></status>
</kw>
<msg timestamp="20201030 15:55:44.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.366" endtime="20201030 15:55:44.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022529417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.660" endtime="20201030 15:55:44.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.668" endtime="20201030 15:55:44.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.364" endtime="20201030 15:55:44.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.362" endtime="20201030 15:55:44.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:44.675" level="INFO">${RESULT} = [{'diff': 0.00010872299999999807}, {'diff': 0.00010830599999999899}, {'diff': 0.0001085829999999989}, {'diff': 0.00010791599999999957}, {'diff': 0.00010875000000000121}, {'diff': 0.0001080000000000004...</msg>
<status status="PASS" starttime="20201030 15:55:44.672" endtime="20201030 15:55:44.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:44.679" level="INFO">${ACCURACY} = {'diff': [0.00010872299999999807, 0.00010830599999999899, 0.0001085829999999989, 0.00010791599999999957, 0.00010875000000000121, 0.00010800000000000046, 0.00010843099999999911, 0.00010816699999999929,...</msg>
<status status="PASS" starttime="20201030 15:55:44.676" endtime="20201030 15:55:44.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.684" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:55:44.683" endtime="20201030 15:55:44.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.686" level="INFO">VALUE: [0.00010872299999999807, 0.00010830599999999899, 0.0001085829999999989, 0.00010791599999999957, 0.00010875000000000121, 0.00010800000000000046, 0.00010843099999999911, 0.00010816699999999929, 0.00010840299999999997, 0.00010873600000000164, 0.00010812500000000058, 0.00010827799999999985, 0.00010833299999999865, 0.00010806899999999883, 0.00010877800000000035, 0.00010849999999999749, 0.00010850000000000096, 0.00010847300000000129, 0.00010848599999999792, 0.00010850000000000096, 0.00010800000000000046, 0.00010850000000000096, 0.00010847200000000182, 0.00010798600000000089, 0.00010790299999999947, 0.00010849999999999749, 0.0001080279999999996, 0.00010865200000000075, 0.00010855499999999976, 0.00010790299999999947, 0.00010823600000000114, 0.00010797200000000132, 0.00010830599999999899, 0.0001083890000000004, 0.00010791700000000251, 0.00010838800000000093, 0.00010841600000000007, 0.00010843000000000311, 0.00010826400000000028, 0.0001085280000000001, 0.00010850000000000096, 0.00010832000000000203, 0.0001085699999999988, 0.00010858300000000237, 0.00010826400000000028, 0.00010831899999999908, 0.00010791699999999904, 0.00010809700000000144, 0.0001085829999999989, 0.00010791700000000251]</msg>
<status status="PASS" starttime="20201030 15:55:44.685" endtime="20201030 15:55:44.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.680" endtime="20201030 15:55:44.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:44.691" endtime="20201030 15:55:44.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.690" endtime="20201030 15:55:44.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.689" endtime="20201030 15:55:44.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.326" endtime="20201030 15:55:44.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.325" endtime="20201030 15:55:44.712"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.721" endtime="20201030 15:55:44.743"></status>
</kw>
<msg timestamp="20201030 15:55:44.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.720" endtime="20201030 15:55:44.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:44.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:44.744" endtime="20201030 15:55:44.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.747" endtime="20201030 15:55:44.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.717" endtime="20201030 15:55:44.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.715" endtime="20201030 15:55:44.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:44.756" endtime="20201030 15:55:45.042"></status>
</kw>
<msg timestamp="20201030 15:55:45.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:44.755" endtime="20201030 15:55:45.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.046" endtime="20201030 15:55:45.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.055" endtime="20201030 15:55:45.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.752" endtime="20201030 15:55:45.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.750" endtime="20201030 15:55:45.057"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.061" level="INFO">${RESULT} = [{'diff': 0.00010944400000000021}, {'diff': 0.00010940199999999803}, {'diff': 0.00010895799999999928}, {'diff': 0.00010906899999999983}, {'diff': 0.00010959699999999947}, {'diff': 0.000109152000000001...</msg>
<status status="PASS" starttime="20201030 15:55:45.058" endtime="20201030 15:55:45.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.065" level="INFO">${ACCURACY} = {'diff': [0.00010944400000000021, 0.00010940199999999803, 0.00010895799999999928, 0.00010906899999999983, 0.00010959699999999947, 0.00010915200000000125, 0.00010941700000000054, 0.00010958399999999938...</msg>
<status status="PASS" starttime="20201030 15:55:45.062" endtime="20201030 15:55:45.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.070" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.069" endtime="20201030 15:55:45.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.072" level="INFO">VALUE: [0.00010944400000000021, 0.00010940199999999803, 0.00010895799999999928, 0.00010906899999999983, 0.00010959699999999947, 0.00010915200000000125, 0.00010941700000000054, 0.00010958399999999938, 0.00010973599999999917, 0.00010915200000000125, 0.00010973599999999917, 0.00010918000000000039, 0.00010948700000000186, 0.00010951399999999806, 0.00010955600000000024, 0.00010916700000000029, 0.00010931999999999956, 0.0001095829999999999, 0.00010923599999999867, 0.00010880500000000001, 0.00010954099999999772, 0.00010890300000000047, 0.00010902799999999713, 0.00010940300000000097, 0.00010927700000000137, 0.00010965300000000122, 0.00010955500000000076, 0.00010891600000000057, 0.00010925000000000171, 0.00010894399999999971, 0.00010949999999999849, 0.0001093340000000026, 0.0001095699999999998, 0.0001097089999999995, 0.00010963899999999818, 0.00010891600000000057, 0.00010973599999999917, 0.00010898599999999842, 0.00010927799999999738, 0.00010904200000000017, 0.00010925000000000171, 0.00010918099999999986, 0.00010891600000000057, 0.00010924999999999824, 0.00010911099999999854, 0.00010906899999999983, 0.00010973599999999917, 0.00010895799999999928, 0.00010898600000000189, 0.00010945899999999925]</msg>
<status status="PASS" starttime="20201030 15:55:45.071" endtime="20201030 15:55:45.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.066" endtime="20201030 15:55:45.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.078" endtime="20201030 15:55:45.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.077" endtime="20201030 15:55:45.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.076" endtime="20201030 15:55:45.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.713" endtime="20201030 15:55:45.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:44.713" endtime="20201030 15:55:45.099"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.108" endtime="20201030 15:55:45.128"></status>
</kw>
<msg timestamp="20201030 15:55:45.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.107" endtime="20201030 15:55:45.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.129" endtime="20201030 15:55:45.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.132" endtime="20201030 15:55:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.104" endtime="20201030 15:55:45.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.102" endtime="20201030 15:55:45.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.141" endtime="20201030 15:55:45.427"></status>
</kw>
<msg timestamp="20201030 15:55:45.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.140" endtime="20201030 15:55:45.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.431" endtime="20201030 15:55:45.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.439" endtime="20201030 15:55:45.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.137" endtime="20201030 15:55:45.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.135" endtime="20201030 15:55:45.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.446" level="INFO">${RESULT} = [{'diff': 0.00011037499999999936}, {'diff': 0.00011023599999999967}, {'diff': 0.00011033300000000065}, {'diff': 0.0001105700000000008}, {'diff': 0.0001098479999999992}, {'diff': 0.00011038899999999893...</msg>
<status status="PASS" starttime="20201030 15:55:45.443" endtime="20201030 15:55:45.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.451" level="INFO">${ACCURACY} = {'diff': [0.00011037499999999936, 0.00011023599999999967, 0.00011033300000000065, 0.0001105700000000008, 0.0001098479999999992, 0.00011038899999999893, 0.00011040199999999903, 0.00011001400000000203, ...</msg>
<status status="PASS" starttime="20201030 15:55:45.447" endtime="20201030 15:55:45.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.456" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.455" endtime="20201030 15:55:45.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.458" level="INFO">VALUE: [0.00011037499999999936, 0.00011023599999999967, 0.00011033300000000065, 0.0001105700000000008, 0.0001098479999999992, 0.00011038899999999893, 0.00011040199999999903, 0.00011001400000000203, 0.00010990300000000147, 0.00011041700000000154, 0.00011055600000000124, 0.0001100700000000003, 0.0001105280000000021, 0.00011073600000000017, 0.00010999999999999899, 0.00010984699999999972, 0.00011040300000000197, 0.0001098890000000019, 0.0001102220000000001, 0.00011018100000000086, 0.00011058400000000038, 0.00011040300000000197, 0.00011025000000000271, 0.00011034700000000022, 0.00011044400000000121, 0.00011052799999999863, 0.00011006900000000083, 0.00011023599999999967, 0.00011066699999999832, 0.00010993100000000061, 0.00010990199999999853, 0.00011042999999999817, 0.00011055500000000176, 0.00011073600000000017, 0.00011041699999999807, 0.00011013900000000215, 0.0001100700000000003, 0.00011008399999999988, 0.0001104029999999985, 0.0001100700000000003, 0.0001105830000000009, 0.00011066699999999832, 0.00011076399999999931, 0.00011048599999999992, 0.00011065299999999875, 0.0001104029999999985, 0.0001100700000000003, 0.00011019500000000043, 0.00011016599999999835, 0.00011029199999999795]</msg>
<status status="PASS" starttime="20201030 15:55:45.457" endtime="20201030 15:55:45.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.452" endtime="20201030 15:55:45.459"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.463" endtime="20201030 15:55:45.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.462" endtime="20201030 15:55:45.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.460" endtime="20201030 15:55:45.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.100" endtime="20201030 15:55:45.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.100" endtime="20201030 15:55:45.484"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.493" endtime="20201030 15:55:45.514"></status>
</kw>
<msg timestamp="20201030 15:55:45.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.491" endtime="20201030 15:55:45.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.516" endtime="20201030 15:55:45.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.518" endtime="20201030 15:55:45.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.489" endtime="20201030 15:55:45.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.487" endtime="20201030 15:55:45.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.528" endtime="20201030 15:55:45.815"></status>
</kw>
<msg timestamp="20201030 15:55:45.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.526" endtime="20201030 15:55:45.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022798319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.819" endtime="20201030 15:55:45.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.827" endtime="20201030 15:55:45.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.524" endtime="20201030 15:55:45.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.522" endtime="20201030 15:55:45.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:45.834" level="INFO">${RESULT} = [{'diff': 0.00011175000000000074}, {'diff': 0.00011120799999999806}, {'diff': 0.00011175000000000074}, {'diff': 0.00011097200000000085}, {'diff': 0.00011136100000000079}, {'diff': 0.000111055999999998...</msg>
<status status="PASS" starttime="20201030 15:55:45.831" endtime="20201030 15:55:45.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:45.838" level="INFO">${ACCURACY} = {'diff': [0.00011175000000000074, 0.00011120799999999806, 0.00011175000000000074, 0.00011097200000000085, 0.00011136100000000079, 0.00011105599999999827, 0.00011105600000000174, 0.00011141699999999907...</msg>
<status status="PASS" starttime="20201030 15:55:45.835" endtime="20201030 15:55:45.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.843" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:55:45.842" endtime="20201030 15:55:45.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.845" level="INFO">VALUE: [0.00011175000000000074, 0.00011120799999999806, 0.00011175000000000074, 0.00011097200000000085, 0.00011136100000000079, 0.00011105599999999827, 0.00011105600000000174, 0.00011141699999999907, 0.00011154099999999972, 0.00011137500000000036, 0.00011093100000000161, 0.00011126399999999981, 0.00011133300000000165, 0.0001115280000000031, 0.00011108399999999741, 0.0001110700000000013, 0.00011125000000000024, 0.00011115199999999978, 0.00011106900000000183, 0.00011123600000000067, 0.00011145799999999831, 0.00011099999999999999, 0.00011148600000000092, 0.00011130599999999852, 0.00011179099999999997, 0.00011116599999999935, 0.0001114159999999996, 0.00011090300000000247, 0.00011087499999999986, 0.00011105599999999827, 0.00011091700000000204, 0.0001115700000000018, 0.0001114029999999995, 0.0001110700000000013, 0.00011158299999999843, 0.00011106899999999836, 0.00011091699999999857, 0.00011127799999999938, 0.00011099999999999999, 0.00011133400000000113, 0.00011126399999999981, 0.00011165199999999681, 0.0001115830000000019, 0.0001115549999999993, 0.00011125000000000024, 0.00011084700000000072, 0.0001114029999999995, 0.0001114029999999995, 0.00011091699999999857, 0.00011106999999999784]</msg>
<status status="PASS" starttime="20201030 15:55:45.844" endtime="20201030 15:55:45.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.839" endtime="20201030 15:55:45.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:45.851" endtime="20201030 15:55:45.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.849" endtime="20201030 15:55:45.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.848" endtime="20201030 15:55:45.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.485" endtime="20201030 15:55:45.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.484" endtime="20201030 15:55:45.871"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.880" endtime="20201030 15:55:45.905"></status>
</kw>
<msg timestamp="20201030 15:55:45.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.879" endtime="20201030 15:55:45.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:45.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:45.906" endtime="20201030 15:55:45.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.909" endtime="20201030 15:55:45.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.876" endtime="20201030 15:55:45.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.874" endtime="20201030 15:55:45.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:45.918" endtime="20201030 15:55:46.204"></status>
</kw>
<msg timestamp="20201030 15:55:46.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026120181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026232875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:45.917" endtime="20201030 15:55:46.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026120181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026232875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.208" endtime="20201030 15:55:46.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.217" endtime="20201030 15:55:46.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.914" endtime="20201030 15:55:46.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.912" endtime="20201030 15:55:46.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.223" level="INFO">${RESULT} = [{'diff': 0.00011269399999999999}, {'diff': 0.00011205599999999927}, {'diff': 0.000111903}, {'diff': 0.00011192999999999967}, {'diff': 0.00011258299999999943}, {'diff': 0.00011240200000000103}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:55:46.220" endtime="20201030 15:55:46.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.227" level="INFO">${ACCURACY} = {'diff': [0.00011269399999999999, 0.00011205599999999927, 0.000111903, 0.00011192999999999967, 0.00011258299999999943, 0.00011240200000000103, 0.0001125830000000029, 0.00011208299999999893, 0.00011209...</msg>
<status status="PASS" starttime="20201030 15:55:46.224" endtime="20201030 15:55:46.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.232" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.231" endtime="20201030 15:55:46.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.235" level="INFO">VALUE: [0.00011269399999999999, 0.00011205599999999927, 0.000111903, 0.00011192999999999967, 0.00011258299999999943, 0.00011240200000000103, 0.0001125830000000029, 0.00011208299999999893, 0.0001120969999999985, 0.000111903, 0.00011206999999999884, 0.00011244499999999921, 0.00011256999999999934, 0.00011252699999999768, 0.00011220800000000253, 0.00011197200000000185, 0.00011213900000000068, 0.00011209700000000197, 0.00011225000000000124, 0.00011183400000000163, 0.0001124030000000005, 0.0001122359999999982, 0.00011200000000000099, 0.00011198600000000142, 0.00011265300000000075, 0.00011224999999999777, 0.00011265300000000075, 0.00011259799999999848, 0.00011191699999999957, 0.00011256899999999986, 0.00011243000000000017, 0.00011197200000000185, 0.000111903, 0.00011205600000000274, 0.00011256999999999934, 0.0001124030000000005, 0.00011188900000000043, 0.00011273699999999817, 0.00011220799999999906, 0.00011238899999999746, 0.00011241700000000354, 0.00011236100000000526, 0.00011276400000000131, 0.00011216700000000329, 0.00011272300000000207, 0.00011236099999999832, 0.00011223600000000167, 0.00011198599999999448, 0.00011234699999999875, 0.00011255599999999977]</msg>
<status status="PASS" starttime="20201030 15:55:46.233" endtime="20201030 15:55:46.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.228" endtime="20201030 15:55:46.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.240" endtime="20201030 15:55:46.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.239" endtime="20201030 15:55:46.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.238" endtime="20201030 15:55:46.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.872" endtime="20201030 15:55:46.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:45.872" endtime="20201030 15:55:46.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.488" endtime="20201030 15:55:46.261"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:07.420" endtime="20201030 15:55:46.262" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.270" endtime="20201030 15:55:46.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.268" endtime="20201030 15:55:46.290"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.304" endtime="20201030 15:55:46.318"></status>
</kw>
<msg timestamp="20201030 15:55:46.318" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.302" endtime="20201030 15:55:46.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.321" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.319" endtime="20201030 15:55:46.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.324" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:46.322" endtime="20201030 15:55:46.324"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:46.300" endtime="20201030 15:55:46.325"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:46.297" endtime="20201030 15:55:46.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.296" endtime="20201030 15:55:46.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:46.329" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:46.329" endtime="20201030 15:55:46.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.327" endtime="20201030 15:55:46.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.295" endtime="20201030 15:55:46.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.294" endtime="20201030 15:55:46.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.331" endtime="20201030 15:55:46.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.292" endtime="20201030 15:55:46.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.290" endtime="20201030 15:55:46.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.266" endtime="20201030 15:55:46.334"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.347" endtime="20201030 15:55:46.363"></status>
</kw>
<msg timestamp="20201030 15:55:46.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.345" endtime="20201030 15:55:46.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.365" endtime="20201030 15:55:46.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.368" endtime="20201030 15:55:46.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.340" endtime="20201030 15:55:46.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.337" endtime="20201030 15:55:46.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.377" endtime="20201030 15:55:46.680"></status>
</kw>
<msg timestamp="20201030 15:55:46.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070141458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.375" endtime="20201030 15:55:46.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070098417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070141458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.685" endtime="20201030 15:55:46.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.694" endtime="20201030 15:55:46.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.373" endtime="20201030 15:55:46.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.371" endtime="20201030 15:55:46.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.701" level="INFO">${RESULT} = [{'diff': 4.3041000000007545e-05}, {'diff': 4.400000000000237e-05}, {'diff': 4.445799999999722e-05}, {'diff': 4.329200000000033e-05}, {'diff': 4.372200000000992e-05}, {'diff': 4.300000000000137e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:46.697" endtime="20201030 15:55:46.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:46.705" level="INFO">${ACCURACY} = {'diff': [4.3041000000007545e-05, 4.400000000000237e-05, 4.445799999999722e-05, 4.329200000000033e-05, 4.372200000000992e-05, 4.300000000000137e-05, 4.411199999999893e-05, 4.438899999999191e-05, 4.444...</msg>
<status status="PASS" starttime="20201030 15:55:46.702" endtime="20201030 15:55:46.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.711" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:55:46.710" endtime="20201030 15:55:46.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.713" level="INFO">VALUE: [4.3041000000007545e-05, 4.400000000000237e-05, 4.445799999999722e-05, 4.329200000000033e-05, 4.372200000000992e-05, 4.300000000000137e-05, 4.411199999999893e-05, 4.438899999999191e-05, 4.444499999999019e-05, 4.283299999999213e-05, 4.423600000000305e-05, 4.2972999999987826e-05, 4.399999999998849e-05, 4.2818999999999496e-05, 4.299999999998749e-05, 4.38339999999926e-05, 4.27780000000072e-05, 4.427699999999535e-05, 4.2791000000000357e-05, 4.422199999999654e-05, 4.322200000000942e-05, 4.379200000000083e-05, 4.3097000000005825e-05, 4.394400000000409e-05, 4.44580000000111e-05, 4.3138999999997596e-05, 4.381999999999997e-05, 4.327799999999382e-05, 4.373600000000255e-05, 4.330599999999296e-05, 4.3722999999995515e-05, 4.280599999999246e-05, 4.422199999999654e-05, 4.33339999999921e-05, 4.373600000000255e-05, 4.2833000000006005e-05, 4.423599999998917e-05, 4.4459000000010573e-05, 4.447200000000373e-05, 4.447299999998933e-05, 4.2818999999999496e-05, 4.3013999999994e-05, 4.370800000000341e-05, 4.3153000000004105e-05, 4.3902999999997916e-05, 4.2818999999999496e-05, 4.424999999999568e-05, 4.444399999999071e-05, 4.4458999999996696e-05, 4.4459000000010573e-05]</msg>
<status status="PASS" starttime="20201030 15:55:46.712" endtime="20201030 15:55:46.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.706" endtime="20201030 15:55:46.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:46.718" endtime="20201030 15:55:46.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.716" endtime="20201030 15:55:46.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.715" endtime="20201030 15:55:46.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.335" endtime="20201030 15:55:46.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.335" endtime="20201030 15:55:46.738"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.747" endtime="20201030 15:55:46.765"></status>
</kw>
<msg timestamp="20201030 15:55:46.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.746" endtime="20201030 15:55:46.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.766" endtime="20201030 15:55:46.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.768" endtime="20201030 15:55:46.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.743" endtime="20201030 15:55:46.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.741" endtime="20201030 15:55:46.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.777" endtime="20201030 15:55:47.063"></status>
</kw>
<msg timestamp="20201030 15:55:47.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.776" endtime="20201030 15:55:47.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022726833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.068" endtime="20201030 15:55:47.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.076" endtime="20201030 15:55:47.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.773" endtime="20201030 15:55:47.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.772" endtime="20201030 15:55:47.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.082" level="INFO">${RESULT} = [{'diff': 4.4459000000000165e-05}, {'diff': 4.4445000000000595e-05}, {'diff': 4.4445000000000595e-05}, {'diff': 4.440199999999894e-05}, {'diff': 4.3125000000001495e-05}, {'diff': 4.392999999999758e-05...</msg>
<status status="PASS" starttime="20201030 15:55:47.079" endtime="20201030 15:55:47.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.088" level="INFO">${ACCURACY} = {'diff': [4.4459000000000165e-05, 4.4445000000000595e-05, 4.4445000000000595e-05, 4.440199999999894e-05, 4.3125000000001495e-05, 4.392999999999758e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:47.083" endtime="20201030 15:55:47.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.092" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.091" endtime="20201030 15:55:47.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.095" level="INFO">VALUE: [4.4459000000000165e-05, 4.4445000000000595e-05, 4.4445000000000595e-05, 4.440199999999894e-05, 4.3125000000001495e-05, 4.392999999999758e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4.450000000000287e-05, 4.3125000000001495e-05, 4.3931000000000525e-05, 4.277699999999732e-05, 4.300000000000137e-05, 4.3819000000000496e-05, 4.3068999999999746e-05, 4.2611000000001426e-05, 4.3888999999998346e-05, 4.295800000000266e-05, 4.3945000000000095e-05, 4.44999999999994e-05, 4.3167000000000205e-05, 4.3945000000000095e-05, 4.4445000000000595e-05, 4.4403000000001885e-05, 4.322200000000248e-05, 4.383399999999954e-05, 4.445799999999722e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.447199999999679e-05, 4.332000000000294e-05, 4.370799999999994e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4.3291000000000857e-05, 4.3736999999998555e-05, 4.445800000000069e-05, 4.323599999999858e-05, 4.3819000000000496e-05, 4.279199999999983e-05, 4.424999999999915e-05, 4.3152999999997166e-05, 4.3931000000000525e-05, 4.28059999999994e-05, 4.282000000000244e-05, 4.401399999999847e-05, 4.304200000000008e-05, 4.39860000000028e-05, 4.304200000000008e-05, 4.2666999999999705e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.093" endtime="20201030 15:55:47.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.088" endtime="20201030 15:55:47.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.099" endtime="20201030 15:55:47.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.098" endtime="20201030 15:55:47.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.097" endtime="20201030 15:55:47.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.739" endtime="20201030 15:55:47.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.739" endtime="20201030 15:55:47.120"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.129" endtime="20201030 15:55:47.146"></status>
</kw>
<msg timestamp="20201030 15:55:47.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.127" endtime="20201030 15:55:47.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.147" endtime="20201030 15:55:47.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.150" endtime="20201030 15:55:47.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.125" endtime="20201030 15:55:47.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.122" endtime="20201030 15:55:47.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.158" endtime="20201030 15:55:47.447"></status>
</kw>
<msg timestamp="20201030 15:55:47.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.157" endtime="20201030 15:55:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022478361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.452" endtime="20201030 15:55:47.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.460" endtime="20201030 15:55:47.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.154" endtime="20201030 15:55:47.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.153" endtime="20201030 15:55:47.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.467" level="INFO">${RESULT} = [{'diff': 4.452800000000201e-05}, {'diff': 4.329199999999686e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.3153000000000635e-05}, {'diff': 4.3805000000000927e-05}, {'diff': 4.276300000000122e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:47.464" endtime="20201030 15:55:47.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.471" level="INFO">${ACCURACY} = {'diff': [4.452800000000201e-05, 4.329199999999686e-05, 4.373599999999908e-05, 4.3153000000000635e-05, 4.3805000000000927e-05, 4.276300000000122e-05, 4.423599999999958e-05, 4.330499999999696e-05, 4.37...</msg>
<status status="PASS" starttime="20201030 15:55:47.468" endtime="20201030 15:55:47.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.476" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.475" endtime="20201030 15:55:47.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.479" level="INFO">VALUE: [4.452800000000201e-05, 4.329199999999686e-05, 4.373599999999908e-05, 4.3153000000000635e-05, 4.3805000000000927e-05, 4.276300000000122e-05, 4.423599999999958e-05, 4.330499999999696e-05, 4.372199999999951e-05, 4.2818999999999496e-05, 4.423599999999958e-05, 4.3055000000000176e-05, 4.402700000000204e-05, 4.324999999999815e-05, 4.380499999999746e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.3111000000001926e-05, 4.394399999999715e-05, 4.3111000000001926e-05, 4.3930999999997056e-05, 4.2944999999999095e-05, 4.4083000000000316e-05, 4.2944999999999095e-05, 4.4110999999999456e-05, 4.3347000000002606e-05, 4.3888999999998346e-05, 4.326399999999772e-05, 4.395800000000019e-05, 4.3110999999998456e-05, 4.3945000000000095e-05, 4.447200000000026e-05, 4.447199999999679e-05, 4.4459000000000165e-05, 4.325000000000162e-05, 4.372199999999951e-05, 4.444400000000112e-05, 4.2903000000000385e-05, 4.415199999999869e-05, 4.324999999999815e-05, 4.3708999999999415e-05, 4.331999999999947e-05, 4.372199999999951e-05, 4.316600000000073e-05, 4.3931000000000525e-05, 4.4472999999999735e-05, 4.445800000000069e-05, 4.4459000000000165e-05, 4.444400000000112e-05, 4.323600000000205e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.477" endtime="20201030 15:55:47.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.472" endtime="20201030 15:55:47.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.485" endtime="20201030 15:55:47.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.483" endtime="20201030 15:55:47.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.481" endtime="20201030 15:55:47.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.121" endtime="20201030 15:55:47.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.120" endtime="20201030 15:55:47.507"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.517" endtime="20201030 15:55:47.535"></status>
</kw>
<msg timestamp="20201030 15:55:47.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.514" endtime="20201030 15:55:47.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.536" endtime="20201030 15:55:47.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.539" endtime="20201030 15:55:47.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.511" endtime="20201030 15:55:47.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.509" endtime="20201030 15:55:47.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.548" endtime="20201030 15:55:47.836"></status>
</kw>
<msg timestamp="20201030 15:55:47.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:47.547" endtime="20201030 15:55:47.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024034736, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:55:47.840" endtime="20201030 15:55:47.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.849" endtime="20201030 15:55:47.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.544" endtime="20201030 15:55:47.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.542" endtime="20201030 15:55:47.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.855" level="INFO">${RESULT} = [{'diff': 4.273600000000155e-05}, {'diff': 4.2861000000001676e-05}, {'diff': 4.401399999999847e-05}, {'diff': 4.3180999999999775e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.452799999999854e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:47.852" endtime="20201030 15:55:47.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:47.860" level="INFO">${ACCURACY} = {'diff': [4.273600000000155e-05, 4.2861000000001676e-05, 4.401399999999847e-05, 4.3180999999999775e-05, 4.3945000000000095e-05, 4.452799999999854e-05, 4.3180999999999775e-05, 4.38060000000004e-05, 4.2...</msg>
<status status="PASS" starttime="20201030 15:55:47.856" endtime="20201030 15:55:47.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.864" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:55:47.863" endtime="20201030 15:55:47.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.867" level="INFO">VALUE: [4.273600000000155e-05, 4.2861000000001676e-05, 4.401399999999847e-05, 4.3180999999999775e-05, 4.3945000000000095e-05, 4.452799999999854e-05, 4.3180999999999775e-05, 4.38060000000004e-05, 4.277800000000026e-05, 4.4236999999999055e-05, 4.2958999999998665e-05, 4.4110999999999456e-05, 4.2931000000002995e-05, 4.407000000000022e-05, 4.448599999999983e-05, 4.283400000000201e-05, 4.425000000000262e-05, 4.448599999999983e-05, 4.272200000000198e-05, 4.29999999999979e-05, 4.3875000000002246e-05, 4.445799999999722e-05, 4.270800000000241e-05, 4.4347000000000136e-05, 4.445799999999722e-05, 4.2846999999998636e-05, 4.424999999999915e-05, 4.329200000000033e-05, 4.376399999999822e-05, 4.279199999999983e-05, 4.423599999999958e-05, 4.3139000000001065e-05, 4.394400000000062e-05, 4.3111000000001926e-05, 4.400000000000237e-05, 4.2945000000002564e-05, 4.4110999999999456e-05, 4.324999999999815e-05, 4.394400000000062e-05, 4.445800000000069e-05, 4.4458999999996696e-05, 4.2903000000000385e-05, 4.4124999999999026e-05, 4.291600000000048e-05, 4.409799999999936e-05, 4.279199999999983e-05, 4.424999999999915e-05, 4.283399999999854e-05, 4.423599999999958e-05, 4.447200000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:55:47.865" endtime="20201030 15:55:47.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.860" endtime="20201030 15:55:47.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.873" endtime="20201030 15:55:47.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.871" endtime="20201030 15:55:47.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.870" endtime="20201030 15:55:47.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.508" endtime="20201030 15:55:47.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.507" endtime="20201030 15:55:47.894"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.902" endtime="20201030 15:55:47.919"></status>
</kw>
<msg timestamp="20201030 15:55:47.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.901" endtime="20201030 15:55:47.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:47.921" endtime="20201030 15:55:47.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.923" endtime="20201030 15:55:47.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.898" endtime="20201030 15:55:47.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.896" endtime="20201030 15:55:47.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.933" endtime="20201030 15:55:48.220"></status>
</kw>
<msg timestamp="20201030 15:55:48.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.931" endtime="20201030 15:55:48.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022388181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022430917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.225" endtime="20201030 15:55:48.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.233" endtime="20201030 15:55:48.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.928" endtime="20201030 15:55:48.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.927" endtime="20201030 15:55:48.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.240" level="INFO">${RESULT} = [{'diff': 4.273600000000155e-05}, {'diff': 4.43060000000009e-05}, {'diff': 4.447200000000026e-05}, {'diff': 4.2737000000001024e-05}, {'diff': 4.41939999999974e-05}, {'diff': 4.3124999999998026e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:48.236" endtime="20201030 15:55:48.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.245" level="INFO">${ACCURACY} = {'diff': [4.273600000000155e-05, 4.43060000000009e-05, 4.447200000000026e-05, 4.2737000000001024e-05, 4.41939999999974e-05, 4.3124999999998026e-05, 4.3917000000000955e-05, 4.442999999999808e-05, 4.280...</msg>
<status status="PASS" starttime="20201030 15:55:48.241" endtime="20201030 15:55:48.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.250" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.248" endtime="20201030 15:55:48.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.252" level="INFO">VALUE: [4.273600000000155e-05, 4.43060000000009e-05, 4.447200000000026e-05, 4.2737000000001024e-05, 4.41939999999974e-05, 4.3124999999998026e-05, 4.3917000000000955e-05, 4.442999999999808e-05, 4.28059999999994e-05, 4.2804999999999926e-05, 4.2819000000002966e-05, 4.394400000000062e-05, 4.3305000000000426e-05, 4.3917000000000955e-05, 4.444400000000112e-05, 4.4459000000000165e-05, 4.322199999999901e-05, 4.3945000000000095e-05, 4.3111000000001926e-05, 4.395800000000019e-05, 4.304200000000008e-05, 4.3958999999999665e-05, 4.4445000000000595e-05, 4.4459000000000165e-05, 4.273600000000155e-05, 4.427800000000176e-05, 4.2804999999999926e-05, 4.423599999999958e-05, 4.447200000000026e-05, 4.29999999999979e-05, 4.2874999999997776e-05, 4.372200000000298e-05, 4.29999999999979e-05, 4.4096999999999886e-05, 4.327800000000076e-05, 4.3819000000000496e-05, 4.279199999999983e-05, 4.423599999999958e-05, 4.283400000000201e-05, 4.2847000000002106e-05, 4.400000000000237e-05, 4.2694999999998845e-05, 4.3167000000000205e-05, 4.374999999999865e-05, 4.334799999999861e-05, 4.3723000000002454e-05, 4.450000000000287e-05, 4.447200000000026e-05, 4.309799999999836e-05, 4.393000000000105e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.251" endtime="20201030 15:55:48.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.246" endtime="20201030 15:55:48.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.257" endtime="20201030 15:55:48.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.256" endtime="20201030 15:55:48.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.255" endtime="20201030 15:55:48.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.894" endtime="20201030 15:55:48.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.894" endtime="20201030 15:55:48.278"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.287" endtime="20201030 15:55:48.303"></status>
</kw>
<msg timestamp="20201030 15:55:48.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.285" endtime="20201030 15:55:48.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.304" endtime="20201030 15:55:48.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.307" endtime="20201030 15:55:48.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.283" endtime="20201030 15:55:48.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.281" endtime="20201030 15:55:48.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.316" endtime="20201030 15:55:48.604"></status>
</kw>
<msg timestamp="20201030 15:55:48.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.315" endtime="20201030 15:55:48.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022409389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.608" endtime="20201030 15:55:48.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.616" endtime="20201030 15:55:48.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.312" endtime="20201030 15:55:48.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.310" endtime="20201030 15:55:48.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:48.623" level="INFO">${RESULT} = [{'diff': 4.448599999999983e-05}, {'diff': 4.279199999999983e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.276400000000069e-05}, {'diff': 4.422200000000001e-05}, {'diff': 4.3139000000001065e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:48.620" endtime="20201030 15:55:48.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:48.628" level="INFO">${ACCURACY} = {'diff': [4.448599999999983e-05, 4.279199999999983e-05, 4.4195000000000345e-05, 4.276400000000069e-05, 4.422200000000001e-05, 4.3139000000001065e-05, 4.400000000000237e-05, 4.3125000000001495e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:55:48.624" endtime="20201030 15:55:48.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.633" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:55:48.631" endtime="20201030 15:55:48.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.636" level="INFO">VALUE: [4.448599999999983e-05, 4.279199999999983e-05, 4.4195000000000345e-05, 4.276400000000069e-05, 4.422200000000001e-05, 4.3139000000001065e-05, 4.400000000000237e-05, 4.3125000000001495e-05, 4.394399999999715e-05, 4.326400000000119e-05, 4.3945000000000095e-05, 4.447200000000026e-05, 4.4430999999997556e-05, 4.4445000000000595e-05, 4.2832999999999066e-05, 4.283400000000201e-05, 4.401399999999847e-05, 4.272200000000198e-05, 4.3167000000000205e-05, 4.373599999999908e-05, 4.315200000000116e-05, 4.3903000000001385e-05, 4.3125000000001495e-05, 4.3888999999998346e-05, 4.3318999999999996e-05, 4.3709000000002884e-05, 4.3167000000000205e-05, 4.3888999999998346e-05, 4.441599999999851e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.2916999999999955e-05, 4.2639000000000565e-05, 4.2694999999998845e-05, 4.392999999999758e-05, 4.3055000000000176e-05, 4.286200000000115e-05, 4.377800000000126e-05, 4.4459000000000165e-05, 4.447200000000026e-05, 4.447200000000026e-05, 4.444400000000112e-05, 4.316600000000073e-05, 4.381999999999997e-05, 4.4459000000000165e-05, 4.2833000000002536e-05, 4.423599999999958e-05, 4.298599999999833e-05, 4.4069000000000746e-05, 4.297199999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:55:48.634" endtime="20201030 15:55:48.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.629" endtime="20201030 15:55:48.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:48.641" endtime="20201030 15:55:48.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.639" endtime="20201030 15:55:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.638" endtime="20201030 15:55:48.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.279" endtime="20201030 15:55:48.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.278" endtime="20201030 15:55:48.662"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.671" endtime="20201030 15:55:48.689"></status>
</kw>
<msg timestamp="20201030 15:55:48.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.669" endtime="20201030 15:55:48.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:48.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:48.690" endtime="20201030 15:55:48.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.693" endtime="20201030 15:55:48.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.666" endtime="20201030 15:55:48.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.664" endtime="20201030 15:55:48.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:48.702" endtime="20201030 15:55:48.989"></status>
</kw>
<msg timestamp="20201030 15:55:48.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023888111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.701" endtime="20201030 15:55:48.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023845208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023888111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:48.993" endtime="20201030 15:55:49.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.001" endtime="20201030 15:55:49.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.698" endtime="20201030 15:55:49.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.696" endtime="20201030 15:55:49.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.008" level="INFO">${RESULT} = [{'diff': 4.2903000000000385e-05}, {'diff': 4.409800000000283e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.423599999999958e-05}, {'diff': 4.445800000000069e-05}, {'diff': 4.2861000000001676e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:49.005" endtime="20201030 15:55:49.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.012" level="INFO">${ACCURACY} = {'diff': [4.2903000000000385e-05, 4.409800000000283e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.445800000000069e-05, 4.2861000000001676e-05, 4.4110999999999456e-05, 4.4389000000002315e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:49.009" endtime="20201030 15:55:49.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.017" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.016" endtime="20201030 15:55:49.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.020" level="INFO">VALUE: [4.2903000000000385e-05, 4.409800000000283e-05, 4.277800000000026e-05, 4.423599999999958e-05, 4.445800000000069e-05, 4.2861000000001676e-05, 4.4110999999999456e-05, 4.4389000000002315e-05, 4.447200000000026e-05, 4.44999999999994e-05, 4.329200000000033e-05, 4.394400000000062e-05, 4.329200000000033e-05, 4.393000000000105e-05, 4.4472999999999735e-05, 4.28059999999994e-05, 4.301300000000147e-05, 4.393000000000105e-05, 4.3110999999998456e-05, 4.3931000000000525e-05, 4.445800000000069e-05, 4.4416999999997986e-05, 4.2958999999998665e-05, 4.4110999999999456e-05, 4.2889000000000815e-05, 4.4083000000000316e-05, 4.325000000000162e-05, 4.379100000000136e-05, 4.2944999999999095e-05, 4.275000000000112e-05, 4.402800000000151e-05, 4.305599999999965e-05, 4.401400000000194e-05, 4.288800000000134e-05, 4.409799999999936e-05, 4.447200000000026e-05, 4.276399999999722e-05, 4.302699999999757e-05, 4.373599999999908e-05, 4.2819000000002966e-05, 4.269399999999937e-05, 4.269399999999937e-05, 4.3972999999999235e-05, 4.273599999999808e-05, 4.4375000000002746e-05, 4.2889000000000815e-05, 4.4111000000002926e-05, 4.2930999999999525e-05, 4.2695000000002314e-05, 4.2695000000002314e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.018" endtime="20201030 15:55:49.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.013" endtime="20201030 15:55:49.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.026" endtime="20201030 15:55:49.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.024" endtime="20201030 15:55:49.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.023" endtime="20201030 15:55:49.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.663" endtime="20201030 15:55:49.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:48.662" endtime="20201030 15:55:49.046"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.055" endtime="20201030 15:55:49.072"></status>
</kw>
<msg timestamp="20201030 15:55:49.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.054" endtime="20201030 15:55:49.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.074" endtime="20201030 15:55:49.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.076" endtime="20201030 15:55:49.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.051" endtime="20201030 15:55:49.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.049" endtime="20201030 15:55:49.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.086" endtime="20201030 15:55:49.371"></status>
</kw>
<msg timestamp="20201030 15:55:49.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.084" endtime="20201030 15:55:49.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022454806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.375" endtime="20201030 15:55:49.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.384" endtime="20201030 15:55:49.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.081" endtime="20201030 15:55:49.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.079" endtime="20201030 15:55:49.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.390" level="INFO">${RESULT} = [{'diff': 4.44999999999994e-05}, {'diff': 4.327800000000076e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.300000000000137e-05}, {'diff': 4.39999999999989e-05}, {'diff': 4.4472999999999735e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:49.387" endtime="20201030 15:55:49.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.398" level="INFO">${ACCURACY} = {'diff': [4.44999999999994e-05, 4.327800000000076e-05, 4.373599999999908e-05, 4.300000000000137e-05, 4.39999999999989e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.281999999999897e-05, 4.30000...</msg>
<status status="PASS" starttime="20201030 15:55:49.391" endtime="20201030 15:55:49.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.402" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.401" endtime="20201030 15:55:49.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.405" level="INFO">VALUE: [4.44999999999994e-05, 4.327800000000076e-05, 4.373599999999908e-05, 4.300000000000137e-05, 4.39999999999989e-05, 4.4472999999999735e-05, 4.448599999999983e-05, 4.281999999999897e-05, 4.300000000000137e-05, 4.394399999999715e-05, 4.3110999999998456e-05, 4.3945000000000095e-05, 4.3180999999999775e-05, 4.373599999999908e-05, 4.277800000000026e-05, 4.26799999999998e-05, 4.4166999999997736e-05, 4.4459000000000165e-05, 4.300000000000137e-05, 4.402800000000151e-05, 4.2931000000002995e-05, 4.409799999999936e-05, 4.4459000000000165e-05, 4.300000000000137e-05, 4.408400000000326e-05, 4.447199999999679e-05, 4.301399999999747e-05, 4.401399999999847e-05, 4.444400000000112e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.326400000000119e-05, 4.373599999999908e-05, 4.315200000000116e-05, 4.391599999999801e-05, 4.4459000000000165e-05, 4.445800000000069e-05, 4.327699999999782e-05, 4.373599999999908e-05, 4.4417000000001455e-05, 4.445799999999722e-05, 4.293000000000005e-05, 4.4110999999999456e-05, 4.320799999999944e-05, 4.372199999999951e-05, 4.3208999999998915e-05, 4.3888999999998346e-05, 4.3167000000000205e-05, 4.3874999999998776e-05, 4.442999999999808e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.404" endtime="20201030 15:55:49.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.399" endtime="20201030 15:55:49.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.415" endtime="20201030 15:55:49.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.414" endtime="20201030 15:55:49.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.413" endtime="20201030 15:55:49.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.047" endtime="20201030 15:55:49.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.047" endtime="20201030 15:55:49.437"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.449" endtime="20201030 15:55:49.467"></status>
</kw>
<msg timestamp="20201030 15:55:49.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.447" endtime="20201030 15:55:49.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.469" endtime="20201030 15:55:49.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.472" endtime="20201030 15:55:49.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.442" endtime="20201030 15:55:49.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.439" endtime="20201030 15:55:49.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.482" endtime="20201030 15:55:49.769"></status>
</kw>
<msg timestamp="20201030 15:55:49.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026756625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.480" endtime="20201030 15:55:49.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026756625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026799472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.773" endtime="20201030 15:55:49.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.782" endtime="20201030 15:55:49.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.478" endtime="20201030 15:55:49.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.476" endtime="20201030 15:55:49.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:49.789" level="INFO">${RESULT} = [{'diff': 4.2847000000002106e-05}, {'diff': 4.2833000000002536e-05}, {'diff': 4.395800000000019e-05}, {'diff': 4.326300000000172e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.2791000000000357e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:49.785" endtime="20201030 15:55:49.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:49.793" level="INFO">${ACCURACY} = {'diff': [4.2847000000002106e-05, 4.2833000000002536e-05, 4.395800000000019e-05, 4.326300000000172e-05, 4.373599999999908e-05, 4.2791000000000357e-05, 4.423599999999958e-05, 4.3318999999999996e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:55:49.790" endtime="20201030 15:55:49.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.797" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:55:49.796" endtime="20201030 15:55:49.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.800" level="INFO">VALUE: [4.2847000000002106e-05, 4.2833000000002536e-05, 4.395800000000019e-05, 4.326300000000172e-05, 4.373599999999908e-05, 4.2791000000000357e-05, 4.423599999999958e-05, 4.3318999999999996e-05, 4.372199999999951e-05, 4.4472999999999735e-05, 4.3194999999999345e-05, 4.3819000000000496e-05, 4.2916999999999955e-05, 4.4096999999999886e-05, 4.2916999999999955e-05, 4.2709000000001884e-05, 4.2680999999999275e-05, 4.388799999999887e-05, 4.29999999999979e-05, 4.401399999999847e-05, 4.29999999999979e-05, 4.4110999999999456e-05, 4.319399999999987e-05, 4.379200000000083e-05, 4.44999999999994e-05, 4.447200000000026e-05, 4.445800000000069e-05, 4.3082999999999316e-05, 4.400000000000237e-05, 4.273599999999808e-05, 4.3153000000000635e-05, 4.3722999999998985e-05, 4.302800000000051e-05, 4.401300000000247e-05, 4.300000000000137e-05, 4.404200000000108e-05, 4.3138999999997596e-05, 4.3805000000000927e-05, 4.2916999999999955e-05, 4.4110999999999456e-05, 4.291600000000048e-05, 4.4110999999999456e-05, 4.3180999999999775e-05, 4.373600000000255e-05, 4.4459000000000165e-05, 4.4472999999999735e-05, 4.293000000000005e-05, 4.269399999999937e-05, 4.39999999999989e-05, 4.322199999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:55:49.799" endtime="20201030 15:55:49.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.794" endtime="20201030 15:55:49.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:49.805" endtime="20201030 15:55:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.804" endtime="20201030 15:55:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.802" endtime="20201030 15:55:49.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.438" endtime="20201030 15:55:49.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.437" endtime="20201030 15:55:49.826"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.835" endtime="20201030 15:55:49.853"></status>
</kw>
<msg timestamp="20201030 15:55:49.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.833" endtime="20201030 15:55:49.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:49.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:49.854" endtime="20201030 15:55:49.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.857" endtime="20201030 15:55:49.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.830" endtime="20201030 15:55:49.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.828" endtime="20201030 15:55:49.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:49.866" endtime="20201030 15:55:50.153"></status>
</kw>
<msg timestamp="20201030 15:55:50.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:49.865" endtime="20201030 15:55:50.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023363083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.157" endtime="20201030 15:55:50.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.166" endtime="20201030 15:55:50.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.862" endtime="20201030 15:55:50.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.860" endtime="20201030 15:55:50.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.172" level="INFO">${RESULT} = [{'diff': 4.305599999999965e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.3096999999998886e-05}, {'diff': 4.395799999999672e-05}, {'diff': 4.28059999999994e-05}, {'diff': 4.422200000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.169" endtime="20201030 15:55:50.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.177" level="INFO">${ACCURACY} = {'diff': [4.305599999999965e-05, 4.3958999999999665e-05, 4.3096999999998886e-05, 4.395799999999672e-05, 4.28059999999994e-05, 4.422200000000001e-05, 4.298599999999833e-05, 4.405499999999771e-05, 4.280...</msg>
<status status="PASS" starttime="20201030 15:55:50.173" endtime="20201030 15:55:50.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.181" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.180" endtime="20201030 15:55:50.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.184" level="INFO">VALUE: [4.305599999999965e-05, 4.3958999999999665e-05, 4.3096999999998886e-05, 4.395799999999672e-05, 4.28059999999994e-05, 4.422200000000001e-05, 4.298599999999833e-05, 4.405499999999771e-05, 4.28059999999994e-05, 4.422200000000001e-05, 4.2818999999999496e-05, 4.301400000000094e-05, 4.38060000000004e-05, 4.445800000000069e-05, 4.3318999999999996e-05, 4.375000000000212e-05, 4.4472999999999735e-05, 4.447200000000026e-05, 4.4459000000000165e-05, 4.447200000000026e-05, 4.324999999999815e-05, 4.372199999999951e-05, 4.3318999999999996e-05, 4.375000000000212e-05, 4.2818999999999496e-05, 4.298599999999833e-05, 4.373599999999908e-05, 4.279199999999983e-05, 4.2708999999998415e-05, 4.272200000000198e-05, 4.402800000000151e-05, 4.293000000000005e-05, 4.407000000000022e-05, 4.320799999999944e-05, 4.367999999999733e-05, 4.2818999999999496e-05, 4.422200000000001e-05, 4.447200000000026e-05, 4.4445000000000595e-05, 4.280600000000287e-05, 4.423599999999958e-05, 4.33059999999999e-05, 4.372199999999951e-05, 4.28059999999994e-05, 4.2860999999998206e-05, 4.2874999999997776e-05, 4.3722999999998985e-05, 4.3166999999996736e-05, 4.394400000000062e-05, 4.308399999999879e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.182" endtime="20201030 15:55:50.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.177" endtime="20201030 15:55:50.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.190" endtime="20201030 15:55:50.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.188" endtime="20201030 15:55:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.187" endtime="20201030 15:55:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.827" endtime="20201030 15:55:50.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:49.826" endtime="20201030 15:55:50.210"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.219" endtime="20201030 15:55:50.237"></status>
</kw>
<msg timestamp="20201030 15:55:50.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.218" endtime="20201030 15:55:50.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.238" endtime="20201030 15:55:50.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.241" endtime="20201030 15:55:50.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.215" endtime="20201030 15:55:50.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.213" endtime="20201030 15:55:50.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.250" endtime="20201030 15:55:50.536"></status>
</kw>
<msg timestamp="20201030 15:55:50.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.248" endtime="20201030 15:55:50.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022467861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022512889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.540" endtime="20201030 15:55:50.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.549" endtime="20201030 15:55:50.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.246" endtime="20201030 15:55:50.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.244" endtime="20201030 15:55:50.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.555" level="INFO">${RESULT} = [{'diff': 4.502800000000251e-05}, {'diff': 4.454199999999811e-05}, {'diff': 4.491599999999901e-05}, {'diff': 4.491600000000248e-05}, {'diff': 4.4681000000001275e-05}, {'diff': 4.4874999999999776e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:50.552" endtime="20201030 15:55:50.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.560" level="INFO">${ACCURACY} = {'diff': [4.502800000000251e-05, 4.454199999999811e-05, 4.491599999999901e-05, 4.491600000000248e-05, 4.4681000000001275e-05, 4.4874999999999776e-05, 4.469400000000137e-05, 4.475000000000312e-05, 4.46...</msg>
<status status="PASS" starttime="20201030 15:55:50.556" endtime="20201030 15:55:50.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.565" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.564" endtime="20201030 15:55:50.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.568" level="INFO">VALUE: [4.502800000000251e-05, 4.454199999999811e-05, 4.491599999999901e-05, 4.491600000000248e-05, 4.4681000000001275e-05, 4.4874999999999776e-05, 4.469400000000137e-05, 4.475000000000312e-05, 4.46939999999979e-05, 4.486099999999674e-05, 4.441600000000198e-05, 4.4431000000001025e-05, 4.4430999999997556e-05, 4.491599999999901e-05, 4.452799999999854e-05, 4.445800000000069e-05, 4.445800000000069e-05, 4.444400000000112e-05, 4.445800000000069e-05, 4.505600000000165e-05, 4.452799999999854e-05, 4.443000000000155e-05, 4.4610999999999956e-05, 4.451399999999897e-05, 4.486199999999968e-05, 4.4416999999997986e-05, 4.441599999999851e-05, 4.4430999999997556e-05, 4.4403000000001885e-05, 4.455499999999821e-05, 4.452799999999854e-05, 4.4402999999998416e-05, 4.4445000000000595e-05, 4.4861000000000206e-05, 4.466600000000223e-05, 4.444400000000112e-05, 4.454199999999811e-05, 4.4847000000000636e-05, 4.495800000000119e-05, 4.4833000000001066e-05, 4.4445000000000595e-05, 4.4638999999999096e-05, 4.504200000000208e-05, 4.445799999999722e-05, 4.477799999999879e-05, 4.4431000000001025e-05, 4.442999999999808e-05, 4.501399999999947e-05, 4.451399999999897e-05, 4.454100000000211e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.566" endtime="20201030 15:55:50.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.561" endtime="20201030 15:55:50.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.573" endtime="20201030 15:55:50.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.571" endtime="20201030 15:55:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.570" endtime="20201030 15:55:50.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.211" endtime="20201030 15:55:50.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.211" endtime="20201030 15:55:50.594"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.603" endtime="20201030 15:55:50.620"></status>
</kw>
<msg timestamp="20201030 15:55:50.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.601" endtime="20201030 15:55:50.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.622" endtime="20201030 15:55:50.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.624" endtime="20201030 15:55:50.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.598" endtime="20201030 15:55:50.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.596" endtime="20201030 15:55:50.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.634" endtime="20201030 15:55:50.921"></status>
</kw>
<msg timestamp="20201030 15:55:50.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.632" endtime="20201030 15:55:50.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022674403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:50.925" endtime="20201030 15:55:50.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.934" endtime="20201030 15:55:50.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.629" endtime="20201030 15:55:50.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.628" endtime="20201030 15:55:50.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:50.940" level="INFO">${RESULT} = [{'diff': 4.602800000000004e-05}, {'diff': 4.580599999999893e-05}, {'diff': 4.601400000000047e-05}, {'diff': 4.551399999999997e-05}, {'diff': 4.5666999999999236e-05}, {'diff': 4.583400000000154e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:50.937" endtime="20201030 15:55:50.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:50.945" level="INFO">${ACCURACY} = {'diff': [4.602800000000004e-05, 4.580599999999893e-05, 4.601400000000047e-05, 4.551399999999997e-05, 4.5666999999999236e-05, 4.583400000000154e-05, 4.552700000000007e-05, 4.519400000000187e-05, 4.554...</msg>
<status status="PASS" starttime="20201030 15:55:50.942" endtime="20201030 15:55:50.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.950" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:55:50.948" endtime="20201030 15:55:50.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:50.952" level="INFO">VALUE: [4.602800000000004e-05, 4.580599999999893e-05, 4.601400000000047e-05, 4.551399999999997e-05, 4.5666999999999236e-05, 4.583400000000154e-05, 4.552700000000007e-05, 4.519400000000187e-05, 4.554099999999964e-05, 4.572199999999804e-05, 4.5847000000001636e-05, 4.586099999999774e-05, 4.517999999999883e-05, 4.519400000000187e-05, 4.552799999999954e-05, 4.551399999999997e-05, 4.5361000000000706e-05, 4.601400000000047e-05, 4.5181000000001775e-05, 4.5875000000000776e-05, 4.5194999999997876e-05, 4.552700000000007e-05, 4.602800000000004e-05, 4.5972999999997766e-05, 4.551399999999997e-05, 4.5194999999997876e-05, 4.5681000000002275e-05, 4.5347000000001136e-05, 4.56800000000028e-05, 4.5347000000001136e-05, 4.552700000000007e-05, 4.558400000000129e-05, 4.552799999999954e-05, 4.559800000000086e-05, 4.5875000000000776e-05, 4.599999999999743e-05, 4.51939999999984e-05, 4.60000000000009e-05, 4.551399999999997e-05, 4.552799999999954e-05, 4.5875000000000776e-05, 4.5695000000001845e-05, 4.554199999999911e-05, 4.586200000000068e-05, 4.604100000000014e-05, 4.5695000000001845e-05, 4.55000000000004e-05, 4.60269999999971e-05, 4.559699999999792e-05, 4.604100000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:55:50.951" endtime="20201030 15:55:50.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.946" endtime="20201030 15:55:50.954"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:50.957" endtime="20201030 15:55:50.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.956" endtime="20201030 15:55:50.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.955" endtime="20201030 15:55:50.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.595" endtime="20201030 15:55:50.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.594" endtime="20201030 15:55:50.978"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:50.987" endtime="20201030 15:55:51.005"></status>
</kw>
<msg timestamp="20201030 15:55:51.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:50.985" endtime="20201030 15:55:51.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.007" endtime="20201030 15:55:51.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.009" endtime="20201030 15:55:51.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.983" endtime="20201030 15:55:51.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.981" endtime="20201030 15:55:51.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.019" endtime="20201030 15:55:51.305"></status>
</kw>
<msg timestamp="20201030 15:55:51.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023527194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.017" endtime="20201030 15:55:51.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023480347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023527194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.309" endtime="20201030 15:55:51.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.318" endtime="20201030 15:55:51.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.015" endtime="20201030 15:55:51.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.013" endtime="20201030 15:55:51.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.325" level="INFO">${RESULT} = [{'diff': 4.6847000000002637e-05}, {'diff': 4.636099999999824e-05}, {'diff': 4.629100000000039e-05}, {'diff': 4.658400000000229e-05}, {'diff': 4.68329999999996e-05}, {'diff': 4.7013999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:51.321" endtime="20201030 15:55:51.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.329" level="INFO">${ACCURACY} = {'diff': [4.6847000000002637e-05, 4.636099999999824e-05, 4.629100000000039e-05, 4.658400000000229e-05, 4.68329999999996e-05, 4.7013999999998e-05, 4.61939999999994e-05, 4.652800000000054e-05, 4.6194000...</msg>
<status status="PASS" starttime="20201030 15:55:51.326" endtime="20201030 15:55:51.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.334" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.332" endtime="20201030 15:55:51.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.336" level="INFO">VALUE: [4.6847000000002637e-05, 4.636099999999824e-05, 4.629100000000039e-05, 4.658400000000229e-05, 4.68329999999996e-05, 4.7013999999998e-05, 4.61939999999994e-05, 4.652800000000054e-05, 4.619400000000287e-05, 4.705600000000018e-05, 4.654200000000011e-05, 4.6695000000002845e-05, 4.6375000000001276e-05, 4.6694999999999376e-05, 4.6680999999999806e-05, 4.686099999999874e-05, 4.6195000000002345e-05, 4.6361000000001706e-05, 4.7013999999998e-05, 4.625000000000115e-05, 4.6347000000002136e-05, 4.658299999999935e-05, 4.7013999999998e-05, 4.702800000000104e-05, 4.619400000000287e-05, 4.654200000000011e-05, 4.6166999999999736e-05, 4.6375000000001276e-05, 4.637499999999781e-05, 4.652800000000054e-05, 4.6195000000002345e-05, 4.6680999999999806e-05, 4.6694999999999376e-05, 4.637499999999781e-05, 4.652800000000054e-05, 4.684799999999864e-05, 4.6361000000001706e-05, 4.61939999999994e-05, 4.66939999999999e-05, 4.704099999999767e-05, 4.620799999999897e-05, 4.651400000000097e-05, 4.623600000000158e-05, 4.655599999999968e-05, 4.66939999999999e-05, 4.634699999999867e-05, 4.631899999999953e-05, 4.7013999999998e-05, 4.70000000000019e-05, 4.652800000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.335" endtime="20201030 15:55:51.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.330" endtime="20201030 15:55:51.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.342" endtime="20201030 15:55:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.340" endtime="20201030 15:55:51.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.339" endtime="20201030 15:55:51.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.979" endtime="20201030 15:55:51.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:50.978" endtime="20201030 15:55:51.363"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.372" endtime="20201030 15:55:51.388"></status>
</kw>
<msg timestamp="20201030 15:55:51.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.370" endtime="20201030 15:55:51.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.390" endtime="20201030 15:55:51.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.392" endtime="20201030 15:55:51.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.368" endtime="20201030 15:55:51.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.365" endtime="20201030 15:55:51.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.402" endtime="20201030 15:55:51.688"></status>
</kw>
<msg timestamp="20201030 15:55:51.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.400" endtime="20201030 15:55:51.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022558042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022605931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.693" endtime="20201030 15:55:51.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.701" endtime="20201030 15:55:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.397" endtime="20201030 15:55:51.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.396" endtime="20201030 15:55:51.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:51.708" level="INFO">${RESULT} = [{'diff': 4.788899999999888e-05}, {'diff': 4.7194999999999876e-05}, {'diff': 4.7681000000000806e-05}, {'diff': 4.802700000000257e-05}, {'diff': 4.786200000000268e-05}, {'diff': 4.733399999999957e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:51.705" endtime="20201030 15:55:51.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:51.713" level="INFO">${ACCURACY} = {'diff': [4.788899999999888e-05, 4.7194999999999876e-05, 4.7681000000000806e-05, 4.802700000000257e-05, 4.786200000000268e-05, 4.733399999999957e-05, 4.736099999999924e-05, 4.784700000000017e-05, 4.75...</msg>
<status status="PASS" starttime="20201030 15:55:51.709" endtime="20201030 15:55:51.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.718" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:55:51.717" endtime="20201030 15:55:51.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.720" level="INFO">VALUE: [4.788899999999888e-05, 4.7194999999999876e-05, 4.7681000000000806e-05, 4.802700000000257e-05, 4.786200000000268e-05, 4.733399999999957e-05, 4.736099999999924e-05, 4.784700000000017e-05, 4.75269999999986e-05, 4.751400000000197e-05, 4.784700000000017e-05, 4.73330000000001e-05, 4.7889000000002346e-05, 4.769399999999743e-05, 4.7375000000002276e-05, 4.757000000000025e-05, 4.794399999999768e-05, 4.802799999999857e-05, 4.7194999999999876e-05, 4.7208999999999446e-05, 4.7194999999999876e-05, 4.784799999999964e-05, 4.801400000000247e-05, 4.752799999999807e-05, 4.802700000000257e-05, 4.784700000000017e-05, 4.776400000000222e-05, 4.751400000000197e-05, 4.767999999999786e-05, 4.720799999999997e-05, 4.777799999999832e-05, 4.73330000000001e-05, 4.734699999999967e-05, 4.754199999999764e-05, 4.804199999999814e-05, 4.7181000000000306e-05, 4.7708999999999946e-05, 4.802800000000204e-05, 4.763899999999863e-05, 4.786099999999974e-05, 4.7361000000002706e-05, 4.774999999999918e-05, 4.801400000000247e-05, 4.751400000000197e-05, 4.736099999999924e-05, 4.78330000000006e-05, 4.76940000000009e-05, 4.7861000000003207e-05, 4.7361000000002706e-05, 4.802799999999857e-05]</msg>
<status status="PASS" starttime="20201030 15:55:51.719" endtime="20201030 15:55:51.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.714" endtime="20201030 15:55:51.722"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:51.725" endtime="20201030 15:55:51.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.724" endtime="20201030 15:55:51.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.723" endtime="20201030 15:55:51.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.364" endtime="20201030 15:55:51.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.363" endtime="20201030 15:55:51.746"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.755" endtime="20201030 15:55:51.773"></status>
</kw>
<msg timestamp="20201030 15:55:51.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.754" endtime="20201030 15:55:51.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:51.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:51.775" endtime="20201030 15:55:51.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.777" endtime="20201030 15:55:51.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.751" endtime="20201030 15:55:51.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.749" endtime="20201030 15:55:51.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:51.787" endtime="20201030 15:55:52.075"></status>
</kw>
<msg timestamp="20201030 15:55:52.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:51.785" endtime="20201030 15:55:52.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022565625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.079" endtime="20201030 15:55:52.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.088" endtime="20201030 15:55:52.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.782" endtime="20201030 15:55:52.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.781" endtime="20201030 15:55:52.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.094" level="INFO">${RESULT} = [{'diff': 4.86940000000019e-05}, {'diff': 4.886100000000074e-05}, {'diff': 4.887500000000031e-05}, {'diff': 4.836100000000024e-05}, {'diff': 4.875000000000018e-05}, {'diff': 4.902799999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:52.091" endtime="20201030 15:55:52.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.099" level="INFO">${ACCURACY} = {'diff': [4.86940000000019e-05, 4.886100000000074e-05, 4.887500000000031e-05, 4.836100000000024e-05, 4.875000000000018e-05, 4.902799999999957e-05, 4.855600000000168e-05, 4.887500000000031e-05, 4.86940...</msg>
<status status="PASS" starttime="20201030 15:55:52.095" endtime="20201030 15:55:52.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.103" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.102" endtime="20201030 15:55:52.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.106" level="INFO">VALUE: [4.86940000000019e-05, 4.886100000000074e-05, 4.887500000000031e-05, 4.836100000000024e-05, 4.875000000000018e-05, 4.902799999999957e-05, 4.855600000000168e-05, 4.887500000000031e-05, 4.86940000000019e-05, 4.881900000000203e-05, 4.902800000000304e-05, 4.8181000000001306e-05, 4.890199999999997e-05, 4.8695000000001376e-05, 4.8695000000001376e-05, 4.8195000000000876e-05, 4.8195000000000876e-05, 4.855499999999874e-05, 4.9014e-05, 4.816599999999879e-05, 4.904099999999967e-05, 4.848600000000036e-05, 4.824999999999968e-05, 4.818000000000183e-05, 4.902799999999957e-05, 4.904199999999914e-05, 4.906999999999828e-05, 4.88330000000016e-05, 4.836100000000024e-05, 4.834700000000067e-05, 4.9014e-05, 4.8708999999997477e-05, 4.837499999999981e-05, 4.86529999999992e-05, 4.902799999999957e-05, 4.833400000000057e-05, 4.8195000000000876e-05, 4.906899999999881e-05, 4.888899999999988e-05, 4.886099999999727e-05, 4.887500000000031e-05, 4.854099999999917e-05, 4.902799999999957e-05, 4.862500000000006e-05, 4.85139999999995e-05, 4.890299999999945e-05, 4.869399999999843e-05, 4.85139999999995e-05, 4.8708999999997477e-05, 4.8209000000000446e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.104" endtime="20201030 15:55:52.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.099" endtime="20201030 15:55:52.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.111" endtime="20201030 15:55:52.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.109" endtime="20201030 15:55:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.108" endtime="20201030 15:55:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.747" endtime="20201030 15:55:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:51.746" endtime="20201030 15:55:52.132"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.141" endtime="20201030 15:55:52.159"></status>
</kw>
<msg timestamp="20201030 15:55:52.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.139" endtime="20201030 15:55:52.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.160" endtime="20201030 15:55:52.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.163" endtime="20201030 15:55:52.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.136" endtime="20201030 15:55:52.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.134" endtime="20201030 15:55:52.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.172" endtime="20201030 15:55:52.459"></status>
</kw>
<msg timestamp="20201030 15:55:52.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.171" endtime="20201030 15:55:52.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023497694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.463" endtime="20201030 15:55:52.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.472" endtime="20201030 15:55:52.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.168" endtime="20201030 15:55:52.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.166" endtime="20201030 15:55:52.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.479" level="INFO">${RESULT} = [{'diff': 5.00270000000011e-05}, {'diff': 4.93469999999982e-05}, {'diff': 4.92079999999985e-05}, {'diff': 4.950000000000093e-05}, {'diff': 4.987500000000131e-05}, {'diff': 4.922199999999807e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:52.475" endtime="20201030 15:55:52.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.483" level="INFO">${ACCURACY} = {'diff': [5.00270000000011e-05, 4.93469999999982e-05, 4.92079999999985e-05, 4.950000000000093e-05, 4.987500000000131e-05, 4.922199999999807e-05, 4.93330000000021e-05, 4.968099999999934e-05, 4.93330000...</msg>
<status status="PASS" starttime="20201030 15:55:52.480" endtime="20201030 15:55:52.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.487" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.486" endtime="20201030 15:55:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.491" level="INFO">VALUE: [5.00270000000011e-05, 4.93469999999982e-05, 4.92079999999985e-05, 4.950000000000093e-05, 4.987500000000131e-05, 4.922199999999807e-05, 4.93330000000021e-05, 4.968099999999934e-05, 4.93330000000021e-05, 4.986100000000174e-05, 4.9709000000001946e-05, 4.936100000000124e-05, 4.93469999999982e-05, 4.9681000000002806e-05, 4.955499999999974e-05, 4.922199999999807e-05, 4.936200000000071e-05, 4.987499999999784e-05, 4.93469999999982e-05, 4.95270000000006e-05, 4.9707999999999e-05, 4.98469999999987e-05, 4.98469999999987e-05, 5.002800000000057e-05, 4.926400000000025e-05, 4.922199999999807e-05, 4.969399999999943e-05, 5.0014000000001e-05, 4.952800000000007e-05, 4.95140000000005e-05, 4.970899999999848e-05, 4.98469999999987e-05, 4.987500000000131e-05, 4.93339999999981e-05, 4.952800000000007e-05, 4.938900000000038e-05, 5.00270000000011e-05, 4.917999999999936e-05, 4.955499999999974e-05, 4.963900000000063e-05, 4.952800000000007e-05, 5.0014000000001e-05, 5.002800000000057e-05, 4.952800000000007e-05, 4.937500000000081e-05, 5.005599999999971e-05, 4.948599999999789e-05, 4.986099999999827e-05, 5.002800000000057e-05, 4.952800000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.489" endtime="20201030 15:55:52.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.484" endtime="20201030 15:55:52.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.496" endtime="20201030 15:55:52.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.494" endtime="20201030 15:55:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.493" endtime="20201030 15:55:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.133" endtime="20201030 15:55:52.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.132" endtime="20201030 15:55:52.517"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.526" endtime="20201030 15:55:52.543"></status>
</kw>
<msg timestamp="20201030 15:55:52.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.524" endtime="20201030 15:55:52.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.544" endtime="20201030 15:55:52.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.547" endtime="20201030 15:55:52.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.521" endtime="20201030 15:55:52.549"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.519" endtime="20201030 15:55:52.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.556" endtime="20201030 15:55:52.843"></status>
</kw>
<msg timestamp="20201030 15:55:52.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.555" endtime="20201030 15:55:52.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022462694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022513722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.847" endtime="20201030 15:55:52.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.856" endtime="20201030 15:55:52.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.552" endtime="20201030 15:55:52.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.550" endtime="20201030 15:55:52.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:52.863" level="INFO">${RESULT} = [{'diff': 5.102800000000157e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.02079999999995e-05}, {'diff': 5.019399999999993e-05}, {'diff': 5.102800000000157e-05}, {'diff': 5.069499999999991e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:52.859" endtime="20201030 15:55:52.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:52.870" level="INFO">${ACCURACY} = {'diff': [5.102800000000157e-05, 5.104200000000114e-05, 5.02079999999995e-05, 5.019399999999993e-05, 5.102800000000157e-05, 5.069499999999991e-05, 5.104199999999767e-05, 5.018099999999984e-05, 5.10280...</msg>
<status status="PASS" starttime="20201030 15:55:52.864" endtime="20201030 15:55:52.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.875" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:55:52.874" endtime="20201030 15:55:52.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.877" level="INFO">VALUE: [5.102800000000157e-05, 5.104200000000114e-05, 5.02079999999995e-05, 5.019399999999993e-05, 5.102800000000157e-05, 5.069499999999991e-05, 5.104199999999767e-05, 5.018099999999984e-05, 5.102800000000157e-05, 5.051399999999803e-05, 5.104199999999767e-05, 5.036199999999824e-05, 5.087499999999884e-05, 5.102699999999863e-05, 5.10409999999982e-05, 5.08469999999997e-05, 5.0708e-05, 5.101399999999853e-05, 5.02079999999995e-05, 5.086100000000274e-05, 5.0708e-05, 5.018000000000036e-05, 5.086100000000274e-05, 5.072299999999905e-05, 5.10279999999981e-05, 5.036099999999877e-05, 5.036099999999877e-05, 5.036100000000224e-05, 5.069499999999991e-05, 5.054200000000064e-05, 5.02079999999995e-05, 5.034799999999867e-05, 5.036099999999877e-05, 5.022200000000254e-05, 5.018000000000036e-05, 5.08469999999997e-05, 5.069400000000043e-05, 5.029099999999745e-05, 5.101399999999853e-05, 5.054200000000064e-05, 5.025000000000168e-05, 5.019399999999993e-05, 5.020899999999898e-05, 5.069499999999991e-05, 5.054199999999717e-05, 5.036100000000224e-05, 5.102800000000157e-05, 5.06530000000012e-05, 5.02079999999995e-05, 5.101399999999853e-05]</msg>
<status status="PASS" starttime="20201030 15:55:52.876" endtime="20201030 15:55:52.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.871" endtime="20201030 15:55:52.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:52.883" endtime="20201030 15:55:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.881" endtime="20201030 15:55:52.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.880" endtime="20201030 15:55:52.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.518" endtime="20201030 15:55:52.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.517" endtime="20201030 15:55:52.903"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.915" endtime="20201030 15:55:52.934"></status>
</kw>
<msg timestamp="20201030 15:55:52.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.912" endtime="20201030 15:55:52.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:52.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:52.936" endtime="20201030 15:55:52.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.941" endtime="20201030 15:55:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.908" endtime="20201030 15:55:52.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.906" endtime="20201030 15:55:52.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:52.950" endtime="20201030 15:55:53.238"></status>
</kw>
<msg timestamp="20201030 15:55:53.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025229278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:52.949" endtime="20201030 15:55:53.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025229278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025281139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.242" endtime="20201030 15:55:53.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.250" endtime="20201030 15:55:53.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.946" endtime="20201030 15:55:53.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.944" endtime="20201030 15:55:53.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.257" level="INFO">${RESULT} = [{'diff': 5.186100000000027e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.152800000000207e-05}, {'diff': 5.168099999999787e-05}, {'diff': 5.122200000000007e-05}, {'diff': 5.169400000000143e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:53.254" endtime="20201030 15:55:53.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.261" level="INFO">${ACCURACY} = {'diff': [5.186100000000027e-05, 5.118100000000084e-05, 5.152800000000207e-05, 5.168099999999787e-05, 5.122200000000007e-05, 5.169400000000143e-05, 5.169400000000143e-05, 5.186100000000027e-05, 5.1583...</msg>
<status status="PASS" starttime="20201030 15:55:53.258" endtime="20201030 15:55:53.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.266" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.265" endtime="20201030 15:55:53.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.269" level="INFO">VALUE: [5.186100000000027e-05, 5.118100000000084e-05, 5.152800000000207e-05, 5.168099999999787e-05, 5.122200000000007e-05, 5.169400000000143e-05, 5.169400000000143e-05, 5.186100000000027e-05, 5.158300000000088e-05, 5.169400000000143e-05, 5.199999999999996e-05, 5.168000000000186e-05, 5.186100000000027e-05, 5.1679999999998394e-05, 5.18470000000007e-05, 5.204200000000214e-05, 5.118100000000084e-05, 5.186100000000027e-05, 5.136099999999977e-05, 5.151399999999903e-05, 5.155499999999827e-05, 5.186199999999974e-05, 5.150000000000293e-05, 5.118100000000084e-05, 5.134799999999967e-05, 5.186100000000027e-05, 5.15140000000025e-05, 5.13470000000002e-05, 5.194400000000168e-05, 5.119400000000093e-05, 5.15279999999986e-05, 5.20279999999991e-05, 5.118000000000136e-05, 5.147200000000032e-05, 5.149999999999946e-05, 5.116700000000127e-05, 5.168100000000134e-05, 5.156900000000131e-05, 5.166700000000177e-05, 5.186100000000027e-05, 5.1708000000001e-05, 5.118100000000084e-05, 5.137499999999934e-05, 5.136099999999977e-05, 5.1693999999997964e-05, 5.15279999999986e-05, 5.172200000000057e-05, 5.15279999999986e-05, 5.20279999999991e-05, 5.187499999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.267" endtime="20201030 15:55:53.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.262" endtime="20201030 15:55:53.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.274" endtime="20201030 15:55:53.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.272" endtime="20201030 15:55:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.271" endtime="20201030 15:55:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.904" endtime="20201030 15:55:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:52.904" endtime="20201030 15:55:53.295"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.304" endtime="20201030 15:55:53.322"></status>
</kw>
<msg timestamp="20201030 15:55:53.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.302" endtime="20201030 15:55:53.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.324" endtime="20201030 15:55:53.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.326" endtime="20201030 15:55:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.299" endtime="20201030 15:55:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.297" endtime="20201030 15:55:53.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.336" endtime="20201030 15:55:53.621"></status>
</kw>
<msg timestamp="20201030 15:55:53.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.334" endtime="20201030 15:55:53.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023815583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.626" endtime="20201030 15:55:53.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.634" endtime="20201030 15:55:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.331" endtime="20201030 15:55:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.329" endtime="20201030 15:55:53.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:53.641" level="INFO">${RESULT} = [{'diff': 5.269400000000243e-05}, {'diff': 5.218000000000236e-05}, {'diff': 5.223600000000064e-05}, {'diff': 5.269400000000243e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.3013999999997063e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:53.637" endtime="20201030 15:55:53.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:53.645" level="INFO">${ACCURACY} = {'diff': [5.269400000000243e-05, 5.218000000000236e-05, 5.223600000000064e-05, 5.269400000000243e-05, 5.286100000000127e-05, 5.3013999999997063e-05, 5.301400000000053e-05, 5.2693999999998964e-05, 5.23...</msg>
<status status="PASS" starttime="20201030 15:55:53.642" endtime="20201030 15:55:53.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.649" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:55:53.648" endtime="20201030 15:55:53.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.652" level="INFO">VALUE: [5.269400000000243e-05, 5.218000000000236e-05, 5.223600000000064e-05, 5.269400000000243e-05, 5.286100000000127e-05, 5.3013999999997063e-05, 5.301400000000053e-05, 5.2693999999998964e-05, 5.230599999999849e-05, 5.269499999999844e-05, 5.237500000000034e-05, 5.30280000000001e-05, 5.28479999999977e-05, 5.218099999999837e-05, 5.284800000000117e-05, 5.2165999999999324e-05, 5.219400000000193e-05, 5.281899999999909e-05, 5.251400000000003e-05, 5.293100000000259e-05, 5.23609999999973e-05, 5.261100000000102e-05, 5.28470000000017e-05, 5.28609999999978e-05, 5.273700000000062e-05, 5.233299999999816e-05, 5.269499999999844e-05, 5.301400000000053e-05, 5.234699999999773e-05, 5.28609999999978e-05, 5.236100000000077e-05, 5.218099999999837e-05, 5.268099999999887e-05, 5.2179999999998894e-05, 5.302700000000063e-05, 5.2693999999998964e-05, 5.28470000000017e-05, 5.290299999999998e-05, 5.233299999999816e-05, 5.2193999999998464e-05, 5.237500000000034e-05, 5.269499999999844e-05, 5.220900000000098e-05, 5.25279999999996e-05, 5.237500000000034e-05, 5.25279999999996e-05, 5.270900000000148e-05, 5.251400000000003e-05, 5.2707999999998534e-05, 5.255500000000274e-05]</msg>
<status status="PASS" starttime="20201030 15:55:53.651" endtime="20201030 15:55:53.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.646" endtime="20201030 15:55:53.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:53.658" endtime="20201030 15:55:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.657" endtime="20201030 15:55:53.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.655" endtime="20201030 15:55:53.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.295" endtime="20201030 15:55:53.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.295" endtime="20201030 15:55:53.679"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.688" endtime="20201030 15:55:53.705"></status>
</kw>
<msg timestamp="20201030 15:55:53.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.686" endtime="20201030 15:55:53.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:53.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:53.707" endtime="20201030 15:55:53.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.710" endtime="20201030 15:55:53.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.683" endtime="20201030 15:55:53.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.681" endtime="20201030 15:55:53.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:53.719" endtime="20201030 15:55:54.005"></status>
</kw>
<msg timestamp="20201030 15:55:54.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:53.718" endtime="20201030 15:55:54.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022414431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.009" endtime="20201030 15:55:54.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.017" endtime="20201030 15:55:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.715" endtime="20201030 15:55:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.713" endtime="20201030 15:55:54.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.024" level="INFO">${RESULT} = [{'diff': 5.354200000000017e-05}, {'diff': 5.337500000000134e-05}, {'diff': 5.319500000000241e-05}, {'diff': 5.33479999999982e-05}, {'diff': 5.351299999999809e-05}, {'diff': 5.3207999999999034e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:54.021" endtime="20201030 15:55:54.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.029" level="INFO">${ACCURACY} = {'diff': [5.354200000000017e-05, 5.337500000000134e-05, 5.319500000000241e-05, 5.33479999999982e-05, 5.351299999999809e-05, 5.3207999999999034e-05, 5.319400000000293e-05, 5.3721999999999104e-05, 5.387...</msg>
<status status="PASS" starttime="20201030 15:55:54.025" endtime="20201030 15:55:54.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.034" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.033" endtime="20201030 15:55:54.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.036" level="INFO">VALUE: [5.354200000000017e-05, 5.337500000000134e-05, 5.319500000000241e-05, 5.33479999999982e-05, 5.351299999999809e-05, 5.3207999999999034e-05, 5.319400000000293e-05, 5.3721999999999104e-05, 5.387500000000184e-05, 5.3499999999997994e-05, 5.3527999999997133e-05, 5.33609999999983e-05, 5.3749999999998244e-05, 5.3513999999997564e-05, 5.333300000000263e-05, 5.38609999999988e-05, 5.3527999999997133e-05, 5.369499999999944e-05, 5.4027999999997633e-05, 5.402700000000163e-05, 5.3179999999999894e-05, 5.3693999999999964e-05, 5.352700000000113e-05, 5.337499999999787e-05, 5.402700000000163e-05, 5.379099999999748e-05, 5.3707999999999534e-05, 5.35280000000006e-05, 5.35280000000006e-05, 5.40280000000011e-05, 5.404200000000067e-05, 5.38609999999988e-05, 5.35419999999967e-05, 5.369499999999944e-05, 5.334800000000167e-05, 5.401400000000153e-05, 5.320899999999851e-05, 5.3707999999999534e-05, 5.402700000000163e-05, 5.3985999999998924e-05, 5.383299999999966e-05, 5.3693999999999964e-05, 5.404200000000067e-05, 5.33470000000022e-05, 5.3471999999998854e-05, 5.40280000000011e-05, 5.384699999999923e-05, 5.369499999999944e-05, 5.38609999999988e-05, 5.319500000000241e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.035" endtime="20201030 15:55:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.030" endtime="20201030 15:55:54.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.042" endtime="20201030 15:55:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.040" endtime="20201030 15:55:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.039" endtime="20201030 15:55:54.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.680" endtime="20201030 15:55:54.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:53.679" endtime="20201030 15:55:54.062"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.071" endtime="20201030 15:55:54.089"></status>
</kw>
<msg timestamp="20201030 15:55:54.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.070" endtime="20201030 15:55:54.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.090" endtime="20201030 15:55:54.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.093" endtime="20201030 15:55:54.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.067" endtime="20201030 15:55:54.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.065" endtime="20201030 15:55:54.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.102" endtime="20201030 15:55:54.390"></status>
</kw>
<msg timestamp="20201030 15:55:54.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.101" endtime="20201030 15:55:54.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.395" endtime="20201030 15:55:54.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.403" endtime="20201030 15:55:54.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.098" endtime="20201030 15:55:54.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.096" endtime="20201030 15:55:54.406"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.410" level="INFO">${RESULT} = [{'diff': 5.4194000000000464e-05}, {'diff': 5.413899999999819e-05}, {'diff': 5.419499999999994e-05}, {'diff': 5.434699999999973e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.434699999999973e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:54.407" endtime="20201030 15:55:54.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.414" level="INFO">${ACCURACY} = {'diff': [5.4194000000000464e-05, 5.413899999999819e-05, 5.419499999999994e-05, 5.434699999999973e-05, 5.48609999999998e-05, 5.434699999999973e-05, 5.50280000000021e-05, 5.4152000000001754e-05, 5.4526...</msg>
<status status="PASS" starttime="20201030 15:55:54.411" endtime="20201030 15:55:54.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.419" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.418" endtime="20201030 15:55:54.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.421" level="INFO">VALUE: [5.4194000000000464e-05, 5.413899999999819e-05, 5.419499999999994e-05, 5.434699999999973e-05, 5.48609999999998e-05, 5.434699999999973e-05, 5.50280000000021e-05, 5.4152000000001754e-05, 5.452699999999866e-05, 5.48609999999998e-05, 5.4208000000000034e-05, 5.425000000000221e-05, 5.43609999999993e-05, 5.461099999999955e-05, 5.43609999999993e-05, 5.4680000000001394e-05, 5.484700000000023e-05, 5.4708000000000534e-05, 5.418100000000037e-05, 5.458300000000041e-05, 5.5013999999999064e-05, 5.50280000000021e-05, 5.43609999999993e-05, 5.436100000000277e-05, 5.434800000000267e-05, 5.454099999999823e-05, 5.502700000000263e-05, 5.501299999999959e-05, 5.4694000000000964e-05, 5.4179999999997425e-05, 5.4194000000000464e-05, 5.48609999999998e-05, 5.48609999999998e-05, 5.4499999999998994e-05, 5.506999999999734e-05, 5.5027999999998634e-05, 5.468100000000087e-05, 5.415299999999776e-05, 5.437499999999887e-05, 5.469500000000044e-05, 5.445899999999976e-05, 5.4708000000000534e-05, 5.484700000000023e-05, 5.483300000000066e-05, 5.4208000000000034e-05, 5.4722000000000104e-05, 5.502699999999916e-05, 5.4194000000000464e-05, 5.4513999999998564e-05, 5.454200000000117e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.420" endtime="20201030 15:55:54.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.415" endtime="20201030 15:55:54.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.431" endtime="20201030 15:55:54.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.429" endtime="20201030 15:55:54.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.428" endtime="20201030 15:55:54.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.063" endtime="20201030 15:55:54.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.063" endtime="20201030 15:55:54.451"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.461" endtime="20201030 15:55:54.479"></status>
</kw>
<msg timestamp="20201030 15:55:54.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.459" endtime="20201030 15:55:54.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.480" endtime="20201030 15:55:54.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.483" endtime="20201030 15:55:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.456" endtime="20201030 15:55:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.454" endtime="20201030 15:55:54.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.492" endtime="20201030 15:55:54.779"></status>
</kw>
<msg timestamp="20201030 15:55:54.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.491" endtime="20201030 15:55:54.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024179333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024234694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.783" endtime="20201030 15:55:54.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.791" endtime="20201030 15:55:54.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.488" endtime="20201030 15:55:54.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.486" endtime="20201030 15:55:54.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:54.798" level="INFO">${RESULT} = [{'diff': 5.53610000000003e-05}, {'diff': 5.5680000000002394e-05}, {'diff': 5.602700000000016e-05}, {'diff': 5.551400000000303e-05}, {'diff': 5.590299999999951e-05}, {'diff': 5.6014000000000064e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:54.795" endtime="20201030 15:55:54.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:54.803" level="INFO">${ACCURACY} = {'diff': [5.53610000000003e-05, 5.5680000000002394e-05, 5.602700000000016e-05, 5.551400000000303e-05, 5.590299999999951e-05, 5.6014000000000064e-05, 5.513900000000266e-05, 5.55280000000026e-05, 5.5194...</msg>
<status status="PASS" starttime="20201030 15:55:54.799" endtime="20201030 15:55:54.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.807" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:55:54.806" endtime="20201030 15:55:54.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.810" level="INFO">VALUE: [5.53610000000003e-05, 5.5680000000002394e-05, 5.602700000000016e-05, 5.551400000000303e-05, 5.590299999999951e-05, 5.6014000000000064e-05, 5.513900000000266e-05, 5.55280000000026e-05, 5.5194000000001464e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.569500000000144e-05, 5.53610000000003e-05, 5.5513999999999564e-05, 5.53480000000002e-05, 5.569499999999797e-05, 5.513900000000266e-05, 5.5707999999998065e-05, 5.5708000000001534e-05, 5.5513999999999564e-05, 5.5499999999999994e-05, 5.543099999999815e-05, 5.556899999999837e-05, 5.6014000000000064e-05, 5.58610000000008e-05, 5.520900000000051e-05, 5.6014000000000064e-05, 5.584699999999776e-05, 5.587500000000037e-05, 5.6027999999999634e-05, 5.53610000000003e-05, 5.536199999999977e-05, 5.586200000000027e-05, 5.53610000000003e-05, 5.602700000000016e-05, 5.584700000000123e-05, 5.5208000000001034e-05, 5.537499999999987e-05, 5.5499999999999994e-05, 5.5193999999997995e-05, 5.6041999999999204e-05, 5.5707999999998065e-05, 5.519500000000094e-05, 5.5527999999999134e-05, 5.581999999999809e-05, 5.6027999999999634e-05, 5.5527999999999134e-05, 5.519500000000094e-05, 5.556900000000184e-05, 5.53610000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:55:54.808" endtime="20201030 15:55:54.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.803" endtime="20201030 15:55:54.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:54.816" endtime="20201030 15:55:54.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.814" endtime="20201030 15:55:54.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.813" endtime="20201030 15:55:54.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.452" endtime="20201030 15:55:54.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.452" endtime="20201030 15:55:54.837"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.845" endtime="20201030 15:55:54.862"></status>
</kw>
<msg timestamp="20201030 15:55:54.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.844" endtime="20201030 15:55:54.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:54.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:54.864" endtime="20201030 15:55:54.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.867" endtime="20201030 15:55:54.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.841" endtime="20201030 15:55:54.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.839" endtime="20201030 15:55:54.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:54.876" endtime="20201030 15:55:55.162"></status>
</kw>
<msg timestamp="20201030 15:55:55.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:54.874" endtime="20201030 15:55:55.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022479903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.167" endtime="20201030 15:55:55.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.176" endtime="20201030 15:55:55.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.872" endtime="20201030 15:55:55.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.870" endtime="20201030 15:55:55.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.182" level="INFO">${RESULT} = [{'diff': 5.686099999999833e-05}, {'diff': 5.658299999999894e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.687500000000137e-05}, {'diff': 5.654100000000023e-05}, {'diff': 5.651299999999762e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:55:55.179" endtime="20201030 15:55:55.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.188" level="INFO">${ACCURACY} = {'diff': [5.686099999999833e-05, 5.658299999999894e-05, 5.7014000000001064e-05, 5.687500000000137e-05, 5.654100000000023e-05, 5.651299999999762e-05, 5.681899999999962e-05, 5.6999999999998024e-05, 5.70...</msg>
<status status="PASS" starttime="20201030 15:55:55.183" endtime="20201030 15:55:55.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.192" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.191" endtime="20201030 15:55:55.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.195" level="INFO">VALUE: [5.686099999999833e-05, 5.658299999999894e-05, 5.7014000000001064e-05, 5.687500000000137e-05, 5.654100000000023e-05, 5.651299999999762e-05, 5.681899999999962e-05, 5.6999999999998024e-05, 5.7028000000000634e-05, 5.6693999999999495e-05, 5.686099999999833e-05, 5.7042000000000204e-05, 5.68610000000018e-05, 5.663899999999722e-05, 5.6819999999999093e-05, 5.6264000000000314e-05, 5.7042000000000204e-05, 5.661099999999808e-05, 5.6305999999999023e-05, 5.6916000000000605e-05, 5.658300000000241e-05, 5.6138000000000715e-05, 5.6193999999998995e-05, 5.633300000000216e-05, 5.6555999999999274e-05, 5.6707999999999065e-05, 5.6986000000001924e-05, 5.6221999999998135e-05, 5.6193999999998995e-05, 5.61809999999989e-05, 5.620900000000151e-05, 5.670899999999854e-05, 5.618100000000237e-05, 5.6222000000001604e-05, 5.66809999999994e-05, 5.619500000000194e-05, 5.6499999999997524e-05, 5.6707999999999065e-05, 5.6193999999998995e-05, 5.6513999999997094e-05, 5.658299999999894e-05, 5.636099999999783e-05, 5.684700000000223e-05, 5.6208000000002034e-05, 5.641699999999958e-05, 5.6541999999999704e-05, 5.670900000000201e-05, 5.668100000000287e-05, 5.7042000000000204e-05, 5.665300000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.193" endtime="20201030 15:55:55.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.188" endtime="20201030 15:55:55.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.200" endtime="20201030 15:55:55.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.198" endtime="20201030 15:55:55.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.197" endtime="20201030 15:55:55.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.837" endtime="20201030 15:55:55.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:54.837" endtime="20201030 15:55:55.221"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.230" endtime="20201030 15:55:55.248"></status>
</kw>
<msg timestamp="20201030 15:55:55.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.228" endtime="20201030 15:55:55.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.250" endtime="20201030 15:55:55.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.252" endtime="20201030 15:55:55.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.226" endtime="20201030 15:55:55.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.224" endtime="20201030 15:55:55.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.262" endtime="20201030 15:55:55.549"></status>
</kw>
<msg timestamp="20201030 15:55:55.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.260" endtime="20201030 15:55:55.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022984875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.553" endtime="20201030 15:55:55.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.562" endtime="20201030 15:55:55.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.257" endtime="20201030 15:55:55.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.256" endtime="20201030 15:55:55.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.568" level="INFO">${RESULT} = [{'diff': 5.7500000000001994e-05}, {'diff': 5.7556000000000274e-05}, {'diff': 5.71809999999999e-05}, {'diff': 5.7930000000001175e-05}, {'diff': 5.736200000000177e-05}, {'diff': 5.7514000000001564e-05}...</msg>
<status status="PASS" starttime="20201030 15:55:55.565" endtime="20201030 15:55:55.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.573" level="INFO">${ACCURACY} = {'diff': [5.7500000000001994e-05, 5.7556000000000274e-05, 5.71809999999999e-05, 5.7930000000001175e-05, 5.736200000000177e-05, 5.7514000000001564e-05, 5.802700000000216e-05, 5.73749999999984e-05, 5.75...</msg>
<status status="PASS" starttime="20201030 15:55:55.569" endtime="20201030 15:55:55.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.577" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.576" endtime="20201030 15:55:55.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.580" level="INFO">VALUE: [5.7500000000001994e-05, 5.7556000000000274e-05, 5.71809999999999e-05, 5.7930000000001175e-05, 5.736200000000177e-05, 5.7514000000001564e-05, 5.802700000000216e-05, 5.73749999999984e-05, 5.752700000000166e-05, 5.804100000000173e-05, 5.752700000000166e-05, 5.73749999999984e-05, 5.7679999999997456e-05, 5.73610000000023e-05, 5.783300000000019e-05, 5.78749999999989e-05, 5.734699999999926e-05, 5.734699999999926e-05, 5.8055999999997304e-05, 5.7513999999998094e-05, 5.786099999999933e-05, 5.7721999999999635e-05, 5.78749999999989e-05, 5.719499999999947e-05, 5.7887999999998996e-05, 5.73610000000023e-05, 5.713900000000119e-05, 5.7694000000000495e-05, 5.7694000000000495e-05, 5.730499999999708e-05, 5.734699999999926e-05, 5.784699999999976e-05, 5.738900000000144e-05, 5.783300000000019e-05, 5.7542000000000704e-05, 5.78749999999989e-05, 5.8014000000002064e-05, 5.788900000000194e-05, 5.73619999999983e-05, 5.75550000000008e-05, 5.752699999999819e-05, 5.7151999999997816e-05, 5.7193999999999995e-05, 5.784699999999976e-05, 5.8041999999997734e-05, 5.7665999999997886e-05, 5.783300000000019e-05, 5.7527999999997664e-05, 5.73749999999984e-05, 5.8042000000001204e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.578" endtime="20201030 15:55:55.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.574" endtime="20201030 15:55:55.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.585" endtime="20201030 15:55:55.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.584" endtime="20201030 15:55:55.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.582" endtime="20201030 15:55:55.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.222" endtime="20201030 15:55:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.221" endtime="20201030 15:55:55.606"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.615" endtime="20201030 15:55:55.633"></status>
</kw>
<msg timestamp="20201030 15:55:55.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.613" endtime="20201030 15:55:55.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.635" endtime="20201030 15:55:55.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.638" endtime="20201030 15:55:55.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.611" endtime="20201030 15:55:55.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.608" endtime="20201030 15:55:55.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.647" endtime="20201030 15:55:55.933"></status>
</kw>
<msg timestamp="20201030 15:55:55.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023576347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.645" endtime="20201030 15:55:55.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023517319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023576347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:55.937" endtime="20201030 15:55:55.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.946" endtime="20201030 15:55:55.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.643" endtime="20201030 15:55:55.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.641" endtime="20201030 15:55:55.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:55.952" level="INFO">${RESULT} = [{'diff': 5.9028000000002634e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.8693999999998026e-05}, {'diff': 5.8708000000001065e-05}, {'diff': 5.890300000000251e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:55.949" endtime="20201030 15:55:55.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:55.956" level="INFO">${ACCURACY} = {'diff': [5.9028000000002634e-05, 5.836099999999983e-05, 5.83749999999994e-05, 5.8693999999998026e-05, 5.8708000000001065e-05, 5.890300000000251e-05, 5.88749999999999e-05, 5.88749999999999e-05, 5.8861...</msg>
<status status="PASS" starttime="20201030 15:55:55.953" endtime="20201030 15:55:55.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.961" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:55:55.960" endtime="20201030 15:55:55.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:55.963" level="INFO">VALUE: [5.9028000000002634e-05, 5.836099999999983e-05, 5.83749999999994e-05, 5.8693999999998026e-05, 5.8708000000001065e-05, 5.890300000000251e-05, 5.88749999999999e-05, 5.88749999999999e-05, 5.88619999999998e-05, 5.85689999999979e-05, 5.88619999999998e-05, 5.8194999999997e-05, 5.854100000000223e-05, 5.8194000000000995e-05, 5.8679999999998456e-05, 5.8194000000000995e-05, 5.886100000000033e-05, 5.8194000000000995e-05, 5.8708000000001065e-05, 5.8429999999998206e-05, 5.9042000000002204e-05, 5.9027999999999164e-05, 5.88619999999998e-05, 5.8527999999998664e-05, 5.884700000000076e-05, 5.8541999999998234e-05, 5.83480000000032e-05, 5.886099999999686e-05, 5.852699999999919e-05, 5.8194000000000995e-05, 5.854100000000223e-05, 5.8500000000002994e-05, 5.9055999999998304e-05, 5.8694000000001495e-05, 5.9013999999999595e-05, 5.886100000000033e-05, 5.8986000000000455e-05, 5.86949999999975e-05, 5.819500000000047e-05, 5.8806000000001524e-05, 5.886100000000033e-05, 5.86810000000014e-05, 5.88619999999998e-05, 5.8848000000000233e-05, 5.886100000000033e-05, 5.836099999999983e-05, 5.902700000000316e-05, 5.8499999999999525e-05, 5.8180000000001425e-05, 5.8527999999998664e-05]</msg>
<status status="PASS" starttime="20201030 15:55:55.962" endtime="20201030 15:55:55.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.957" endtime="20201030 15:55:55.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:55.969" endtime="20201030 15:55:55.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.968" endtime="20201030 15:55:55.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.967" endtime="20201030 15:55:55.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.607" endtime="20201030 15:55:55.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.606" endtime="20201030 15:55:55.990"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:55.999" endtime="20201030 15:55:56.016"></status>
</kw>
<msg timestamp="20201030 15:55:56.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:55.997" endtime="20201030 15:55:56.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.017" endtime="20201030 15:55:56.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.020" endtime="20201030 15:55:56.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.994" endtime="20201030 15:55:56.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.992" endtime="20201030 15:55:56.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.029" endtime="20201030 15:55:56.315"></status>
</kw>
<msg timestamp="20201030 15:55:56.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.027" endtime="20201030 15:55:56.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.319" endtime="20201030 15:55:56.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.327" endtime="20201030 15:55:56.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.025" endtime="20201030 15:55:56.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.023" endtime="20201030 15:55:56.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.334" level="INFO">${RESULT} = [{'diff': 5.9193999999998526e-05}, {'diff': 5.9986000000001455e-05}, {'diff': 6.0014000000000595e-05}, {'diff': 5.9250000000000275e-05}, {'diff': 5.9514000000000095e-05}, {'diff': 5.9736000000001205e-...</msg>
<status status="PASS" starttime="20201030 15:55:56.330" endtime="20201030 15:55:56.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.341" level="INFO">${ACCURACY} = {'diff': [5.9193999999998526e-05, 5.9986000000001455e-05, 6.0014000000000595e-05, 5.9250000000000275e-05, 5.9514000000000095e-05, 5.9736000000001205e-05, 5.9514000000000095e-05, 5.934700000000126e-05,...</msg>
<status status="PASS" starttime="20201030 15:55:56.335" endtime="20201030 15:55:56.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.346" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.345" endtime="20201030 15:55:56.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.348" level="INFO">VALUE: [5.9193999999998526e-05, 5.9986000000001455e-05, 6.0014000000000595e-05, 5.9250000000000275e-05, 5.9514000000000095e-05, 5.9736000000001205e-05, 5.9514000000000095e-05, 5.934700000000126e-05, 5.9348000000000734e-05, 5.98750000000009e-05, 5.986100000000133e-05, 5.986100000000133e-05, 5.9193999999998526e-05, 5.936100000000083e-05, 5.98750000000009e-05, 5.9179999999998956e-05, 5.984700000000176e-05, 5.98750000000009e-05, 5.93750000000004e-05, 6.0041999999999734e-05, 6.0014000000000595e-05, 5.93750000000004e-05, 5.934700000000126e-05, 5.970900000000154e-05, 5.9362000000000303e-05, 5.9986000000001455e-05, 5.9527999999999665e-05, 5.91810000000019e-05, 5.9694000000002495e-05, 5.952700000000019e-05, 5.9165999999999386e-05, 5.9679999999999456e-05, 6.0028000000000165e-05, 5.981899999999915e-05, 5.9542000000002704e-05, 5.966699999999936e-05, 5.933300000000169e-05, 5.936100000000083e-05, 6.0041999999999734e-05, 5.9514000000000095e-05, 5.986100000000133e-05, 5.916699999999886e-05, 5.936100000000083e-05, 5.927699999999994e-05, 5.9194000000001995e-05, 5.9514000000000095e-05, 5.9514000000000095e-05, 5.986099999999786e-05, 5.936100000000083e-05, 5.9250000000000275e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.347" endtime="20201030 15:55:56.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.342" endtime="20201030 15:55:56.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.353" endtime="20201030 15:55:56.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.352" endtime="20201030 15:55:56.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.350" endtime="20201030 15:55:56.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.991" endtime="20201030 15:55:56.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:55.990" endtime="20201030 15:55:56.374"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.383" endtime="20201030 15:55:56.399"></status>
</kw>
<msg timestamp="20201030 15:55:56.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.381" endtime="20201030 15:55:56.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.401" endtime="20201030 15:55:56.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.403" endtime="20201030 15:55:56.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.378" endtime="20201030 15:55:56.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.376" endtime="20201030 15:55:56.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.412" endtime="20201030 15:55:56.699"></status>
</kw>
<msg timestamp="20201030 15:55:56.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.411" endtime="20201030 15:55:56.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022126542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022187403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:56.703" endtime="20201030 15:55:56.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.712" endtime="20201030 15:55:56.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.408" endtime="20201030 15:55:56.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.407" endtime="20201030 15:55:56.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:56.718" level="INFO">${RESULT} = [{'diff': 6.086100000000233e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.086099999999886e-05}, {'diff': 6.0764000000001345e-05}, {'diff': 6.018099999999943e-05}, {'diff': 6.0651999999997847e-05},...</msg>
<status status="PASS" starttime="20201030 15:55:56.715" endtime="20201030 15:55:56.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:56.723" level="INFO">${ACCURACY} = {'diff': [6.086100000000233e-05, 6.068099999999993e-05, 6.086099999999886e-05, 6.0764000000001345e-05, 6.018099999999943e-05, 6.0651999999997847e-05, 6.0694000000000026e-05, 6.0208000000002565e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:55:56.719" endtime="20201030 15:55:56.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.727" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:55:56.726" endtime="20201030 15:55:56.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.729" level="INFO">VALUE: [6.086100000000233e-05, 6.068099999999993e-05, 6.086099999999886e-05, 6.0764000000001345e-05, 6.018099999999943e-05, 6.0651999999997847e-05, 6.0694000000000026e-05, 6.0208000000002565e-05, 6.0221999999998665e-05, 6.0694000000000026e-05, 6.084699999999929e-05, 6.0194999999999e-05, 6.03750000000014e-05, 6.018099999999943e-05, 6.1027999999997695e-05, 6.036100000000183e-05, 6.0527999999997195e-05, 6.0721999999999166e-05, 6.052699999999772e-05, 6.016699999999986e-05, 6.0194000000002995e-05, 6.1013999999998125e-05, 6.0707999999999596e-05, 6.104200000000073e-05, 6.0666000000000886e-05, 6.1014000000001595e-05, 6.0528000000000665e-05, 6.0221999999998665e-05, 6.01810000000029e-05, 6.070899999999907e-05, 6.020899999999857e-05, 6.0528000000000665e-05, 6.0528000000000665e-05, 6.1027999999997695e-05, 6.087499999999843e-05, 6.052700000000119e-05, 6.101300000000212e-05, 6.086099999999886e-05, 6.088900000000147e-05, 6.0555999999999804e-05, 6.0193999999999526e-05, 6.0584000000002414e-05, 6.036099999999836e-05, 6.0528000000000665e-05, 6.036099999999836e-05, 6.065300000000079e-05, 6.0555999999999804e-05, 6.1027999999997695e-05, 6.055500000000033e-05, 6.104099999999779e-05]</msg>
<status status="PASS" starttime="20201030 15:55:56.728" endtime="20201030 15:55:56.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.723" endtime="20201030 15:55:56.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:56.734" endtime="20201030 15:55:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.733" endtime="20201030 15:55:56.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.732" endtime="20201030 15:55:56.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.375" endtime="20201030 15:55:56.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.374" endtime="20201030 15:55:56.755"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.764" endtime="20201030 15:55:56.782"></status>
</kw>
<msg timestamp="20201030 15:55:56.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.762" endtime="20201030 15:55:56.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:56.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:56.784" endtime="20201030 15:55:56.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.786" endtime="20201030 15:55:56.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.760" endtime="20201030 15:55:56.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.758" endtime="20201030 15:55:56.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:56.795" endtime="20201030 15:55:57.080"></status>
</kw>
<msg timestamp="20201030 15:55:57.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023534028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:56.794" endtime="20201030 15:55:57.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0234725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023534028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:57.085" endtime="20201030 15:55:57.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.093" endtime="20201030 15:55:57.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.791" endtime="20201030 15:55:57.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.789" endtime="20201030 15:55:57.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.099" level="INFO">${RESULT} = [{'diff': 6.15279999999982e-05}, {'diff': 6.1888999999999e-05}, {'diff': 6.170900000000007e-05}, {'diff': 6.187499999999943e-05}, {'diff': 6.137499999999893e-05}, {'diff': 6.148599999999949e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:55:57.096" endtime="20201030 15:55:57.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.103" level="INFO">${ACCURACY} = {'diff': [6.15279999999982e-05, 6.1888999999999e-05, 6.170900000000007e-05, 6.187499999999943e-05, 6.137499999999893e-05, 6.148599999999949e-05, 6.193100000000118e-05, 6.136099999999936e-05, 6.1694000...</msg>
<status status="PASS" starttime="20201030 15:55:57.100" endtime="20201030 15:55:57.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.108" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.107" endtime="20201030 15:55:57.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.110" level="INFO">VALUE: [6.15279999999982e-05, 6.1888999999999e-05, 6.170900000000007e-05, 6.187499999999943e-05, 6.137499999999893e-05, 6.148599999999949e-05, 6.193100000000118e-05, 6.136099999999936e-05, 6.169400000000103e-05, 6.17080000000006e-05, 6.136100000000283e-05, 6.201399999999913e-05, 6.169400000000103e-05, 6.199999999999956e-05, 6.20279999999987e-05, 6.20279999999987e-05, 6.136099999999936e-05, 6.1195e-05, 6.15140000000021e-05, 6.13620000000023e-05, 6.197199999999695e-05, 6.122199999999967e-05, 6.119399999999706e-05, 6.202800000000216e-05, 6.119400000000053e-05, 6.193100000000118e-05, 6.151399999999863e-05, 6.151399999999863e-05, 6.15140000000021e-05, 6.118100000000043e-05, 6.136099999999936e-05, 6.168100000000093e-05, 6.158300000000047e-05, 6.137499999999893e-05, 6.18340000000002e-05, 6.13750000000024e-05, 6.119399999999706e-05, 6.119400000000053e-05, 6.141699999999764e-05, 6.12080000000001e-05, 6.183299999999725e-05, 6.15279999999982e-05, 6.151399999999863e-05, 6.184700000000029e-05, 6.201399999999913e-05, 6.169499999999703e-05, 6.1195e-05, 6.20279999999987e-05, 6.134799999999926e-05, 6.186099999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.109" endtime="20201030 15:55:57.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.104" endtime="20201030 15:55:57.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.116" endtime="20201030 15:55:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.115" endtime="20201030 15:55:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.114" endtime="20201030 15:55:57.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.756" endtime="20201030 15:55:57.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:56.756" endtime="20201030 15:55:57.137"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.146" endtime="20201030 15:55:57.164"></status>
</kw>
<msg timestamp="20201030 15:55:57.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.144" endtime="20201030 15:55:57.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.165" endtime="20201030 15:55:57.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.168" endtime="20201030 15:55:57.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.142" endtime="20201030 15:55:57.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.139" endtime="20201030 15:55:57.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.177" endtime="20201030 15:55:57.462"></status>
</kw>
<msg timestamp="20201030 15:55:57.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.175" endtime="20201030 15:55:57.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.466" endtime="20201030 15:55:57.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.475" endtime="20201030 15:55:57.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.173" endtime="20201030 15:55:57.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.171" endtime="20201030 15:55:57.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.481" level="INFO">${RESULT} = [{'diff': 6.307000000000187e-05}, {'diff': 6.302800000000316e-05}, {'diff': 6.269400000000203e-05}, {'diff': 6.236100000000036e-05}, {'diff': 6.251399999999963e-05}, {'diff': 6.237499999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:57.478" endtime="20201030 15:55:57.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.486" level="INFO">${ACCURACY} = {'diff': [6.307000000000187e-05, 6.302800000000316e-05, 6.269400000000203e-05, 6.236100000000036e-05, 6.251399999999963e-05, 6.237499999999993e-05, 6.255499999999886e-05, 6.302800000000316e-05, 6.2195...</msg>
<status status="PASS" starttime="20201030 15:55:57.482" endtime="20201030 15:55:57.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.491" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.490" endtime="20201030 15:55:57.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.493" level="INFO">VALUE: [6.307000000000187e-05, 6.302800000000316e-05, 6.269400000000203e-05, 6.236100000000036e-05, 6.251399999999963e-05, 6.237499999999993e-05, 6.255499999999886e-05, 6.302800000000316e-05, 6.2195000000001e-05, 6.30690000000024e-05, 6.22080000000011e-05, 6.286100000000086e-05, 6.236099999999689e-05, 6.286100000000086e-05, 6.254099999999929e-05, 6.254199999999877e-05, 6.27080000000016e-05, 6.301400000000013e-05, 6.234700000000079e-05, 6.25279999999992e-05, 6.2889e-05, 6.25279999999992e-05, 6.30279999999997e-05, 6.305499999999936e-05, 6.28340000000012e-05, 6.219400000000153e-05, 6.234700000000079e-05, 6.302700000000022e-05, 6.236100000000036e-05, 6.304199999999927e-05, 6.287500000000043e-05, 6.237499999999993e-05, 6.219400000000153e-05, 6.2889e-05, 6.218099999999796e-05, 6.247200000000092e-05, 6.269499999999803e-05, 6.304199999999927e-05, 6.286100000000086e-05, 6.230599999999809e-05, 6.287500000000043e-05, 6.236099999999689e-05, 6.252699999999972e-05, 6.237499999999993e-05, 6.236100000000036e-05, 6.287500000000043e-05, 6.254199999999877e-05, 6.286099999999739e-05, 6.259700000000104e-05, 6.286099999999739e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.492" endtime="20201030 15:55:57.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.487" endtime="20201030 15:55:57.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.498" endtime="20201030 15:55:57.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.497" endtime="20201030 15:55:57.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.496" endtime="20201030 15:55:57.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.138" endtime="20201030 15:55:57.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.137" endtime="20201030 15:55:57.519"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.528" endtime="20201030 15:55:57.545"></status>
</kw>
<msg timestamp="20201030 15:55:57.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.526" endtime="20201030 15:55:57.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.547" endtime="20201030 15:55:57.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.549" endtime="20201030 15:55:57.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.523" endtime="20201030 15:55:57.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.521" endtime="20201030 15:55:57.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.558" endtime="20201030 15:55:57.846"></status>
</kw>
<msg timestamp="20201030 15:55:57.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.557" endtime="20201030 15:55:57.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022540597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.850" endtime="20201030 15:55:57.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.858" endtime="20201030 15:55:57.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.554" endtime="20201030 15:55:57.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.552" endtime="20201030 15:55:57.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:57.865" level="INFO">${RESULT} = [{'diff': 6.36950000000025e-05}, {'diff': 6.334800000000126e-05}, {'diff': 6.337499999999746e-05}, {'diff': 6.319400000000253e-05}, {'diff': 6.35280000000002e-05}, {'diff': 6.354199999999977e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:55:57.862" endtime="20201030 15:55:57.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:57.869" level="INFO">${ACCURACY} = {'diff': [6.36950000000025e-05, 6.334800000000126e-05, 6.337499999999746e-05, 6.319400000000253e-05, 6.35280000000002e-05, 6.354199999999977e-05, 6.367999999999999e-05, 6.376400000000088e-05, 6.352800...</msg>
<status status="PASS" starttime="20201030 15:55:57.866" endtime="20201030 15:55:57.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.874" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:55:57.872" endtime="20201030 15:55:57.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.876" level="INFO">VALUE: [6.36950000000025e-05, 6.334800000000126e-05, 6.337499999999746e-05, 6.319400000000253e-05, 6.35280000000002e-05, 6.354199999999977e-05, 6.367999999999999e-05, 6.376400000000088e-05, 6.35280000000002e-05, 6.370799999999913e-05, 6.391600000000067e-05, 6.337500000000093e-05, 6.341600000000017e-05, 6.404200000000027e-05, 6.32089999999981e-05, 6.40280000000007e-05, 6.318099999999896e-05, 6.337500000000093e-05, 6.317999999999949e-05, 6.402700000000122e-05, 6.351400000000063e-05, 6.372200000000217e-05, 6.337500000000093e-05, 6.318000000000296e-05, 6.333299999999875e-05, 6.386100000000186e-05, 6.401400000000113e-05, 6.384800000000176e-05, 6.40280000000007e-05, 6.386100000000186e-05, 6.40280000000007e-05, 6.350000000000106e-05, 6.336100000000136e-05, 6.387500000000143e-05, 6.32080000000021e-05, 6.404200000000027e-05, 6.337499999999746e-05, 6.32080000000021e-05, 6.319399999999906e-05, 6.337500000000093e-05, 6.336099999999789e-05, 6.345799999999888e-05, 6.32500000000008e-05, 6.387500000000143e-05, 6.35280000000002e-05, 6.404100000000079e-05, 6.386099999999839e-05, 6.367999999999999e-05, 6.386099999999839e-05, 6.35280000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:55:57.875" endtime="20201030 15:55:57.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.870" endtime="20201030 15:55:57.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:57.881" endtime="20201030 15:55:57.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.879" endtime="20201030 15:55:57.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.878" endtime="20201030 15:55:57.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.520" endtime="20201030 15:55:57.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.519" endtime="20201030 15:55:57.902"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.911" endtime="20201030 15:55:57.929"></status>
</kw>
<msg timestamp="20201030 15:55:57.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.909" endtime="20201030 15:55:57.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:57.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:57.931" endtime="20201030 15:55:57.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.933" endtime="20201030 15:55:57.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.906" endtime="20201030 15:55:57.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.904" endtime="20201030 15:55:57.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:57.942" endtime="20201030 15:55:58.228"></status>
</kw>
<msg timestamp="20201030 15:55:58.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:57.940" endtime="20201030 15:55:58.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023347569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023412097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.232" endtime="20201030 15:55:58.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.241" endtime="20201030 15:55:58.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.938" endtime="20201030 15:55:58.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.936" endtime="20201030 15:55:58.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.247" level="INFO">${RESULT} = [{'diff': 6.45280000000012e-05}, {'diff': 6.484699999999982e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.452799999999773e-05}, {'diff': 6.462499999999871e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:58.244" endtime="20201030 15:55:58.247"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.251" level="INFO">${ACCURACY} = {'diff': [6.45280000000012e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.502799999999823e-05, 6.452799999999773e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.45280000000012e-05, 6.418099...</msg>
<status status="PASS" starttime="20201030 15:55:58.248" endtime="20201030 15:55:58.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.256" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.255" endtime="20201030 15:55:58.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.258" level="INFO">VALUE: [6.45280000000012e-05, 6.484699999999982e-05, 6.486099999999939e-05, 6.502799999999823e-05, 6.452799999999773e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.45280000000012e-05, 6.418099999999996e-05, 6.497199999999995e-05, 6.419499999999953e-05, 6.498600000000299e-05, 6.449999999999859e-05, 6.502799999999823e-05, 6.454200000000077e-05, 6.469400000000056e-05, 6.45280000000012e-05, 6.452799999999773e-05, 6.434699999999932e-05, 6.486099999999939e-05, 6.419499999999953e-05, 6.469500000000003e-05, 6.419499999999953e-05, 6.43479999999988e-05, 6.487499999999896e-05, 6.469399999999709e-05, 6.468000000000099e-05, 6.418000000000049e-05, 6.486100000000286e-05, 6.440300000000107e-05, 6.487499999999896e-05, 6.502799999999823e-05, 6.486099999999939e-05, 6.469500000000003e-05, 6.486099999999939e-05, 6.43340000000027e-05, 6.486100000000286e-05, 6.50280000000017e-05, 6.436200000000183e-05, 6.436200000000183e-05, 6.499999999999909e-05, 6.468000000000099e-05, 6.418000000000049e-05, 6.486099999999939e-05, 6.469400000000056e-05, 6.454200000000077e-05, 6.47639999999984e-05, 6.487499999999896e-05, 6.419499999999953e-05, 6.412500000000168e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.257" endtime="20201030 15:55:58.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.252" endtime="20201030 15:55:58.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.264" endtime="20201030 15:55:58.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.263" endtime="20201030 15:55:58.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.261" endtime="20201030 15:55:58.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.903" endtime="20201030 15:55:58.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:57.902" endtime="20201030 15:55:58.285"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.293" endtime="20201030 15:55:58.311"></status>
</kw>
<msg timestamp="20201030 15:55:58.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.292" endtime="20201030 15:55:58.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.313" endtime="20201030 15:55:58.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.315" endtime="20201030 15:55:58.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.289" endtime="20201030 15:55:58.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.287" endtime="20201030 15:55:58.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.324" endtime="20201030 15:55:58.611"></status>
</kw>
<msg timestamp="20201030 15:55:58.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.323" endtime="20201030 15:55:58.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022147361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022212889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.615" endtime="20201030 15:55:58.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.623" endtime="20201030 15:55:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.320" endtime="20201030 15:55:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.318" endtime="20201030 15:55:58.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:58.630" level="INFO">${RESULT} = [{'diff': 6.552799999999873e-05}, {'diff': 6.538899999999903e-05}, {'diff': 6.561100000000014e-05}, {'diff': 6.551400000000263e-05}, {'diff': 6.536199999999937e-05}, {'diff': 6.551400000000263e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:58.627" endtime="20201030 15:55:58.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:58.635" level="INFO">${ACCURACY} = {'diff': [6.552799999999873e-05, 6.538899999999903e-05, 6.561100000000014e-05, 6.551400000000263e-05, 6.536199999999937e-05, 6.551400000000263e-05, 6.534700000000032e-05, 6.519399999999759e-05, 6.5221...</msg>
<status status="PASS" starttime="20201030 15:55:58.631" endtime="20201030 15:55:58.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.639" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:55:58.638" endtime="20201030 15:55:58.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.642" level="INFO">VALUE: [6.552799999999873e-05, 6.538899999999903e-05, 6.561100000000014e-05, 6.551400000000263e-05, 6.536199999999937e-05, 6.551400000000263e-05, 6.534700000000032e-05, 6.519399999999759e-05, 6.522199999999673e-05, 6.534700000000032e-05, 6.519400000000106e-05, 6.520800000000063e-05, 6.604200000000227e-05, 6.569399999999809e-05, 6.602799999999923e-05, 6.518100000000096e-05, 6.52090000000001e-05, 6.569499999999756e-05, 6.554099999999882e-05, 6.519500000000053e-05, 6.602699999999975e-05, 6.604099999999932e-05, 6.604200000000227e-05, 6.520800000000063e-05, 6.584700000000082e-05, 6.55419999999983e-05, 6.518100000000096e-05, 6.587499999999996e-05, 6.569500000000103e-05, 6.586100000000039e-05, 6.519500000000053e-05, 6.550000000000306e-05, 6.540300000000207e-05, 6.568100000000146e-05, 6.519400000000106e-05, 6.586100000000039e-05, 6.551399999999916e-05, 6.536099999999989e-05, 6.59029999999991e-05, 6.519399999999759e-05, 6.586100000000039e-05, 6.526299999999943e-05, 6.587499999999996e-05, 6.57090000000006e-05, 6.568100000000146e-05, 6.536099999999989e-05, 6.555500000000186e-05, 6.595900000000085e-05, 6.536199999999937e-05, 6.569400000000156e-05]</msg>
<status status="PASS" starttime="20201030 15:55:58.640" endtime="20201030 15:55:58.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.636" endtime="20201030 15:55:58.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:58.647" endtime="20201030 15:55:58.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.645" endtime="20201030 15:55:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.644" endtime="20201030 15:55:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.286" endtime="20201030 15:55:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.285" endtime="20201030 15:55:58.667"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.676" endtime="20201030 15:55:58.694"></status>
</kw>
<msg timestamp="20201030 15:55:58.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.675" endtime="20201030 15:55:58.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:58.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:58.696" endtime="20201030 15:55:58.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.698" endtime="20201030 15:55:58.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.672" endtime="20201030 15:55:58.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.670" endtime="20201030 15:55:58.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:58.707" endtime="20201030 15:55:58.994"></status>
</kw>
<msg timestamp="20201030 15:55:58.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.706" endtime="20201030 15:55:58.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022736042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022803153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:58.998" endtime="20201030 15:55:59.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.006" endtime="20201030 15:55:59.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.703" endtime="20201030 15:55:59.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.701" endtime="20201030 15:55:59.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.013" level="INFO">${RESULT} = [{'diff': 6.711099999999817e-05}, {'diff': 6.669399999999909e-05}, {'diff': 6.684699999999835e-05}, {'diff': 6.617999999999902e-05}, {'diff': 6.669399999999909e-05}, {'diff': 6.701400000000066e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:59.010" endtime="20201030 15:55:59.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.017" level="INFO">${ACCURACY} = {'diff': [6.711099999999817e-05, 6.669399999999909e-05, 6.684699999999835e-05, 6.617999999999902e-05, 6.669399999999909e-05, 6.701400000000066e-05, 6.684699999999835e-05, 6.615299999999935e-05, 6.6444...</msg>
<status status="PASS" starttime="20201030 15:55:59.014" endtime="20201030 15:55:59.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.022" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.021" endtime="20201030 15:55:59.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.024" level="INFO">VALUE: [6.711099999999817e-05, 6.669399999999909e-05, 6.684699999999835e-05, 6.617999999999902e-05, 6.669399999999909e-05, 6.701400000000066e-05, 6.684699999999835e-05, 6.615299999999935e-05, 6.64440000000023e-05, 6.669499999999856e-05, 6.669499999999856e-05, 6.70419999999998e-05, 6.65419999999993e-05, 6.670799999999866e-05, 6.651400000000016e-05, 6.686100000000139e-05, 6.65280000000032e-05, 6.669399999999909e-05, 6.652799999999973e-05, 6.701400000000066e-05, 6.617999999999902e-05, 6.636100000000089e-05, 6.619400000000206e-05, 6.669500000000203e-05, 6.692999999999977e-05, 6.62090000000011e-05, 6.618099999999849e-05, 6.67090000000016e-05, 6.643100000000221e-05, 6.686100000000139e-05, 6.673600000000127e-05, 6.695800000000238e-05, 6.636100000000089e-05, 6.651400000000016e-05, 6.617999999999902e-05, 6.619400000000206e-05, 6.684699999999835e-05, 6.687499999999749e-05, 6.702800000000023e-05, 6.638900000000003e-05, 6.669500000000203e-05, 6.63480000000008e-05, 6.637500000000046e-05, 6.690200000000063e-05, 6.619400000000206e-05, 6.654099999999982e-05, 6.669399999999909e-05, 6.702800000000023e-05, 6.65419999999993e-05, 6.669399999999909e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.023" endtime="20201030 15:55:59.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.018" endtime="20201030 15:55:59.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.029" endtime="20201030 15:55:59.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.028" endtime="20201030 15:55:59.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.026" endtime="20201030 15:55:59.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.668" endtime="20201030 15:55:59.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:58.668" endtime="20201030 15:55:59.050"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.058" endtime="20201030 15:55:59.077"></status>
</kw>
<msg timestamp="20201030 15:55:59.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.057" endtime="20201030 15:55:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.079" endtime="20201030 15:55:59.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.081" endtime="20201030 15:55:59.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.054" endtime="20201030 15:55:59.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.052" endtime="20201030 15:55:59.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.090" endtime="20201030 15:55:59.376"></status>
</kw>
<msg timestamp="20201030 15:55:59.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.088" endtime="20201030 15:55:59.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023123625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023191458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.380" endtime="20201030 15:55:59.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.388" endtime="20201030 15:55:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.086" endtime="20201030 15:55:59.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.084" endtime="20201030 15:55:59.391"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.395" level="INFO">${RESULT} = [{'diff': 6.783300000000325e-05}, {'diff': 6.734699999999885e-05}, {'diff': 6.787500000000196e-05}, {'diff': 6.719399999999959e-05}, {'diff': 6.787500000000196e-05}, {'diff': 6.734700000000232e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:59.391" endtime="20201030 15:55:59.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.399" level="INFO">${ACCURACY} = {'diff': [6.783300000000325e-05, 6.734699999999885e-05, 6.787500000000196e-05, 6.719399999999959e-05, 6.787500000000196e-05, 6.734700000000232e-05, 6.738900000000103e-05, 6.752800000000073e-05, 6.7542...</msg>
<status status="PASS" starttime="20201030 15:55:59.396" endtime="20201030 15:55:59.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.403" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.402" endtime="20201030 15:55:59.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.406" level="INFO">VALUE: [6.783300000000325e-05, 6.734699999999885e-05, 6.787500000000196e-05, 6.719399999999959e-05, 6.787500000000196e-05, 6.734700000000232e-05, 6.738900000000103e-05, 6.752800000000073e-05, 6.75420000000003e-05, 6.801399999999819e-05, 6.802800000000123e-05, 6.754099999999735e-05, 6.751300000000168e-05, 6.783299999999978e-05, 6.786099999999892e-05, 6.787499999999849e-05, 6.788899999999806e-05, 6.786099999999892e-05, 6.783299999999978e-05, 6.75420000000003e-05, 6.779200000000055e-05, 6.786100000000239e-05, 6.718099999999949e-05, 6.788899999999806e-05, 6.802800000000123e-05, 6.769499999999956e-05, 6.752699999999778e-05, 6.736099999999842e-05, 6.786099999999892e-05, 6.736100000000189e-05, 6.752800000000073e-05, 6.768000000000052e-05, 6.730599999999962e-05, 6.720799999999916e-05, 6.75700000000029e-05, 6.758299999999953e-05, 6.802799999999776e-05, 6.716699999999992e-05, 6.802800000000123e-05, 6.784699999999935e-05, 6.719499999999906e-05, 6.738900000000103e-05, 6.802699999999828e-05, 6.734699999999885e-05, 6.786100000000239e-05, 6.787499999999849e-05, 6.806999999999994e-05, 6.724999999999787e-05, 6.802800000000123e-05, 6.749999999999812e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.404" endtime="20201030 15:55:59.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.400" endtime="20201030 15:55:59.408"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.411" endtime="20201030 15:55:59.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.410" endtime="20201030 15:55:59.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.409" endtime="20201030 15:55:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.051" endtime="20201030 15:55:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.050" endtime="20201030 15:55:59.432"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.441" endtime="20201030 15:55:59.459"></status>
</kw>
<msg timestamp="20201030 15:55:59.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.439" endtime="20201030 15:55:59.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.460" endtime="20201030 15:55:59.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.463" endtime="20201030 15:55:59.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.437" endtime="20201030 15:55:59.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.435" endtime="20201030 15:55:59.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.472" endtime="20201030 15:55:59.758"></status>
</kw>
<msg timestamp="20201030 15:55:59.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.470" endtime="20201030 15:55:59.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022019792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:59.762" endtime="20201030 15:55:59.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.770" endtime="20201030 15:55:59.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.468" endtime="20201030 15:55:59.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.466" endtime="20201030 15:55:59.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:59.777" level="INFO">${RESULT} = [{'diff': 6.852799999999826e-05}, {'diff': 6.818100000000049e-05}, {'diff': 6.852799999999826e-05}, {'diff': 6.819500000000006e-05}, {'diff': 6.874999999999937e-05}, {'diff': 6.836100000000289e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:55:59.774" endtime="20201030 15:55:59.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:55:59.785" level="INFO">${ACCURACY} = {'diff': [6.852799999999826e-05, 6.818100000000049e-05, 6.852799999999826e-05, 6.819500000000006e-05, 6.874999999999937e-05, 6.836100000000289e-05, 6.819400000000059e-05, 6.818000000000102e-05, 6.9041...</msg>
<status status="PASS" starttime="20201030 15:55:59.778" endtime="20201030 15:55:59.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.790" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:55:59.788" endtime="20201030 15:55:59.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.792" level="INFO">VALUE: [6.852799999999826e-05, 6.818100000000049e-05, 6.852799999999826e-05, 6.819500000000006e-05, 6.874999999999937e-05, 6.836100000000289e-05, 6.819400000000059e-05, 6.818000000000102e-05, 6.904199999999833e-05, 6.90420000000018e-05, 6.836099999999942e-05, 6.870800000000066e-05, 6.870900000000013e-05, 6.887499999999949e-05, 6.836099999999942e-05, 6.886099999999992e-05, 6.90970000000006e-05, 6.836099999999942e-05, 6.884700000000035e-05, 6.84169999999977e-05, 6.818000000000102e-05, 6.855600000000087e-05, 6.819400000000059e-05, 6.904199999999833e-05, 6.852800000000173e-05, 6.884700000000035e-05, 6.870900000000013e-05, 6.884700000000035e-05, 6.902799999999876e-05, 6.855500000000139e-05, 6.833399999999976e-05, 6.820800000000016e-05, 6.902699999999928e-05, 6.887499999999949e-05, 6.841700000000117e-05, 6.836099999999942e-05, 6.886099999999992e-05, 6.869400000000109e-05, 6.869400000000109e-05, 6.822300000000267e-05, 6.886099999999992e-05, 6.838900000000203e-05, 6.834699999999985e-05, 6.884799999999983e-05, 6.83619999999989e-05, 6.834799999999933e-05, 6.869399999999762e-05, 6.888900000000253e-05, 6.818000000000102e-05, 6.902799999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:55:59.791" endtime="20201030 15:55:59.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.786" endtime="20201030 15:55:59.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:59.798" endtime="20201030 15:55:59.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.796" endtime="20201030 15:55:59.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.795" endtime="20201030 15:55:59.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.433" endtime="20201030 15:55:59.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.432" endtime="20201030 15:55:59.819"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.828" endtime="20201030 15:55:59.847"></status>
</kw>
<msg timestamp="20201030 15:55:59.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.826" endtime="20201030 15:55:59.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:59.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:59.848" endtime="20201030 15:55:59.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.850" endtime="20201030 15:55:59.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.823" endtime="20201030 15:55:59.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.821" endtime="20201030 15:55:59.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:59.859" endtime="20201030 15:56:00.191"></status>
</kw>
<msg timestamp="20201030 15:56:00.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:55:59.858" endtime="20201030 15:56:00.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0228905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:56:00.196" endtime="20201030 15:56:00.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.204" endtime="20201030 15:56:00.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.855" endtime="20201030 15:56:00.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.854" endtime="20201030 15:56:00.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.210" level="INFO">${RESULT} = [{'diff': 6.952799999999926e-05}, {'diff': 6.934700000000085e-05}, {'diff': 7.002799999999976e-05}, {'diff': 6.968100000000199e-05}, {'diff': 6.920800000000116e-05}, {'diff': 6.937499999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:00.207" endtime="20201030 15:56:00.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.215" level="INFO">${ACCURACY} = {'diff': [6.952799999999926e-05, 6.934700000000085e-05, 7.002799999999976e-05, 6.968100000000199e-05, 6.920800000000116e-05, 6.937499999999999e-05, 6.952699999999978e-05, 6.986100000000092e-05, 6.9346...</msg>
<status status="PASS" starttime="20201030 15:56:00.211" endtime="20201030 15:56:00.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.219" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.218" endtime="20201030 15:56:00.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.222" level="INFO">VALUE: [6.952799999999926e-05, 6.934700000000085e-05, 7.002799999999976e-05, 6.968100000000199e-05, 6.920800000000116e-05, 6.937499999999999e-05, 6.952699999999978e-05, 6.986100000000092e-05, 6.934699999999738e-05, 6.919400000000159e-05, 6.968000000000252e-05, 6.99169999999992e-05, 6.919400000000159e-05, 6.937499999999999e-05, 6.936099999999695e-05, 6.952799999999926e-05, 6.986099999999745e-05, 6.951399999999969e-05, 6.969499999999809e-05, 6.954099999999935e-05, 7.004099999999985e-05, 6.937499999999999e-05, 6.915299999999888e-05, 6.984700000000135e-05, 6.987500000000049e-05, 6.936100000000042e-05, 6.951399999999969e-05, 7.001400000000019e-05, 7.002799999999976e-05, 6.969500000000156e-05, 6.968100000000199e-05, 6.952799999999926e-05, 7.002799999999976e-05, 7.004099999999985e-05, 6.984699999999788e-05, 6.917999999999855e-05, 6.969399999999862e-05, 6.986100000000092e-05, 6.969399999999862e-05, 6.967999999999905e-05, 6.936100000000042e-05, 7.004199999999933e-05, 7.00559999999989e-05, 6.94160000000027e-05, 6.952799999999926e-05, 6.937499999999999e-05, 6.920799999999769e-05, 6.951299999999674e-05, 7.001299999999724e-05, 7.001400000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.220" endtime="20201030 15:56:00.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.216" endtime="20201030 15:56:00.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.227" endtime="20201030 15:56:00.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.225" endtime="20201030 15:56:00.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.224" endtime="20201030 15:56:00.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.820" endtime="20201030 15:56:00.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:59.819" endtime="20201030 15:56:00.248"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.256" endtime="20201030 15:56:00.274"></status>
</kw>
<msg timestamp="20201030 15:56:00.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.255" endtime="20201030 15:56:00.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.276" endtime="20201030 15:56:00.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.278" endtime="20201030 15:56:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.252" endtime="20201030 15:56:00.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.250" endtime="20201030 15:56:00.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.287" endtime="20201030 15:56:00.573"></status>
</kw>
<msg timestamp="20201030 15:56:00.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.286" endtime="20201030 15:56:00.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021977319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:00.577" endtime="20201030 15:56:00.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.585" endtime="20201030 15:56:00.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.283" endtime="20201030 15:56:00.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.281" endtime="20201030 15:56:00.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.592" level="INFO">${RESULT} = [{'diff': 7.011200000000065e-05}, {'diff': 7.102700000000128e-05}, {'diff': 7.019400000000259e-05}, {'diff': 7.051399999999722e-05}, {'diff': 7.036099999999795e-05}, {'diff': 7.087499999999802e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:00.589" endtime="20201030 15:56:00.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.597" level="INFO">${ACCURACY} = {'diff': [7.011200000000065e-05, 7.102700000000128e-05, 7.019400000000259e-05, 7.051399999999722e-05, 7.036099999999795e-05, 7.087499999999802e-05, 7.037500000000099e-05, 7.102800000000076e-05, 7.0193...</msg>
<status status="PASS" starttime="20201030 15:56:00.593" endtime="20201030 15:56:00.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.601" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.600" endtime="20201030 15:56:00.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.604" level="INFO">VALUE: [7.011200000000065e-05, 7.102700000000128e-05, 7.019400000000259e-05, 7.051399999999722e-05, 7.036099999999795e-05, 7.087499999999802e-05, 7.037500000000099e-05, 7.102800000000076e-05, 7.019399999999912e-05, 7.070899999999866e-05, 7.108299999999956e-05, 7.019500000000206e-05, 7.052799999999679e-05, 7.084799999999836e-05, 7.08620000000014e-05, 7.063800000000134e-05, 7.054100000000035e-05, 7.019400000000259e-05, 7.086099999999845e-05, 7.084699999999888e-05, 7.019399999999912e-05, 7.019400000000259e-05, 7.088900000000106e-05, 7.040299999999666e-05, 7.019499999999859e-05, 7.051400000000069e-05, 7.03620000000009e-05, 7.019499999999859e-05, 7.020799999999869e-05, 7.012500000000074e-05, 7.102700000000128e-05, 7.098599999999858e-05, 7.069399999999962e-05, 7.054199999999983e-05, 7.037499999999752e-05, 7.054199999999983e-05, 7.088899999999759e-05, 7.102800000000076e-05, 7.019499999999859e-05, 7.063900000000081e-05, 7.052800000000026e-05, 7.023599999999783e-05, 7.052700000000078e-05, 7.070799999999919e-05, 7.070799999999919e-05, 7.051400000000069e-05, 7.036100000000142e-05, 7.052800000000026e-05, 7.068099999999952e-05, 7.087499999999802e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.602" endtime="20201030 15:56:00.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.598" endtime="20201030 15:56:00.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.609" endtime="20201030 15:56:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.607" endtime="20201030 15:56:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.606" endtime="20201030 15:56:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.249" endtime="20201030 15:56:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.248" endtime="20201030 15:56:00.629"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.638" endtime="20201030 15:56:00.656"></status>
</kw>
<msg timestamp="20201030 15:56:00.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.636" endtime="20201030 15:56:00.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:00.657" endtime="20201030 15:56:00.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.660" endtime="20201030 15:56:00.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.634" endtime="20201030 15:56:00.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.632" endtime="20201030 15:56:00.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.669" endtime="20201030 15:56:00.955"></status>
</kw>
<msg timestamp="20201030 15:56:00.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:00.667" endtime="20201030 15:56:00.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022142, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022213347, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:00.959" endtime="20201030 15:56:00.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:00.968" endtime="20201030 15:56:00.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.665" endtime="20201030 15:56:00.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.663" endtime="20201030 15:56:00.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:00.974" level="INFO">${RESULT} = [{'diff': 7.134700000000285e-05}, {'diff': 7.170800000000019e-05}, {'diff': 7.119399999999665e-05}, {'diff': 7.186099999999945e-05}, {'diff': 7.162499999999877e-05}, {'diff': 7.170900000000313e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:00.971" endtime="20201030 15:56:00.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:00.978" level="INFO">${ACCURACY} = {'diff': [7.134700000000285e-05, 7.170800000000019e-05, 7.119399999999665e-05, 7.186099999999945e-05, 7.162499999999877e-05, 7.170900000000313e-05, 7.119499999999959e-05, 7.169500000000009e-05, 7.1860...</msg>
<status status="PASS" starttime="20201030 15:56:00.975" endtime="20201030 15:56:00.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.983" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:56:00.982" endtime="20201030 15:56:00.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:00.985" level="INFO">VALUE: [7.134700000000285e-05, 7.170800000000019e-05, 7.119399999999665e-05, 7.186099999999945e-05, 7.162499999999877e-05, 7.170900000000313e-05, 7.119499999999959e-05, 7.169500000000009e-05, 7.186099999999945e-05, 7.119499999999959e-05, 7.202699999999881e-05, 7.154100000000135e-05, 7.172199999999976e-05, 7.152800000000126e-05, 7.152799999999779e-05, 7.151399999999822e-05, 7.137500000000199e-05, 7.187499999999902e-05, 7.169500000000009e-05, 7.119499999999959e-05, 7.183399999999979e-05, 7.186099999999945e-05, 7.198700000000252e-05, 7.172199999999976e-05, 7.136099999999895e-05, 7.155500000000092e-05, 7.120799999999969e-05, 7.169399999999715e-05, 7.170800000000019e-05, 7.142999999999733e-05, 7.138900000000156e-05, 7.190300000000163e-05, 7.170899999999966e-05, 7.170899999999966e-05, 7.119499999999959e-05, 7.130600000000015e-05, 7.206899999999752e-05, 7.204100000000185e-05, 7.120799999999969e-05, 7.136099999999895e-05, 7.170800000000019e-05, 7.137500000000199e-05, 7.187499999999902e-05, 7.204200000000133e-05, 7.19300000000013e-05, 7.204200000000133e-05, 7.137499999999852e-05, 7.165299999999791e-05, 7.187499999999902e-05, 7.122199999999926e-05]</msg>
<status status="PASS" starttime="20201030 15:56:00.984" endtime="20201030 15:56:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.979" endtime="20201030 15:56:00.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:00.990" endtime="20201030 15:56:01.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.989" endtime="20201030 15:56:01.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.988" endtime="20201030 15:56:01.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.630" endtime="20201030 15:56:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:00.629" endtime="20201030 15:56:01.011"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.019" endtime="20201030 15:56:01.039"></status>
</kw>
<msg timestamp="20201030 15:56:01.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.018" endtime="20201030 15:56:01.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.040" endtime="20201030 15:56:01.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.043" endtime="20201030 15:56:01.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.015" endtime="20201030 15:56:01.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.013" endtime="20201030 15:56:01.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.051" endtime="20201030 15:56:01.339"></status>
</kw>
<msg timestamp="20201030 15:56:01.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.050" endtime="20201030 15:56:01.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022970139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023042333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.344" endtime="20201030 15:56:01.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.354" endtime="20201030 15:56:01.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.047" endtime="20201030 15:56:01.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.046" endtime="20201030 15:56:01.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.361" level="INFO">${RESULT} = [{'diff': 7.219400000000112e-05}, {'diff': 7.276399999999947e-05}, {'diff': 7.301399999999972e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.220799999999722e-05}, {'diff': 7.251399999999922e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:01.358" endtime="20201030 15:56:01.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.365" level="INFO">${ACCURACY} = {'diff': [7.219400000000112e-05, 7.276399999999947e-05, 7.301399999999972e-05, 7.284700000000088e-05, 7.220799999999722e-05, 7.251399999999922e-05, 7.252799999999879e-05, 7.266700000000195e-05, 7.2681...</msg>
<status status="PASS" starttime="20201030 15:56:01.362" endtime="20201030 15:56:01.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.369" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.368" endtime="20201030 15:56:01.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.373" level="INFO">VALUE: [7.219400000000112e-05, 7.276399999999947e-05, 7.301399999999972e-05, 7.284700000000088e-05, 7.220799999999722e-05, 7.251399999999922e-05, 7.252799999999879e-05, 7.266700000000195e-05, 7.268100000000152e-05, 7.302799999999929e-05, 7.222200000000026e-05, 7.272200000000076e-05, 7.218000000000155e-05, 7.304099999999938e-05, 7.219400000000112e-05, 7.286100000000045e-05, 7.254199999999836e-05, 7.218100000000102e-05, 7.302799999999929e-05, 7.287500000000002e-05, 7.226400000000244e-05, 7.286100000000045e-05, 7.218100000000102e-05, 7.270900000000066e-05, 7.268100000000152e-05, 7.236099999999995e-05, 7.236099999999995e-05, 7.219400000000112e-05, 7.270800000000119e-05, 7.22499999999994e-05, 7.29309999999983e-05, 7.286100000000045e-05, 7.220900000000016e-05, 7.284699999999741e-05, 7.234700000000038e-05, 7.269500000000109e-05, 7.252799999999879e-05, 7.277799999999904e-05, 7.234700000000038e-05, 7.227799999999854e-05, 7.266599999999901e-05, 7.217999999999808e-05, 7.236099999999995e-05, 7.220800000000069e-05, 7.233300000000081e-05, 7.266699999999848e-05, 7.236099999999995e-05, 7.286100000000045e-05, 7.219499999999712e-05, 7.286100000000045e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.370" endtime="20201030 15:56:01.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.366" endtime="20201030 15:56:01.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.378" endtime="20201030 15:56:01.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.377" endtime="20201030 15:56:01.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.376" endtime="20201030 15:56:01.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.012" endtime="20201030 15:56:01.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.011" endtime="20201030 15:56:01.399"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.408" endtime="20201030 15:56:01.425"></status>
</kw>
<msg timestamp="20201030 15:56:01.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.406" endtime="20201030 15:56:01.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.427" endtime="20201030 15:56:01.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.429" endtime="20201030 15:56:01.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.404" endtime="20201030 15:56:01.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.401" endtime="20201030 15:56:01.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.438" endtime="20201030 15:56:01.742"></status>
</kw>
<msg timestamp="20201030 15:56:01.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:01.437" endtime="20201030 15:56:01.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022350389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02242375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:01.747" endtime="20201030 15:56:01.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.755" endtime="20201030 15:56:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.434" endtime="20201030 15:56:01.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.433" endtime="20201030 15:56:01.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:01.761" level="INFO">${RESULT} = [{'diff': 7.336100000000095e-05}, {'diff': 7.319399999999865e-05}, {'diff': 7.333400000000129e-05}, {'diff': 7.352800000000326e-05}, {'diff': 7.351399999999675e-05}, {'diff': 7.329200000000258e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:01.758" endtime="20201030 15:56:01.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:01.766" level="INFO">${ACCURACY} = {'diff': [7.336100000000095e-05, 7.319399999999865e-05, 7.333400000000129e-05, 7.352800000000326e-05, 7.351399999999675e-05, 7.329200000000258e-05, 7.318099999999855e-05, 7.326399999999997e-05, 7.3693...</msg>
<status status="PASS" starttime="20201030 15:56:01.762" endtime="20201030 15:56:01.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.771" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:56:01.770" endtime="20201030 15:56:01.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.773" level="INFO">VALUE: [7.336100000000095e-05, 7.319399999999865e-05, 7.333400000000129e-05, 7.352800000000326e-05, 7.351399999999675e-05, 7.329200000000258e-05, 7.318099999999855e-05, 7.326399999999997e-05, 7.369399999999915e-05, 7.354099999999988e-05, 7.387499999999755e-05, 7.323600000000083e-05, 7.405599999999943e-05, 7.386100000000145e-05, 7.366699999999948e-05, 7.34439999999989e-05, 7.387499999999755e-05, 7.354199999999936e-05, 7.386099999999798e-05, 7.336199999999696e-05, 7.388899999999712e-05, 7.334699999999791e-05, 7.401400000000072e-05, 7.337500000000052e-05, 7.338900000000009e-05, 7.363900000000034e-05, 7.319399999999865e-05, 7.318099999999855e-05, 7.336100000000095e-05, 7.318099999999855e-05, 7.369500000000209e-05, 7.336100000000095e-05, 7.402799999999682e-05, 7.326399999999997e-05, 7.317999999999908e-05, 7.404099999999691e-05, 7.387499999999755e-05, 7.386099999999798e-05, 7.381899999999927e-05, 7.336099999999748e-05, 7.336100000000095e-05, 7.370899999999819e-05, 7.320900000000116e-05, 7.319499999999812e-05, 7.333300000000181e-05, 7.319500000000159e-05, 7.333399999999782e-05, 7.386100000000145e-05, 7.372200000000176e-05, 7.401400000000072e-05]</msg>
<status status="PASS" starttime="20201030 15:56:01.772" endtime="20201030 15:56:01.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.767" endtime="20201030 15:56:01.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:01.779" endtime="20201030 15:56:01.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.777" endtime="20201030 15:56:01.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.776" endtime="20201030 15:56:01.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.400" endtime="20201030 15:56:01.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.399" endtime="20201030 15:56:01.799"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.808" endtime="20201030 15:56:01.826"></status>
</kw>
<msg timestamp="20201030 15:56:01.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.806" endtime="20201030 15:56:01.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:01.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:01.828" endtime="20201030 15:56:01.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.831" endtime="20201030 15:56:01.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.804" endtime="20201030 15:56:01.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.802" endtime="20201030 15:56:01.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:01.840" endtime="20201030 15:56:02.127"></status>
</kw>
<msg timestamp="20201030 15:56:02.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:01.838" endtime="20201030 15:56:02.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022324208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022398972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.131" endtime="20201030 15:56:02.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.140" endtime="20201030 15:56:02.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.835" endtime="20201030 15:56:02.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.834" endtime="20201030 15:56:02.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.146" level="INFO">${RESULT} = [{'diff': 7.4763999999998e-05}, {'diff': 7.436099999999848e-05}, {'diff': 7.419499999999912e-05}, {'diff': 7.484699999999941e-05}, {'diff': 7.504200000000086e-05}, {'diff': 7.419399999999965e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:02.143" endtime="20201030 15:56:02.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.150" level="INFO">${ACCURACY} = {'diff': [7.4763999999998e-05, 7.436099999999848e-05, 7.419499999999912e-05, 7.484699999999941e-05, 7.504200000000086e-05, 7.419399999999965e-05, 7.452800000000079e-05, 7.487500000000202e-05, 7.472200...</msg>
<status status="PASS" starttime="20201030 15:56:02.147" endtime="20201030 15:56:02.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.155" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.154" endtime="20201030 15:56:02.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.157" level="INFO">VALUE: [7.4763999999998e-05, 7.436099999999848e-05, 7.419499999999912e-05, 7.484699999999941e-05, 7.504200000000086e-05, 7.419399999999965e-05, 7.452800000000079e-05, 7.487500000000202e-05, 7.472200000000276e-05, 7.483299999999984e-05, 7.469400000000015e-05, 7.437500000000152e-05, 7.454199999999689e-05, 7.469499999999962e-05, 7.502799999999782e-05, 7.488900000000159e-05, 7.427800000000054e-05, 7.452700000000131e-05, 7.438900000000109e-05, 7.502799999999782e-05, 7.502800000000129e-05, 7.468000000000058e-05, 7.469499999999962e-05, 7.479199999999714e-05, 7.491599999999779e-05, 7.420899999999869e-05, 7.423599999999836e-05, 7.420899999999869e-05, 7.487500000000202e-05, 7.506900000000052e-05, 7.504100000000138e-05, 7.436100000000195e-05, 7.468000000000058e-05, 7.484699999999941e-05, 7.468100000000005e-05, 7.470799999999972e-05, 7.469499999999962e-05, 7.507e-05, 7.469499999999962e-05, 7.469499999999962e-05, 7.506900000000052e-05, 7.434800000000186e-05, 7.468000000000058e-05, 7.454099999999741e-05, 7.49029999999977e-05, 7.434699999999891e-05, 7.488900000000159e-05, 7.436100000000195e-05, 7.468100000000005e-05, 7.45829999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.156" endtime="20201030 15:56:02.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.151" endtime="20201030 15:56:02.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.162" endtime="20201030 15:56:02.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.161" endtime="20201030 15:56:02.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.160" endtime="20201030 15:56:02.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.800" endtime="20201030 15:56:02.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:01.799" endtime="20201030 15:56:02.183"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.192" endtime="20201030 15:56:02.211"></status>
</kw>
<msg timestamp="20201030 15:56:02.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.190" endtime="20201030 15:56:02.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.213" endtime="20201030 15:56:02.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.215" endtime="20201030 15:56:02.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.188" endtime="20201030 15:56:02.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.186" endtime="20201030 15:56:02.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.224" endtime="20201030 15:56:02.511"></status>
</kw>
<msg timestamp="20201030 15:56:02.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.223" endtime="20201030 15:56:02.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023072514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.515" endtime="20201030 15:56:02.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.524" endtime="20201030 15:56:02.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.220" endtime="20201030 15:56:02.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.218" endtime="20201030 15:56:02.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.531" level="INFO">${RESULT} = [{'diff': 7.588899999999912e-05}, {'diff': 7.602799999999882e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.538899999999862e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.520899999999969e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:02.527" endtime="20201030 15:56:02.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.535" level="INFO">${ACCURACY} = {'diff': [7.588899999999912e-05, 7.602799999999882e-05, 7.548599999999961e-05, 7.538899999999862e-05, 7.548599999999961e-05, 7.520899999999969e-05, 7.602799999999882e-05, 7.569400000000115e-05, 7.6012...</msg>
<status status="PASS" starttime="20201030 15:56:02.532" endtime="20201030 15:56:02.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.539" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.538" endtime="20201030 15:56:02.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.542" level="INFO">VALUE: [7.588899999999912e-05, 7.602799999999882e-05, 7.548599999999961e-05, 7.538899999999862e-05, 7.548599999999961e-05, 7.520899999999969e-05, 7.602799999999882e-05, 7.569400000000115e-05, 7.601299999999978e-05, 7.591700000000173e-05, 7.520800000000022e-05, 7.583300000000084e-05, 7.569400000000115e-05, 7.608400000000057e-05, 7.552800000000179e-05, 7.552800000000179e-05, 7.568100000000105e-05, 7.552800000000179e-05, 7.554200000000136e-05, 7.554199999999789e-05, 7.601399999999925e-05, 7.552699999999885e-05, 7.604099999999892e-05, 7.536099999999948e-05, 7.567999999999811e-05, 7.519400000000065e-05, 7.536100000000295e-05, 7.554199999999789e-05, 7.569500000000062e-05, 7.516700000000098e-05, 7.60830000000011e-05, 7.601399999999925e-05, 7.518099999999708e-05, 7.536199999999896e-05, 7.536099999999948e-05, 7.602699999999935e-05, 7.584700000000041e-05, 7.587499999999955e-05, 7.536100000000295e-05, 7.554200000000136e-05, 7.555600000000093e-05, 7.568100000000105e-05, 7.534699999999991e-05, 7.568100000000105e-05, 7.569500000000062e-05, 7.602799999999882e-05, 7.551400000000222e-05, 7.523599999999936e-05, 7.537500000000252e-05, 7.584700000000041e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.540" endtime="20201030 15:56:02.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.536" endtime="20201030 15:56:02.544"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.547" endtime="20201030 15:56:02.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.546" endtime="20201030 15:56:02.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.545" endtime="20201030 15:56:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.184" endtime="20201030 15:56:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.184" endtime="20201030 15:56:02.568"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.577" endtime="20201030 15:56:02.595"></status>
</kw>
<msg timestamp="20201030 15:56:02.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.575" endtime="20201030 15:56:02.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.597" endtime="20201030 15:56:02.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.599" endtime="20201030 15:56:02.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.573" endtime="20201030 15:56:02.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.570" endtime="20201030 15:56:02.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.608" endtime="20201030 15:56:02.894"></status>
</kw>
<msg timestamp="20201030 15:56:02.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.607" endtime="20201030 15:56:02.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022536431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.898" endtime="20201030 15:56:02.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.907" endtime="20201030 15:56:02.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.604" endtime="20201030 15:56:02.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.603" endtime="20201030 15:56:02.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:02.913" level="INFO">${RESULT} = [{'diff': 7.687500000000055e-05}, {'diff': 7.669500000000162e-05}, {'diff': 7.636100000000048e-05}, {'diff': 7.636100000000048e-05}, {'diff': 7.684700000000141e-05}, {'diff': 7.669400000000215e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:02.910" endtime="20201030 15:56:02.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:02.918" level="INFO">${ACCURACY} = {'diff': [7.687500000000055e-05, 7.669500000000162e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.684700000000141e-05, 7.669400000000215e-05, 7.617999999999861e-05, 7.669399999999868e-05, 7.7027...</msg>
<status status="PASS" starttime="20201030 15:56:02.914" endtime="20201030 15:56:02.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.922" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:56:02.921" endtime="20201030 15:56:02.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.925" level="INFO">VALUE: [7.687500000000055e-05, 7.669500000000162e-05, 7.636100000000048e-05, 7.636100000000048e-05, 7.684700000000141e-05, 7.669400000000215e-05, 7.617999999999861e-05, 7.669399999999868e-05, 7.702799999999982e-05, 7.652799999999932e-05, 7.620900000000069e-05, 7.652799999999932e-05, 7.618100000000155e-05, 7.652799999999932e-05, 7.663899999999987e-05, 7.666600000000301e-05, 7.687500000000055e-05, 7.704200000000286e-05, 7.669399999999868e-05, 7.702799999999982e-05, 7.63890000000031e-05, 7.686099999999751e-05, 7.638899999999962e-05, 7.691599999999979e-05, 7.668099999999858e-05, 7.654199999999889e-05, 7.668099999999858e-05, 7.684700000000141e-05, 7.670799999999825e-05, 7.702700000000035e-05, 7.636100000000048e-05, 7.652799999999932e-05, 7.658400000000107e-05, 7.652800000000279e-05, 7.634700000000091e-05, 7.648600000000061e-05, 7.634700000000091e-05, 7.636100000000048e-05, 7.697199999999807e-05, 7.636199999999996e-05, 7.670800000000172e-05, 7.619400000000165e-05, 7.669399999999868e-05, 7.648600000000061e-05, 7.652800000000279e-05, 7.636100000000048e-05, 7.637500000000005e-05, 7.688900000000012e-05, 7.686099999999751e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201030 15:56:02.923" endtime="20201030 15:56:02.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.919" endtime="20201030 15:56:02.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:02.930" endtime="20201030 15:56:02.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.928" endtime="20201030 15:56:02.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.927" endtime="20201030 15:56:02.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.569" endtime="20201030 15:56:02.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.568" endtime="20201030 15:56:02.950"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.959" endtime="20201030 15:56:02.978"></status>
</kw>
<msg timestamp="20201030 15:56:02.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.957" endtime="20201030 15:56:02.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:02.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:02.979" endtime="20201030 15:56:02.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.981" endtime="20201030 15:56:02.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.955" endtime="20201030 15:56:02.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.953" endtime="20201030 15:56:02.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:02.990" endtime="20201030 15:56:03.290"></status>
</kw>
<msg timestamp="20201030 15:56:03.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:02.989" endtime="20201030 15:56:03.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022105097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022182792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.294" endtime="20201030 15:56:03.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.302" endtime="20201030 15:56:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.986" endtime="20201030 15:56:03.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.985" endtime="20201030 15:56:03.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.309" level="INFO">${RESULT} = [{'diff': 7.769499999999915e-05}, {'diff': 7.752700000000085e-05}, {'diff': 7.769500000000262e-05}, {'diff': 7.802700000000135e-05}, {'diff': 7.748600000000161e-05}, {'diff': 7.715200000000047e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:03.305" endtime="20201030 15:56:03.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.313" level="INFO">${ACCURACY} = {'diff': [7.769499999999915e-05, 7.752700000000085e-05, 7.769500000000262e-05, 7.802700000000135e-05, 7.748600000000161e-05, 7.715200000000047e-05, 7.752800000000032e-05, 7.786099999999851e-05, 7.7527...</msg>
<status status="PASS" starttime="20201030 15:56:03.310" endtime="20201030 15:56:03.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.317" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.316" endtime="20201030 15:56:03.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.319" level="INFO">VALUE: [7.769499999999915e-05, 7.752700000000085e-05, 7.769500000000262e-05, 7.802700000000135e-05, 7.748600000000161e-05, 7.715200000000047e-05, 7.752800000000032e-05, 7.786099999999851e-05, 7.752799999999685e-05, 7.802800000000082e-05, 7.722300000000126e-05, 7.784699999999894e-05, 7.734800000000139e-05, 7.784700000000241e-05, 7.72640000000005e-05, 7.751300000000128e-05, 7.765200000000097e-05, 7.736100000000148e-05, 7.7457999999999e-05, 7.752800000000032e-05, 7.802800000000082e-05, 7.719499999999865e-05, 7.718099999999908e-05, 7.768099999999958e-05, 7.770899999999872e-05, 7.801400000000125e-05, 7.736100000000148e-05, 7.736099999999801e-05, 7.736100000000148e-05, 7.786099999999851e-05, 7.737499999999758e-05, 7.717999999999961e-05, 7.786099999999851e-05, 7.784699999999894e-05, 7.801400000000125e-05, 7.801399999999778e-05, 7.802800000000082e-05, 7.752800000000032e-05, 7.720799999999875e-05, 7.719499999999865e-05, 7.736099999999801e-05, 7.748599999999814e-05, 7.754100000000042e-05, 7.784699999999894e-05, 7.752800000000032e-05, 7.770800000000272e-05, 7.755599999999946e-05, 7.736100000000148e-05, 7.752800000000032e-05, 7.804200000000039e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.318" endtime="20201030 15:56:03.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.314" endtime="20201030 15:56:03.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.324" endtime="20201030 15:56:03.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.323" endtime="20201030 15:56:03.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.322" endtime="20201030 15:56:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.951" endtime="20201030 15:56:03.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:02.951" endtime="20201030 15:56:03.345"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.354" endtime="20201030 15:56:03.375"></status>
</kw>
<msg timestamp="20201030 15:56:03.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.352" endtime="20201030 15:56:03.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.376" endtime="20201030 15:56:03.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.379" endtime="20201030 15:56:03.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.349" endtime="20201030 15:56:03.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.347" endtime="20201030 15:56:03.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.388" endtime="20201030 15:56:03.672"></status>
</kw>
<msg timestamp="20201030 15:56:03.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.386" endtime="20201030 15:56:03.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024804458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.677" endtime="20201030 15:56:03.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.685" endtime="20201030 15:56:03.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.384" endtime="20201030 15:56:03.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.382" endtime="20201030 15:56:03.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:03.691" level="INFO">${RESULT} = [{'diff': 7.852700000000185e-05}, {'diff': 7.838900000000162e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.834699999999944e-05}, {'diff': 7.886099999999951e-05}, {'diff': 7.851400000000175e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:03.688" endtime="20201030 15:56:03.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:03.695" level="INFO">${ACCURACY} = {'diff': [7.852700000000185e-05, 7.838900000000162e-05, 7.834699999999944e-05, 7.834699999999944e-05, 7.886099999999951e-05, 7.851400000000175e-05, 7.852800000000132e-05, 7.852800000000132e-05, 7.8860...</msg>
<status status="PASS" starttime="20201030 15:56:03.692" endtime="20201030 15:56:03.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.700" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:56:03.699" endtime="20201030 15:56:03.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.702" level="INFO">VALUE: [7.852700000000185e-05, 7.838900000000162e-05, 7.834699999999944e-05, 7.834699999999944e-05, 7.886099999999951e-05, 7.851400000000175e-05, 7.852800000000132e-05, 7.852800000000132e-05, 7.886099999999951e-05, 7.819499999999965e-05, 7.833399999999935e-05, 7.868000000000111e-05, 7.886099999999951e-05, 7.836100000000248e-05, 7.887499999999908e-05, 7.854199999999742e-05, 7.852800000000132e-05, 7.902799999999835e-05, 7.819499999999965e-05, 7.886099999999951e-05, 7.836099999999901e-05, 7.886199999999899e-05, 7.869399999999721e-05, 7.852700000000185e-05, 7.868000000000111e-05, 7.852699999999838e-05, 7.901400000000225e-05, 7.852799999999785e-05, 7.905600000000096e-05, 7.852799999999785e-05, 7.870899999999972e-05, 7.836099999999901e-05, 7.852799999999785e-05, 7.901400000000225e-05, 7.868099999999711e-05, 7.836100000000248e-05, 7.886099999999951e-05, 7.836099999999901e-05, 7.870800000000025e-05, 7.884699999999994e-05, 7.902800000000182e-05, 7.852799999999785e-05, 7.90840000000001e-05, 7.852799999999785e-05, 7.868100000000058e-05, 7.872199999999982e-05, 7.887499999999908e-05, 7.870800000000025e-05, 7.874999999999896e-05, 7.854099999999795e-05]</msg>
<status status="PASS" starttime="20201030 15:56:03.701" endtime="20201030 15:56:03.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.696" endtime="20201030 15:56:03.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:03.708" endtime="20201030 15:56:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.706" endtime="20201030 15:56:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.705" endtime="20201030 15:56:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.346" endtime="20201030 15:56:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.345" endtime="20201030 15:56:03.728"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.737" endtime="20201030 15:56:03.756"></status>
</kw>
<msg timestamp="20201030 15:56:03.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.735" endtime="20201030 15:56:03.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:03.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:03.757" endtime="20201030 15:56:03.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.760" endtime="20201030 15:56:03.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.733" endtime="20201030 15:56:03.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.731" endtime="20201030 15:56:03.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:03.768" endtime="20201030 15:56:04.054"></status>
</kw>
<msg timestamp="20201030 15:56:04.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:03.767" endtime="20201030 15:56:04.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022271583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.058" endtime="20201030 15:56:04.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.066" endtime="20201030 15:56:04.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.764" endtime="20201030 15:56:04.068"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.763" endtime="20201030 15:56:04.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.073" level="INFO">${RESULT} = [{'diff': 8.001399999999978e-05}, {'diff': 7.977800000000257e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.936100000000001e-05}, {'diff': 7.970799999999778e-05}, {'diff': 7.936100000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:04.070" endtime="20201030 15:56:04.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.078" level="INFO">${ACCURACY} = {'diff': [8.001399999999978e-05, 7.977800000000257e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.970799999999778e-05, 7.936100000000001e-05, 7.968100000000158e-05, 7.976399999999953e-05, 7.9180...</msg>
<status status="PASS" starttime="20201030 15:56:04.074" endtime="20201030 15:56:04.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.082" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.081" endtime="20201030 15:56:04.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.085" level="INFO">VALUE: [8.001399999999978e-05, 7.977800000000257e-05, 7.936100000000001e-05, 7.936100000000001e-05, 7.970799999999778e-05, 7.936100000000001e-05, 7.968100000000158e-05, 7.976399999999953e-05, 7.918099999999761e-05, 7.986199999999999e-05, 8.004099999999945e-05, 7.987500000000008e-05, 7.936100000000001e-05, 7.918000000000161e-05, 7.938899999999915e-05, 8.002799999999935e-05, 7.969399999999821e-05, 7.931999999999731e-05, 7.937500000000305e-05, 7.951399999999928e-05, 7.969500000000115e-05, 7.919399999999771e-05, 7.954099999999895e-05, 7.986100000000051e-05, 7.969399999999821e-05, 7.919400000000118e-05, 8.002799999999935e-05, 8.004199999999892e-05, 7.952799999999885e-05, 8.004199999999892e-05, 7.955600000000146e-05, 7.936100000000001e-05, 7.95129999999998e-05, 7.987500000000008e-05, 7.954100000000242e-05, 7.974999999999996e-05, 7.969399999999821e-05, 7.991700000000226e-05, 8.002799999999935e-05, 7.936100000000001e-05, 7.919400000000118e-05, 7.987500000000008e-05, 7.986099999999705e-05, 7.988899999999965e-05, 7.954199999999842e-05, 8.001399999999978e-05, 7.969499999999768e-05, 7.969399999999821e-05, 7.969399999999821e-05, 8.004099999999945e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.083" endtime="20201030 15:56:04.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.079" endtime="20201030 15:56:04.086"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.089" endtime="20201030 15:56:04.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.088" endtime="20201030 15:56:04.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.087" endtime="20201030 15:56:04.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.729" endtime="20201030 15:56:04.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:03.729" endtime="20201030 15:56:04.110"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.118" endtime="20201030 15:56:04.137"></status>
</kw>
<msg timestamp="20201030 15:56:04.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.117" endtime="20201030 15:56:04.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.139" endtime="20201030 15:56:04.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.141" endtime="20201030 15:56:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.114" endtime="20201030 15:56:04.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.112" endtime="20201030 15:56:04.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.150" endtime="20201030 15:56:04.436"></status>
</kw>
<msg timestamp="20201030 15:56:04.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.148" endtime="20201030 15:56:04.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021979833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.440" endtime="20201030 15:56:04.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.449" endtime="20201030 15:56:04.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.146" endtime="20201030 15:56:04.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.144" endtime="20201030 15:56:04.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.455" level="INFO">${RESULT} = [{'diff': 8.098600000000164e-05}, {'diff': 8.050000000000071e-05}, {'diff': 8.086099999999805e-05}, {'diff': 8.104199999999992e-05}, {'diff': 8.018099999999861e-05}, {'diff': 8.084699999999848e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:04.452" endtime="20201030 15:56:04.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.459" level="INFO">${ACCURACY} = {'diff': [8.098600000000164e-05, 8.050000000000071e-05, 8.086099999999805e-05, 8.104199999999992e-05, 8.018099999999861e-05, 8.084699999999848e-05, 8.101399999999731e-05, 8.022199999999785e-05, 8.0709...</msg>
<status status="PASS" starttime="20201030 15:56:04.456" endtime="20201030 15:56:04.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.464" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.463" endtime="20201030 15:56:04.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.466" level="INFO">VALUE: [8.098600000000164e-05, 8.050000000000071e-05, 8.086099999999805e-05, 8.104199999999992e-05, 8.018099999999861e-05, 8.084699999999848e-05, 8.101399999999731e-05, 8.022199999999785e-05, 8.070900000000172e-05, 8.052799999999985e-05, 8.086099999999805e-05, 8.036100000000101e-05, 8.052700000000038e-05, 8.020800000000175e-05, 8.086100000000151e-05, 8.075000000000096e-05, 8.036100000000101e-05, 8.037500000000058e-05, 8.059699999999823e-05, 8.104199999999992e-05, 8.036100000000101e-05, 8.019499999999818e-05, 8.083300000000238e-05, 8.038900000000015e-05, 8.067999999999964e-05, 8.030499999999927e-05, 8.070799999999878e-05, 8.015299999999947e-05, 8.087500000000108e-05, 8.019500000000165e-05, 8.036099999999755e-05, 8.036099999999755e-05, 8.087499999999762e-05, 8.040299999999972e-05, 8.069399999999921e-05, 8.084699999999848e-05, 8.106899999999959e-05, 8.070799999999878e-05, 8.036100000000101e-05, 8.086100000000151e-05, 8.087499999999762e-05, 8.087500000000108e-05, 8.019499999999818e-05, 8.087500000000108e-05, 8.052799999999985e-05, 8.076400000000053e-05, 8.081899999999934e-05, 8.056899999999909e-05, 8.086100000000151e-05, 8.023599999999742e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.465" endtime="20201030 15:56:04.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.460" endtime="20201030 15:56:04.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.471" endtime="20201030 15:56:04.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.469" endtime="20201030 15:56:04.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.468" endtime="20201030 15:56:04.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.111" endtime="20201030 15:56:04.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.110" endtime="20201030 15:56:04.491"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.500" endtime="20201030 15:56:04.519"></status>
</kw>
<msg timestamp="20201030 15:56:04.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.498" endtime="20201030 15:56:04.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.520" endtime="20201030 15:56:04.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.523" endtime="20201030 15:56:04.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.496" endtime="20201030 15:56:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.494" endtime="20201030 15:56:04.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.532" endtime="20201030 15:56:04.816"></status>
</kw>
<msg timestamp="20201030 15:56:04.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.530" endtime="20201030 15:56:04.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022751319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022833167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.820" endtime="20201030 15:56:04.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.829" endtime="20201030 15:56:04.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.527" endtime="20201030 15:56:04.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.526" endtime="20201030 15:56:04.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:04.835" level="INFO">${RESULT} = [{'diff': 8.184800000000242e-05}, {'diff': 8.166600000000107e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.15269999999979e-05}, {'diff': 8.152800000000085e-05}, {'diff': 8.19719999999996e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:04.832" endtime="20201030 15:56:04.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:04.839" level="INFO">${ACCURACY} = {'diff': [8.184800000000242e-05, 8.166600000000107e-05, 8.170799999999978e-05, 8.15269999999979e-05, 8.152800000000085e-05, 8.19719999999996e-05, 8.136100000000202e-05, 8.144399999999996e-05, 8.208399...</msg>
<status status="PASS" starttime="20201030 15:56:04.836" endtime="20201030 15:56:04.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.844" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:56:04.843" endtime="20201030 15:56:04.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.846" level="INFO">VALUE: [8.184800000000242e-05, 8.166600000000107e-05, 8.170799999999978e-05, 8.15269999999979e-05, 8.152800000000085e-05, 8.19719999999996e-05, 8.136100000000202e-05, 8.144399999999996e-05, 8.208399999999963e-05, 8.170899999999925e-05, 8.170799999999978e-05, 8.15269999999979e-05, 8.204200000000092e-05, 8.130500000000027e-05, 8.204100000000145e-05, 8.204100000000145e-05, 8.152800000000085e-05, 8.13329999999994e-05, 8.19719999999996e-05, 8.170799999999978e-05, 8.122199999999885e-05, 8.184699999999948e-05, 8.188799999999871e-05, 8.154200000000042e-05, 8.119500000000265e-05, 8.169400000000021e-05, 8.208300000000016e-05, 8.168100000000011e-05, 8.20269999999984e-05, 8.151400000000128e-05, 8.18329999999999e-05, 8.187499999999862e-05, 8.136100000000202e-05, 8.152800000000085e-05, 8.136099999999855e-05, 8.188900000000165e-05, 8.202799999999788e-05, 8.20130000000023e-05, 8.188899999999819e-05, 8.20269999999984e-05, 8.120799999999928e-05, 8.122199999999885e-05, 8.154200000000042e-05, 8.201399999999831e-05, 8.119399999999971e-05, 8.136100000000202e-05, 8.119499999999918e-05, 8.120900000000222e-05, 8.119500000000265e-05, 8.163899999999794e-05]</msg>
<status status="PASS" starttime="20201030 15:56:04.845" endtime="20201030 15:56:04.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.840" endtime="20201030 15:56:04.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:04.859" endtime="20201030 15:56:04.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.857" endtime="20201030 15:56:04.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.856" endtime="20201030 15:56:04.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.492" endtime="20201030 15:56:04.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.492" endtime="20201030 15:56:04.880"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.888" endtime="20201030 15:56:04.907"></status>
</kw>
<msg timestamp="20201030 15:56:04.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.887" endtime="20201030 15:56:04.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:04.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:04.909" endtime="20201030 15:56:04.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.911" endtime="20201030 15:56:04.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.884" endtime="20201030 15:56:04.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.882" endtime="20201030 15:56:04.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:04.920" endtime="20201030 15:56:05.205"></status>
</kw>
<msg timestamp="20201030 15:56:05.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:04.919" endtime="20201030 15:56:05.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022056306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.209" endtime="20201030 15:56:05.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.217" endtime="20201030 15:56:05.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.916" endtime="20201030 15:56:05.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.915" endtime="20201030 15:56:05.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.224" level="INFO">${RESULT} = [{'diff': 8.237499999999912e-05}, {'diff': 8.268100000000111e-05}, {'diff': 8.302799999999888e-05}, {'diff': 8.302699999999941e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.302699999999941e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:05.221" endtime="20201030 15:56:05.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.229" level="INFO">${ACCURACY} = {'diff': [8.237499999999912e-05, 8.268100000000111e-05, 8.302799999999888e-05, 8.302699999999941e-05, 8.238899999999869e-05, 8.302699999999941e-05, 8.287499999999962e-05, 8.248599999999967e-05, 8.2708...</msg>
<status status="PASS" starttime="20201030 15:56:05.225" endtime="20201030 15:56:05.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.233" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.232" endtime="20201030 15:56:05.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.236" level="INFO">VALUE: [8.237499999999912e-05, 8.268100000000111e-05, 8.302799999999888e-05, 8.302699999999941e-05, 8.238899999999869e-05, 8.302699999999941e-05, 8.287499999999962e-05, 8.248599999999967e-05, 8.270800000000078e-05, 8.29720000000006e-05, 8.270900000000025e-05, 8.238799999999921e-05, 8.287499999999962e-05, 8.309700000000073e-05, 8.284799999999995e-05, 8.284700000000048e-05, 8.284700000000048e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.236099999999955e-05, 8.234699999999998e-05, 8.220800000000028e-05, 8.252800000000185e-05, 8.304199999999845e-05, 8.268100000000111e-05, 8.276399999999906e-05, 8.236200000000249e-05, 8.220800000000028e-05, 8.270800000000078e-05, 8.237499999999912e-05, 8.286100000000005e-05, 8.286100000000005e-05, 8.219399999999724e-05, 8.269499999999722e-05, 8.286100000000005e-05, 8.26529999999985e-05, 8.302699999999941e-05, 8.220800000000028e-05, 8.273599999999992e-05, 8.25130000000028e-05, 8.269400000000121e-05, 8.26659999999986e-05, 8.220800000000028e-05, 8.268000000000164e-05, 8.218100000000061e-05, 8.226400000000203e-05, 8.251399999999881e-05, 8.268099999999765e-05, 8.254199999999795e-05, 8.302800000000235e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.234" endtime="20201030 15:56:05.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.230" endtime="20201030 15:56:05.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.240" endtime="20201030 15:56:05.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.239" endtime="20201030 15:56:05.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.238" endtime="20201030 15:56:05.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.881" endtime="20201030 15:56:05.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:04.880" endtime="20201030 15:56:05.261"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.270" endtime="20201030 15:56:05.288"></status>
</kw>
<msg timestamp="20201030 15:56:05.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.268" endtime="20201030 15:56:05.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.290" endtime="20201030 15:56:05.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.292" endtime="20201030 15:56:05.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.266" endtime="20201030 15:56:05.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.263" endtime="20201030 15:56:05.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.301" endtime="20201030 15:56:05.588"></status>
</kw>
<msg timestamp="20201030 15:56:05.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.299" endtime="20201030 15:56:05.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.592" endtime="20201030 15:56:05.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.600" endtime="20201030 15:56:05.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.297" endtime="20201030 15:56:05.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.295" endtime="20201030 15:56:05.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.607" level="INFO">${RESULT} = [{'diff': 8.347199999999763e-05}, {'diff': 8.370900000000125e-05}, {'diff': 8.369499999999822e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.404099999999998e-05}, {'diff': 8.337500000000012e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:05.603" endtime="20201030 15:56:05.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.611" level="INFO">${ACCURACY} = {'diff': [8.347199999999763e-05, 8.370900000000125e-05, 8.369499999999822e-05, 8.402799999999988e-05, 8.404099999999998e-05, 8.337500000000012e-05, 8.387500000000062e-05, 8.391699999999933e-05, 8.3528...</msg>
<status status="PASS" starttime="20201030 15:56:05.608" endtime="20201030 15:56:05.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.615" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.614" endtime="20201030 15:56:05.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.617" level="INFO">VALUE: [8.347199999999763e-05, 8.370900000000125e-05, 8.369499999999822e-05, 8.402799999999988e-05, 8.404099999999998e-05, 8.337500000000012e-05, 8.387500000000062e-05, 8.391699999999933e-05, 8.352800000000285e-05, 8.317999999999867e-05, 8.352799999999938e-05, 8.352799999999938e-05, 8.402799999999988e-05, 8.402799999999988e-05, 8.336100000000055e-05, 8.352799999999938e-05, 8.337500000000012e-05, 8.404099999999998e-05, 8.3152999999999e-05, 8.404099999999998e-05, 8.36659999999996e-05, 8.369399999999874e-05, 8.352799999999938e-05, 8.368100000000211e-05, 8.319499999999772e-05, 8.386100000000105e-05, 8.408300000000216e-05, 8.352800000000285e-05, 8.384800000000095e-05, 8.387499999999715e-05, 8.319400000000171e-05, 8.388900000000019e-05, 8.370799999999831e-05, 8.387500000000062e-05, 8.383399999999791e-05, 8.336100000000055e-05, 8.392999999999942e-05, 8.368099999999865e-05, 8.337500000000012e-05, 8.322200000000085e-05, 8.386100000000105e-05, 8.369399999999874e-05, 8.318000000000214e-05, 8.404199999999945e-05, 8.313899999999944e-05, 8.404199999999945e-05, 8.392999999999942e-05, 8.380599999999877e-05, 8.369499999999822e-05, 8.336100000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:56:05.616" endtime="20201030 15:56:05.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.611" endtime="20201030 15:56:05.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:05.622" endtime="20201030 15:56:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.621" endtime="20201030 15:56:05.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.620" endtime="20201030 15:56:05.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.262" endtime="20201030 15:56:05.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.261" endtime="20201030 15:56:05.643"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.651" endtime="20201030 15:56:05.670"></status>
</kw>
<msg timestamp="20201030 15:56:05.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.650" endtime="20201030 15:56:05.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:05.672" endtime="20201030 15:56:05.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.674" endtime="20201030 15:56:05.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.647" endtime="20201030 15:56:05.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.645" endtime="20201030 15:56:05.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.683" endtime="20201030 15:56:05.971"></status>
</kw>
<msg timestamp="20201030 15:56:05.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.682" endtime="20201030 15:56:05.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022774181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022858681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:05.975" endtime="20201030 15:56:05.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:05.983" endtime="20201030 15:56:05.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.679" endtime="20201030 15:56:05.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.678" endtime="20201030 15:56:05.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:05.990" level="INFO">${RESULT} = [{'diff': 8.449999999999777e-05}, {'diff': 8.420800000000228e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.470800000000278e-05}, {'diff': 8.413899999999697e-05}, {'diff': 8.420800000000228e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:05.987" endtime="20201030 15:56:05.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:05.994" level="INFO">${ACCURACY} = {'diff': [8.449999999999777e-05, 8.420800000000228e-05, 8.501400000000131e-05, 8.470800000000278e-05, 8.413899999999697e-05, 8.420800000000228e-05, 8.502800000000088e-05, 8.504200000000045e-05, 8.4737...</msg>
<status status="PASS" starttime="20201030 15:56:05.991" endtime="20201030 15:56:05.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:05.999" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:56:05.997" endtime="20201030 15:56:05.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.001" level="INFO">VALUE: [8.449999999999777e-05, 8.420800000000228e-05, 8.501400000000131e-05, 8.470800000000278e-05, 8.413899999999697e-05, 8.420800000000228e-05, 8.502800000000088e-05, 8.504200000000045e-05, 8.47370000000014e-05, 8.486100000000205e-05, 8.452800000000038e-05, 8.484799999999848e-05, 8.431899999999937e-05, 8.46660000000006e-05, 8.486099999999858e-05, 8.473599999999845e-05, 8.469399999999974e-05, 8.469399999999974e-05, 8.454199999999995e-05, 8.418099999999915e-05, 8.43469999999985e-05, 8.438900000000069e-05, 8.452800000000038e-05, 8.486200000000152e-05, 8.502699999999794e-05, 8.469399999999974e-05, 8.415199999999706e-05, 8.454199999999995e-05, 8.454199999999995e-05, 8.501399999999784e-05, 8.436100000000155e-05, 8.43469999999985e-05, 8.436099999999808e-05, 8.501400000000131e-05, 8.502800000000088e-05, 8.475000000000149e-05, 8.43469999999985e-05, 8.486100000000205e-05, 8.504200000000045e-05, 8.452800000000038e-05, 8.438900000000069e-05, 8.441600000000035e-05, 8.452800000000038e-05, 8.504200000000045e-05, 8.418099999999915e-05, 8.452800000000038e-05, 8.418099999999915e-05, 8.452700000000091e-05, 8.448600000000167e-05, 8.438900000000069e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.000" endtime="20201030 15:56:06.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.995" endtime="20201030 15:56:06.003"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.007" endtime="20201030 15:56:06.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.005" endtime="20201030 15:56:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.004" endtime="20201030 15:56:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.644" endtime="20201030 15:56:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:05.643" endtime="20201030 15:56:06.027"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.036" endtime="20201030 15:56:06.056"></status>
</kw>
<msg timestamp="20201030 15:56:06.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.035" endtime="20201030 15:56:06.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.057" endtime="20201030 15:56:06.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.059" endtime="20201030 15:56:06.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.032" endtime="20201030 15:56:06.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.030" endtime="20201030 15:56:06.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.069" endtime="20201030 15:56:06.354"></status>
</kw>
<msg timestamp="20201030 15:56:06.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.067" endtime="20201030 15:56:06.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022173611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022258806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.359" endtime="20201030 15:56:06.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.367" endtime="20201030 15:56:06.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.065" endtime="20201030 15:56:06.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.063" endtime="20201030 15:56:06.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.374" level="INFO">${RESULT} = [{'diff': 8.519499999999972e-05}, {'diff': 8.544499999999997e-05}, {'diff': 8.519399999999677e-05}, {'diff': 8.519400000000024e-05}, {'diff': 8.552799999999791e-05}, {'diff': 8.53469999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:06.371" endtime="20201030 15:56:06.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.379" level="INFO">${ACCURACY} = {'diff': [8.519499999999972e-05, 8.544499999999997e-05, 8.519399999999677e-05, 8.519400000000024e-05, 8.552799999999791e-05, 8.53469999999995e-05, 8.572199999999988e-05, 8.56669999999976e-05, 8.570899...</msg>
<status status="PASS" starttime="20201030 15:56:06.375" endtime="20201030 15:56:06.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.384" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.383" endtime="20201030 15:56:06.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.386" level="INFO">VALUE: [8.519499999999972e-05, 8.544499999999997e-05, 8.519399999999677e-05, 8.519400000000024e-05, 8.552799999999791e-05, 8.53469999999995e-05, 8.572199999999988e-05, 8.56669999999976e-05, 8.570899999999979e-05, 8.551400000000181e-05, 8.536099999999908e-05, 8.552800000000138e-05, 8.56530000000015e-05, 8.551299999999887e-05, 8.520800000000328e-05, 8.599999999999927e-05, 8.53469999999995e-05, 8.554199999999748e-05, 8.59310000000009e-05, 8.537500000000212e-05, 8.586099999999958e-05, 8.554200000000095e-05, 8.518100000000015e-05, 8.604099999999851e-05, 8.558300000000019e-05, 8.601299999999937e-05, 8.586099999999958e-05, 8.586099999999958e-05, 8.536099999999908e-05, 8.551400000000181e-05, 8.53469999999995e-05, 8.520899999999929e-05, 8.5847e-05, 8.551399999999834e-05, 8.537499999999865e-05, 8.520799999999981e-05, 8.586099999999958e-05, 8.587499999999915e-05, 8.552799999999791e-05, 8.562500000000237e-05, 8.554200000000095e-05, 8.586099999999958e-05, 8.518100000000015e-05, 8.536099999999908e-05, 8.520899999999929e-05, 8.554099999999801e-05, 8.552799999999791e-05, 8.520799999999981e-05, 8.587500000000262e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.385" endtime="20201030 15:56:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.380" endtime="20201030 15:56:06.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.391" endtime="20201030 15:56:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.390" endtime="20201030 15:56:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.389" endtime="20201030 15:56:06.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.028" endtime="20201030 15:56:06.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.028" endtime="20201030 15:56:06.412"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.421" endtime="20201030 15:56:06.440"></status>
</kw>
<msg timestamp="20201030 15:56:06.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.419" endtime="20201030 15:56:06.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.441" endtime="20201030 15:56:06.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.444" endtime="20201030 15:56:06.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.417" endtime="20201030 15:56:06.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.415" endtime="20201030 15:56:06.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.453" endtime="20201030 15:56:06.740"></status>
</kw>
<msg timestamp="20201030 15:56:06.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.451" endtime="20201030 15:56:06.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022044514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.744" endtime="20201030 15:56:06.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.753" endtime="20201030 15:56:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.449" endtime="20201030 15:56:06.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.447" endtime="20201030 15:56:06.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:06.759" level="INFO">${RESULT} = [{'diff': 8.644399999999802e-05}, {'diff': 8.652800000000238e-05}, {'diff': 8.669500000000122e-05}, {'diff': 8.636100000000008e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.669499999999775e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:06.756" endtime="20201030 15:56:06.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:06.763" level="INFO">${ACCURACY} = {'diff': [8.644399999999802e-05, 8.652800000000238e-05, 8.669500000000122e-05, 8.636100000000008e-05, 8.663899999999947e-05, 8.669499999999775e-05, 8.69860000000007e-05, 8.620800000000081e-05, 8.66799...</msg>
<status status="PASS" starttime="20201030 15:56:06.760" endtime="20201030 15:56:06.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.768" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:56:06.767" endtime="20201030 15:56:06.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.770" level="INFO">VALUE: [8.644399999999802e-05, 8.652800000000238e-05, 8.669500000000122e-05, 8.636100000000008e-05, 8.663899999999947e-05, 8.669499999999775e-05, 8.69860000000007e-05, 8.620800000000081e-05, 8.66799999999987e-05, 8.63470000000005e-05, 8.687499999999668e-05, 8.670800000000131e-05, 8.619500000000072e-05, 8.670900000000079e-05, 8.63059999999978e-05, 8.686100000000058e-05, 8.634799999999998e-05, 8.652700000000291e-05, 8.6847000000001e-05, 8.702699999999994e-05, 8.687500000000015e-05, 8.669400000000174e-05, 8.637499999999965e-05, 8.670800000000131e-05, 8.669500000000122e-05, 8.686100000000058e-05, 8.688800000000024e-05, 8.651400000000281e-05, 8.638900000000269e-05, 8.651399999999934e-05, 8.701399999999984e-05, 8.619400000000124e-05, 8.670800000000131e-05, 8.654200000000195e-05, 8.634699999999704e-05, 8.668099999999818e-05, 8.701399999999984e-05, 8.637500000000312e-05, 8.669500000000122e-05, 8.698700000000018e-05, 8.619400000000124e-05, 8.637499999999965e-05, 8.652799999999891e-05, 8.705599999999855e-05, 8.636100000000008e-05, 8.634699999999704e-05, 8.654200000000195e-05, 8.652800000000238e-05, 8.702799999999941e-05, 8.634799999999998e-05]</msg>
<status status="PASS" starttime="20201030 15:56:06.769" endtime="20201030 15:56:06.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.764" endtime="20201030 15:56:06.771"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:06.775" endtime="20201030 15:56:06.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.774" endtime="20201030 15:56:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.772" endtime="20201030 15:56:06.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.413" endtime="20201030 15:56:06.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.412" endtime="20201030 15:56:06.796"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.805" endtime="20201030 15:56:06.827"></status>
</kw>
<msg timestamp="20201030 15:56:06.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.803" endtime="20201030 15:56:06.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:06.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:06.829" endtime="20201030 15:56:06.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.831" endtime="20201030 15:56:06.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.800" endtime="20201030 15:56:06.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.798" endtime="20201030 15:56:06.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:06.841" endtime="20201030 15:56:07.126"></status>
</kw>
<msg timestamp="20201030 15:56:07.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:06.839" endtime="20201030 15:56:07.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025510986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.130" endtime="20201030 15:56:07.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.138" endtime="20201030 15:56:07.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.837" endtime="20201030 15:56:07.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.835" endtime="20201030 15:56:07.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.145" level="INFO">${RESULT} = [{'diff': 8.720800000000181e-05}, {'diff': 8.736100000000108e-05}, {'diff': 8.752699999999697e-05}, {'diff': 8.787500000000115e-05}, {'diff': 8.757000000000209e-05}, {'diff': 8.725000000000052e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:07.142" endtime="20201030 15:56:07.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.149" level="INFO">${ACCURACY} = {'diff': [8.720800000000181e-05, 8.736100000000108e-05, 8.752699999999697e-05, 8.787500000000115e-05, 8.757000000000209e-05, 8.725000000000052e-05, 8.720800000000181e-05, 8.768100000000265e-05, 8.7209...</msg>
<status status="PASS" starttime="20201030 15:56:07.146" endtime="20201030 15:56:07.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.154" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.152" endtime="20201030 15:56:07.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.156" level="INFO">VALUE: [8.720800000000181e-05, 8.736100000000108e-05, 8.752699999999697e-05, 8.787500000000115e-05, 8.757000000000209e-05, 8.725000000000052e-05, 8.720800000000181e-05, 8.768100000000265e-05, 8.720900000000129e-05, 8.7153000000003e-05, 8.754100000000001e-05, 8.738900000000022e-05, 8.737500000000065e-05, 8.758400000000166e-05, 8.804199999999998e-05, 8.786099999999811e-05, 8.720799999999834e-05, 8.736099999999761e-05, 8.769499999999875e-05, 8.773599999999798e-05, 8.734800000000098e-05, 8.736200000000055e-05, 8.787500000000115e-05, 8.805500000000008e-05, 8.805500000000008e-05, 8.76799999999997e-05, 8.804199999999998e-05, 8.726400000000009e-05, 8.752799999999991e-05, 8.786099999999811e-05, 8.790300000000029e-05, 8.787500000000115e-05, 8.736100000000108e-05, 8.788800000000124e-05, 8.734699999999804e-05, 8.770799999999884e-05, 8.788899999999725e-05, 8.720799999999834e-05, 8.752799999999991e-05, 8.71669999999991e-05, 8.791600000000038e-05, 8.736099999999761e-05, 8.713899999999997e-05, 8.772199999999841e-05, 8.754100000000001e-05, 8.787500000000115e-05, 8.748599999999773e-05, 8.751400000000034e-05, 8.73470000000015e-05, 8.736100000000108e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.155" endtime="20201030 15:56:07.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.150" endtime="20201030 15:56:07.158"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.162" endtime="20201030 15:56:07.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.160" endtime="20201030 15:56:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.159" endtime="20201030 15:56:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.797" endtime="20201030 15:56:07.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:06.796" endtime="20201030 15:56:07.183"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.191" endtime="20201030 15:56:07.210"></status>
</kw>
<msg timestamp="20201030 15:56:07.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.190" endtime="20201030 15:56:07.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.212" endtime="20201030 15:56:07.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.214" endtime="20201030 15:56:07.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.187" endtime="20201030 15:56:07.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.185" endtime="20201030 15:56:07.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.223" endtime="20201030 15:56:07.510"></status>
</kw>
<msg timestamp="20201030 15:56:07.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.222" endtime="20201030 15:56:07.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022253125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.514" endtime="20201030 15:56:07.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.523" endtime="20201030 15:56:07.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.219" endtime="20201030 15:56:07.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.217" endtime="20201030 15:56:07.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.529" level="INFO">${RESULT} = [{'diff': 8.902799999999794e-05}, {'diff': 8.904200000000098e-05}, {'diff': 8.836100000000208e-05}, {'diff': 8.887499999999868e-05}, {'diff': 8.820899999999882e-05}, {'diff': 8.888899999999825e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:07.526" endtime="20201030 15:56:07.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.534" level="INFO">${ACCURACY} = {'diff': [8.902799999999794e-05, 8.904200000000098e-05, 8.836100000000208e-05, 8.887499999999868e-05, 8.820899999999882e-05, 8.888899999999825e-05, 8.905499999999761e-05, 8.887499999999868e-05, 8.8528...</msg>
<status status="PASS" starttime="20201030 15:56:07.530" endtime="20201030 15:56:07.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.539" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.538" endtime="20201030 15:56:07.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.541" level="INFO">VALUE: [8.902799999999794e-05, 8.904200000000098e-05, 8.836100000000208e-05, 8.887499999999868e-05, 8.820899999999882e-05, 8.888899999999825e-05, 8.905499999999761e-05, 8.887499999999868e-05, 8.852800000000091e-05, 8.838899999999775e-05, 8.834699999999904e-05, 8.869400000000027e-05, 8.874999999999855e-05, 8.852800000000091e-05, 8.869499999999975e-05, 8.886099999999911e-05, 8.852799999999744e-05, 8.869400000000027e-05, 8.820799999999934e-05, 8.817999999999673e-05, 8.854200000000048e-05, 8.869400000000027e-05, 8.820800000000281e-05, 8.887500000000215e-05, 8.854200000000048e-05, 8.848700000000168e-05, 8.820900000000229e-05, 8.869499999999975e-05, 8.86519999999981e-05, 8.884699999999954e-05, 8.840300000000079e-05, 8.902800000000141e-05, 8.869400000000027e-05, 8.858399999999919e-05, 8.837500000000165e-05, 8.834699999999904e-05, 8.818099999999968e-05, 8.854200000000048e-05, 8.904099999999804e-05, 8.836099999999861e-05, 8.841700000000036e-05, 8.852700000000144e-05, 8.868100000000018e-05, 8.852800000000091e-05, 8.854199999999701e-05, 8.852799999999744e-05, 8.851400000000134e-05, 8.868100000000018e-05, 8.836099999999861e-05, 8.862499999999843e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.540" endtime="20201030 15:56:07.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.535" endtime="20201030 15:56:07.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.546" endtime="20201030 15:56:07.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.545" endtime="20201030 15:56:07.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.543" endtime="20201030 15:56:07.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.183" endtime="20201030 15:56:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.183" endtime="20201030 15:56:07.567"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.575" endtime="20201030 15:56:07.595"></status>
</kw>
<msg timestamp="20201030 15:56:07.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.574" endtime="20201030 15:56:07.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.596" endtime="20201030 15:56:07.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.599" endtime="20201030 15:56:07.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.571" endtime="20201030 15:56:07.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.569" endtime="20201030 15:56:07.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.608" endtime="20201030 15:56:07.893"></status>
</kw>
<msg timestamp="20201030 15:56:07.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:07.606" endtime="20201030 15:56:07.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021979, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068389, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:56:07.897" endtime="20201030 15:56:07.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.906" endtime="20201030 15:56:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.604" endtime="20201030 15:56:07.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.602" endtime="20201030 15:56:07.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:07.913" level="INFO">${RESULT} = [{'diff': 8.938900000000222e-05}, {'diff': 8.936099999999961e-05}, {'diff': 8.988900000000272e-05}, {'diff': 9.005599999999808e-05}, {'diff': 8.937499999999918e-05}, {'diff': 8.984800000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:07.910" endtime="20201030 15:56:07.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:07.918" level="INFO">${ACCURACY} = {'diff': [8.938900000000222e-05, 8.936099999999961e-05, 8.988900000000272e-05, 9.005599999999808e-05, 8.937499999999918e-05, 8.984800000000001e-05, 8.929200000000123e-05, 8.967999999999823e-05, 8.9861...</msg>
<status status="PASS" starttime="20201030 15:56:07.914" endtime="20201030 15:56:07.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.922" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:56:07.921" endtime="20201030 15:56:07.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.925" level="INFO">VALUE: [8.938900000000222e-05, 8.936099999999961e-05, 8.988900000000272e-05, 9.005599999999808e-05, 8.937499999999918e-05, 8.984800000000001e-05, 8.929200000000123e-05, 8.967999999999823e-05, 8.986100000000011e-05, 8.915299999999807e-05, 8.970800000000084e-05, 8.987499999999968e-05, 8.952799999999844e-05, 8.936099999999961e-05, 8.984699999999707e-05, 8.936099999999961e-05, 8.954200000000148e-05, 9.002699999999947e-05, 9.005500000000208e-05, 8.986100000000011e-05, 8.955600000000105e-05, 9.004199999999851e-05, 8.96800000000017e-05, 8.937499999999918e-05, 8.969500000000075e-05, 9.009700000000079e-05, 8.969500000000075e-05, 9.002799999999894e-05, 8.952799999999844e-05, 8.951300000000287e-05, 8.984700000000054e-05, 8.970800000000084e-05, 9.001399999999937e-05, 8.9638999999999e-05, 8.919400000000077e-05, 9.004199999999851e-05, 8.969500000000075e-05, 8.952800000000191e-05, 8.974999999999955e-05, 8.986200000000305e-05, 8.919400000000077e-05, 8.937500000000265e-05, 8.937499999999918e-05, 9.002800000000241e-05, 8.973599999999998e-05, 8.96939999999978e-05, 9.002799999999894e-05, 8.959699999999682e-05, 8.987499999999968e-05, 8.919499999999678e-05]</msg>
<status status="PASS" starttime="20201030 15:56:07.923" endtime="20201030 15:56:07.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.918" endtime="20201030 15:56:07.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:07.929" endtime="20201030 15:56:07.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.928" endtime="20201030 15:56:07.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.927" endtime="20201030 15:56:07.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.568" endtime="20201030 15:56:07.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.567" endtime="20201030 15:56:07.950"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.959" endtime="20201030 15:56:07.979"></status>
</kw>
<msg timestamp="20201030 15:56:07.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.957" endtime="20201030 15:56:07.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:07.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:07.981" endtime="20201030 15:56:07.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.984" endtime="20201030 15:56:07.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.955" endtime="20201030 15:56:07.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.953" endtime="20201030 15:56:07.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:07.993" endtime="20201030 15:56:08.279"></status>
</kw>
<msg timestamp="20201030 15:56:08.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023239375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023329736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:07.991" endtime="20201030 15:56:08.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023239375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023329736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.283" endtime="20201030 15:56:08.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.291" endtime="20201030 15:56:08.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.989" endtime="20201030 15:56:08.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.987" endtime="20201030 15:56:08.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.298" level="INFO">${RESULT} = [{'diff': 9.036100000000061e-05}, {'diff': 9.036100000000061e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.055499999999911e-05}, {'diff': 9.104199999999951e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:08.295" endtime="20201030 15:56:08.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.302" level="INFO">${ACCURACY} = {'diff': [9.036100000000061e-05, 9.036100000000061e-05, 9.05000000000003e-05, 9.052799999999944e-05, 9.055499999999911e-05, 9.104199999999951e-05, 9.018099999999821e-05, 9.086100000000111e-05, 9.01519...</msg>
<status status="PASS" starttime="20201030 15:56:08.299" endtime="20201030 15:56:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.307" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.306" endtime="20201030 15:56:08.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.309" level="INFO">VALUE: [9.036100000000061e-05, 9.036100000000061e-05, 9.05000000000003e-05, 9.052799999999944e-05, 9.055499999999911e-05, 9.104199999999951e-05, 9.018099999999821e-05, 9.086100000000111e-05, 9.01519999999996e-05, 9.023600000000048e-05, 9.070799999999837e-05, 9.104199999999951e-05, 9.036100000000061e-05, 9.054199999999901e-05, 9.016699999999864e-05, 9.104199999999951e-05, 9.106899999999918e-05, 9.019500000000125e-05, 9.054099999999954e-05, 9.069400000000227e-05, 9.065299999999957e-05, 9.070799999999837e-05, 9.087500000000068e-05, 9.068100000000218e-05, 9.052799999999944e-05, 9.018099999999821e-05, 9.052799999999944e-05, 9.072200000000141e-05, 9.087499999999721e-05, 9.037500000000018e-05, 9.072200000000141e-05, 9.020800000000134e-05, 9.076400000000012e-05, 9.022199999999744e-05, 9.070799999999837e-05, 9.019499999999778e-05, 9.08060000000023e-05, 9.033400000000094e-05, 9.019500000000125e-05, 9.020800000000134e-05, 9.086100000000111e-05, 9.102799999999994e-05, 9.067999999999923e-05, 9.034700000000104e-05, 9.088899999999678e-05, 9.03060000000018e-05, 9.087499999999721e-05, 9.036100000000061e-05, 9.019500000000125e-05, 9.018100000000168e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.308" endtime="20201030 15:56:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.303" endtime="20201030 15:56:08.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.315" endtime="20201030 15:56:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.314" endtime="20201030 15:56:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.312" endtime="20201030 15:56:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.951" endtime="20201030 15:56:08.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:07.950" endtime="20201030 15:56:08.336"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.344" endtime="20201030 15:56:08.364"></status>
</kw>
<msg timestamp="20201030 15:56:08.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.343" endtime="20201030 15:56:08.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.365" endtime="20201030 15:56:08.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.368" endtime="20201030 15:56:08.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.340" endtime="20201030 15:56:08.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.338" endtime="20201030 15:56:08.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.377" endtime="20201030 15:56:08.663"></status>
</kw>
<msg timestamp="20201030 15:56:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.375" endtime="20201030 15:56:08.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.667" endtime="20201030 15:56:08.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.675" endtime="20201030 15:56:08.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.373" endtime="20201030 15:56:08.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.371" endtime="20201030 15:56:08.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:08.682" level="INFO">${RESULT} = [{'diff': 9.172300000000189e-05}, {'diff': 9.119500000000225e-05}, {'diff': 9.20139999999979e-05}, {'diff': 9.188800000000177e-05}, {'diff': 9.186200000000158e-05}, {'diff': 9.131899999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:08.678" endtime="20201030 15:56:08.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:08.687" level="INFO">${ACCURACY} = {'diff': [9.172300000000189e-05, 9.119500000000225e-05, 9.20139999999979e-05, 9.188800000000177e-05, 9.186200000000158e-05, 9.131899999999943e-05, 9.187499999999821e-05, 9.20139999999979e-05, 9.119399...</msg>
<status status="PASS" starttime="20201030 15:56:08.683" endtime="20201030 15:56:08.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.691" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:56:08.690" endtime="20201030 15:56:08.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.694" level="INFO">VALUE: [9.172300000000189e-05, 9.119500000000225e-05, 9.20139999999979e-05, 9.188800000000177e-05, 9.186200000000158e-05, 9.131899999999943e-05, 9.187499999999821e-05, 9.20139999999979e-05, 9.11939999999993e-05, 9.170800000000284e-05, 9.136100000000161e-05, 9.154200000000001e-05, 9.156899999999968e-05, 9.204200000000051e-05, 9.134800000000151e-05, 9.186099999999864e-05, 9.143099999999946e-05, 9.120800000000234e-05, 9.187499999999821e-05, 9.186100000000211e-05, 9.137500000000118e-05, 9.191599999999744e-05, 9.186099999999864e-05, 9.159700000000229e-05, 9.118100000000268e-05, 9.166600000000066e-05, 9.152700000000097e-05, 9.168000000000023e-05, 9.154100000000054e-05, 9.186099999999864e-05, 9.16939999999998e-05, 9.137500000000118e-05, 9.122200000000191e-05, 9.18329999999995e-05, 9.169500000000275e-05, 9.136100000000161e-05, 9.137500000000118e-05, 9.154100000000054e-05, 9.158300000000272e-05, 9.136099999999814e-05, 9.20139999999979e-05, 9.154200000000001e-05, 9.147200000000216e-05, 9.186099999999864e-05, 9.119499999999878e-05, 9.137499999999771e-05, 9.120900000000182e-05, 9.202800000000094e-05, 9.117999999999973e-05, 9.158299999999925e-05]</msg>
<status status="PASS" starttime="20201030 15:56:08.692" endtime="20201030 15:56:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.688" endtime="20201030 15:56:08.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:08.699" endtime="20201030 15:56:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.697" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.696" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.337" endtime="20201030 15:56:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.336" endtime="20201030 15:56:08.719"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.728" endtime="20201030 15:56:08.748"></status>
</kw>
<msg timestamp="20201030 15:56:08.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.726" endtime="20201030 15:56:08.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:08.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:08.749" endtime="20201030 15:56:08.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.752" endtime="20201030 15:56:08.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.724" endtime="20201030 15:56:08.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.722" endtime="20201030 15:56:08.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:08.761" endtime="20201030 15:56:09.048"></status>
</kw>
<msg timestamp="20201030 15:56:09.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:08.759" endtime="20201030 15:56:09.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022224653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.052" endtime="20201030 15:56:09.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.060" endtime="20201030 15:56:09.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.757" endtime="20201030 15:56:09.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.755" endtime="20201030 15:56:09.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.067" level="INFO">${RESULT} = [{'diff': 9.220899999999935e-05}, {'diff': 9.293000000000148e-05}, {'diff': 9.237499999999871e-05}, {'diff': 9.236199999999861e-05}, {'diff': 9.287499999999921e-05}, {'diff': 9.30000000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:09.064" endtime="20201030 15:56:09.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.071" level="INFO">${ACCURACY} = {'diff': [9.220899999999935e-05, 9.293000000000148e-05, 9.237499999999871e-05, 9.236199999999861e-05, 9.287499999999921e-05, 9.30000000000028e-05, 9.256900000000068e-05, 9.286099999999964e-05, 9.27080...</msg>
<status status="PASS" starttime="20201030 15:56:09.068" endtime="20201030 15:56:09.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.076" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.075" endtime="20201030 15:56:09.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.078" level="INFO">VALUE: [9.220899999999935e-05, 9.293000000000148e-05, 9.237499999999871e-05, 9.236199999999861e-05, 9.287499999999921e-05, 9.30000000000028e-05, 9.256900000000068e-05, 9.286099999999964e-05, 9.270800000000037e-05, 9.252800000000144e-05, 9.254200000000101e-05, 9.220899999999935e-05, 9.287500000000268e-05, 9.222199999999944e-05, 9.220799999999987e-05, 9.237499999999871e-05, 9.227699999999825e-05, 9.251400000000187e-05, 9.21940000000003e-05, 9.270800000000037e-05, 9.302799999999847e-05, 9.220900000000282e-05, 9.269500000000028e-05, 9.269500000000028e-05, 9.269500000000028e-05, 9.287499999999921e-05, 9.217999999999726e-05, 9.220799999999987e-05, 9.26940000000008e-05, 9.302800000000194e-05, 9.227700000000172e-05, 9.220799999999987e-05, 9.237500000000218e-05, 9.222299999999892e-05, 9.286099999999964e-05, 9.279200000000126e-05, 9.26529999999981e-05, 9.270800000000037e-05, 9.254100000000154e-05, 9.26940000000008e-05, 9.219399999999683e-05, 9.305600000000108e-05, 9.251400000000187e-05, 9.220899999999935e-05, 9.258300000000025e-05, 9.288899999999878e-05, 9.238900000000175e-05, 9.262500000000243e-05, 9.251400000000187e-05, 9.301400000000237e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.077" endtime="20201030 15:56:09.079"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.072" endtime="20201030 15:56:09.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.083" endtime="20201030 15:56:09.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.081" endtime="20201030 15:56:09.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.080" endtime="20201030 15:56:09.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.720" endtime="20201030 15:56:09.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:08.720" endtime="20201030 15:56:09.104"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.112" endtime="20201030 15:56:09.133"></status>
</kw>
<msg timestamp="20201030 15:56:09.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.111" endtime="20201030 15:56:09.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.134" endtime="20201030 15:56:09.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.136" endtime="20201030 15:56:09.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.108" endtime="20201030 15:56:09.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.106" endtime="20201030 15:56:09.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.146" endtime="20201030 15:56:09.431"></status>
</kw>
<msg timestamp="20201030 15:56:09.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.144" endtime="20201030 15:56:09.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023078125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.436" endtime="20201030 15:56:09.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.444" endtime="20201030 15:56:09.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.141" endtime="20201030 15:56:09.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.140" endtime="20201030 15:56:09.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.451" level="INFO">${RESULT} = [{'diff': 9.369399999999833e-05}, {'diff': 9.337499999999971e-05}, {'diff': 9.352800000000244e-05}, {'diff': 9.36940000000018e-05}, {'diff': 9.352799999999897e-05}, {'diff': 9.344400000000155e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:09.447" endtime="20201030 15:56:09.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.455" level="INFO">${ACCURACY} = {'diff': [9.369399999999833e-05, 9.337499999999971e-05, 9.352800000000244e-05, 9.36940000000018e-05, 9.352799999999897e-05, 9.344400000000155e-05, 9.354199999999854e-05, 9.370900000000085e-05, 9.38469...</msg>
<status status="PASS" starttime="20201030 15:56:09.452" endtime="20201030 15:56:09.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.459" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.458" endtime="20201030 15:56:09.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.462" level="INFO">VALUE: [9.369399999999833e-05, 9.337499999999971e-05, 9.352800000000244e-05, 9.36940000000018e-05, 9.352799999999897e-05, 9.344400000000155e-05, 9.354199999999854e-05, 9.370900000000085e-05, 9.38469999999976e-05, 9.319500000000078e-05, 9.408299999999828e-05, 9.388899999999978e-05, 9.326399999999915e-05, 9.402799999999947e-05, 9.37079999999979e-05, 9.31940000000013e-05, 9.370800000000137e-05, 9.341599999999894e-05, 9.330600000000133e-05, 9.386200000000011e-05, 9.369499999999781e-05, 9.372200000000094e-05, 9.354100000000254e-05, 9.336100000000014e-05, 9.352799999999897e-05, 9.404199999999904e-05, 9.336100000000014e-05, 9.40139999999999e-05, 9.365300000000257e-05, 9.336100000000014e-05, 9.33879999999998e-05, 9.400000000000033e-05, 9.370800000000137e-05, 9.320800000000087e-05, 9.338899999999928e-05, 9.352799999999897e-05, 9.402799999999947e-05, 9.36940000000018e-05, 9.402799999999947e-05, 9.384700000000107e-05, 9.387500000000021e-05, 9.319500000000078e-05, 9.354099999999907e-05, 9.317999999999826e-05, 9.386100000000064e-05, 9.369399999999833e-05, 9.384700000000107e-05, 9.334700000000057e-05, 9.369499999999781e-05, 9.409699999999785e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.461" endtime="20201030 15:56:09.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.456" endtime="20201030 15:56:09.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.468" endtime="20201030 15:56:09.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.467" endtime="20201030 15:56:09.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.466" endtime="20201030 15:56:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.105" endtime="20201030 15:56:09.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.104" endtime="20201030 15:56:09.489"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.498" endtime="20201030 15:56:09.517"></status>
</kw>
<msg timestamp="20201030 15:56:09.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.496" endtime="20201030 15:56:09.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.519" endtime="20201030 15:56:09.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.521" endtime="20201030 15:56:09.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.494" endtime="20201030 15:56:09.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.491" endtime="20201030 15:56:09.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.530" endtime="20201030 15:56:09.815"></status>
</kw>
<msg timestamp="20201030 15:56:09.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.528" endtime="20201030 15:56:09.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022174861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.821" endtime="20201030 15:56:09.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.832" endtime="20201030 15:56:09.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.526" endtime="20201030 15:56:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.524" endtime="20201030 15:56:09.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:09.841" level="INFO">${RESULT} = [{'diff': 9.41940000000023e-05}, {'diff': 9.45140000000004e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.502800000000047e-05}, {'diff': 9.470900000000185e-05}, {'diff': 9.437500000000071e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:09.837" endtime="20201030 15:56:09.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:09.848" level="INFO">${ACCURACY} = {'diff': [9.41940000000023e-05, 9.45140000000004e-05, 9.419499999999831e-05, 9.502800000000047e-05, 9.470900000000185e-05, 9.437500000000071e-05, 9.47079999999989e-05, 9.420800000000187e-05, 9.4374999...</msg>
<status status="PASS" starttime="20201030 15:56:09.843" endtime="20201030 15:56:09.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.854" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:56:09.853" endtime="20201030 15:56:09.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.856" level="INFO">VALUE: [9.41940000000023e-05, 9.45140000000004e-05, 9.419499999999831e-05, 9.502800000000047e-05, 9.470900000000185e-05, 9.437500000000071e-05, 9.47079999999989e-05, 9.420800000000187e-05, 9.437499999999724e-05, 9.4333000000002e-05, 9.47079999999989e-05, 9.486100000000164e-05, 9.436100000000114e-05, 9.415300000000307e-05, 9.475000000000108e-05, 9.418099999999874e-05, 9.411200000000036e-05, 9.422199999999797e-05, 9.45270000000005e-05, 9.500000000000133e-05, 9.438900000000028e-05, 9.436100000000114e-05, 9.504200000000004e-05, 9.468099999999924e-05, 9.437499999999724e-05, 9.469499999999881e-05, 9.486199999999764e-05, 9.502800000000047e-05, 9.436100000000114e-05, 9.45140000000004e-05, 9.41940000000023e-05, 9.423600000000101e-05, 9.472199999999847e-05, 9.502800000000047e-05, 9.502800000000047e-05, 9.423599999999754e-05, 9.452799999999997e-05, 9.469500000000228e-05, 9.419399999999883e-05, 9.467999999999976e-05, 9.423600000000101e-05, 9.436100000000114e-05, 9.42079999999984e-05, 9.490300000000035e-05, 9.475000000000108e-05, 9.488900000000078e-05, 9.45140000000004e-05, 9.470900000000185e-05, 9.494499999999906e-05, 9.451300000000093e-05]</msg>
<status status="PASS" starttime="20201030 15:56:09.855" endtime="20201030 15:56:09.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.850" endtime="20201030 15:56:09.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:09.866" endtime="20201030 15:56:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.865" endtime="20201030 15:56:09.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.864" endtime="20201030 15:56:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.490" endtime="20201030 15:56:09.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.489" endtime="20201030 15:56:09.887"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.896" endtime="20201030 15:56:09.916"></status>
</kw>
<msg timestamp="20201030 15:56:09.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.894" endtime="20201030 15:56:09.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:09.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:09.917" endtime="20201030 15:56:09.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.920" endtime="20201030 15:56:09.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.892" endtime="20201030 15:56:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.890" endtime="20201030 15:56:09.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:09.929" endtime="20201030 15:56:10.216"></status>
</kw>
<msg timestamp="20201030 15:56:10.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022480931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:09.927" endtime="20201030 15:56:10.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022385681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022480931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.220" endtime="20201030 15:56:10.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.229" endtime="20201030 15:56:10.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.925" endtime="20201030 15:56:10.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.923" endtime="20201030 15:56:10.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.235" level="INFO">${RESULT} = [{'diff': 9.524999999999811e-05}, {'diff': 9.536199999999814e-05}, {'diff': 9.587499999999874e-05}, {'diff': 9.55270000000015e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.568000000000076e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:10.232" endtime="20201030 15:56:10.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.239" level="INFO">${ACCURACY} = {'diff': [9.524999999999811e-05, 9.536199999999814e-05, 9.587499999999874e-05, 9.55270000000015e-05, 9.586099999999917e-05, 9.568000000000076e-05, 9.52079999999994e-05, 9.569499999999981e-05, 9.519499...</msg>
<status status="PASS" starttime="20201030 15:56:10.236" endtime="20201030 15:56:10.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.244" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.243" endtime="20201030 15:56:10.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.246" level="INFO">VALUE: [9.524999999999811e-05, 9.536199999999814e-05, 9.587499999999874e-05, 9.55270000000015e-05, 9.586099999999917e-05, 9.568000000000076e-05, 9.52079999999994e-05, 9.569499999999981e-05, 9.519499999999931e-05, 9.58339999999995e-05, 9.586200000000211e-05, 9.584799999999907e-05, 9.538900000000128e-05, 9.604100000000157e-05, 9.569400000000033e-05, 9.520800000000287e-05, 9.519499999999931e-05, 9.57079999999999e-05, 9.602800000000147e-05, 9.576400000000165e-05, 9.566700000000067e-05, 9.552800000000097e-05, 9.574999999999861e-05, 9.55409999999976e-05, 9.586099999999917e-05, 9.536099999999867e-05, 9.519399999999983e-05, 9.525000000000158e-05, 9.549999999999836e-05, 9.586099999999917e-05, 9.59729999999992e-05, 9.519500000000278e-05, 9.6027999999998e-05, 9.569400000000033e-05, 9.569400000000033e-05, 9.552800000000097e-05, 9.536100000000214e-05, 9.530500000000039e-05, 9.537499999999824e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.602800000000147e-05, 9.57079999999999e-05, 9.541700000000042e-05, 9.586100000000264e-05, 9.580499999999742e-05, 9.607000000000018e-05, 9.579200000000079e-05, 9.602800000000147e-05, 9.569499999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.245" endtime="20201030 15:56:10.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.240" endtime="20201030 15:56:10.248"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.251" endtime="20201030 15:56:10.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.250" endtime="20201030 15:56:10.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.249" endtime="20201030 15:56:10.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.888" endtime="20201030 15:56:10.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:09.887" endtime="20201030 15:56:10.272"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.281" endtime="20201030 15:56:10.303"></status>
</kw>
<msg timestamp="20201030 15:56:10.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.279" endtime="20201030 15:56:10.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.305" endtime="20201030 15:56:10.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.307" endtime="20201030 15:56:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.277" endtime="20201030 15:56:10.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.275" endtime="20201030 15:56:10.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.316" endtime="20201030 15:56:10.601"></status>
</kw>
<msg timestamp="20201030 15:56:10.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.315" endtime="20201030 15:56:10.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025408528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.606" endtime="20201030 15:56:10.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.614" endtime="20201030 15:56:10.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.312" endtime="20201030 15:56:10.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.310" endtime="20201030 15:56:10.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:10.620" level="INFO">${RESULT} = [{'diff': 9.704199999999857e-05}, {'diff': 9.620899999999988e-05}, {'diff': 9.620899999999988e-05}, {'diff': 9.620899999999988e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.686100000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:10.617" endtime="20201030 15:56:10.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:10.624" level="INFO">${ACCURACY} = {'diff': [9.704199999999857e-05, 9.620899999999988e-05, 9.620899999999988e-05, 9.620899999999988e-05, 9.62080000000004e-05, 9.686100000000017e-05, 9.688900000000278e-05, 9.619400000000083e-05, 9.63060...</msg>
<status status="PASS" starttime="20201030 15:56:10.621" endtime="20201030 15:56:10.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.629" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:56:10.628" endtime="20201030 15:56:10.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.631" level="INFO">VALUE: [9.704199999999857e-05, 9.620899999999988e-05, 9.620899999999988e-05, 9.620899999999988e-05, 9.62080000000004e-05, 9.686100000000017e-05, 9.688900000000278e-05, 9.619400000000083e-05, 9.630600000000086e-05, 9.654200000000154e-05, 9.619500000000031e-05, 9.668099999999777e-05, 9.701399999999943e-05, 9.619500000000031e-05, 9.669500000000081e-05, 9.651399999999893e-05, 9.613900000000203e-05, 9.62080000000004e-05, 9.675000000000308e-05, 9.704200000000204e-05, 9.686100000000017e-05, 9.686100000000017e-05, 9.7027999999999e-05, 9.67080000000009e-05, 9.65279999999985e-05, 9.702699999999953e-05, 9.636100000000314e-05, 9.62080000000004e-05, 9.636099999999967e-05, 9.669399999999786e-05, 9.702800000000247e-05, 9.636099999999967e-05, 9.687499999999974e-05, 9.686100000000017e-05, 9.641699999999795e-05, 9.702699999999953e-05, 9.670799999999743e-05, 9.62080000000004e-05, 9.636100000000314e-05, 9.686100000000017e-05, 9.687499999999974e-05, 9.669500000000081e-05, 9.654200000000154e-05, 9.619500000000031e-05, 9.620899999999988e-05, 9.654100000000207e-05, 9.619400000000083e-05, 9.702800000000247e-05, 9.636099999999967e-05, 9.637500000000271e-05]</msg>
<status status="PASS" starttime="20201030 15:56:10.630" endtime="20201030 15:56:10.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.625" endtime="20201030 15:56:10.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:10.637" endtime="20201030 15:56:10.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.636" endtime="20201030 15:56:10.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.635" endtime="20201030 15:56:10.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.273" endtime="20201030 15:56:10.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.272" endtime="20201030 15:56:10.658"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.666" endtime="20201030 15:56:10.686"></status>
</kw>
<msg timestamp="20201030 15:56:10.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.665" endtime="20201030 15:56:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:10.687" endtime="20201030 15:56:10.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.690" endtime="20201030 15:56:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.662" endtime="20201030 15:56:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.660" endtime="20201030 15:56:10.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.699" endtime="20201030 15:56:10.985"></status>
</kw>
<msg timestamp="20201030 15:56:10.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.697" endtime="20201030 15:56:10.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:10.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:10.989" endtime="20201030 15:56:10.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:10.997" endtime="20201030 15:56:10.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.695" endtime="20201030 15:56:11.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.693" endtime="20201030 15:56:11.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.004" level="INFO">${RESULT} = [{'diff': 9.805599999999914e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.758299999999831e-05}, {'diff': 9.7334000000001e-05}, {'diff': 9.801400000000043e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:56:11.001" endtime="20201030 15:56:11.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.009" level="INFO">${ACCURACY} = {'diff': [9.805599999999914e-05, 9.784699999999813e-05, 9.754199999999907e-05, 9.758299999999831e-05, 9.7334000000001e-05, 9.801400000000043e-05, 9.762500000000049e-05, 9.751399999999993e-05, 9.754199...</msg>
<status status="PASS" starttime="20201030 15:56:11.005" endtime="20201030 15:56:11.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.014" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.012" endtime="20201030 15:56:11.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.016" level="INFO">VALUE: [9.805599999999914e-05, 9.784699999999813e-05, 9.754199999999907e-05, 9.758299999999831e-05, 9.7334000000001e-05, 9.801400000000043e-05, 9.762500000000049e-05, 9.751399999999993e-05, 9.754199999999907e-05, 9.788900000000031e-05, 9.75279999999995e-05, 9.73609999999972e-05, 9.736100000000067e-05, 9.787499999999727e-05, 9.74019999999999e-05, 9.786200000000064e-05, 9.78609999999977e-05, 9.777799999999975e-05, 9.719399999999837e-05, 9.719400000000183e-05, 9.801400000000043e-05, 9.719400000000183e-05, 9.750000000000036e-05, 9.787499999999727e-05, 9.75279999999995e-05, 9.792999999999955e-05, 9.777799999999975e-05, 9.802700000000053e-05, 9.75409999999996e-05, 9.733299999999806e-05, 9.72219999999975e-05, 9.757000000000168e-05, 9.773599999999757e-05, 9.805600000000261e-05, 9.737500000000024e-05, 9.75279999999995e-05, 9.75279999999995e-05, 9.74999999999969e-05, 9.769399999999887e-05, 9.719400000000183e-05, 9.712499999999999e-05, 9.797200000000172e-05, 9.72080000000014e-05, 9.73609999999972e-05, 9.784699999999813e-05, 9.736100000000067e-05, 9.731899999999849e-05, 9.71660000000027e-05, 9.736100000000067e-05, 9.804199999999957e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.015" endtime="20201030 15:56:11.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.010" endtime="20201030 15:56:11.017"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.021" endtime="20201030 15:56:11.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.019" endtime="20201030 15:56:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.018" endtime="20201030 15:56:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.659" endtime="20201030 15:56:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:10.658" endtime="20201030 15:56:11.042"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.050" endtime="20201030 15:56:11.070"></status>
</kw>
<msg timestamp="20201030 15:56:11.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.049" endtime="20201030 15:56:11.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.071" endtime="20201030 15:56:11.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.074" endtime="20201030 15:56:11.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.046" endtime="20201030 15:56:11.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.044" endtime="20201030 15:56:11.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.083" endtime="20201030 15:56:11.371"></status>
</kw>
<msg timestamp="20201030 15:56:11.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:11.081" endtime="20201030 15:56:11.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02230775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:11.375" endtime="20201030 15:56:11.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.383" endtime="20201030 15:56:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.079" endtime="20201030 15:56:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.077" endtime="20201030 15:56:11.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.390" level="INFO">${RESULT} = [{'diff': 9.869399999999987e-05}, {'diff': 9.820799999999894e-05}, {'diff': 9.87080000000029e-05}, {'diff': 9.898599999999882e-05}, {'diff': 9.831899999999949e-05}, {'diff': 9.869399999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:56:11.386" endtime="20201030 15:56:11.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.394" level="INFO">${ACCURACY} = {'diff': [9.869399999999987e-05, 9.820799999999894e-05, 9.87080000000029e-05, 9.898599999999882e-05, 9.831899999999949e-05, 9.869399999999987e-05, 9.825000000000111e-05, 9.870899999999891e-05, 9.84589...</msg>
<status status="PASS" starttime="20201030 15:56:11.391" endtime="20201030 15:56:11.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.398" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.397" endtime="20201030 15:56:11.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.401" level="INFO">VALUE: [9.869399999999987e-05, 9.820799999999894e-05, 9.87080000000029e-05, 9.898599999999882e-05, 9.831899999999949e-05, 9.869399999999987e-05, 9.825000000000111e-05, 9.870899999999891e-05, 9.845899999999866e-05, 9.840300000000038e-05, 9.851300000000146e-05, 9.82080000000024e-05, 9.837499999999777e-05, 9.88609999999987e-05, 9.819399999999937e-05, 9.83609999999982e-05, 9.83609999999982e-05, 9.863900000000106e-05, 9.876399999999771e-05, 9.886199999999817e-05, 9.870799999999944e-05, 9.837499999999777e-05, 9.904099999999763e-05, 9.9028000000001e-05, 9.88609999999987e-05, 9.884699999999913e-05, 9.83609999999982e-05, 9.819499999999884e-05, 9.887499999999827e-05, 9.83609999999982e-05, 9.837499999999777e-05, 9.8721999999999e-05, 9.870799999999944e-05, 9.847199999999875e-05, 9.81799999999998e-05, 9.854200000000007e-05, 9.836100000000167e-05, 9.901399999999796e-05, 9.9028000000001e-05, 9.85280000000005e-05, 9.819399999999937e-05, 9.81799999999998e-05, 9.819400000000283e-05, 9.819399999999937e-05, 9.870799999999944e-05, 9.822200000000197e-05, 9.837499999999777e-05, 9.868099999999977e-05, 9.819499999999884e-05, 9.85410000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.399" endtime="20201030 15:56:11.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.395" endtime="20201030 15:56:11.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.406" endtime="20201030 15:56:11.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.404" endtime="20201030 15:56:11.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.403" endtime="20201030 15:56:11.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.043" endtime="20201030 15:56:11.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.042" endtime="20201030 15:56:11.426"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.435" endtime="20201030 15:56:11.455"></status>
</kw>
<msg timestamp="20201030 15:56:11.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.433" endtime="20201030 15:56:11.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.457" endtime="20201030 15:56:11.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.459" endtime="20201030 15:56:11.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.431" endtime="20201030 15:56:11.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.429" endtime="20201030 15:56:11.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.469" endtime="20201030 15:56:11.755"></status>
</kw>
<msg timestamp="20201030 15:56:11.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.467" endtime="20201030 15:56:11.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022887097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022986486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.759" endtime="20201030 15:56:11.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.768" endtime="20201030 15:56:11.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.465" endtime="20201030 15:56:11.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.463" endtime="20201030 15:56:11.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:11.774" level="INFO">${RESULT} = [{'diff': 9.938900000000181e-05}, {'diff': 9.987499999999927e-05}, {'diff': 9.920799999999994e-05}, {'diff': 9.995800000000069e-05}, {'diff': 9.940300000000138e-05}, {'diff': 9.934699999999963e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:56:11.771" endtime="20201030 15:56:11.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:11.778" level="INFO">${ACCURACY} = {'diff': [9.938900000000181e-05, 9.987499999999927e-05, 9.920799999999994e-05, 9.995800000000069e-05, 9.940300000000138e-05, 9.934699999999963e-05, 9.969500000000034e-05, 9.951400000000193e-05, 9.9526...</msg>
<status status="PASS" starttime="20201030 15:56:11.775" endtime="20201030 15:56:11.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.783" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:56:11.782" endtime="20201030 15:56:11.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.785" level="INFO">VALUE: [9.938900000000181e-05, 9.987499999999927e-05, 9.920799999999994e-05, 9.995800000000069e-05, 9.940300000000138e-05, 9.934699999999963e-05, 9.969500000000034e-05, 9.951400000000193e-05, 9.952699999999856e-05, 9.954099999999813e-05, 9.93609999999992e-05, 9.919400000000037e-05, 9.95419999999976e-05, 9.934699999999963e-05, 0.00010002799999999853, 9.951399999999846e-05, 0.00010004200000000157, 9.919499999999984e-05, 9.970800000000044e-05, 9.970800000000044e-05, 9.920799999999994e-05, 9.936100000000267e-05, 9.983300000000056e-05, 9.931900000000049e-05, 9.972299999999948e-05, 9.965299999999816e-05, 9.951399999999846e-05, 9.937499999999877e-05, 9.9722e-05, 9.920799999999994e-05, 9.952700000000203e-05, 9.969400000000087e-05, 9.970800000000044e-05, 9.980599999999742e-05, 9.984700000000013e-05, 9.98609999999997e-05, 9.98479999999996e-05, 9.968100000000077e-05, 9.937500000000224e-05, 9.991700000000145e-05, 9.969400000000087e-05, 9.951399999999846e-05, 9.980500000000142e-05, 9.936100000000267e-05, 9.98609999999997e-05, 9.98060000000009e-05, 0.00010004200000000157, 9.984700000000013e-05, 9.970800000000044e-05, 9.970800000000044e-05]</msg>
<status status="PASS" starttime="20201030 15:56:11.784" endtime="20201030 15:56:11.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.779" endtime="20201030 15:56:11.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:11.791" endtime="20201030 15:56:11.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.789" endtime="20201030 15:56:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.788" endtime="20201030 15:56:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.427" endtime="20201030 15:56:11.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.427" endtime="20201030 15:56:11.812"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.820" endtime="20201030 15:56:11.840"></status>
</kw>
<msg timestamp="20201030 15:56:11.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.819" endtime="20201030 15:56:11.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:11.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:11.841" endtime="20201030 15:56:11.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.844" endtime="20201030 15:56:11.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.816" endtime="20201030 15:56:11.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.814" endtime="20201030 15:56:11.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:11.853" endtime="20201030 15:56:12.139"></status>
</kw>
<msg timestamp="20201030 15:56:12.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:11.851" endtime="20201030 15:56:12.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022136931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.143" endtime="20201030 15:56:12.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.151" endtime="20201030 15:56:12.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.849" endtime="20201030 15:56:12.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.847" endtime="20201030 15:56:12.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.157" level="INFO">${RESULT} = [{'diff': 0.00010019499999999737}, {'diff': 0.0001008610000000007}, {'diff': 0.00010052699999999956}, {'diff': 0.00010088899999999984}, {'diff': 0.00010037499999999977}, {'diff': 0.0001006940000000018...</msg>
<status status="PASS" starttime="20201030 15:56:12.154" endtime="20201030 15:56:12.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.162" level="INFO">${ACCURACY} = {'diff': [0.00010019499999999737, 0.0001008610000000007, 0.00010052699999999956, 0.00010088899999999984, 0.00010037499999999977, 0.00010069400000000187, 0.00010108299999999834, 0.0001005419999999986, ...</msg>
<status status="PASS" starttime="20201030 15:56:12.158" endtime="20201030 15:56:12.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.167" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.166" endtime="20201030 15:56:12.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.169" level="INFO">VALUE: [0.00010019499999999737, 0.0001008610000000007, 0.00010052699999999956, 0.00010088899999999984, 0.00010037499999999977, 0.00010069400000000187, 0.00010108299999999834, 0.0001005419999999986, 0.000101028000000003, 0.0001003610000000002, 0.0001003480000000001, 0.00010019400000000137, 0.00010052799999999903, 0.00010087500000000027, 0.00010020800000000094, 0.00010037499999999977, 0.00010020800000000094, 0.00010076399999999971, 0.00010106900000000224, 0.0001003480000000001, 0.00010036199999999967, 0.00010051299999999999, 0.00010034700000000063, 0.00010051400000000293, 0.00010069400000000187, 0.00010105600000000214, 0.00010090299999999941, 0.00010072300000000048, 0.00010095799999999822, 0.000101028000000003, 0.00010019500000000084, 0.00010087500000000027, 0.00010102700000000006, 0.00010055600000000164, 0.00010056999999999774, 0.00010051399999999946, 0.00010052799999999903, 0.00010069500000000134, 0.0001005419999999986, 0.00010038799999999987, 0.00010051299999999999, 0.0001001939999999979, 0.00010019400000000137, 0.0001003610000000002, 0.0001003610000000002, 0.00010020799999999747, 0.00010069499999999787, 0.00010102799999999953, 0.00010019500000000084, 0.00010075000000000014]</msg>
<status status="PASS" starttime="20201030 15:56:12.168" endtime="20201030 15:56:12.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.163" endtime="20201030 15:56:12.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.174" endtime="20201030 15:56:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.173" endtime="20201030 15:56:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.171" endtime="20201030 15:56:12.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.813" endtime="20201030 15:56:12.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:11.812" endtime="20201030 15:56:12.195"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.204" endtime="20201030 15:56:12.223"></status>
</kw>
<msg timestamp="20201030 15:56:12.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.202" endtime="20201030 15:56:12.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.225" endtime="20201030 15:56:12.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.227" endtime="20201030 15:56:12.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.199" endtime="20201030 15:56:12.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.197" endtime="20201030 15:56:12.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.236" endtime="20201030 15:56:12.523"></status>
</kw>
<msg timestamp="20201030 15:56:12.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.235" endtime="20201030 15:56:12.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022336264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:12.527" endtime="20201030 15:56:12.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.535" endtime="20201030 15:56:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.232" endtime="20201030 15:56:12.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.230" endtime="20201030 15:56:12.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.541" level="INFO">${RESULT} = [{'diff': 0.00010207000000000271}, {'diff': 0.00010202799999999707}, {'diff': 0.00010119400000000237}, {'diff': 0.00010151400000000046}, {'diff': 0.00010126400000000021}, {'diff': 0.000101360999999997...</msg>
<status status="PASS" starttime="20201030 15:56:12.538" endtime="20201030 15:56:12.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.545" level="INFO">${ACCURACY} = {'diff': [0.00010207000000000271, 0.00010202799999999707, 0.00010119400000000237, 0.00010151400000000046, 0.00010126400000000021, 0.00010136099999999773, 0.00010202800000000053, 0.00010158299999999884...</msg>
<status status="PASS" starttime="20201030 15:56:12.542" endtime="20201030 15:56:12.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.550" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.549" endtime="20201030 15:56:12.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.552" level="INFO">VALUE: [0.00010207000000000271, 0.00010202799999999707, 0.00010119400000000237, 0.00010151400000000046, 0.00010126400000000021, 0.00010136099999999773, 0.00010202800000000053, 0.00010158299999999884, 0.00010120800000000194, 0.00010138900000000034, 0.00010117999999999933, 0.0001011939999999989, 0.00010152800000000003, 0.00010166699999999973, 0.00010119500000000184, 0.0001015419999999996, 0.00010152800000000003, 0.00010187500000000127, 0.00010117999999999933, 0.00010117999999999933, 0.00010184699999999866, 0.00010137500000000077, 0.00010198600000000183, 0.00010191599999999704, 0.00010163900000000059, 0.00010170900000000191, 0.00010169500000000234, 0.0001013610000000012, 0.00010204100000000063, 0.00010201400000000097, 0.0001020420000000001, 0.0001015419999999996, 0.00010201400000000097, 0.00010137500000000077, 0.00010122300000000098, 0.00010136200000000067, 0.00010154100000000013, 0.00010169400000000287, 0.0001020000000000014, 0.0001016939999999994, 0.0001011939999999989, 0.00010119499999999837, 0.0001018610000000017, 0.0001011670000000027, 0.000101819999999999, 0.00010137500000000077, 0.00010165200000000069, 0.00010120799999999847, 0.0001016939999999994, 0.00010148599999999786]</msg>
<status status="PASS" starttime="20201030 15:56:12.551" endtime="20201030 15:56:12.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.546" endtime="20201030 15:56:12.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.557" endtime="20201030 15:56:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.556" endtime="20201030 15:56:12.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.555" endtime="20201030 15:56:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.196" endtime="20201030 15:56:12.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.195" endtime="20201030 15:56:12.578"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.587" endtime="20201030 15:56:12.607"></status>
</kw>
<msg timestamp="20201030 15:56:12.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.585" endtime="20201030 15:56:12.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.608" endtime="20201030 15:56:12.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.611" endtime="20201030 15:56:12.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.583" endtime="20201030 15:56:12.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.580" endtime="20201030 15:56:12.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.620" endtime="20201030 15:56:12.906"></status>
</kw>
<msg timestamp="20201030 15:56:12.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02295975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:12.619" endtime="20201030 15:56:12.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02295975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023061944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:12.910" endtime="20201030 15:56:12.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.918" endtime="20201030 15:56:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.616" endtime="20201030 15:56:12.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.614" endtime="20201030 15:56:12.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:12.925" level="INFO">${RESULT} = [{'diff': 0.0001021939999999999}, {'diff': 0.00010236099999999873}, {'diff': 0.0001028610000000027}, {'diff': 0.00010304199999999764}, {'diff': 0.00010284700000000313}, {'diff': 0.00010222199999999904...</msg>
<status status="PASS" starttime="20201030 15:56:12.921" endtime="20201030 15:56:12.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:12.928" level="INFO">${ACCURACY} = {'diff': [0.0001021939999999999, 0.00010236099999999873, 0.0001028610000000027, 0.00010304199999999764, 0.00010284700000000313, 0.00010222199999999904, 0.00010219499999999937, 0.0001025420000000006, 0...</msg>
<status status="PASS" starttime="20201030 15:56:12.925" endtime="20201030 15:56:12.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.933" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:56:12.932" endtime="20201030 15:56:12.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.935" level="INFO">VALUE: [0.0001021939999999999, 0.00010236099999999873, 0.0001028610000000027, 0.00010304199999999764, 0.00010284700000000313, 0.00010222199999999904, 0.00010219499999999937, 0.0001025420000000006, 0.0001025000000000019, 0.0001022220000000025, 0.00010220799999999947, 0.00010220799999999947, 0.0001021939999999999, 0.00010287500000000227, 0.00010309699999999991, 0.00010272199999999954, 0.0001028749999999988, 0.00010225000000000165, 0.00010302800000000154, 0.00010247299999999876, 0.00010254100000000113, 0.00010233299999999959, 0.00010270799999999997, 0.00010252800000000103, 0.00010270799999999997, 0.00010302799999999807, 0.00010302800000000154, 0.00010216700000000023, 0.00010265300000000116, 0.00010301299999999902, 0.00010218000000000033, 0.0001021939999999999, 0.0001028610000000027, 0.000102513999999998, 0.00010270799999999997, 0.0001023610000000022, 0.00010237500000000177, 0.0001022359999999986, 0.00010301400000000197, 0.00010298599999999936, 0.0001025000000000019, 0.0001027359999999991, 0.00010252799999999757, 0.00010272199999999954, 0.00010270799999999997, 0.00010237500000000177, 0.00010306900000000077, 0.00010266700000000073, 0.0001028749999999988, 0.0001025550000000007]</msg>
<status status="PASS" starttime="20201030 15:56:12.934" endtime="20201030 15:56:12.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.929" endtime="20201030 15:56:12.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:12.941" endtime="20201030 15:56:12.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.940" endtime="20201030 15:56:12.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.938" endtime="20201030 15:56:12.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.579" endtime="20201030 15:56:12.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.578" endtime="20201030 15:56:12.962"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.970" endtime="20201030 15:56:12.990"></status>
</kw>
<msg timestamp="20201030 15:56:12.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.969" endtime="20201030 15:56:12.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:12.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:12.992" endtime="20201030 15:56:12.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:12.994" endtime="20201030 15:56:12.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.966" endtime="20201030 15:56:12.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.964" endtime="20201030 15:56:12.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.004" endtime="20201030 15:56:13.290"></status>
</kw>
<msg timestamp="20201030 15:56:13.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.002" endtime="20201030 15:56:13.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.294" endtime="20201030 15:56:13.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.302" endtime="20201030 15:56:13.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.999" endtime="20201030 15:56:13.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.998" endtime="20201030 15:56:13.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.309" level="INFO">${RESULT} = [{'diff': 0.00010351400000000247}, {'diff': 0.00010336200000000267}, {'diff': 0.00010338900000000234}, {'diff': 0.0001031940000000009}, {'diff': 0.00010337500000000277}, {'diff': 0.0001033609999999997...</msg>
<status status="PASS" starttime="20201030 15:56:13.306" endtime="20201030 15:56:13.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.314" level="INFO">${ACCURACY} = {'diff': [0.00010351400000000247, 0.00010336200000000267, 0.00010338900000000234, 0.0001031940000000009, 0.00010337500000000277, 0.00010336099999999973, 0.00010386100000000023, 0.00010336099999999973,...</msg>
<status status="PASS" starttime="20201030 15:56:13.310" endtime="20201030 15:56:13.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.318" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.317" endtime="20201030 15:56:13.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.321" level="INFO">VALUE: [0.00010351400000000247, 0.00010336200000000267, 0.00010338900000000234, 0.0001031940000000009, 0.00010337500000000277, 0.00010336099999999973, 0.00010386100000000023, 0.00010336099999999973, 0.00010370900000000044, 0.00010395900000000069, 0.0001038749999999998, 0.00010402800000000254, 0.00010352699999999909, 0.00010387500000000327, 0.00010320800000000047, 0.00010352799999999857, 0.0001038749999999998, 0.00010352799999999857, 0.00010320899999999994, 0.0001033749999999993, 0.00010318000000000133, 0.0001040689999999983, 0.00010372200000000054, 0.0001033749999999993, 0.00010320800000000047, 0.0001038749999999998, 0.00010406999999999778, 0.00010352800000000204, 0.00010369500000000087, 0.00010338800000000287, 0.000103513999999999, 0.00010316600000000176, 0.00010320800000000047, 0.0001031940000000009, 0.00010366699999999826, 0.00010320800000000047, 0.00010336099999999973, 0.0001033749999999993, 0.0001033480000000031, 0.00010405499999999873, 0.00010369500000000087, 0.00010402699999999959, 0.00010352699999999909, 0.00010352800000000204, 0.00010386100000000023, 0.00010352799999999857, 0.00010369500000000087, 0.00010322299999999951, 0.00010354100000000213, 0.00010402799999999907]</msg>
<status status="PASS" starttime="20201030 15:56:13.319" endtime="20201030 15:56:13.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.315" endtime="20201030 15:56:13.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.326" endtime="20201030 15:56:13.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.324" endtime="20201030 15:56:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.323" endtime="20201030 15:56:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.963" endtime="20201030 15:56:13.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:12.962" endtime="20201030 15:56:13.347"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.355" endtime="20201030 15:56:13.375"></status>
</kw>
<msg timestamp="20201030 15:56:13.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.354" endtime="20201030 15:56:13.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.377" endtime="20201030 15:56:13.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.379" endtime="20201030 15:56:13.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.351" endtime="20201030 15:56:13.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.349" endtime="20201030 15:56:13.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.388" endtime="20201030 15:56:13.674"></status>
</kw>
<msg timestamp="20201030 15:56:13.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.387" endtime="20201030 15:56:13.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022431403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022535778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.678" endtime="20201030 15:56:13.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.686" endtime="20201030 15:56:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.384" endtime="20201030 15:56:13.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.382" endtime="20201030 15:56:13.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:13.693" level="INFO">${RESULT} = [{'diff': 0.0001043750000000003}, {'diff': 0.00010484700000000166}, {'diff': 0.0001046949999999984}, {'diff': 0.0001050420000000031}, {'diff': 0.00010454099999999966}, {'diff': 0.00010438899999999987}...</msg>
<status status="PASS" starttime="20201030 15:56:13.690" endtime="20201030 15:56:13.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:13.697" level="INFO">${ACCURACY} = {'diff': [0.0001043750000000003, 0.00010484700000000166, 0.0001046949999999984, 0.0001050420000000031, 0.00010454099999999966, 0.00010438899999999987, 0.0001047079999999985, 0.00010509799999999792, 0....</msg>
<status status="PASS" starttime="20201030 15:56:13.694" endtime="20201030 15:56:13.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.701" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:56:13.700" endtime="20201030 15:56:13.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.704" level="INFO">VALUE: [0.0001043750000000003, 0.00010484700000000166, 0.0001046949999999984, 0.0001050420000000031, 0.00010454099999999966, 0.00010438899999999987, 0.0001047079999999985, 0.00010509799999999792, 0.00010488900000000037, 0.00010436100000000073, 0.00010486100000000123, 0.00010436100000000073, 0.00010486199999999724, 0.000104514, 0.00010419399999999843, 0.00010472199999999807, 0.00010429099999999941, 0.0001041940000000019, 0.00010495799999999875, 0.00010456999999999828, 0.00010504199999999964, 0.0001046949999999984, 0.00010419500000000137, 0.000104207999999998, 0.00010452700000000009, 0.00010488900000000037, 0.00010419399999999843, 0.0001050140000000005, 0.0001041940000000019, 0.00010422300000000051, 0.0001050140000000005, 0.000104514, 0.00010452700000000009, 0.00010441699999999901, 0.00010463900000000012, 0.00010468000000000283, 0.0001050140000000005, 0.00010452799999999957, 0.00010452799999999957, 0.00010470900000000144, 0.00010491600000000004, 0.00010511100000000148, 0.00010467999999999936, 0.00010452700000000009, 0.00010450000000000043, 0.00010443099999999858, 0.0001043750000000003, 0.00010448600000000086, 0.00010469500000000187, 0.00010459700000000141]</msg>
<status status="PASS" starttime="20201030 15:56:13.703" endtime="20201030 15:56:13.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.698" endtime="20201030 15:56:13.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:13.709" endtime="20201030 15:56:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.707" endtime="20201030 15:56:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.706" endtime="20201030 15:56:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.347" endtime="20201030 15:56:13.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.347" endtime="20201030 15:56:13.729"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.738" endtime="20201030 15:56:13.761"></status>
</kw>
<msg timestamp="20201030 15:56:13.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.736" endtime="20201030 15:56:13.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:13.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:13.763" endtime="20201030 15:56:13.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.765" endtime="20201030 15:56:13.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.734" endtime="20201030 15:56:13.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.732" endtime="20201030 15:56:13.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:13.775" endtime="20201030 15:56:14.060"></status>
</kw>
<msg timestamp="20201030 15:56:14.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025091639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:13.773" endtime="20201030 15:56:14.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025091639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025196917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.064" endtime="20201030 15:56:14.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.073" endtime="20201030 15:56:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.770" endtime="20201030 15:56:14.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.769" endtime="20201030 15:56:14.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.079" level="INFO">${RESULT} = [{'diff': 0.00010527800000000032}, {'diff': 0.00010538900000000087}, {'diff': 0.00010580599999999996}, {'diff': 0.00010590200000000147}, {'diff': 0.00010554200000000014}, {'diff': 0.000105375000000001...</msg>
<status status="PASS" starttime="20201030 15:56:14.076" endtime="20201030 15:56:14.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.083" level="INFO">${ACCURACY} = {'diff': [0.00010527800000000032, 0.00010538900000000087, 0.00010580599999999996, 0.00010590200000000147, 0.00010554200000000014, 0.0001053750000000013, 0.00010540200000000097, 0.00010604100000000116,...</msg>
<status status="PASS" starttime="20201030 15:56:14.080" endtime="20201030 15:56:14.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.087" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.086" endtime="20201030 15:56:14.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.090" level="INFO">VALUE: [0.00010527800000000032, 0.00010538900000000087, 0.00010580599999999996, 0.00010590200000000147, 0.00010554200000000014, 0.0001053750000000013, 0.00010540200000000097, 0.00010604100000000116, 0.000105207999999999, 0.00010534700000000216, 0.0001058889999999979, 0.00010584700000000266, 0.00010586099999999876, 0.00010536100000000173, 0.00010586100000000223, 0.00010551399999999753, 0.0001057079999999995, 0.00010568000000000036, 0.00010536099999999826, 0.000105514000000001, 0.00010602800000000107, 0.00010531899999999955, 0.00010552800000000057, 0.00010559700000000241, 0.00010552800000000057, 0.00010519500000000237, 0.00010561099999999851, 0.000105514000000001, 0.00010537499999999783, 0.00010604200000000064, 0.0001055559999999997, 0.0001056949999999994, 0.00010536100000000173, 0.00010537499999999783, 0.00010570899999999897, 0.0001057079999999995, 0.00010586099999999876, 0.00010536099999999826, 0.00010602800000000107, 0.0001057079999999995, 0.00010518099999999933, 0.0001056949999999994, 0.00010586099999999876, 0.00010602800000000107, 0.00010602800000000107, 0.0001058750000000018, 0.00010602700000000159, 0.00010516699999999976, 0.00010520800000000247, 0.0001053889999999974]</msg>
<status status="PASS" starttime="20201030 15:56:14.089" endtime="20201030 15:56:14.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.084" endtime="20201030 15:56:14.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.096" endtime="20201030 15:56:14.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.094" endtime="20201030 15:56:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.093" endtime="20201030 15:56:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.730" endtime="20201030 15:56:14.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:13.730" endtime="20201030 15:56:14.116"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.125" endtime="20201030 15:56:14.145"></status>
</kw>
<msg timestamp="20201030 15:56:14.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.123" endtime="20201030 15:56:14.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.146" endtime="20201030 15:56:14.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.149" endtime="20201030 15:56:14.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.121" endtime="20201030 15:56:14.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.119" endtime="20201030 15:56:14.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.158" endtime="20201030 15:56:14.443"></status>
</kw>
<msg timestamp="20201030 15:56:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.157" endtime="20201030 15:56:14.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022093722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022200097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.447" endtime="20201030 15:56:14.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.455" endtime="20201030 15:56:14.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.154" endtime="20201030 15:56:14.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.152" endtime="20201030 15:56:14.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.461" level="INFO">${RESULT} = [{'diff': 0.00010637499999999883}, {'diff': 0.00010637499999999883}, {'diff': 0.00010619400000000043}, {'diff': 0.00010654200000000114}, {'diff': 0.00010672299999999954}, {'diff': 0.000107056000000001...</msg>
<status status="PASS" starttime="20201030 15:56:14.458" endtime="20201030 15:56:14.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.467" level="INFO">${ACCURACY} = {'diff': [0.00010637499999999883, 0.00010637499999999883, 0.00010619400000000043, 0.00010654200000000114, 0.00010672299999999954, 0.0001070560000000012, 0.00010704200000000164, 0.0001070279999999986, ...</msg>
<status status="PASS" starttime="20201030 15:56:14.463" endtime="20201030 15:56:14.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.471" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.470" endtime="20201030 15:56:14.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.474" level="INFO">VALUE: [0.00010637499999999883, 0.00010637499999999883, 0.00010619400000000043, 0.00010654200000000114, 0.00010672299999999954, 0.0001070560000000012, 0.00010704200000000164, 0.0001070279999999986, 0.0001065690000000008, 0.00010669399999999746, 0.0001063750000000023, 0.00010687499999999933, 0.00010636099999999926, 0.00010652800000000157, 0.00010704199999999817, 0.00010615300000000119, 0.0001068889999999989, 0.00010686099999999976, 0.00010637499999999883, 0.00010686099999999976, 0.00010702800000000207, 0.0001070279999999986, 0.00010651399999999853, 0.0001066950000000004, 0.00010659699999999994, 0.00010704099999999869, 0.00010618000000000086, 0.0001068889999999989, 0.00010636099999999926, 0.0001070699999999973, 0.00010672200000000007, 0.00010655599999999724, 0.00010654200000000114, 0.0001066950000000004, 0.00010684799999999967, 0.00010654099999999819, 0.00010652699999999862, 0.00010636099999999926, 0.00010676399999999878, 0.0001067080000000005, 0.00010652800000000157, 0.000106514000000002, 0.0001061949999999999, 0.00010651399999999853, 0.00010634800000000263, 0.00010669400000000093, 0.00010683300000000062, 0.00010638900000000187, 0.00010668000000000136, 0.00010687499999999933]</msg>
<status status="PASS" starttime="20201030 15:56:14.473" endtime="20201030 15:56:14.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.468" endtime="20201030 15:56:14.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.479" endtime="20201030 15:56:14.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.477" endtime="20201030 15:56:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.476" endtime="20201030 15:56:14.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.117" endtime="20201030 15:56:14.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.117" endtime="20201030 15:56:14.500"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.508" endtime="20201030 15:56:14.529"></status>
</kw>
<msg timestamp="20201030 15:56:14.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.507" endtime="20201030 15:56:14.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.532" endtime="20201030 15:56:14.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.537" endtime="20201030 15:56:14.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.504" endtime="20201030 15:56:14.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.502" endtime="20201030 15:56:14.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.550" endtime="20201030 15:56:14.847"></status>
</kw>
<msg timestamp="20201030 15:56:14.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.548" endtime="20201030 15:56:14.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022289194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.851" endtime="20201030 15:56:14.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.860" endtime="20201030 15:56:14.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.544" endtime="20201030 15:56:14.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.542" endtime="20201030 15:56:14.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:14.867" level="INFO">${RESULT} = [{'diff': 0.00010722300000000004}, {'diff': 0.00010752800000000257}, {'diff': 0.00010769499999999793}, {'diff': 0.0001076950000000014}, {'diff': 0.00010787499999999686}, {'diff': 0.0001076250000000000...</msg>
<status status="PASS" starttime="20201030 15:56:14.863" endtime="20201030 15:56:14.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:14.871" level="INFO">${ACCURACY} = {'diff': [0.00010722300000000004, 0.00010752800000000257, 0.00010769499999999793, 0.0001076950000000014, 0.00010787499999999686, 0.00010762500000000008, 0.00010787500000000033, 0.00010717999999999839,...</msg>
<status status="PASS" starttime="20201030 15:56:14.868" endtime="20201030 15:56:14.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.875" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:56:14.874" endtime="20201030 15:56:14.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.878" level="INFO">VALUE: [0.00010722300000000004, 0.00010752800000000257, 0.00010769499999999793, 0.0001076950000000014, 0.00010787499999999686, 0.00010762500000000008, 0.00010787500000000033, 0.00010717999999999839, 0.00010790299999999947, 0.0001073889999999994, 0.00010754199999999867, 0.00010722300000000004, 0.00010755599999999824, 0.00010734800000000017, 0.00010719400000000143, 0.0001080690000000023, 0.0001078889999999999, 0.00010770799999999803, 0.00010759800000000042, 0.00010720799999999753, 0.00010737499999999983, 0.00010801400000000003, 0.00010754200000000214, 0.00010800000000000046, 0.0001077080000000015, 0.00010786100000000076, 0.00010734699999999722, 0.00010720799999999753, 0.00010734700000000069, 0.00010805599999999874, 0.00010787499999999686, 0.00010765299999999922, 0.0001080829999999984, 0.00010811100000000101, 0.00010786100000000076, 0.00010751399999999953, 0.00010741699999999854, 0.00010768100000000183, 0.00010751399999999953, 0.00010784699999999772, 0.00010737499999999983, 0.00010787499999999686, 0.00010722200000000057, 0.0001075690000000018, 0.00010720799999999753, 0.000107208000000001, 0.0001077080000000015, 0.0001073889999999994, 0.00010754199999999867, 0.00010720900000000047]</msg>
<status status="PASS" starttime="20201030 15:56:14.876" endtime="20201030 15:56:14.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.871" endtime="20201030 15:56:14.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:14.887" endtime="20201030 15:56:14.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.885" endtime="20201030 15:56:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.884" endtime="20201030 15:56:14.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.501" endtime="20201030 15:56:14.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.500" endtime="20201030 15:56:14.908"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.917" endtime="20201030 15:56:14.939"></status>
</kw>
<msg timestamp="20201030 15:56:14.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.915" endtime="20201030 15:56:14.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:14.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:14.940" endtime="20201030 15:56:14.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.943" endtime="20201030 15:56:14.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.912" endtime="20201030 15:56:14.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.910" endtime="20201030 15:56:14.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:14.952" endtime="20201030 15:56:15.259"></status>
</kw>
<msg timestamp="20201030 15:56:15.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:14.950" endtime="20201030 15:56:15.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023505875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.263" endtime="20201030 15:56:15.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.271" endtime="20201030 15:56:15.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.948" endtime="20201030 15:56:15.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.946" endtime="20201030 15:56:15.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.278" level="INFO">${RESULT} = [{'diff': 0.00010820799999999853}, {'diff': 0.00010836100000000126}, {'diff': 0.0001083890000000004}, {'diff': 0.00010872300000000154}, {'diff': 0.00010870900000000197}, {'diff': 0.0001083619999999972...</msg>
<status status="PASS" starttime="20201030 15:56:15.275" endtime="20201030 15:56:15.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.282" level="INFO">${ACCURACY} = {'diff': [0.00010820799999999853, 0.00010836100000000126, 0.0001083890000000004, 0.00010872300000000154, 0.00010870900000000197, 0.00010836199999999727, 0.00010901299999999808, 0.00010869399999999946,...</msg>
<status status="PASS" starttime="20201030 15:56:15.279" endtime="20201030 15:56:15.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.287" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.286" endtime="20201030 15:56:15.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.289" level="INFO">VALUE: [0.00010820799999999853, 0.00010836100000000126, 0.0001083890000000004, 0.00010872300000000154, 0.00010870900000000197, 0.00010836199999999727, 0.00010901299999999808, 0.00010869399999999946, 0.0001085280000000001, 0.00010886100000000176, 0.00010884700000000219, 0.00010887499999999786, 0.00010882000000000253, 0.0001090280000000006, 0.0001088479999999982, 0.00010886100000000176, 0.00010886100000000176, 0.00010836099999999779, 0.00010836100000000126, 0.00010869399999999946, 0.0001090280000000006, 0.00010904200000000017, 0.00010863900000000065, 0.00010855499999999976, 0.00010902700000000112, 0.00010904100000000069, 0.00010819400000000243, 0.00010833299999999865, 0.00010887499999999786, 0.0001085280000000001, 0.00010836100000000126, 0.00010815299999999972, 0.00010854100000000019, 0.0001087080000000025, 0.00010904100000000069, 0.00010858400000000185, 0.00010887499999999786, 0.00010905599999999974, 0.00010837500000000083, 0.00010869499999999893, 0.00010818099999999886, 0.00010837500000000083, 0.0001090280000000006, 0.00010881899999999958, 0.00010884700000000219, 0.00010854199999999967, 0.0001090280000000006, 0.00010859700000000194, 0.00010841600000000007, 0.00010836100000000126]</msg>
<status status="PASS" starttime="20201030 15:56:15.288" endtime="20201030 15:56:15.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.283" endtime="20201030 15:56:15.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.295" endtime="20201030 15:56:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.294" endtime="20201030 15:56:15.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.293" endtime="20201030 15:56:15.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.909" endtime="20201030 15:56:15.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:14.908" endtime="20201030 15:56:15.316"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.325" endtime="20201030 15:56:15.346"></status>
</kw>
<msg timestamp="20201030 15:56:15.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.323" endtime="20201030 15:56:15.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.348" endtime="20201030 15:56:15.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.350" endtime="20201030 15:56:15.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.321" endtime="20201030 15:56:15.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.319" endtime="20201030 15:56:15.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.360" endtime="20201030 15:56:15.646"></status>
</kw>
<msg timestamp="20201030 15:56:15.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.358" endtime="20201030 15:56:15.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022793889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022903583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:15.650" endtime="20201030 15:56:15.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.658" endtime="20201030 15:56:15.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.355" endtime="20201030 15:56:15.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.354" endtime="20201030 15:56:15.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:15.665" level="INFO">${RESULT} = [{'diff': 0.00010969400000000046}, {'diff': 0.00010918000000000039}, {'diff': 0.00011004200000000117}, {'diff': 0.00010920799999999953}, {'diff': 0.00010937499999999836}, {'diff': 0.000109542000000000...</msg>
<status status="PASS" starttime="20201030 15:56:15.662" endtime="20201030 15:56:15.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:15.670" level="INFO">${ACCURACY} = {'diff': [0.00010969400000000046, 0.00010918000000000039, 0.00011004200000000117, 0.00010920799999999953, 0.00010937499999999836, 0.00010954200000000067, 0.00011004200000000117, 0.00010954200000000067...</msg>
<status status="PASS" starttime="20201030 15:56:15.666" endtime="20201030 15:56:15.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.675" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:56:15.673" endtime="20201030 15:56:15.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.677" level="INFO">VALUE: [0.00010969400000000046, 0.00010918000000000039, 0.00011004200000000117, 0.00010920799999999953, 0.00010937499999999836, 0.00010954200000000067, 0.00011004200000000117, 0.00010954200000000067, 0.0001092219999999991, 0.00010954100000000119, 0.00010917999999999692, 0.00010934700000000269, 0.00010937500000000183, 0.00010936100000000226, 0.00010919499999999943, 0.00010952699999999815, 0.00010968100000000036, 0.00010969499999999993, 0.00010919399999999996, 0.00010999999999999899, 0.00010986099999999929, 0.00010970800000000003, 0.00010920799999999953, 0.00010999999999999899, 0.00011001400000000203, 0.00010986099999999929, 0.0001100280000000016, 0.00010936099999999879, 0.00011004100000000169, 0.00010937500000000183, 0.00010969400000000046, 0.00010969399999999699, 0.00010969499999999993, 0.00010987500000000233, 0.00010925000000000171, 0.00010970800000000003, 0.00010970800000000003, 0.00010952700000000162, 0.00010969400000000046, 0.00010936099999999879, 0.00010952799999999763, 0.00010936100000000226, 0.0001095280000000011, 0.00010986199999999877, 0.00010936200000000174, 0.00010920799999999953, 0.00010952699999999815, 0.0001100280000000016, 0.00010936100000000226, 0.00010969400000000046]</msg>
<status status="PASS" starttime="20201030 15:56:15.676" endtime="20201030 15:56:15.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.671" endtime="20201030 15:56:15.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:15.682" endtime="20201030 15:56:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.681" endtime="20201030 15:56:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.679" endtime="20201030 15:56:15.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.317" endtime="20201030 15:56:15.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.316" endtime="20201030 15:56:15.703"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.712" endtime="20201030 15:56:15.732"></status>
</kw>
<msg timestamp="20201030 15:56:15.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.710" endtime="20201030 15:56:15.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:15.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:15.734" endtime="20201030 15:56:15.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.736" endtime="20201030 15:56:15.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.708" endtime="20201030 15:56:15.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.705" endtime="20201030 15:56:15.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:15.746" endtime="20201030 15:56:16.034"></status>
</kw>
<msg timestamp="20201030 15:56:16.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02302625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:15.744" endtime="20201030 15:56:16.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022915375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02302625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:56:16.038" endtime="20201030 15:56:16.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.046" endtime="20201030 15:56:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.741" endtime="20201030 15:56:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.740" endtime="20201030 15:56:16.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.053" level="INFO">${RESULT} = [{'diff': 0.00011087499999999986}, {'diff': 0.00011023599999999967}, {'diff': 0.00011018099999999739}, {'diff': 0.0001105419999999982}, {'diff': 0.0001110419999999987}, {'diff': 0.00011104200000000217...</msg>
<status status="PASS" starttime="20201030 15:56:16.050" endtime="20201030 15:56:16.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.057" level="INFO">${ACCURACY} = {'diff': [0.00011087499999999986, 0.00011023599999999967, 0.00011018099999999739, 0.0001105419999999982, 0.0001110419999999987, 0.00011104200000000217, 0.00011037499999999936, 0.00011065199999999928, ...</msg>
<status status="PASS" starttime="20201030 15:56:16.054" endtime="20201030 15:56:16.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.062" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.061" endtime="20201030 15:56:16.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.064" level="INFO">VALUE: [0.00011087499999999986, 0.00011023599999999967, 0.00011018099999999739, 0.0001105419999999982, 0.0001110419999999987, 0.00011104200000000217, 0.00011037499999999936, 0.00011065199999999928, 0.00011054100000000219, 0.0001110419999999987, 0.00011020800000000053, 0.0001105700000000008, 0.00011050000000000296, 0.0001110419999999987, 0.00011052799999999863, 0.0001102220000000001, 0.00011081900000000158, 0.00011069400000000146, 0.0001105280000000021, 0.00011038899999999893, 0.0001105419999999982, 0.00011105599999999827, 0.00011056900000000133, 0.00011052799999999863, 0.00011050000000000296, 0.00011086100000000029, 0.0001103890000000024, 0.00011038899999999893, 0.00011051399999999906, 0.00011084699999999725, 0.00011019500000000043, 0.00011056899999999786, 0.00011019500000000043, 0.00011069500000000093, 0.00011036099999999979, 0.00011081900000000158, 0.00011102799999999913, 0.00011026400000000228, 0.0001110419999999987, 0.00011104200000000217, 0.0001105830000000009, 0.00011065300000000222, 0.00011104099999999922, 0.00011047200000000035, 0.00011067999999999842, 0.00011104200000000217, 0.00011101399999999956, 0.0001105419999999982, 0.0001107090000000005, 0.000110209]</msg>
<status status="PASS" starttime="20201030 15:56:16.063" endtime="20201030 15:56:16.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.058" endtime="20201030 15:56:16.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.069" endtime="20201030 15:56:16.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.068" endtime="20201030 15:56:16.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.067" endtime="20201030 15:56:16.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.704" endtime="20201030 15:56:16.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:15.703" endtime="20201030 15:56:16.090"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.099" endtime="20201030 15:56:16.120"></status>
</kw>
<msg timestamp="20201030 15:56:16.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.098" endtime="20201030 15:56:16.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.122" endtime="20201030 15:56:16.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.124" endtime="20201030 15:56:16.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.095" endtime="20201030 15:56:16.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.093" endtime="20201030 15:56:16.127"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.134" endtime="20201030 15:56:16.420"></status>
</kw>
<msg timestamp="20201030 15:56:16.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023950236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.132" endtime="20201030 15:56:16.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023839028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023950236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.425" endtime="20201030 15:56:16.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.433" endtime="20201030 15:56:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.129" endtime="20201030 15:56:16.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.128" endtime="20201030 15:56:16.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.440" level="INFO">${RESULT} = [{'diff': 0.00011120799999999806}, {'diff': 0.00011169399999999899}, {'diff': 0.00011137500000000036}, {'diff': 0.00011202800000000013}, {'diff': 0.00011122300000000057}, {'diff': 0.000112014000000000...</msg>
<status status="PASS" starttime="20201030 15:56:16.436" endtime="20201030 15:56:16.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.444" level="INFO">${ACCURACY} = {'diff': [0.00011120799999999806, 0.00011169399999999899, 0.00011137500000000036, 0.00011202800000000013, 0.00011122300000000057, 0.00011201400000000056, 0.00011170799999999856, 0.00011120800000000153...</msg>
<status status="PASS" starttime="20201030 15:56:16.441" endtime="20201030 15:56:16.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.448" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.447" endtime="20201030 15:56:16.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.451" level="INFO">VALUE: [0.00011120799999999806, 0.00011169399999999899, 0.00011137500000000036, 0.00011202800000000013, 0.00011122300000000057, 0.00011201400000000056, 0.00011170799999999856, 0.00011120800000000153, 0.00011119400000000196, 0.00011202800000000013, 0.00011152799999999963, 0.00011119499999999796, 0.00011119500000000143, 0.00011187500000000086, 0.00011186200000000077, 0.00011134699999999775, 0.00011199999999999752, 0.00011167999999999942, 0.00011167999999999942, 0.00011144400000000221, 0.00011149999999999702, 0.00011201399999999709, 0.00011117999999999892, 0.0001115549999999993, 0.00011119399999999849, 0.00011141700000000254, 0.00011197200000000185, 0.00011149999999999702, 0.00011155599999999877, 0.00011119500000000143, 0.00011152799999999963, 0.00011183400000000163, 0.0001120549999999998, 0.00011136100000000079, 0.00011169399999999899, 0.00011154200000000267, 0.00011119399999999849, 0.00011125000000000024, 0.00011205600000000274, 0.00011152799999999963, 0.00011119499999999796, 0.00011154200000000267, 0.00011187499999999739, 0.00011155500000000276, 0.00011156899999999886, 0.00011145800000000178, 0.00011120799999999806, 0.00011119499999999796, 0.00011137500000000036, 0.00011119500000000143]</msg>
<status status="PASS" starttime="20201030 15:56:16.449" endtime="20201030 15:56:16.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.445" endtime="20201030 15:56:16.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.457" endtime="20201030 15:56:16.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.455" endtime="20201030 15:56:16.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.454" endtime="20201030 15:56:16.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.091" endtime="20201030 15:56:16.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.091" endtime="20201030 15:56:16.478"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.487" endtime="20201030 15:56:16.507"></status>
</kw>
<msg timestamp="20201030 15:56:16.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.485" endtime="20201030 15:56:16.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.508" endtime="20201030 15:56:16.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.511" endtime="20201030 15:56:16.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.482" endtime="20201030 15:56:16.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.480" endtime="20201030 15:56:16.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.520" endtime="20201030 15:56:16.805"></status>
</kw>
<msg timestamp="20201030 15:56:16.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.518" endtime="20201030 15:56:16.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022440417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022552819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.810" endtime="20201030 15:56:16.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.818" endtime="20201030 15:56:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.516" endtime="20201030 15:56:16.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.514" endtime="20201030 15:56:16.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:16.825" level="INFO">${RESULT} = [{'diff': 0.00011240200000000103}, {'diff': 0.00011270899999999903}, {'diff': 0.00011286099999999882}, {'diff': 0.00011223600000000167}, {'diff': 0.00011305499999999732}, {'diff': 0.000112846999999999...</msg>
<status status="PASS" starttime="20201030 15:56:16.821" endtime="20201030 15:56:16.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:16.830" level="INFO">${ACCURACY} = {'diff': [0.00011240200000000103, 0.00011270899999999903, 0.00011286099999999882, 0.00011223600000000167, 0.00011305499999999732, 0.00011284699999999925, 0.00011294400000000024, 0.00011288900000000143...</msg>
<status status="PASS" starttime="20201030 15:56:16.826" endtime="20201030 15:56:16.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.834" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:56:16.833" endtime="20201030 15:56:16.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.837" level="INFO">VALUE: [0.00011240200000000103, 0.00011270899999999903, 0.00011286099999999882, 0.00011223600000000167, 0.00011305499999999732, 0.00011284699999999925, 0.00011294400000000024, 0.00011288900000000143, 0.00011305600000000027, 0.00011220899999999853, 0.00011286100000000229, 0.00011216600000000035, 0.00011286099999999882, 0.00011286099999999882, 0.00011252799999999716, 0.00011218099999999939, 0.00011301400000000156, 0.00011304199999999723, 0.0001130550000000008, 0.00011218100000000286, 0.00011302700000000165, 0.00011269399999999999, 0.00011270799999999956, 0.00011270799999999956, 0.00011236100000000179, 0.00011288900000000143, 0.00011237500000000136, 0.00011251299999999811, 0.00011302800000000113, 0.00011227800000000038, 0.00011252800000000063, 0.00011304199999999723, 0.0001130420000000007, 0.00011269399999999999, 0.0001130420000000007, 0.00011286100000000229, 0.00011231999999999909, 0.00011283399999999916, 0.00011286099999999882, 0.00011252699999999768, 0.00011238900000000093, 0.00011269399999999999, 0.00011286100000000229, 0.00011233400000000213, 0.00011236100000000179, 0.00011286100000000229, 0.00011237500000000136, 0.00011241700000000007, 0.00011286099999999882, 0.0001125420000000002]</msg>
<status status="PASS" starttime="20201030 15:56:16.836" endtime="20201030 15:56:16.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.831" endtime="20201030 15:56:16.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:16.842" endtime="20201030 15:56:16.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.840" endtime="20201030 15:56:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.839" endtime="20201030 15:56:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.479" endtime="20201030 15:56:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.478" endtime="20201030 15:56:16.863"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.872" endtime="20201030 15:56:16.892"></status>
</kw>
<msg timestamp="20201030 15:56:16.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.870" endtime="20201030 15:56:16.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:16.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:16.893" endtime="20201030 15:56:16.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.896" endtime="20201030 15:56:16.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.867" endtime="20201030 15:56:16.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.865" endtime="20201030 15:56:16.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:16.905" endtime="20201030 15:56:17.193"></status>
</kw>
<msg timestamp="20201030 15:56:17.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:16.904" endtime="20201030 15:56:17.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022498417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022612278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.197" endtime="20201030 15:56:17.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.205" endtime="20201030 15:56:17.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.901" endtime="20201030 15:56:17.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.899" endtime="20201030 15:56:17.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.212" level="INFO">${RESULT} = [{'diff': 0.00011386099999999982}, {'diff': 0.00011351399999999859}, {'diff': 0.00011401400000000256}, {'diff': 0.00011334700000000322}, {'diff': 0.00011386099999999982}, {'diff': 0.000113874999999999...</msg>
<status status="PASS" starttime="20201030 15:56:17.209" endtime="20201030 15:56:17.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.216" level="INFO">${ACCURACY} = {'diff': [0.00011386099999999982, 0.00011351399999999859, 0.00011401400000000256, 0.00011334700000000322, 0.00011386099999999982, 0.0001138749999999994, 0.00011336099999999932, 0.00011402800000000213,...</msg>
<status status="PASS" starttime="20201030 15:56:17.213" endtime="20201030 15:56:17.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.221" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.220" endtime="20201030 15:56:17.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.223" level="INFO">VALUE: [0.00011386099999999982, 0.00011351399999999859, 0.00011401400000000256, 0.00011334700000000322, 0.00011386099999999982, 0.0001138749999999994, 0.00011336099999999932, 0.00011402800000000213, 0.00011370900000000003, 0.00011390199999999906, 0.0001133749999999989, 0.00011358300000000043, 0.00011381899999999764, 0.00011384700000000025, 0.00011402799999999866, 0.00011386099999999982, 0.00011377699999999893, 0.00011352800000000163, 0.00011374999999999927, 0.00011355499999999782, 0.00011398599999999995, 0.00011323600000000267, 0.00011402799999999866, 0.00011411199999999955, 0.0001133749999999989, 0.00011354199999999773, 0.00011354199999999773, 0.00011388899999999896, 0.00011369500000000046, 0.0001138749999999994, 0.00011370800000000056, 0.0001135550000000013, 0.00011401399999999909, 0.00011319400000000049, 0.0001138749999999994, 0.00011352800000000163, 0.000113209000000003, 0.00011319499999999996, 0.00011320800000000006, 0.00011369399999999752, 0.00011369399999999752, 0.00011365299999999828, 0.0001135420000000012, 0.0001138619999999993, 0.00011352799999999816, 0.00011348599999999945, 0.0001138749999999994, 0.00011336099999999932, 0.00011367999999999795, 0.00011343100000000064]</msg>
<status status="PASS" starttime="20201030 15:56:17.222" endtime="20201030 15:56:17.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.217" endtime="20201030 15:56:17.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.229" endtime="20201030 15:56:17.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.227" endtime="20201030 15:56:17.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.226" endtime="20201030 15:56:17.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.864" endtime="20201030 15:56:17.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:16.863" endtime="20201030 15:56:17.249"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.258" endtime="20201030 15:56:17.282"></status>
</kw>
<msg timestamp="20201030 15:56:17.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.257" endtime="20201030 15:56:17.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.283" endtime="20201030 15:56:17.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.286" endtime="20201030 15:56:17.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.254" endtime="20201030 15:56:17.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.252" endtime="20201030 15:56:17.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.295" endtime="20201030 15:56:17.581"></status>
</kw>
<msg timestamp="20201030 15:56:17.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025871111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025985833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.294" endtime="20201030 15:56:17.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025871111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025985833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.585" endtime="20201030 15:56:17.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.593" endtime="20201030 15:56:17.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.291" endtime="20201030 15:56:17.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.289" endtime="20201030 15:56:17.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.600" level="INFO">${RESULT} = [{'diff': 0.00011472200000000113}, {'diff': 0.00011452700000000315}, {'diff': 0.0001148750000000004}, {'diff': 0.00011419400000000149}, {'diff': 0.00011436100000000032}, {'diff': 0.0001147090000000010...</msg>
<status status="PASS" starttime="20201030 15:56:17.597" endtime="20201030 15:56:17.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.604" level="INFO">${ACCURACY} = {'diff': [0.00011472200000000113, 0.00011452700000000315, 0.0001148750000000004, 0.00011419400000000149, 0.00011436100000000032, 0.00011470900000000103, 0.00011436100000000032, 0.00011470900000000103,...</msg>
<status status="PASS" starttime="20201030 15:56:17.601" endtime="20201030 15:56:17.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.609" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.608" endtime="20201030 15:56:17.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.611" level="INFO">VALUE: [0.00011472200000000113, 0.00011452700000000315, 0.0001148750000000004, 0.00011419400000000149, 0.00011436100000000032, 0.00011470900000000103, 0.00011436100000000032, 0.00011470900000000103, 0.00011420799999999759, 0.00011470800000000156, 0.00011486099999999735, 0.00011490299999999953, 0.00011434699999999728, 0.00011419399999999802, 0.00011468100000000189, 0.00011501400000000009, 0.00011486099999999735, 0.00011470800000000156, 0.0001148750000000004, 0.00011502700000000018, 0.00011508399999999794, 0.00011431900000000161, 0.00011454199999999873, 0.00011488899999999996, 0.00011454199999999873, 0.00011488800000000049, 0.00011487499999999692, 0.00011422200000000063, 0.0001143749999999999, 0.00011452799999999916, 0.0001149169999999991, 0.00011470800000000156, 0.00011420900000000053, 0.0001147230000000006, 0.00011420800000000106, 0.00011436100000000032, 0.00011455499999999882, 0.00011505499999999932, 0.00011509800000000098, 0.00011486100000000082, 0.00011484700000000125, 0.00011501400000000009, 0.00011504199999999923, 0.00011443100000000164, 0.0001142220000000041, 0.00011470800000000503, 0.00011452799999999569, 0.00011502800000000313, 0.00011436100000000032, 0.00011469499999999799]</msg>
<status status="PASS" starttime="20201030 15:56:17.610" endtime="20201030 15:56:17.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.605" endtime="20201030 15:56:17.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:17.617" endtime="20201030 15:56:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.616" endtime="20201030 15:56:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.615" endtime="20201030 15:56:17.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.250" endtime="20201030 15:56:17.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.250" endtime="20201030 15:56:17.638"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.647" endtime="20201030 15:56:17.667"></status>
</kw>
<msg timestamp="20201030 15:56:17.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.645" endtime="20201030 15:56:17.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:17.669" endtime="20201030 15:56:17.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.671" endtime="20201030 15:56:17.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.643" endtime="20201030 15:56:17.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.640" endtime="20201030 15:56:17.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.680" endtime="20201030 15:56:17.966"></status>
</kw>
<msg timestamp="20201030 15:56:17.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.679" endtime="20201030 15:56:17.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022564917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:17.970" endtime="20201030 15:56:17.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:17.979" endtime="20201030 15:56:17.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.676" endtime="20201030 15:56:17.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.674" endtime="20201030 15:56:17.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:17.985" level="INFO">${RESULT} = [{'diff': 0.00011520900000000153}, {'diff': 0.0001153620000000008}, {'diff': 0.00011520799999999859}, {'diff': 0.00011586099999999835}, {'diff': 0.00011554100000000025}, {'diff': 0.0001160279999999971...</msg>
<status status="PASS" starttime="20201030 15:56:17.982" endtime="20201030 15:56:17.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:17.990" level="INFO">${ACCURACY} = {'diff': [0.00011520900000000153, 0.0001153620000000008, 0.00011520799999999859, 0.00011586099999999835, 0.00011554100000000025, 0.00011602799999999719, 0.00011552800000000016, 0.00011568100000000289,...</msg>
<status status="PASS" starttime="20201030 15:56:17.986" endtime="20201030 15:56:17.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.995" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:56:17.994" endtime="20201030 15:56:17.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:17.997" level="INFO">VALUE: [0.00011520900000000153, 0.0001153620000000008, 0.00011520799999999859, 0.00011586099999999835, 0.00011554100000000025, 0.00011602799999999719, 0.00011552800000000016, 0.00011568100000000289, 0.00011590200000000106, 0.00011534800000000123, 0.00011569399999999952, 0.00011602700000000118, 0.00011554100000000025, 0.00011519399999999902, 0.00011519399999999902, 0.00011518099999999892, 0.0001152360000000012, 0.00011531999999999862, 0.00011602800000000066, 0.00011555499999999982, 0.00011552700000000068, 0.00011587499999999792, 0.0001153750000000009, 0.00011522199999999816, 0.00011604200000000023, 0.00011587499999999792, 0.00011552800000000016, 0.00011551400000000059, 0.00011581899999999964, 0.00011604100000000075, 0.00011605600000000327, 0.00011517999999999945, 0.00011552800000000016, 0.00011519500000000196, 0.00011519499999999849, 0.00011569500000000246, 0.00011602800000000066, 0.00011587499999999792, 0.00011567999999999995, 0.00011519399999999902, 0.00011602800000000066, 0.00011588900000000096, 0.0001156109999999981, 0.00011602800000000066, 0.00011586199999999783, 0.00011593099999999967, 0.00011552700000000068, 0.00011587499999999792, 0.00011517999999999945, 0.00011568099999999942]</msg>
<status status="PASS" starttime="20201030 15:56:17.996" endtime="20201030 15:56:17.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.991" endtime="20201030 15:56:17.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.003" endtime="20201030 15:56:18.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.001" endtime="20201030 15:56:18.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.000" endtime="20201030 15:56:18.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.639" endtime="20201030 15:56:18.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:17.638" endtime="20201030 15:56:18.023"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.032" endtime="20201030 15:56:18.053"></status>
</kw>
<msg timestamp="20201030 15:56:18.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.031" endtime="20201030 15:56:18.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.055" endtime="20201030 15:56:18.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.058" endtime="20201030 15:56:18.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.028" endtime="20201030 15:56:18.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.026" endtime="20201030 15:56:18.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.068" endtime="20201030 15:56:18.355"></status>
</kw>
<msg timestamp="20201030 15:56:18.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.066" endtime="20201030 15:56:18.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022942236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.359" endtime="20201030 15:56:18.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.368" endtime="20201030 15:56:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.063" endtime="20201030 15:56:18.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.061" endtime="20201030 15:56:18.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.374" level="INFO">${RESULT} = [{'diff': 0.00011709700000000003}, {'diff': 0.00011636099999999885}, {'diff': 0.00011702700000000218}, {'diff': 0.00011652700000000168}, {'diff': 0.00011668000000000095}, {'diff': 0.000116721999999999...</msg>
<status status="PASS" starttime="20201030 15:56:18.371" endtime="20201030 15:56:18.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.379" level="INFO">${ACCURACY} = {'diff': [0.00011709700000000003, 0.00011636099999999885, 0.00011702700000000218, 0.00011652700000000168, 0.00011668000000000095, 0.00011672199999999966, 0.00011625000000000177, 0.00011701400000000209...</msg>
<status status="PASS" starttime="20201030 15:56:18.375" endtime="20201030 15:56:18.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.383" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.382" endtime="20201030 15:56:18.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.386" level="INFO">VALUE: [0.00011709700000000003, 0.00011636099999999885, 0.00011702700000000218, 0.00011652700000000168, 0.00011668000000000095, 0.00011672199999999966, 0.00011625000000000177, 0.00011701400000000209, 0.00011684699999999978, 0.00011684699999999978, 0.00011670900000000303, 0.0001162360000000022, 0.00011652699999999822, 0.00011620799999999959, 0.00011687499999999892, 0.00011652800000000116, 0.00011652800000000116, 0.0001163750000000019, 0.00011686099999999935, 0.00011698700000000242, 0.00011620799999999959, 0.00011619400000000002, 0.00011620799999999959, 0.00011665300000000128, 0.00011699999999999905, 0.00011670899999999956, 0.00011684699999999978, 0.00011686099999999935, 0.00011651399999999812, 0.00011668000000000095, 0.00011670800000000009, 0.00011704199999999776, 0.00011686100000000282, 0.0001163750000000019, 0.00011701400000000209, 0.00011688900000000196, 0.00011699999999999905, 0.00011620800000000306, 0.00011654100000000125, 0.00011654200000000073, 0.00011669400000000052, 0.00011684699999999978, 0.00011618099999999992, 0.00011665199999999834, 0.00011619499999999949, 0.00011702799999999819, 0.00011684700000000325, 0.00011686099999999935, 0.00011681900000000064, 0.00011637499999999842]</msg>
<status status="PASS" starttime="20201030 15:56:18.384" endtime="20201030 15:56:18.386"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.379" endtime="20201030 15:56:18.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.391" endtime="20201030 15:56:18.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.389" endtime="20201030 15:56:18.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.388" endtime="20201030 15:56:18.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.024" endtime="20201030 15:56:18.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.024" endtime="20201030 15:56:18.411"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.420" endtime="20201030 15:56:18.441"></status>
</kw>
<msg timestamp="20201030 15:56:18.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.419" endtime="20201030 15:56:18.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.443" endtime="20201030 15:56:18.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.445" endtime="20201030 15:56:18.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.416" endtime="20201030 15:56:18.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.414" endtime="20201030 15:56:18.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.455" endtime="20201030 15:56:18.741"></status>
</kw>
<msg timestamp="20201030 15:56:18.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.453" endtime="20201030 15:56:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023415417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023532639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.745" endtime="20201030 15:56:18.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.753" endtime="20201030 15:56:18.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.450" endtime="20201030 15:56:18.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.449" endtime="20201030 15:56:18.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:18.760" level="INFO">${RESULT} = [{'diff': 0.00011722200000000016}, {'diff': 0.0001178889999999995}, {'diff': 0.00011736099999999985}, {'diff': 0.00011755499999999836}, {'diff': 0.00011755499999999836}, {'diff': 0.0001176940000000015...</msg>
<status status="PASS" starttime="20201030 15:56:18.757" endtime="20201030 15:56:18.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:18.764" level="INFO">${ACCURACY} = {'diff': [0.00011722200000000016, 0.0001178889999999995, 0.00011736099999999985, 0.00011755499999999836, 0.00011755499999999836, 0.00011769400000000152, 0.00011736099999999985, 0.00011754199999999826,...</msg>
<status status="PASS" starttime="20201030 15:56:18.761" endtime="20201030 15:56:18.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.769" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:56:18.768" endtime="20201030 15:56:18.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.771" level="INFO">VALUE: [0.00011722200000000016, 0.0001178889999999995, 0.00011736099999999985, 0.00011755499999999836, 0.00011755499999999836, 0.00011769400000000152, 0.00011736099999999985, 0.00011754199999999826, 0.00011733300000000071, 0.00011719499999999702, 0.0001175560000000013, 0.00011719500000000049, 0.00011786100000000035, 0.0001175690000000014, 0.00011736099999999985, 0.00011769400000000152, 0.00011770799999999762, 0.00011804199999999876, 0.000118082999999998, 0.00011770900000000056, 0.00011751400000000259, 0.00011723599999999973, 0.00011751299999999965, 0.00011736099999999985, 0.00011773599999999676, 0.00011768099999999795, 0.00011787499999999992, 0.0001178889999999995, 0.0001178889999999995, 0.00011805499999999886, 0.00011800000000000005, 0.00011752699999999922, 0.00011736099999999985, 0.00011765300000000228, 0.00011780599999999808, 0.00011731999999999715, 0.00011766700000000185, 0.00011790300000000253, 0.00011802800000000266, 0.00011751299999999965, 0.00011736099999999985, 0.00011802799999999919, 0.00011805599999999833, 0.00011752800000000216, 0.00011786100000000035, 0.000117388999999999, 0.00011752800000000216, 0.00011720800000000059, 0.00011754100000000225, 0.00011786100000000035]</msg>
<status status="PASS" starttime="20201030 15:56:18.770" endtime="20201030 15:56:18.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.765" endtime="20201030 15:56:18.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:18.777" endtime="20201030 15:56:18.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.776" endtime="20201030 15:56:18.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.775" endtime="20201030 15:56:18.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.412" endtime="20201030 15:56:18.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.412" endtime="20201030 15:56:18.798"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.807" endtime="20201030 15:56:18.828"></status>
</kw>
<msg timestamp="20201030 15:56:18.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.805" endtime="20201030 15:56:18.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:18.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:18.829" endtime="20201030 15:56:18.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.832" endtime="20201030 15:56:18.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.803" endtime="20201030 15:56:18.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.801" endtime="20201030 15:56:18.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:18.841" endtime="20201030 15:56:19.128"></status>
</kw>
<msg timestamp="20201030 15:56:19.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:18.839" endtime="20201030 15:56:19.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.132" endtime="20201030 15:56:19.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.140" endtime="20201030 15:56:19.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.837" endtime="20201030 15:56:19.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.835" endtime="20201030 15:56:19.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.147" level="INFO">${RESULT} = [{'diff': 0.00011849999999999708}, {'diff': 0.00011870799999999862}, {'diff': 0.00011887499999999745}, {'diff': 0.00011904199999999976}, {'diff': 0.00011886100000000135}, {'diff': 0.000118541999999999...</msg>
<status status="PASS" starttime="20201030 15:56:19.144" endtime="20201030 15:56:19.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.152" level="INFO">${ACCURACY} = {'diff': [0.00011849999999999708, 0.00011870799999999862, 0.00011887499999999745, 0.00011904199999999976, 0.00011886100000000135, 0.00011854199999999926, 0.00011887499999999745, 0.00011837500000000042...</msg>
<status status="PASS" starttime="20201030 15:56:19.148" endtime="20201030 15:56:19.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.156" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.155" endtime="20201030 15:56:19.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.159" level="INFO">VALUE: [0.00011849999999999708, 0.00011870799999999862, 0.00011887499999999745, 0.00011904199999999976, 0.00011886100000000135, 0.00011854199999999926, 0.00011887499999999745, 0.00011837500000000042, 0.00011820800000000159, 0.00011820799999999812, 0.00011826399999999987, 0.00011837500000000042, 0.00011902800000000019, 0.00011886099999999789, 0.00011901400000000062, 0.00011869499999999852, 0.00011852700000000022, 0.00011867999999999948, 0.00011852799999999969, 0.00011870799999999862, 0.000118389, 0.00011837500000000042, 0.0001187089999999981, 0.00011841599999999966, 0.00011887500000000092, 0.00011904100000000029, 0.00011815299999999931, 0.00011852799999999969, 0.0001182500000000003, 0.00011886099999999789, 0.00011868100000000242, 0.00011887499999999745, 0.00011852700000000022, 0.00011867999999999948, 0.00011854099999999979, 0.00011852799999999969, 0.000118389, 0.00011887500000000092, 0.00011854199999999926, 0.00011904199999999976, 0.00011820900000000106, 0.00011840299999999956, 0.00011902700000000072, 0.00011852799999999969, 0.00011819399999999855, 0.0001182500000000003, 0.00011886100000000135, 0.00011869499999999852, 0.00011904199999999976, 0.00011904100000000029]</msg>
<status status="PASS" starttime="20201030 15:56:19.158" endtime="20201030 15:56:19.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.153" endtime="20201030 15:56:19.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.164" endtime="20201030 15:56:19.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.163" endtime="20201030 15:56:19.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.161" endtime="20201030 15:56:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.799" endtime="20201030 15:56:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:18.798" endtime="20201030 15:56:19.185"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.194" endtime="20201030 15:56:19.214"></status>
</kw>
<msg timestamp="20201030 15:56:19.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.192" endtime="20201030 15:56:19.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.216" endtime="20201030 15:56:19.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.218" endtime="20201030 15:56:19.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.190" endtime="20201030 15:56:19.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.187" endtime="20201030 15:56:19.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.228" endtime="20201030 15:56:19.514"></status>
</kw>
<msg timestamp="20201030 15:56:19.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.226" endtime="20201030 15:56:19.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022511417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022631125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.518" endtime="20201030 15:56:19.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.526" endtime="20201030 15:56:19.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.223" endtime="20201030 15:56:19.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.222" endtime="20201030 15:56:19.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.533" level="INFO">${RESULT} = [{'diff': 0.00011970799999999962}, {'diff': 0.00011936100000000185}, {'diff': 0.0001197089999999991}, {'diff': 0.00011945899999999884}, {'diff': 0.00011969499999999952}, {'diff': 0.0001198609999999988...</msg>
<status status="PASS" starttime="20201030 15:56:19.530" endtime="20201030 15:56:19.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.537" level="INFO">${ACCURACY} = {'diff': [0.00011970799999999962, 0.00011936100000000185, 0.0001197089999999991, 0.00011945899999999884, 0.00011969499999999952, 0.00011986099999999889, 0.00011986100000000235, 0.00011986099999999889,...</msg>
<status status="PASS" starttime="20201030 15:56:19.534" endtime="20201030 15:56:19.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.542" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.541" endtime="20201030 15:56:19.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.545" level="INFO">VALUE: [0.00011970799999999962, 0.00011936100000000185, 0.0001197089999999991, 0.00011945899999999884, 0.00011969499999999952, 0.00011986099999999889, 0.00011986100000000235, 0.00011986099999999889, 0.00012002800000000119, 0.00012004200000000076, 0.00011998599999999901, 0.00012002800000000119, 0.00011987500000000192, 0.00012005500000000086, 0.0001198890000000015, 0.00011938899999999752, 0.00011945799999999937, 0.00012002800000000119, 0.00011969499999999952, 0.00011981999999999965, 0.00011998599999999901, 0.00011934799999999829, 0.00011919399999999955, 0.00011952700000000122, 0.00011972200000000266, 0.00011969400000000005, 0.00012004200000000076, 0.00011955599999999983, 0.00011987499999999846, 0.00011936200000000133, 0.00012002700000000172, 0.00011967999999999701, 0.00011954200000000026, 0.00011937500000000142, 0.00011933299999999925, 0.00011952800000000069, 0.00012004200000000076, 0.00011990199999999812, 0.00012004100000000129, 0.00011950000000000155, 0.00011922199999999869, 0.00011952799999999722, 0.00011923599999999826, 0.00011988899999999802, 0.00012004200000000076, 0.00011934800000000176, 0.00011936199999999786, 0.00011986099999999889, 0.00011951400000000112, 0.00011933299999999925]</msg>
<status status="PASS" starttime="20201030 15:56:19.543" endtime="20201030 15:56:19.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.538" endtime="20201030 15:56:19.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.550" endtime="20201030 15:56:19.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.548" endtime="20201030 15:56:19.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.547" endtime="20201030 15:56:19.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.186" endtime="20201030 15:56:19.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.185" endtime="20201030 15:56:19.570"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.579" endtime="20201030 15:56:19.601"></status>
</kw>
<msg timestamp="20201030 15:56:19.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.578" endtime="20201030 15:56:19.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.604" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.602" endtime="20201030 15:56:19.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.605" endtime="20201030 15:56:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.575" endtime="20201030 15:56:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.573" endtime="20201030 15:56:19.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.614" endtime="20201030 15:56:19.901"></status>
</kw>
<msg timestamp="20201030 15:56:19.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023410806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.613" endtime="20201030 15:56:19.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023410806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:19.905" endtime="20201030 15:56:19.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.913" endtime="20201030 15:56:19.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.610" endtime="20201030 15:56:19.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.608" endtime="20201030 15:56:19.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:19.920" level="INFO">${RESULT} = [{'diff': 0.000121083000000001}, {'diff': 0.00012015299999999784}, {'diff': 0.00012069399999999758}, {'diff': 0.00012065300000000181}, {'diff': 0.00012037499999999896}, {'diff': 0.00012024999999999883...</msg>
<status status="PASS" starttime="20201030 15:56:19.917" endtime="20201030 15:56:19.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:19.924" level="INFO">${ACCURACY} = {'diff': [0.000121083000000001, 0.00012015299999999784, 0.00012069399999999758, 0.00012065300000000181, 0.00012037499999999896, 0.00012024999999999883, 0.00012022199999999969, 0.000121083000000001, 0....</msg>
<status status="PASS" starttime="20201030 15:56:19.921" endtime="20201030 15:56:19.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.929" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:56:19.928" endtime="20201030 15:56:19.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.931" level="INFO">VALUE: [0.000121083000000001, 0.00012015299999999784, 0.00012069399999999758, 0.00012065300000000181, 0.00012037499999999896, 0.00012024999999999883, 0.00012022199999999969, 0.000121083000000001, 0.00012102699999999925, 0.00012086099999999989, 0.00012069400000000105, 0.00012069500000000052, 0.00012102800000000219, 0.00012069500000000052, 0.00012019500000000002, 0.00012051300000000265, 0.00012055500000000136, 0.00012054100000000179, 0.00012020800000000012, 0.00012037500000000242, 0.0001207090000000001, 0.00012036100000000285, 0.00012086099999999989, 0.00012036199999999886, 0.00012066599999999844, 0.00012070800000000062, 0.00012033300000000025, 0.00012102799999999872, 0.00012104199999999829, 0.00012102800000000219, 0.00012034699999999982, 0.00012037499999999896, 0.00012086099999999989, 0.00012036100000000285, 0.00012037499999999896, 0.00012036099999999939, 0.00012037499999999896, 0.00012019500000000002, 0.00012084700000000032, 0.00012018100000000045, 0.00012055500000000136, 0.00012087500000000292, 0.00012069400000000105, 0.00012019400000000055, 0.00012055600000000083, 0.000120389000000002, 0.00012023599999999926, 0.00012102799999999872, 0.0001207639999999989, 0.00012019400000000055]</msg>
<status status="PASS" starttime="20201030 15:56:19.930" endtime="20201030 15:56:19.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.925" endtime="20201030 15:56:19.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:19.942" endtime="20201030 15:56:19.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.940" endtime="20201030 15:56:19.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.939" endtime="20201030 15:56:19.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.571" endtime="20201030 15:56:19.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.571" endtime="20201030 15:56:19.963"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.972" endtime="20201030 15:56:19.993"></status>
</kw>
<msg timestamp="20201030 15:56:19.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.970" endtime="20201030 15:56:19.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:19.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:19.995" endtime="20201030 15:56:19.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:19.997" endtime="20201030 15:56:19.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.968" endtime="20201030 15:56:20.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.965" endtime="20201030 15:56:20.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.007" endtime="20201030 15:56:20.295"></status>
</kw>
<msg timestamp="20201030 15:56:20.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.005" endtime="20201030 15:56:20.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.301" endtime="20201030 15:56:20.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.310" endtime="20201030 15:56:20.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.003" endtime="20201030 15:56:20.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.001" endtime="20201030 15:56:20.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.316" level="INFO">${RESULT} = [{'diff': 0.00012202799999999972}, {'diff': 0.00012172300000000066}, {'diff': 0.00012187499999999699}, {'diff': 0.00012187500000000046}, {'diff': 0.00012138899999999953}, {'diff': 0.000121361000000000...</msg>
<status status="PASS" starttime="20201030 15:56:20.313" endtime="20201030 15:56:20.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.321" level="INFO">${ACCURACY} = {'diff': [0.00012202799999999972, 0.00012172300000000066, 0.00012187499999999699, 0.00012187500000000046, 0.00012138899999999953, 0.00012136100000000039, 0.00012188900000000003, 0.00012152799999999922...</msg>
<status status="PASS" starttime="20201030 15:56:20.317" endtime="20201030 15:56:20.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.325" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.324" endtime="20201030 15:56:20.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.328" level="INFO">VALUE: [0.00012202799999999972, 0.00012172300000000066, 0.00012187499999999699, 0.00012187500000000046, 0.00012138899999999953, 0.00012136100000000039, 0.00012188900000000003, 0.00012152799999999922, 0.00012145800000000137, 0.00012167999999999901, 0.00012158299999999803, 0.00012202800000000319, 0.00012170799999999815, 0.00012134700000000082, 0.00012188900000000003, 0.00012204199999999929, 0.00012147200000000094, 0.00012197200000000144, 0.00012151399999999965, 0.00012136199999999986, 0.00012186100000000089, 0.00012169399999999858, 0.00012188900000000003, 0.00012170800000000162, 0.00012155600000000183, 0.00012137499999999996, 0.00012204199999999929, 0.0001217090000000011, 0.00012152699999999975, 0.00012120799999999765, 0.00012205599999999886, 0.00012119400000000155, 0.00012202799999999972, 0.00012170899999999762, 0.00012137499999999996, 0.00012170799999999815, 0.00012170799999999815, 0.00012170799999999815, 0.00012201400000000015, 0.00012152799999999922, 0.0001219029999999996, 0.00012113899999999928, 0.00012116699999999841, 0.00012152799999999922, 0.00012169400000000205, 0.00012129199999999854, 0.00012155499999999889, 0.00012201400000000015, 0.00012122300000000016, 0.00012202800000000319]</msg>
<status status="PASS" starttime="20201030 15:56:20.326" endtime="20201030 15:56:20.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.322" endtime="20201030 15:56:20.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.333" endtime="20201030 15:56:20.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.331" endtime="20201030 15:56:20.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.330" endtime="20201030 15:56:20.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.964" endtime="20201030 15:56:20.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:19.963" endtime="20201030 15:56:20.353"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.362" endtime="20201030 15:56:20.383"></status>
</kw>
<msg timestamp="20201030 15:56:20.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.360" endtime="20201030 15:56:20.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.384" endtime="20201030 15:56:20.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.386" endtime="20201030 15:56:20.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.358" endtime="20201030 15:56:20.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.356" endtime="20201030 15:56:20.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.395" endtime="20201030 15:56:20.681"></status>
</kw>
<msg timestamp="20201030 15:56:20.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.394" endtime="20201030 15:56:20.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022078528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.686" endtime="20201030 15:56:20.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.694" endtime="20201030 15:56:20.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.391" endtime="20201030 15:56:20.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.390" endtime="20201030 15:56:20.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:20.700" level="INFO">${RESULT} = [{'diff': 0.00012287500000000146}, {'diff': 0.00012301400000000115}, {'diff': 0.00012302800000000072}, {'diff': 0.00012219400000000255}, {'diff': 0.00012304100000000082}, {'diff': 0.000123042000000000...</msg>
<status status="PASS" starttime="20201030 15:56:20.697" endtime="20201030 15:56:20.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:20.704" level="INFO">${ACCURACY} = {'diff': [0.00012287500000000146, 0.00012301400000000115, 0.00012302800000000072, 0.00012219400000000255, 0.00012304100000000082, 0.0001230420000000003, 0.0001225419999999998, 0.00012222199999999822, ...</msg>
<status status="PASS" starttime="20201030 15:56:20.701" endtime="20201030 15:56:20.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.708" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:56:20.707" endtime="20201030 15:56:20.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.711" level="INFO">VALUE: [0.00012287500000000146, 0.00012301400000000115, 0.00012302800000000072, 0.00012219400000000255, 0.00012304100000000082, 0.0001230420000000003, 0.0001225419999999998, 0.00012222199999999822, 0.00012305599999999986, 0.0001225419999999998, 0.00012219399999999908, 0.00012252700000000075, 0.00012252800000000022, 0.00012286099999999842, 0.00012216699999999941, 0.00012302799999999725, 0.00012238900000000053, 0.00012287500000000146, 0.00012269499999999905, 0.00012272199999999872, 0.00012237500000000096, 0.00012268, 0.00012220899999999812, 0.00012252800000000022, 0.00012269500000000252, 0.0001225419999999998, 0.00012236100000000139, 0.00012287500000000146, 0.00012286100000000189, 0.00012270799999999915, 0.00012305599999999986, 0.00012269399999999958, 0.00012270899999999862, 0.00012288899999999756, 0.00012216699999999941, 0.00012237500000000096, 0.00012287500000000146, 0.0001222220000000017, 0.0001225419999999998, 0.00012220799999999865, 0.00012269499999999905, 0.00012236099999999792, 0.0001223480000000013, 0.00012290200000000112, 0.00012263799999999783, 0.00012219399999999908, 0.00012229100000000007, 0.00012287499999999799, 0.00012223700000000073, 0.00012269499999999905]</msg>
<status status="PASS" starttime="20201030 15:56:20.709" endtime="20201030 15:56:20.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.705" endtime="20201030 15:56:20.712"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:20.716" endtime="20201030 15:56:20.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.714" endtime="20201030 15:56:20.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.713" endtime="20201030 15:56:20.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.354" endtime="20201030 15:56:20.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.354" endtime="20201030 15:56:20.736"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.745" endtime="20201030 15:56:20.769"></status>
</kw>
<msg timestamp="20201030 15:56:20.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.743" endtime="20201030 15:56:20.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:20.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:20.770" endtime="20201030 15:56:20.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.773" endtime="20201030 15:56:20.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.741" endtime="20201030 15:56:20.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.739" endtime="20201030 15:56:20.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:20.782" endtime="20201030 15:56:21.079"></status>
</kw>
<msg timestamp="20201030 15:56:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:20.780" endtime="20201030 15:56:21.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025483042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.083" endtime="20201030 15:56:21.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.091" endtime="20201030 15:56:21.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.778" endtime="20201030 15:56:21.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.776" endtime="20201030 15:56:21.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.098" level="INFO">${RESULT} = [{'diff': 0.00012341700000000067}, {'diff': 0.00012320799999999965}, {'diff': 0.00012354199999999732}, {'diff': 0.00012368100000000048}, {'diff': 0.00012405500000000139}, {'diff': 0.000123541000000001...</msg>
<status status="PASS" starttime="20201030 15:56:21.094" endtime="20201030 15:56:21.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.102" level="INFO">${ACCURACY} = {'diff': [0.00012341700000000067, 0.00012320799999999965, 0.00012354199999999732, 0.00012368100000000048, 0.00012405500000000139, 0.00012354100000000132, 0.00012320799999999965, 0.00012367999999999754...</msg>
<status status="PASS" starttime="20201030 15:56:21.099" endtime="20201030 15:56:21.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.107" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.106" endtime="20201030 15:56:21.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.109" level="INFO">VALUE: [0.00012341700000000067, 0.00012320799999999965, 0.00012354199999999732, 0.00012368100000000048, 0.00012405500000000139, 0.00012354100000000132, 0.00012320799999999965, 0.00012367999999999754, 0.00012409799999999957, 0.00012388899999999856, 0.00012334700000000282, 0.00012316700000000042, 0.00012387500000000246, 0.00012338899999999806, 0.00012337499999999849, 0.00012354199999999732, 0.00012402800000000172, 0.00012388899999999856, 0.00012319499999999955, 0.00012337499999999849, 0.0001235420000000008, 0.00012352800000000122, 0.00012352700000000175, 0.00012320799999999965, 0.00012370800000000015, 0.00012386099999999942, 0.00012387499999999899, 0.00012336099999999892, 0.00012337499999999849, 0.00012336200000000186, 0.00012354100000000132, 0.00012386099999999942, 0.00012402799999999825, 0.00012370800000000015, 0.0001235420000000008, 0.00012370899999999962, 0.00012316700000000042, 0.00012337499999999849, 0.00012386100000000289, 0.00012387499999999899, 0.00012388900000000203, 0.00012338900000000153, 0.00012336100000000239, 0.0001237229999999992, 0.00012363799999999883, 0.00012352799999999775, 0.00012402699999999878, 0.00012319400000000008, 0.0001235280000000047, 0.00012352799999999775]</msg>
<status status="PASS" starttime="20201030 15:56:21.108" endtime="20201030 15:56:21.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.103" endtime="20201030 15:56:21.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.115" endtime="20201030 15:56:21.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.114" endtime="20201030 15:56:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.112" endtime="20201030 15:56:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.737" endtime="20201030 15:56:21.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:20.737" endtime="20201030 15:56:21.136"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.144" endtime="20201030 15:56:21.165"></status>
</kw>
<msg timestamp="20201030 15:56:21.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.143" endtime="20201030 15:56:21.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.167" endtime="20201030 15:56:21.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.169" endtime="20201030 15:56:21.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.140" endtime="20201030 15:56:21.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.138" endtime="20201030 15:56:21.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.178" endtime="20201030 15:56:21.463"></status>
</kw>
<msg timestamp="20201030 15:56:21.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.177" endtime="20201030 15:56:21.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021980556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.467" endtime="20201030 15:56:21.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.475" endtime="20201030 15:56:21.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.174" endtime="20201030 15:56:21.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.172" endtime="20201030 15:56:21.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.482" level="INFO">${RESULT} = [{'diff': 0.00012504199999999882}, {'diff': 0.00012469500000000105}, {'diff': 0.00012419400000000108}, {'diff': 0.00012417999999999804}, {'diff': 0.00012470800000000115}, {'diff': 0.000124305999999997...</msg>
<status status="PASS" starttime="20201030 15:56:21.479" endtime="20201030 15:56:21.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.487" level="INFO">${ACCURACY} = {'diff': [0.00012504199999999882, 0.00012469500000000105, 0.00012419400000000108, 0.00012417999999999804, 0.00012470800000000115, 0.00012430599999999764, 0.00012505600000000186, 0.00012437499999999949...</msg>
<status status="PASS" starttime="20201030 15:56:21.483" endtime="20201030 15:56:21.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.491" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.490" endtime="20201030 15:56:21.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.493" level="INFO">VALUE: [0.00012504199999999882, 0.00012469500000000105, 0.00012419400000000108, 0.00012417999999999804, 0.00012470800000000115, 0.00012430599999999764, 0.00012505600000000186, 0.00012437499999999949, 0.00012438799999999958, 0.0001248619999999999, 0.00012511100000000067, 0.00012419400000000108, 0.00012504199999999882, 0.00012469400000000158, 0.00012504199999999882, 0.00012454199999999832, 0.0001250970000000011, 0.00012467999999999854, 0.00012508300000000153, 0.00012502699999999978, 0.00012504199999999882, 0.00012472199999999725, 0.00012470799999999768, 0.00012505499999999892, 0.00012502800000000272, 0.00012451399999999918, 0.00012501399999999968, 0.00012452699999999928, 0.000124680000000002, 0.00012436099999999992, 0.00012486100000000042, 0.00012488899999999956, 0.00012419500000000055, 0.00012484800000000032, 0.00012502699999999978, 0.00012437499999999949, 0.00012452800000000222, 0.00012469400000000158, 0.00012470800000000115, 0.00012437499999999949, 0.0001245420000000018, 0.00012482000000000118, 0.00012502699999999978, 0.00012502699999999978, 0.00012484700000000085, 0.00012491700000000217, 0.00012452799999999875, 0.00012437500000000296, 0.00012415300000000185, 0.00012438899999999906]</msg>
<status status="PASS" starttime="20201030 15:56:21.492" endtime="20201030 15:56:21.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.488" endtime="20201030 15:56:21.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.498" endtime="20201030 15:56:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.497" endtime="20201030 15:56:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.496" endtime="20201030 15:56:21.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.137" endtime="20201030 15:56:21.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.136" endtime="20201030 15:56:21.519"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.527" endtime="20201030 15:56:21.548"></status>
</kw>
<msg timestamp="20201030 15:56:21.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.526" endtime="20201030 15:56:21.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.550" endtime="20201030 15:56:21.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.552" endtime="20201030 15:56:21.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.523" endtime="20201030 15:56:21.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.521" endtime="20201030 15:56:21.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.561" endtime="20201030 15:56:21.847"></status>
</kw>
<msg timestamp="20201030 15:56:21.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.559" endtime="20201030 15:56:21.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021955625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.851" endtime="20201030 15:56:21.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.859" endtime="20201030 15:56:21.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.557" endtime="20201030 15:56:21.861"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.555" endtime="20201030 15:56:21.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:21.866" level="INFO">${RESULT} = [{'diff': 0.00012602800000000025}, {'diff': 0.00012570799999999868}, {'diff': 0.00012602799999999678}, {'diff': 0.00012601400000000068}, {'diff': 0.00012588900000000056}, {'diff': 0.000125375000000000...</msg>
<status status="PASS" starttime="20201030 15:56:21.863" endtime="20201030 15:56:21.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:21.870" level="INFO">${ACCURACY} = {'diff': [0.00012602800000000025, 0.00012570799999999868, 0.00012602799999999678, 0.00012601400000000068, 0.00012588900000000056, 0.00012537500000000049, 0.00012570800000000215, 0.00012536100000000092...</msg>
<status status="PASS" starttime="20201030 15:56:21.867" endtime="20201030 15:56:21.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.874" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:56:21.873" endtime="20201030 15:56:21.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.876" level="INFO">VALUE: [0.00012602800000000025, 0.00012570799999999868, 0.00012602799999999678, 0.00012601400000000068, 0.00012588900000000056, 0.00012537500000000049, 0.00012570800000000215, 0.00012536100000000092, 0.00012533300000000178, 0.00012604199999999982, 0.00012570900000000162, 0.00012536100000000092, 0.00012554199999999932, 0.00012604100000000035, 0.00012552700000000028, 0.00012602800000000025, 0.00012552799999999975, 0.00012576300000000096, 0.00012568099999999902, 0.00012568100000000249, 0.00012527800000000297, 0.00012572199999999825, 0.00012552799999999975, 0.00012537500000000049, 0.00012570800000000215, 0.00012538900000000006, 0.00012519499999999809, 0.00012570900000000162, 0.00012586100000000142, 0.00012520800000000165, 0.00012538900000000006, 0.00012604100000000035, 0.00012602800000000025, 0.00012552799999999975, 0.00012551400000000018, 0.00012584699999999838, 0.00012552799999999975, 0.00012567999999999954, 0.00012602700000000078, 0.00012554099999999985, 0.00012552799999999975, 0.00012554199999999932, 0.00012602800000000025, 0.00012569500000000206, 0.00012586099999999795, 0.0001253620000000004, 0.00012604100000000035, 0.00012534700000000135, 0.00012537500000000049, 0.00012588900000000056]</msg>
<status status="PASS" starttime="20201030 15:56:21.875" endtime="20201030 15:56:21.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.870" endtime="20201030 15:56:21.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:21.881" endtime="20201030 15:56:21.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.880" endtime="20201030 15:56:21.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.879" endtime="20201030 15:56:21.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.520" endtime="20201030 15:56:21.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.519" endtime="20201030 15:56:21.902"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.910" endtime="20201030 15:56:21.932"></status>
</kw>
<msg timestamp="20201030 15:56:21.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.909" endtime="20201030 15:56:21.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:21.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:21.934" endtime="20201030 15:56:21.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.936" endtime="20201030 15:56:21.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.906" endtime="20201030 15:56:21.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.904" endtime="20201030 15:56:21.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:21.945" endtime="20201030 15:56:22.230"></status>
</kw>
<msg timestamp="20201030 15:56:22.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:21.944" endtime="20201030 15:56:22.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023017167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.234" endtime="20201030 15:56:22.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.242" endtime="20201030 15:56:22.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.941" endtime="20201030 15:56:22.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.939" endtime="20201030 15:56:22.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.249" level="INFO">${RESULT} = [{'diff': 0.00012618000000000004}, {'diff': 0.00012686099999999895}, {'diff': 0.00012620799999999918}, {'diff': 0.0001270130000000022}, {'diff': 0.00012634700000000235}, {'diff': 0.0001261949999999990...</msg>
<status status="PASS" starttime="20201030 15:56:22.246" endtime="20201030 15:56:22.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.253" level="INFO">${ACCURACY} = {'diff': [0.00012618000000000004, 0.00012686099999999895, 0.00012620799999999918, 0.0001270130000000022, 0.00012634700000000235, 0.00012619499999999909, 0.00012652700000000128, 0.0001265130000000017, ...</msg>
<status status="PASS" starttime="20201030 15:56:22.250" endtime="20201030 15:56:22.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.257" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.256" endtime="20201030 15:56:22.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.259" level="INFO">VALUE: [0.00012618000000000004, 0.00012686099999999895, 0.00012620799999999918, 0.0001270130000000022, 0.00012634700000000235, 0.00012619499999999909, 0.00012652700000000128, 0.0001265130000000017, 0.00012670799999999968, 0.00012687499999999852, 0.00012654200000000032, 0.00012636100000000192, 0.00012618099999999952, 0.00012619499999999909, 0.0001262360000000018, 0.00012620799999999918, 0.00012654200000000032, 0.00012670799999999968, 0.00012688900000000156, 0.00012669499999999959, 0.00012619499999999909, 0.00012670799999999968, 0.00012662500000000174, 0.00012677799999999753, 0.00012654100000000085, 0.00012620799999999918, 0.00012688900000000156, 0.00012634699999999888, 0.00012619500000000256, 0.00012663899999999784, 0.00012672199999999925, 0.00012686099999999895, 0.00012620799999999918, 0.0001270560000000004, 0.0001268889999999981, 0.00012652800000000075, 0.00012702800000000125, 0.00012702800000000125, 0.00012704100000000135, 0.00012655500000000042, 0.00012687500000000199, 0.00012620799999999918, 0.00012651400000000118, 0.0001261390000000008, 0.00012668100000000002, 0.00012622199999999875, 0.00012654099999999738, 0.0001266390000000013, 0.00012672199999999925, 0.00012652800000000075]</msg>
<status status="PASS" starttime="20201030 15:56:22.258" endtime="20201030 15:56:22.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.254" endtime="20201030 15:56:22.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.265" endtime="20201030 15:56:22.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.264" endtime="20201030 15:56:22.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.263" endtime="20201030 15:56:22.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.903" endtime="20201030 15:56:22.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:21.902" endtime="20201030 15:56:22.286"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.294" endtime="20201030 15:56:22.316"></status>
</kw>
<msg timestamp="20201030 15:56:22.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.293" endtime="20201030 15:56:22.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.318" endtime="20201030 15:56:22.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.320" endtime="20201030 15:56:22.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.290" endtime="20201030 15:56:22.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.288" endtime="20201030 15:56:22.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.329" endtime="20201030 15:56:22.615"></status>
</kw>
<msg timestamp="20201030 15:56:22.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.328" endtime="20201030 15:56:22.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.619" endtime="20201030 15:56:22.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.627" endtime="20201030 15:56:22.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.325" endtime="20201030 15:56:22.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.323" endtime="20201030 15:56:22.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:22.633" level="INFO">${RESULT} = [{'diff': 0.00012748600000000304}, {'diff': 0.0001271940000000006}, {'diff': 0.0001276940000000011}, {'diff': 0.00012737499999999902}, {'diff': 0.00012790199999999918}, {'diff': 0.00012787499999999952...</msg>
<status status="PASS" starttime="20201030 15:56:22.630" endtime="20201030 15:56:22.634"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:22.638" level="INFO">${ACCURACY} = {'diff': [0.00012748600000000304, 0.0001271940000000006, 0.0001276940000000011, 0.00012737499999999902, 0.00012790199999999918, 0.00012787499999999952, 0.00012752799999999828, 0.00012722199999999975, ...</msg>
<status status="PASS" starttime="20201030 15:56:22.634" endtime="20201030 15:56:22.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.643" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:56:22.642" endtime="20201030 15:56:22.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.645" level="INFO">VALUE: [0.00012748600000000304, 0.0001271940000000006, 0.0001276940000000011, 0.00012737499999999902, 0.00012790199999999918, 0.00012787499999999952, 0.00012752799999999828, 0.00012722199999999975, 0.00012745800000000043, 0.00012786099999999995, 0.00012719399999999714, 0.00012738900000000206, 0.00012804200000000182, 0.00012737499999999902, 0.00012802800000000225, 0.00012786099999999995, 0.00012804100000000235, 0.00012737499999999902, 0.00012737500000000249, 0.00012737499999999902, 0.00012786099999999995, 0.00012752800000000175, 0.00012737500000000249, 0.00012736099999999945, 0.00012808400000000053, 0.0001271940000000006, 0.00012802799999999878, 0.0001275000000000026, 0.00012786099999999995, 0.00012754199999999785, 0.00012769399999999764, 0.00012786099999999995, 0.0001278889999999991, 0.00012770800000000068, 0.00012784700000000038, 0.00012770900000000016, 0.0001280139999999992, 0.0001281110000000002, 0.0001277499999999994, 0.00012720800000000018, 0.0001271940000000006, 0.00012786099999999995, 0.00012752799999999828, 0.00012798600000000007, 0.00012716699999999748, 0.00012720800000000018, 0.00012737499999999902, 0.0001273330000000003, 0.00012768100000000102, 0.00012788900000000256]</msg>
<status status="PASS" starttime="20201030 15:56:22.644" endtime="20201030 15:56:22.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.639" endtime="20201030 15:56:22.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:22.650" endtime="20201030 15:56:22.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.648" endtime="20201030 15:56:22.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.647" endtime="20201030 15:56:22.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.287" endtime="20201030 15:56:22.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.286" endtime="20201030 15:56:22.671"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.679" endtime="20201030 15:56:22.700"></status>
</kw>
<msg timestamp="20201030 15:56:22.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.677" endtime="20201030 15:56:22.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:22.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:22.702" endtime="20201030 15:56:22.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.705" endtime="20201030 15:56:22.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.675" endtime="20201030 15:56:22.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.673" endtime="20201030 15:56:22.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:22.713" endtime="20201030 15:56:23.000"></status>
</kw>
<msg timestamp="20201030 15:56:23.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:22.712" endtime="20201030 15:56:23.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022055417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.004" endtime="20201030 15:56:23.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.012" endtime="20201030 15:56:23.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.709" endtime="20201030 15:56:23.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.708" endtime="20201030 15:56:23.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.019" level="INFO">${RESULT} = [{'diff': 0.00012836100000000045}, {'diff': 0.00012852799999999928}, {'diff': 0.00012852799999999928}, {'diff': 0.00012873600000000082}, {'diff': 0.0001282079999999977}, {'diff': 0.0001288610000000009...</msg>
<status status="PASS" starttime="20201030 15:56:23.016" endtime="20201030 15:56:23.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.023" level="INFO">${ACCURACY} = {'diff': [0.00012836100000000045, 0.00012852799999999928, 0.00012852799999999928, 0.00012873600000000082, 0.0001282079999999977, 0.00012886100000000095, 0.0001286390000000033, 0.00012869499999999812, ...</msg>
<status status="PASS" starttime="20201030 15:56:23.020" endtime="20201030 15:56:23.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.027" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.026" endtime="20201030 15:56:23.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.029" level="INFO">VALUE: [0.00012836100000000045, 0.00012852799999999928, 0.00012852799999999928, 0.00012873600000000082, 0.0001282079999999977, 0.00012886100000000095, 0.0001286390000000033, 0.00012869499999999812, 0.00012868100000000202, 0.00012870800000000168, 0.0001287079999999982, 0.00012904099999999988, 0.00012840299999999916, 0.00012870800000000168, 0.0001281940000000016, 0.0001288890000000001, 0.0001288890000000001, 0.0001282499999999999, 0.0001287500000000004, 0.00012887500000000052, 0.00012851400000000318, 0.00012822199999999728, 0.00012840299999999916, 0.00012837500000000002, 0.00012887499999999705, 0.00012886199999999695, 0.00012837500000000002, 0.00012823600000000032, 0.00012852800000000275, 0.00012852799999999928, 0.00012905599999999892, 0.00012902799999999978, 0.00012836100000000045, 0.00012845799999999796, 0.0001286940000000021, 0.0001283889999999996, 0.0001288049999999992, 0.0001285560000000019, 0.00012902799999999978, 0.00012852799999999928, 0.0001290140000000002, 0.0001285269999999998, 0.0001287079999999982, 0.0001288890000000001, 0.00012869399999999864, 0.0001288890000000001, 0.00012869500000000159, 0.00012819499999999762, 0.00012869499999999812, 0.0001290140000000002]</msg>
<status status="PASS" starttime="20201030 15:56:23.028" endtime="20201030 15:56:23.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.024" endtime="20201030 15:56:23.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.034" endtime="20201030 15:56:23.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.033" endtime="20201030 15:56:23.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.032" endtime="20201030 15:56:23.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.671" endtime="20201030 15:56:23.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:22.671" endtime="20201030 15:56:23.055"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.063" endtime="20201030 15:56:23.084"></status>
</kw>
<msg timestamp="20201030 15:56:23.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.062" endtime="20201030 15:56:23.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.086" endtime="20201030 15:56:23.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.088" endtime="20201030 15:56:23.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.059" endtime="20201030 15:56:23.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.057" endtime="20201030 15:56:23.091"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.097" endtime="20201030 15:56:23.383"></status>
</kw>
<msg timestamp="20201030 15:56:23.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.096" endtime="20201030 15:56:23.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022748778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022878861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.387" endtime="20201030 15:56:23.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.395" endtime="20201030 15:56:23.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.093" endtime="20201030 15:56:23.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.091" endtime="20201030 15:56:23.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.401" level="INFO">${RESULT} = [{'diff': 0.0001300829999999996}, {'diff': 0.00012919399999999914}, {'diff': 0.00012952800000000028}, {'diff': 0.00013002800000000078}, {'diff': 0.00013004200000000035}, {'diff': 0.0001291810000000025...</msg>
<status status="PASS" starttime="20201030 15:56:23.398" endtime="20201030 15:56:23.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.405" level="INFO">${ACCURACY} = {'diff': [0.0001300829999999996, 0.00012919399999999914, 0.00012952800000000028, 0.00013002800000000078, 0.00013004200000000035, 0.00012918100000000252, 0.00012936100000000145, 0.0001297089999999987, ...</msg>
<status status="PASS" starttime="20201030 15:56:23.402" endtime="20201030 15:56:23.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.409" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.408" endtime="20201030 15:56:23.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.412" level="INFO">VALUE: [0.0001300829999999996, 0.00012919399999999914, 0.00012952800000000028, 0.00013002800000000078, 0.00013004200000000035, 0.00012918100000000252, 0.00012936100000000145, 0.0001297089999999987, 0.00012959699999999866, 0.00013004100000000088, 0.00012966699999999998, 0.00012952800000000028, 0.00013002800000000078, 0.00012927800000000003, 0.00012919500000000209, 0.0001297089999999987, 0.0001297079999999992, 0.0001293890000000006, 0.00012923599999999785, 0.00012969399999999964, 0.00012968099999999955, 0.00012919499999999862, 0.00012950000000000114, 0.00012940200000000068, 0.00012986099999999848, 0.0001300270000000013, 0.00013004199999999688, 0.00012969399999999964, 0.0001298890000000011, 0.00012934700000000188, 0.00012919499999999862, 0.00012984799999999838, 0.0001298890000000011, 0.00013004100000000088, 0.00012988899999999762, 0.00012990300000000066, 0.00012969500000000259, 0.0001298469999999989, 0.00012934800000000135, 0.0001295409999999969, 0.0001293890000000006, 0.0001297079999999992, 0.00012970800000000268, 0.00012936100000000145, 0.00012969500000000259, 0.00012968099999999955, 0.00012998699999999808, 0.00012923599999999785, 0.0001298890000000011, 0.00012986100000000195]</msg>
<status status="PASS" starttime="20201030 15:56:23.411" endtime="20201030 15:56:23.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.406" endtime="20201030 15:56:23.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.418" endtime="20201030 15:56:23.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.416" endtime="20201030 15:56:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.415" endtime="20201030 15:56:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.056" endtime="20201030 15:56:23.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.055" endtime="20201030 15:56:23.438"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.447" endtime="20201030 15:56:23.468"></status>
</kw>
<msg timestamp="20201030 15:56:23.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.445" endtime="20201030 15:56:23.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.470" endtime="20201030 15:56:23.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.472" endtime="20201030 15:56:23.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.443" endtime="20201030 15:56:23.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.441" endtime="20201030 15:56:23.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.481" endtime="20201030 15:56:23.766"></status>
</kw>
<msg timestamp="20201030 15:56:23.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.479" endtime="20201030 15:56:23.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.770" endtime="20201030 15:56:23.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.778" endtime="20201030 15:56:23.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.477" endtime="20201030 15:56:23.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.475" endtime="20201030 15:56:23.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:23.784" level="INFO">${RESULT} = [{'diff': 0.00013069500000000012}, {'diff': 0.00013069500000000012}, {'diff': 0.000130166000000001}, {'diff': 0.0001307080000000002}, {'diff': 0.00013055500000000095}, {'diff': 0.00013068000000000107}...</msg>
<status status="PASS" starttime="20201030 15:56:23.781" endtime="20201030 15:56:23.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:23.789" level="INFO">${ACCURACY} = {'diff': [0.00013069500000000012, 0.00013069500000000012, 0.000130166000000001, 0.0001307080000000002, 0.00013055500000000095, 0.00013068000000000107, 0.00013069400000000064, 0.0001308189999999973, 0....</msg>
<status status="PASS" starttime="20201030 15:56:23.785" endtime="20201030 15:56:23.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.793" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:56:23.792" endtime="20201030 15:56:23.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.796" level="INFO">VALUE: [0.00013069500000000012, 0.00013069500000000012, 0.000130166000000001, 0.0001307080000000002, 0.00013055500000000095, 0.00013068000000000107, 0.00013069400000000064, 0.0001308189999999973, 0.00013037499999999855, 0.00013104200000000135, 0.00013087500000000252, 0.0001308469999999999, 0.00013018000000000057, 0.00013036099999999898, 0.00013104200000000135, 0.00013086099999999948, 0.00013027800000000103, 0.0001305279999999978, 0.00013104100000000188, 0.0001308469999999999, 0.00013055600000000042, 0.00013052800000000128, 0.00013069400000000064, 0.00013022200000000275, 0.00013019500000000309, 0.00013104200000000135, 0.00013069400000000064, 0.00013105500000000145, 0.00013052800000000128, 0.00013088899999999862, 0.00013069400000000064, 0.0001305140000000017, 0.0001307089999999997, 0.0001302079999999997, 0.0001307080000000002, 0.00013036099999999898, 0.00013087500000000252, 0.0001310279999999983, 0.0001304440000000004, 0.0001307089999999997, 0.00013076400000000196, 0.0001301799999999971, 0.00013051299999999877, 0.0001305409999999979, 0.00013086100000000295, 0.00013037499999999855, 0.00013018100000000005, 0.0001309029999999982, 0.0001305140000000017, 0.00013068099999999708]</msg>
<status status="PASS" starttime="20201030 15:56:23.795" endtime="20201030 15:56:23.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.790" endtime="20201030 15:56:23.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:23.801" endtime="20201030 15:56:23.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.799" endtime="20201030 15:56:23.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.798" endtime="20201030 15:56:23.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.439" endtime="20201030 15:56:23.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.439" endtime="20201030 15:56:23.821"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.830" endtime="20201030 15:56:23.851"></status>
</kw>
<msg timestamp="20201030 15:56:23.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.828" endtime="20201030 15:56:23.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:23.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:23.852" endtime="20201030 15:56:23.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.855" endtime="20201030 15:56:23.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.826" endtime="20201030 15:56:23.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.824" endtime="20201030 15:56:23.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:23.864" endtime="20201030 15:56:24.151"></status>
</kw>
<msg timestamp="20201030 15:56:24.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:23.862" endtime="20201030 15:56:24.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021805236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.155" endtime="20201030 15:56:24.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.163" endtime="20201030 15:56:24.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.860" endtime="20201030 15:56:24.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.858" endtime="20201030 15:56:24.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.170" level="INFO">${RESULT} = [{'diff': 0.00013168100000000155}, {'diff': 0.00013184800000000038}, {'diff': 0.00013137499999999955}, {'diff': 0.00013155499999999848}, {'diff': 0.00013206999999999802}, {'diff': 0.000131542000000001...</msg>
<status status="PASS" starttime="20201030 15:56:24.167" endtime="20201030 15:56:24.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.174" level="INFO">${ACCURACY} = {'diff': [0.00013168100000000155, 0.00013184800000000038, 0.00013137499999999955, 0.00013155499999999848, 0.00013206999999999802, 0.00013154200000000185, 0.00013152800000000228, 0.0001320279999999993,...</msg>
<status status="PASS" starttime="20201030 15:56:24.171" endtime="20201030 15:56:24.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.178" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.177" endtime="20201030 15:56:24.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.180" level="INFO">VALUE: [0.00013168100000000155, 0.00013184800000000038, 0.00013137499999999955, 0.00013155499999999848, 0.00013206999999999802, 0.00013154200000000185, 0.00013152800000000228, 0.0001320279999999993, 0.00013187500000000005, 0.00013124999999999942, 0.00013186100000000048, 0.00013204199999999888, 0.00013190300000000266, 0.0001313470000000004, 0.0001317090000000007, 0.00013154199999999838, 0.0001312080000000007, 0.00013141699999999826, 0.00013202699999999984, 0.00013200000000000017, 0.00013120799999999724, 0.00013120799999999724, 0.00013186100000000048, 0.00013119499999999715, 0.00013205500000000245, 0.0001315409999999989, 0.00013137499999999955, 0.00013169399999999817, 0.00013169399999999817, 0.0001320279999999993, 0.00013137499999999955, 0.00013119400000000114, 0.00013188899999999962, 0.00013122200000000028, 0.00013152800000000228, 0.00013201399999999974, 0.00013119500000000062, 0.0001312090000000002, 0.00013154199999999838, 0.0001316799999999986, 0.00013205500000000245, 0.0001313470000000004, 0.0001312090000000002, 0.00013191699999999876, 0.00013137499999999955, 0.00013154199999999838, 0.00013169500000000112, 0.0001317080000000012, 0.00013169400000000164, 0.00013137499999999955]</msg>
<status status="PASS" starttime="20201030 15:56:24.179" endtime="20201030 15:56:24.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.175" endtime="20201030 15:56:24.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.185" endtime="20201030 15:56:24.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.184" endtime="20201030 15:56:24.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.183" endtime="20201030 15:56:24.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.822" endtime="20201030 15:56:24.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:23.822" endtime="20201030 15:56:24.206"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.215" endtime="20201030 15:56:24.239"></status>
</kw>
<msg timestamp="20201030 15:56:24.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.213" endtime="20201030 15:56:24.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.241" endtime="20201030 15:56:24.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.243" endtime="20201030 15:56:24.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.210" endtime="20201030 15:56:24.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.208" endtime="20201030 15:56:24.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.252" endtime="20201030 15:56:24.536"></status>
</kw>
<msg timestamp="20201030 15:56:24.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.250" endtime="20201030 15:56:24.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025377111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025509472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.540" endtime="20201030 15:56:24.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.548" endtime="20201030 15:56:24.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.248" endtime="20201030 15:56:24.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.246" endtime="20201030 15:56:24.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.555" level="INFO">${RESULT} = [{'diff': 0.0001323609999999975}, {'diff': 0.0001323609999999975}, {'diff': 0.00013237500000000055}, {'diff': 0.00013304199999999988}, {'diff': 0.00013287500000000105}, {'diff': 0.0001325409999999999}...</msg>
<status status="PASS" starttime="20201030 15:56:24.552" endtime="20201030 15:56:24.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.559" level="INFO">${ACCURACY} = {'diff': [0.0001323609999999975, 0.0001323609999999975, 0.00013237500000000055, 0.00013304199999999988, 0.00013287500000000105, 0.0001325409999999999, 0.00013305499999999998, 0.00013220799999999824, 0...</msg>
<status status="PASS" starttime="20201030 15:56:24.556" endtime="20201030 15:56:24.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.563" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.562" endtime="20201030 15:56:24.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.565" level="INFO">VALUE: [0.0001323609999999975, 0.0001323609999999975, 0.00013237500000000055, 0.00013304199999999988, 0.00013287500000000105, 0.0001325409999999999, 0.00013305499999999998, 0.00013220799999999824, 0.0001326669999999995, 0.00013265299999999994, 0.00013219500000000162, 0.000132166999999999, 0.0001327090000000017, 0.0001327080000000022, 0.00013223600000000085, 0.00013237500000000055, 0.00013270799999999874, 0.00013237500000000055, 0.00013251400000000024, 0.00013269500000000212, 0.0001321120000000002, 0.00013255499999999948, 0.0001323470000000014, 0.0001322080000000017, 0.0001330700000000025, 0.000132860999999998, 0.00013287500000000105, 0.00013236100000000098, 0.00013286100000000148, 0.0001322080000000017, 0.0001324860000000011, 0.00013233299999999837, 0.00013251400000000024, 0.0001330700000000025, 0.00013270899999999822, 0.00013298599999999813, 0.00013305499999999998, 0.00013288899999999715, 0.00013220799999999824, 0.00013255600000000242, 0.00013304199999999988, 0.00013286100000000148, 0.00013222200000000128, 0.00013219499999999468, 0.00013218000000000257, 0.00013283299999999887, 0.00013222199999999434, 0.00013219400000000214, 0.00013283299999999887, 0.00013251400000000024]</msg>
<status status="PASS" starttime="20201030 15:56:24.564" endtime="20201030 15:56:24.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.559" endtime="20201030 15:56:24.568"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.571" endtime="20201030 15:56:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.570" endtime="20201030 15:56:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.569" endtime="20201030 15:56:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.207" endtime="20201030 15:56:24.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.206" endtime="20201030 15:56:24.592"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.600" endtime="20201030 15:56:24.622"></status>
</kw>
<msg timestamp="20201030 15:56:24.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.599" endtime="20201030 15:56:24.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:24.623" endtime="20201030 15:56:24.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.625" endtime="20201030 15:56:24.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.596" endtime="20201030 15:56:24.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.594" endtime="20201030 15:56:24.628"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.634" endtime="20201030 15:56:24.920"></status>
</kw>
<msg timestamp="20201030 15:56:24.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.633" endtime="20201030 15:56:24.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:24.924" endtime="20201030 15:56:24.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:24.932" endtime="20201030 15:56:24.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.630" endtime="20201030 15:56:24.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.629" endtime="20201030 15:56:24.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:24.938" level="INFO">${RESULT} = [{'diff': 0.00013329200000000013}, {'diff': 0.00013337500000000155}, {'diff': 0.00013322199999999881}, {'diff': 0.0001333479999999984}, {'diff': 0.0001340280000000013}, {'diff': 0.00013402700000000184...</msg>
<status status="PASS" starttime="20201030 15:56:24.935" endtime="20201030 15:56:24.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:56:24.943" level="INFO">${ACCURACY} = {'diff': [0.00013329200000000013, 0.00013337500000000155, 0.00013322199999999881, 0.0001333479999999984, 0.0001340280000000013, 0.00013402700000000184, 0.00013408300000000012, 0.00013370799999999974, ...</msg>
<status status="PASS" starttime="20201030 15:56:24.939" endtime="20201030 15:56:24.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.948" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:56:24.947" endtime="20201030 15:56:24.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:24.950" level="INFO">VALUE: [0.00013329200000000013, 0.00013337500000000155, 0.00013322199999999881, 0.0001333479999999984, 0.0001340280000000013, 0.00013402700000000184, 0.00013408300000000012, 0.00013370799999999974, 0.00013319399999999967, 0.0001335280000000008, 0.00013355500000000048, 0.00013354200000000038, 0.00013374999999999845, 0.00013338900000000112, 0.00013397199999999956, 0.000133167, 0.00013320799999999924, 0.0001335280000000008, 0.000133860999999999, 0.0001338479999999989, 0.00013370799999999974, 0.0001335969999999992, 0.00013372199999999931, 0.0001333609999999985, 0.00013387499999999858, 0.00013397199999999956, 0.00013337500000000155, 0.00013337500000000155, 0.00013369400000000017, 0.00013315200000000096, 0.00013386100000000248, 0.00013372199999999931, 0.00013404200000000088, 0.00013312499999999783, 0.00013393000000000085, 0.00013387499999999858, 0.00013373599999999888, 0.00013338900000000112, 0.00013405600000000045, 0.00013387499999999858, 0.00013319499999999915, 0.00013370899999999922, 0.00013337499999999808, 0.0001333609999999985, 0.00013352700000000134, 0.00013401400000000174, 0.000133860999999999, 0.0001340280000000013, 0.00013338900000000112, 0.00013322300000000176]</msg>
<status status="PASS" starttime="20201030 15:56:24.949" endtime="20201030 15:56:24.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.944" endtime="20201030 15:56:24.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:24.959" endtime="20201030 15:56:24.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.957" endtime="20201030 15:56:24.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.956" endtime="20201030 15:56:24.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.593" endtime="20201030 15:56:24.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:24.592" endtime="20201030 15:56:24.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.334" endtime="20201030 15:56:24.980"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:46.264" endtime="20201030 15:56:24.980" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:55:05.892" endtime="20201030 15:56:24.984"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:56:25.036" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:56:25.045" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:56:26.433" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:56:25.035" endtime="20201030 15:56:26.434"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.437" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:56:26.435" endtime="20201030 15:56:26.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.034" endtime="20201030 15:56:26.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.440" endtime="20201030 15:56:26.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.438" endtime="20201030 15:56:26.628"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.640" endtime="20201030 15:56:26.655"></status>
</kw>
<msg timestamp="20201030 15:56:26.656" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.638" endtime="20201030 15:56:26.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.658" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.657" endtime="20201030 15:56:26.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:26.659" endtime="20201030 15:56:26.662"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:26.636" endtime="20201030 15:56:26.662"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:26.634" endtime="20201030 15:56:26.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.633" endtime="20201030 15:56:26.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:26.667" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:26.666" endtime="20201030 15:56:26.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.664" endtime="20201030 15:56:26.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.632" endtime="20201030 15:56:26.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.631" endtime="20201030 15:56:26.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.669" endtime="20201030 15:56:26.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.630" endtime="20201030 15:56:26.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.671" endtime="20201030 15:56:26.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.628" endtime="20201030 15:56:26.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:25.032" endtime="20201030 15:56:26.674"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:26.680" endtime="20201030 15:56:26.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.678" endtime="20201030 15:56:26.700"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.712" endtime="20201030 15:56:26.727"></status>
</kw>
<msg timestamp="20201030 15:56:26.727" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.711" endtime="20201030 15:56:26.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.730" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.728" endtime="20201030 15:56:26.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:26.733" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:26.731" endtime="20201030 15:56:26.734"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:26.708" endtime="20201030 15:56:26.734"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:26.706" endtime="20201030 15:56:26.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.705" endtime="20201030 15:56:26.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:26.739" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:26.738" endtime="20201030 15:56:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.736" endtime="20201030 15:56:26.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.704" endtime="20201030 15:56:26.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.703" endtime="20201030 15:56:26.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.741" endtime="20201030 15:56:26.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.702" endtime="20201030 15:56:26.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.700" endtime="20201030 15:56:26.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.677" endtime="20201030 15:56:26.743"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:26.751" endtime="20201030 15:56:32.874"></status>
</kw>
<msg timestamp="20201030 15:56:32.875" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:26.750" endtime="20201030 15:56:32.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:32.877" endtime="20201030 15:56:32.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.882" endtime="20201030 15:56:32.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.747" endtime="20201030 15:56:32.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.745" endtime="20201030 15:56:32.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:32.892" level="INFO">${RESULT} = {'bg-timer-count': 0, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:56:32.889" endtime="20201030 15:56:32.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.901" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:32.899" endtime="20201030 15:56:32.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.906" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:32.904" endtime="20201030 15:56:32.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.895" endtime="20201030 15:56:32.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.915" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:32.913" endtime="20201030 15:56:32.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.920" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:32.918" endtime="20201030 15:56:32.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.909" endtime="20201030 15:56:32.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.929" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:32.927" endtime="20201030 15:56:32.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:32.933" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:56:32.931" endtime="20201030 15:56:32.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.923" endtime="20201030 15:56:32.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:32.949" endtime="20201030 15:56:33.258"></status>
</kw>
<msg timestamp="20201030 15:56:33.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062290861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162334056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:32.945" endtime="20201030 15:56:33.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062290861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162334056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:33.262" endtime="20201030 15:56:33.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.270" endtime="20201030 15:56:33.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.940" endtime="20201030 15:56:33.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:32.936" endtime="20201030 15:56:33.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:33.276" level="INFO">${FILTERED} = [{'diff': 0.100043195}, {'diff': 0.10001095800000004}, {'diff': 0.10001095899999995}, {'diff': 0.10001094399999999}, {'diff': 0.10001095899999995}, {'diff': 0.10001097199999998}, {'diff': 0.1000109310...</msg>
<status status="PASS" starttime="20201030 15:56:33.273" endtime="20201030 15:56:33.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:33.280" level="INFO">${RESULT} = {'diff': [0.100043195, 0.10001095800000004, 0.10001095899999995, 0.10001094399999999, 0.10001095899999995, 0.10001097199999998, 0.10001093100000003, 0.10001097200000009, 0.10001097300000006, 0.1000109...</msg>
<status status="PASS" starttime="20201030 15:56:33.277" endtime="20201030 15:56:33.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.284" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:33.283" endtime="20201030 15:56:33.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.287" level="INFO">VALUE: [0.100043195, 0.10001095800000004, 0.10001095899999995, 0.10001094399999999, 0.10001095899999995, 0.10001097199999998, 0.10001093100000003, 0.10001097200000009, 0.10001097300000006, 0.10001098599999991, 0.10001095900000001, 0.10001095800000015, 0.10001095900000001, 0.10001094399999988, 0.10001095900000001, 0.10001097199999998, 0.10001094499999996, 0.10001097199999998, 0.1000110139999999, 0.10001094399999988, 0.10001093100000036, 0.10001095799999993, 0.10001094499999974, 0.10001087500000017, 0.10001090300000026, 0.10001090299999982, 0.10001088899999999, 0.10001088899999999, 0.10001090299999982, 0.10001090300000026, 0.10001090299999982, 0.10001088899999999, 0.10001090299999982, 0.10001088899999999, 0.100010916, 0.10001095799999993, 0.10001090200000018, 0.10001097299999984, 0.10001090300000026, 0.10001090300000026, 0.10001091699999964, 0.10001086100000034, 0.10001091699999964, 0.10001091699999964, 0.10001088899999999, 0.10001090299999937, 0.10001090299999937, 0.10001090300000026, 0.10001095800000037, 0.10001090300000026, 0.1000109440000001]</msg>
<status status="PASS" starttime="20201030 15:56:33.285" endtime="20201030 15:56:33.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.281" endtime="20201030 15:56:33.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.291" endtime="20201030 15:56:33.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.290" endtime="20201030 15:56:33.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.289" endtime="20201030 15:56:33.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:26.744" endtime="20201030 15:56:33.312"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:26.675" endtime="20201030 15:56:33.312" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:33.319" endtime="20201030 15:56:33.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.317" endtime="20201030 15:56:33.339"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.352" endtime="20201030 15:56:33.367"></status>
</kw>
<msg timestamp="20201030 15:56:33.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.351" endtime="20201030 15:56:33.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.369" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.368" endtime="20201030 15:56:33.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:33.372" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:33.371" endtime="20201030 15:56:33.373"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:33.348" endtime="20201030 15:56:33.373"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:33.346" endtime="20201030 15:56:33.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.345" endtime="20201030 15:56:33.374"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:33.378" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:33.377" endtime="20201030 15:56:33.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.375" endtime="20201030 15:56:33.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.344" endtime="20201030 15:56:33.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.343" endtime="20201030 15:56:33.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.380" endtime="20201030 15:56:33.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.341" endtime="20201030 15:56:33.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.339" endtime="20201030 15:56:33.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.316" endtime="20201030 15:56:33.383"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:33.392" endtime="20201030 15:56:39.516"></status>
</kw>
<msg timestamp="20201030 15:56:39.518" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:33.390" endtime="20201030 15:56:39.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.525" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.520" endtime="20201030 15:56:39.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.528" endtime="20201030 15:56:39.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.387" endtime="20201030 15:56:39.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.385" endtime="20201030 15:56:39.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.542" level="INFO">${RESULT} = {'bg-timer-count': 5, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:56:39.539" endtime="20201030 15:56:39.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.551" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:39.549" endtime="20201030 15:56:39.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.554" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:39.552" endtime="20201030 15:56:39.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.544" endtime="20201030 15:56:39.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.559" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:39.558" endtime="20201030 15:56:39.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.562" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:39.561" endtime="20201030 15:56:39.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.556" endtime="20201030 15:56:39.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.567" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:39.566" endtime="20201030 15:56:39.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.569" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:56:39.568" endtime="20201030 15:56:39.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.563" endtime="20201030 15:56:39.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.576" endtime="20201030 15:56:39.871"></status>
</kw>
<msg timestamp="20201030 15:56:39.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063687056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.574" endtime="20201030 15:56:39.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063687056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163761889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:39.875" endtime="20201030 15:56:39.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.883" endtime="20201030 15:56:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.572" endtime="20201030 15:56:39.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.570" endtime="20201030 15:56:39.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:39.889" level="INFO">${FILTERED} = [{'diff': 0.10007483299999999}, {'diff': 0.099981778}, {'diff': 0.10001093100000003}, {'diff': 0.100010916}, {'diff': 0.100010987}, {'diff': 0.10001091699999998}, {'diff': 0.10001093100000003}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:39.886" endtime="20201030 15:56:39.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:39.894" level="INFO">${RESULT} = {'diff': [0.10007483299999999, 0.099981778, 0.10001093100000003, 0.100010916, 0.100010987, 0.10001091699999998, 0.10001093100000003, 0.100010916, 0.10001093000000005, 0.10001090300000004, 0.1000108749...</msg>
<status status="PASS" starttime="20201030 15:56:39.890" endtime="20201030 15:56:39.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.898" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:39.897" endtime="20201030 15:56:39.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.901" level="INFO">VALUE: [0.10007483299999999, 0.099981778, 0.10001093100000003, 0.100010916, 0.100010987, 0.10001091699999998, 0.10001093100000003, 0.100010916, 0.10001093000000005, 0.10001090300000004, 0.10001087499999994, 0.10001088899999999, 0.10001093099999991, 0.10001087500000017, 0.10001088799999991, 0.10001087499999994, 0.10001090299999982, 0.10001088899999999, 0.10001087499999994, 0.10001087499999994, 0.10001088900000044, 0.10001087499999972, 0.10001087500000017, 0.10001090199999974, 0.10001094500000018, 0.10001092999999983, 0.10001088899999999, 0.10001088899999999, 0.10001086100000034, 0.10001090299999982, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.1000109440000001, 0.10001087500000017, 0.10001087499999972, 0.10001091700000009, 0.10001087499999972, 0.10001090299999937, 0.10001087500000061, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.1000109440000001, 0.10001086200000042, 0.10001090199999929, 0.10001087499999972, 0.10001090299999937]</msg>
<status status="PASS" starttime="20201030 15:56:39.899" endtime="20201030 15:56:39.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.895" endtime="20201030 15:56:39.902"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.905" endtime="20201030 15:56:39.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.904" endtime="20201030 15:56:39.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.903" endtime="20201030 15:56:39.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:33.383" endtime="20201030 15:56:39.926"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:33.314" endtime="20201030 15:56:39.927" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:39.933" endtime="20201030 15:56:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.931" endtime="20201030 15:56:39.953"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.966" endtime="20201030 15:56:39.980"></status>
</kw>
<msg timestamp="20201030 15:56:39.980" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.964" endtime="20201030 15:56:39.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:39.981" endtime="20201030 15:56:39.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:39.986" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:39.984" endtime="20201030 15:56:39.986"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:39.961" endtime="20201030 15:56:39.987"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:39.959" endtime="20201030 15:56:39.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.958" endtime="20201030 15:56:39.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:39.991" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:39.990" endtime="20201030 15:56:39.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.988" endtime="20201030 15:56:39.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.957" endtime="20201030 15:56:39.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.957" endtime="20201030 15:56:39.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:39.993" endtime="20201030 15:56:39.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.955" endtime="20201030 15:56:39.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.954" endtime="20201030 15:56:39.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.930" endtime="20201030 15:56:39.995"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:40.005" endtime="20201030 15:56:46.127"></status>
</kw>
<msg timestamp="20201030 15:56:46.128" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:40.003" endtime="20201030 15:56:46.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.133" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.130" endtime="20201030 15:56:46.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.136" endtime="20201030 15:56:46.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:40.001" endtime="20201030 15:56:46.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.997" endtime="20201030 15:56:46.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.147" level="INFO">${RESULT} = {'bg-timer-count': 10, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:56:46.143" endtime="20201030 15:56:46.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.155" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:46.153" endtime="20201030 15:56:46.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.159" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:46.157" endtime="20201030 15:56:46.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.149" endtime="20201030 15:56:46.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.169" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:46.167" endtime="20201030 15:56:46.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.174" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:46.172" endtime="20201030 15:56:46.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.163" endtime="20201030 15:56:46.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.183" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:46.181" endtime="20201030 15:56:46.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.187" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:56:46.185" endtime="20201030 15:56:46.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.177" endtime="20201030 15:56:46.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.202" endtime="20201030 15:56:46.504"></status>
</kw>
<msg timestamp="20201030 15:56:46.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062641319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162826778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.199" endtime="20201030 15:56:46.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062641319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162826778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:46.508" endtime="20201030 15:56:46.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.516" endtime="20201030 15:56:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.194" endtime="20201030 15:56:46.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.190" endtime="20201030 15:56:46.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:46.525" level="INFO">${FILTERED} = [{'diff': 0.100185459}, {'diff': 0.09987026399999999}, {'diff': 0.100011917}, {'diff': 0.10001090299999998}, {'diff': 0.10001090300000004}, {'diff': 0.100010916}, {'diff': 0.10001090200000007}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:46.519" endtime="20201030 15:56:46.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:46.529" level="INFO">${RESULT} = {'diff': [0.100185459, 0.09987026399999999, 0.100011917, 0.10001090299999998, 0.10001090300000004, 0.100010916, 0.10001090200000007, 0.10001090200000007, 0.1000108890000001, 0.10001090200000007, 0.100...</msg>
<status status="PASS" starttime="20201030 15:56:46.526" endtime="20201030 15:56:46.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.534" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:46.533" endtime="20201030 15:56:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.536" level="INFO">VALUE: [0.100185459, 0.09987026399999999, 0.100011917, 0.10001090299999998, 0.10001090300000004, 0.100010916, 0.10001090200000007, 0.10001090200000007, 0.1000108890000001, 0.10001090200000007, 0.10001094499999996, 0.10001088899999999, 0.10001088899999999, 0.10001091699999987, 0.10001088899999999, 0.10001095900000001, 0.10001090299999982, 0.1000108609999999, 0.10001084799999993, 0.1000108609999999, 0.10001083300000024, 0.10001090199999974, 0.10001084700000007, 0.10001084700000007, 0.10001083399999988, 0.10001084699999963, 0.1000108609999999, 0.10001084700000007, 0.10001084700000007, 0.1000108609999999, 0.1000108609999999, 0.10001084699999963, 0.10001084700000007, 0.1000108609999999, 0.10001083300000024, 0.10001088899999999, 0.10001084800000015, 0.10001084700000007, 0.10001084700000007, 0.10001086099999945, 0.10001084699999918, 0.10001086099999945, 0.10001084799999926, 0.10001084700000007, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001087499999972, 0.10001083399999988, 0.10001086100000034, 0.10001090300000026]</msg>
<status status="PASS" starttime="20201030 15:56:46.535" endtime="20201030 15:56:46.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.530" endtime="20201030 15:56:46.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.541" endtime="20201030 15:56:46.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.539" endtime="20201030 15:56:46.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.538" endtime="20201030 15:56:46.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:39.996" endtime="20201030 15:56:46.561"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:39.928" endtime="20201030 15:56:46.562" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:46.568" endtime="20201030 15:56:46.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.567" endtime="20201030 15:56:46.588"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.602" endtime="20201030 15:56:46.616"></status>
</kw>
<msg timestamp="20201030 15:56:46.616" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.600" endtime="20201030 15:56:46.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.617" endtime="20201030 15:56:46.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:46.622" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:46.620" endtime="20201030 15:56:46.622"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:46.598" endtime="20201030 15:56:46.623"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:46.595" endtime="20201030 15:56:46.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.594" endtime="20201030 15:56:46.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:46.627" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:46.627" endtime="20201030 15:56:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.624" endtime="20201030 15:56:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.593" endtime="20201030 15:56:46.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.592" endtime="20201030 15:56:46.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.629" endtime="20201030 15:56:46.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.591" endtime="20201030 15:56:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.589" endtime="20201030 15:56:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.566" endtime="20201030 15:56:46.632"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:46.640" endtime="20201030 15:56:52.762"></status>
</kw>
<msg timestamp="20201030 15:56:52.763" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:46.638" endtime="20201030 15:56:52.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:52.766" endtime="20201030 15:56:52.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.772" endtime="20201030 15:56:52.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.636" endtime="20201030 15:56:52.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.634" endtime="20201030 15:56:52.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:52.782" level="INFO">${RESULT} = {'bg-timer-count': 15, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:56:52.779" endtime="20201030 15:56:52.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.791" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:52.789" endtime="20201030 15:56:52.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.796" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:52.793" endtime="20201030 15:56:52.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.784" endtime="20201030 15:56:52.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.805" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:52.803" endtime="20201030 15:56:52.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.810" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:52.808" endtime="20201030 15:56:52.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.799" endtime="20201030 15:56:52.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.819" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:52.817" endtime="20201030 15:56:52.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:52.824" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:56:52.822" endtime="20201030 15:56:52.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.813" endtime="20201030 15:56:52.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:52.843" endtime="20201030 15:56:53.147"></status>
</kw>
<msg timestamp="20201030 15:56:53.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062397083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162685806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:52.839" endtime="20201030 15:56:53.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062397083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162685806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:53.151" endtime="20201030 15:56:53.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.159" endtime="20201030 15:56:53.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.834" endtime="20201030 15:56:53.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:52.827" endtime="20201030 15:56:53.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:53.165" level="INFO">${FILTERED} = [{'diff': 0.100288723}, {'diff': 0.09976777800000003}, {'diff': 0.100402722}, {'diff': 0.09961920899999999}, {'diff': 0.100011972}, {'diff': 0.10001097199999998}, {'diff': 0.10001094399999999}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:56:53.162" endtime="20201030 15:56:53.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:53.169" level="INFO">${RESULT} = {'diff': [0.100288723, 0.09976777800000003, 0.100402722, 0.09961920899999999, 0.100011972, 0.10001097199999998, 0.10001094399999999, 0.10001097199999998, 0.10001097199999998, 0.10001095799999993, 0.10...</msg>
<status status="PASS" starttime="20201030 15:56:53.166" endtime="20201030 15:56:53.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.173" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:53.172" endtime="20201030 15:56:53.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.176" level="INFO">VALUE: [0.100288723, 0.09976777800000003, 0.100402722, 0.09961920899999999, 0.100011972, 0.10001097199999998, 0.10001094399999999, 0.10001097199999998, 0.10001097199999998, 0.10001095799999993, 0.10001095900000001, 0.10001105499999996, 0.1000110139999999, 0.10001101300000004, 0.10001094399999988, 0.10001097300000006, 0.10001097199999998, 0.10001097199999998, 0.10001097199999998, 0.10001095800000015, 0.10001097299999984, 0.1000109720000002, 0.10001091700000009, 0.10001088899999999, 0.10001091699999964, 0.10001097199999975, 0.100010916, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001090300000026, 0.100010916, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.1000109440000001, 0.10001090300000026, 0.10001091700000009, 0.10001095900000001, 0.10001091700000009, 0.1000109440000001, 0.10001091599999956, 0.10001093099999991, 0.10001090300000026, 0.10001091700000053, 0.10001091599999956, 0.10001093099999991, 0.10001090300000026, 0.10001091700000053, 0.10001091599999956, 0.10001092999999983]</msg>
<status status="PASS" starttime="20201030 15:56:53.175" endtime="20201030 15:56:53.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.170" endtime="20201030 15:56:53.177"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.182" endtime="20201030 15:56:53.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.179" endtime="20201030 15:56:53.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.178" endtime="20201030 15:56:53.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:46.632" endtime="20201030 15:56:53.202"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:46.563" endtime="20201030 15:56:53.203" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:53.209" endtime="20201030 15:56:53.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.207" endtime="20201030 15:56:53.229"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.243" endtime="20201030 15:56:53.257"></status>
</kw>
<msg timestamp="20201030 15:56:53.257" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.241" endtime="20201030 15:56:53.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.260" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.258" endtime="20201030 15:56:53.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:53.263" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:53.261" endtime="20201030 15:56:53.263"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:53.239" endtime="20201030 15:56:53.264"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:53.236" endtime="20201030 15:56:53.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.235" endtime="20201030 15:56:53.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:53.268" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:53.268" endtime="20201030 15:56:53.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.266" endtime="20201030 15:56:53.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.234" endtime="20201030 15:56:53.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.234" endtime="20201030 15:56:53.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.270" endtime="20201030 15:56:53.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.232" endtime="20201030 15:56:53.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.229" endtime="20201030 15:56:53.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.206" endtime="20201030 15:56:53.273"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:53.282" endtime="20201030 15:56:59.405"></status>
</kw>
<msg timestamp="20201030 15:56:59.406" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:53.279" endtime="20201030 15:56:59.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.411" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.408" endtime="20201030 15:56:59.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.414" endtime="20201030 15:56:59.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.277" endtime="20201030 15:56:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.275" endtime="20201030 15:56:59.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.425" level="INFO">${RESULT} = {'bg-timer-count': 20, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:56:59.421" endtime="20201030 15:56:59.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.433" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:59.431" endtime="20201030 15:56:59.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.438" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:56:59.436" endtime="20201030 15:56:59.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.427" endtime="20201030 15:56:59.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.448" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:56:59.446" endtime="20201030 15:56:59.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.452" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:56:59.450" endtime="20201030 15:56:59.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.441" endtime="20201030 15:56:59.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.462" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:56:59.460" endtime="20201030 15:56:59.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.466" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:56:59.464" endtime="20201030 15:56:59.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.455" endtime="20201030 15:56:59.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.482" endtime="20201030 15:56:59.785"></status>
</kw>
<msg timestamp="20201030 15:56:59.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064067708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164477778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.478" endtime="20201030 15:56:59.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064067708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164477778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:56:59.789" endtime="20201030 15:56:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.797" endtime="20201030 15:56:59.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.473" endtime="20201030 15:56:59.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.469" endtime="20201030 15:56:59.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:56:59.804" level="INFO">${FILTERED} = [{'diff': 0.10041006999999999}, {'diff': 0.10008958299999998}, {'diff': 0.09956754099999998}, {'diff': 0.100011917}, {'diff': 0.10001094499999996}, {'diff': 0.10001095800000004}, {'diff': 0.1000109309...</msg>
<status status="PASS" starttime="20201030 15:56:59.801" endtime="20201030 15:56:59.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:56:59.809" level="INFO">${RESULT} = {'diff': [0.10041006999999999, 0.10008958299999998, 0.09956754099999998, 0.100011917, 0.10001094499999996, 0.10001095800000004, 0.10001093099999991, 0.10001094399999999, 0.10001094399999999, 0.1000109...</msg>
<status status="PASS" starttime="20201030 15:56:59.805" endtime="20201030 15:56:59.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.813" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:56:59.812" endtime="20201030 15:56:59.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.815" level="INFO">VALUE: [0.10041006999999999, 0.10008958299999998, 0.09956754099999998, 0.100011917, 0.10001094499999996, 0.10001095800000004, 0.10001093099999991, 0.10001094399999999, 0.10001094399999999, 0.10001093099999991, 0.10001095799999993, 0.10001095900000001, 0.1000109440000001, 0.10001093000000005, 0.10001095900000001, 0.10001094399999988, 0.10001095900000001, 0.10001093000000005, 0.10001092999999983, 0.10001087500000017, 0.10001087499999972, 0.10001088899999999, 0.10001090300000026, 0.1000109440000001, 0.10001086100000034, 0.10001090300000026, 0.10001087500000017, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001090299999982, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001090300000026, 0.10001091700000009, 0.10001091699999964, 0.10001087500000061, 0.10001090300000026, 0.10001090299999937, 0.10001086100000034, 0.10001088899999999, 0.10001088899999999, 0.10001088899999999, 0.10001091699999964, 0.10001090300000026, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201030 15:56:59.814" endtime="20201030 15:56:59.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.810" endtime="20201030 15:56:59.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.820" endtime="20201030 15:56:59.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.819" endtime="20201030 15:56:59.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.818" endtime="20201030 15:56:59.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:53.273" endtime="20201030 15:56:59.841"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:53.204" endtime="20201030 15:56:59.841" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:56:59.848" endtime="20201030 15:56:59.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.846" endtime="20201030 15:56:59.868"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.880" endtime="20201030 15:56:59.896"></status>
</kw>
<msg timestamp="20201030 15:56:59.896" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.879" endtime="20201030 15:56:59.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.897" endtime="20201030 15:56:59.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:56:59.902" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:56:59.900" endtime="20201030 15:56:59.902"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:59.876" endtime="20201030 15:56:59.903"></status>
</kw>
<status status="FAIL" starttime="20201030 15:56:59.874" endtime="20201030 15:56:59.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.873" endtime="20201030 15:56:59.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:56:59.908" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:56:59.907" endtime="20201030 15:56:59.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.905" endtime="20201030 15:56:59.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.872" endtime="20201030 15:56:59.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.871" endtime="20201030 15:56:59.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.909" endtime="20201030 15:56:59.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.870" endtime="20201030 15:56:59.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.868" endtime="20201030 15:56:59.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.845" endtime="20201030 15:56:59.912"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:56:59.920" endtime="20201030 15:57:06.043"></status>
</kw>
<msg timestamp="20201030 15:57:06.044" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:56:59.919" endtime="20201030 15:57:06.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:57:06.046" endtime="20201030 15:57:06.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.052" endtime="20201030 15:57:06.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.916" endtime="20201030 15:57:06.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.914" endtime="20201030 15:57:06.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.063" level="INFO">${RESULT} = {'bg-timer-count': 25, 'main-timer-interval': 100000, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:57:06.059" endtime="20201030 15:57:06.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.071" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:06.069" endtime="20201030 15:57:06.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.076" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:57:06.074" endtime="20201030 15:57:06.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.065" endtime="20201030 15:57:06.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.086" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:57:06.084" endtime="20201030 15:57:06.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.090" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:57:06.088" endtime="20201030 15:57:06.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.079" endtime="20201030 15:57:06.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.100" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:57:06.098" endtime="20201030 15:57:06.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.104" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:57:06.102" endtime="20201030 15:57:06.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.093" endtime="20201030 15:57:06.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.120" endtime="20201030 15:57:06.422"></status>
</kw>
<msg timestamp="20201030 15:57:06.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063281361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163851194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.117" endtime="20201030 15:57:06.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063281361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163851194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:57:06.426" endtime="20201030 15:57:06.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:57:06.434" endtime="20201030 15:57:06.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.111" endtime="20201030 15:57:06.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.107" endtime="20201030 15:57:06.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:57:06.440" level="INFO">${FILTERED} = [{'diff': 0.10056983300000001}, {'diff': 0.099654291}, {'diff': 0.09965373599999999}, {'diff': 0.10007093}, {'diff': 0.09972315300000001}, {'diff': 0.10001190299999996}, {'diff': 0.10001090299999993},...</msg>
<status status="PASS" starttime="20201030 15:57:06.437" endtime="20201030 15:57:06.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:57:06.444" level="INFO">${RESULT} = {'diff': [0.10056983300000001, 0.099654291, 0.09965373599999999, 0.10007093, 0.09972315300000001, 0.10001190299999996, 0.10001090299999993, 0.10001091699999998, 0.10001097199999998, 0.1000109030000000...</msg>
<status status="PASS" starttime="20201030 15:57:06.441" endtime="20201030 15:57:06.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.449" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:57:06.448" endtime="20201030 15:57:06.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:57:06.451" level="INFO">VALUE: [0.10056983300000001, 0.099654291, 0.09965373599999999, 0.10007093, 0.09972315300000001, 0.10001190299999996, 0.10001090299999993, 0.10001091699999998, 0.10001097199999998, 0.10001090300000004, 0.100010916, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001093000000005, 0.10001091700000009, 0.10001093099999991, 0.10001093099999991, 0.10001093000000005, 0.10001090300000026, 0.10001087500000017, 0.10001084700000007, 0.1000108329999998, 0.1000108609999999, 0.10001086100000034, 0.10001084700000007, 0.10001087499999972, 0.1000108609999999, 0.10001087500000017, 0.10001084700000007, 0.10001086100000034, 0.1000108609999999, 0.10001084700000007, 0.10001091700000009, 0.10001087500000017, 0.10001084699999963, 0.1000108609999999, 0.1000108609999999, 0.10001084800000015, 0.10001086100000034, 0.10001086100000034, 0.10001087499999972, 0.10001086200000042, 0.10001086100000034, 0.10001088899999999, 0.10001084700000007, 0.10001086099999945, 0.10001086100000034, 0.10001086100000034, 0.10001086199999953]</msg>
<status status="PASS" starttime="20201030 15:57:06.450" endtime="20201030 15:57:06.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.445" endtime="20201030 15:57:06.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:57:06.456" endtime="20201030 15:57:06.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.454" endtime="20201030 15:57:06.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:57:06.453" endtime="20201030 15:57:06.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:56:59.913" endtime="20201030 15:57:06.477"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:56:59.843" endtime="20201030 15:57:06.477" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:56:24.992" endtime="20201030 15:57:06.484"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:54:21.576" endtime="20201030 15:57:06.516"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
