<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:19.824" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:20.426" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:20.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:21.656" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:20.424" endtime="20201030 15:51:21.657"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.659" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:21.658" endtime="20201030 15:51:21.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.423" endtime="20201030 15:51:21.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.662" endtime="20201030 15:51:21.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.661" endtime="20201030 15:51:21.892"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.905" endtime="20201030 15:51:21.919"></status>
</kw>
<msg timestamp="20201030 15:51:21.920" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 15:51:21.903" endtime="20201030 15:51:21.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['in(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Suc...</msg>
<status status="PASS" starttime="20201030 15:51:21.921" endtime="20201030 15:51:21.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.926" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:21.924" endtime="20201030 15:51:21.926"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.901" endtime="20201030 15:51:21.927"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.899" endtime="20201030 15:51:21.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.897" endtime="20201030 15:51:21.928"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:21.931" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:21.931" endtime="20201030 15:51:21.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.928" endtime="20201030 15:51:21.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.897" endtime="20201030 15:51:21.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.896" endtime="20201030 15:51:21.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.934" endtime="20201030 15:51:21.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.894" endtime="20201030 15:51:21.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.937" endtime="20201030 15:51:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.893" endtime="20201030 15:51:21.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:20.421" endtime="20201030 15:51:21.939"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:21.946" endtime="20201030 15:51:21.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.944" endtime="20201030 15:51:21.966"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:21.980" endtime="20201030 15:51:21.994"></status>
</kw>
<msg timestamp="20201030 15:51:21.994" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.978" endtime="20201030 15:51:21.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:21.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:21.995" endtime="20201030 15:51:21.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.000" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:21.998" endtime="20201030 15:51:22.000"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.975" endtime="20201030 15:51:22.001"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:21.973" endtime="20201030 15:51:22.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.971" endtime="20201030 15:51:22.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:22.006" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:22.005" endtime="20201030 15:51:22.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.003" endtime="20201030 15:51:22.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.970" endtime="20201030 15:51:22.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.969" endtime="20201030 15:51:22.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.007" endtime="20201030 15:51:22.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.968" endtime="20201030 15:51:22.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.966" endtime="20201030 15:51:22.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:21.943" endtime="20201030 15:51:22.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.019" endtime="20201030 15:51:22.028"></status>
</kw>
<msg timestamp="20201030 15:51:22.029" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.016" endtime="20201030 15:51:22.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.031" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:22.030" endtime="20201030 15:51:22.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:22.033" endtime="20201030 15:51:22.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.013" endtime="20201030 15:51:22.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.011" endtime="20201030 15:51:22.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.039" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:22.038" endtime="20201030 15:51:22.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.041" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:22.040" endtime="20201030 15:51:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.036" endtime="20201030 15:51:22.042"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:21.940" endtime="20201030 15:51:22.043" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:19.949" endtime="20201030 15:51:22.046"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:22.107" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:22.118" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:23.259" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:22.105" endtime="20201030 15:51:23.260"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.262" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:23.261" endtime="20201030 15:51:23.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.102" endtime="20201030 15:51:23.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.266" endtime="20201030 15:51:23.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.264" endtime="20201030 15:51:23.490"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.502" endtime="20201030 15:51:23.516"></status>
</kw>
<msg timestamp="20201030 15:51:23.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.500" endtime="20201030 15:51:23.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.520" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.518" endtime="20201030 15:51:23.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.523" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:23.521" endtime="20201030 15:51:23.524"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.498" endtime="20201030 15:51:23.524"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.496" endtime="20201030 15:51:23.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.495" endtime="20201030 15:51:23.525"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:23.529" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:23.528" endtime="20201030 15:51:23.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.526" endtime="20201030 15:51:23.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.494" endtime="20201030 15:51:23.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.493" endtime="20201030 15:51:23.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.531" endtime="20201030 15:51:23.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.492" endtime="20201030 15:51:23.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.533" endtime="20201030 15:51:23.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.490" endtime="20201030 15:51:23.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:22.101" endtime="20201030 15:51:23.536"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.543" endtime="20201030 15:51:23.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.540" endtime="20201030 15:51:23.563"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.578" endtime="20201030 15:51:23.593"></status>
</kw>
<msg timestamp="20201030 15:51:23.594" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.575" endtime="20201030 15:51:23.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.598" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.596" endtime="20201030 15:51:23.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.602" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:23.600" endtime="20201030 15:51:23.603"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.572" endtime="20201030 15:51:23.604"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:23.569" endtime="20201030 15:51:23.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.568" endtime="20201030 15:51:23.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:23.610" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:23.609" endtime="20201030 15:51:23.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.606" endtime="20201030 15:51:23.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.567" endtime="20201030 15:51:23.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.567" endtime="20201030 15:51:23.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.612" endtime="20201030 15:51:23.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.565" endtime="20201030 15:51:23.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.563" endtime="20201030 15:51:23.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.539" endtime="20201030 15:51:23.615"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.624" endtime="20201030 15:51:23.636"></status>
</kw>
<msg timestamp="20201030 15:51:23.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.623" endtime="20201030 15:51:23.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.639" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:23.637" endtime="20201030 15:51:23.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.640" endtime="20201030 15:51:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.620" endtime="20201030 15:51:23.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.618" endtime="20201030 15:51:23.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.649" endtime="20201030 15:51:23.942"></status>
</kw>
<msg timestamp="20201030 15:51:23.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072471903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072472375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.648" endtime="20201030 15:51:23.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072471903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072472375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:23.947" endtime="20201030 15:51:23.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:23.955" endtime="20201030 15:51:23.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.645" endtime="20201030 15:51:23.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.643" endtime="20201030 15:51:23.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:23.962" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.870000000073427e-07}, {'diff': 4.86000000007869e-07}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:23.959" endtime="20201030 15:51:23.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:23.967" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.85999...</msg>
<status status="PASS" starttime="20201030 15:51:23.963" endtime="20201030 15:51:23.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.971" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:23.970" endtime="20201030 15:51:23.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:23.974" level="INFO">VALUE: [4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.729999999869561e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:23.972" endtime="20201030 15:51:23.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.968" endtime="20201030 15:51:23.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:23.979" endtime="20201030 15:51:23.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.978" endtime="20201030 15:51:23.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.976" endtime="20201030 15:51:23.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.617" endtime="20201030 15:51:24.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.616" endtime="20201030 15:51:24.000"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.008" endtime="20201030 15:51:24.018"></status>
</kw>
<msg timestamp="20201030 15:51:24.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.007" endtime="20201030 15:51:24.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.021" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.020" endtime="20201030 15:51:24.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.022" endtime="20201030 15:51:24.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.004" endtime="20201030 15:51:24.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.002" endtime="20201030 15:51:24.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.032" endtime="20201030 15:51:24.318"></status>
</kw>
<msg timestamp="20201030 15:51:24.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018875042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.030" endtime="20201030 15:51:24.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018874569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018875042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.323" endtime="20201030 15:51:24.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.331" endtime="20201030 15:51:24.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.027" endtime="20201030 15:51:24.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.026" endtime="20201030 15:51:24.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.338" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:24.335" endtime="20201030 15:51:24.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.343" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:24.339" endtime="20201030 15:51:24.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.348" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:24.347" endtime="20201030 15:51:24.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.350" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:24.349" endtime="20201030 15:51:24.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.344" endtime="20201030 15:51:24.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.355" endtime="20201030 15:51:24.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.353" endtime="20201030 15:51:24.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.352" endtime="20201030 15:51:24.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.001" endtime="20201030 15:51:24.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.000" endtime="20201030 15:51:24.376"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.384" endtime="20201030 15:51:24.394"></status>
</kw>
<msg timestamp="20201030 15:51:24.395" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.382" endtime="20201030 15:51:24.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.397" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.396" endtime="20201030 15:51:24.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.398" endtime="20201030 15:51:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.380" endtime="20201030 15:51:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.378" endtime="20201030 15:51:24.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.408" endtime="20201030 15:51:24.693"></status>
</kw>
<msg timestamp="20201030 15:51:24.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018994014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.406" endtime="20201030 15:51:24.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018994014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018994486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.698" endtime="20201030 15:51:24.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.707" endtime="20201030 15:51:24.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.403" endtime="20201030 15:51:24.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.402" endtime="20201030 15:51:24.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:24.714" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:24.711" endtime="20201030 15:51:24.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:24.719" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:24.715" endtime="20201030 15:51:24.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:24.722" endtime="20201030 15:51:24.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.726" level="INFO">VALUE: [4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:24.724" endtime="20201030 15:51:24.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.719" endtime="20201030 15:51:24.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:24.730" endtime="20201030 15:51:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.729" endtime="20201030 15:51:24.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.728" endtime="20201030 15:51:24.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.376" endtime="20201030 15:51:24.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.376" endtime="20201030 15:51:24.751"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.759" endtime="20201030 15:51:24.770"></status>
</kw>
<msg timestamp="20201030 15:51:24.771" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.758" endtime="20201030 15:51:24.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:24.774" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:24.772" endtime="20201030 15:51:24.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.775" endtime="20201030 15:51:24.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.755" endtime="20201030 15:51:24.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.753" endtime="20201030 15:51:24.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:24.785" endtime="20201030 15:51:25.071"></status>
</kw>
<msg timestamp="20201030 15:51:25.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:24.783" endtime="20201030 15:51:25.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.075" endtime="20201030 15:51:25.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.086" endtime="20201030 15:51:25.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.780" endtime="20201030 15:51:25.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.779" endtime="20201030 15:51:25.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.094" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.859999999974607e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:25.091" endtime="20201030 15:51:25.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.101" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.87...</msg>
<status status="PASS" starttime="20201030 15:51:25.096" endtime="20201030 15:51:25.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.107" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.105" endtime="20201030 15:51:25.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.111" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07]</msg>
<status status="PASS" starttime="20201030 15:51:25.109" endtime="20201030 15:51:25.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.102" endtime="20201030 15:51:25.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.119" endtime="20201030 15:51:25.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.117" endtime="20201030 15:51:25.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.115" endtime="20201030 15:51:25.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.752" endtime="20201030 15:51:25.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:24.751" endtime="20201030 15:51:25.139"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.148" endtime="20201030 15:51:25.158"></status>
</kw>
<msg timestamp="20201030 15:51:25.159" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.146" endtime="20201030 15:51:25.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.160" endtime="20201030 15:51:25.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.162" endtime="20201030 15:51:25.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.143" endtime="20201030 15:51:25.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.141" endtime="20201030 15:51:25.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.172" endtime="20201030 15:51:25.457"></status>
</kw>
<msg timestamp="20201030 15:51:25.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018879125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.170" endtime="20201030 15:51:25.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018879125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.461" endtime="20201030 15:51:25.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.470" endtime="20201030 15:51:25.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.168" endtime="20201030 15:51:25.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.166" endtime="20201030 15:51:25.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.477" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:25.473" endtime="20201030 15:51:25.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.482" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:25.478" endtime="20201030 15:51:25.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.486" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.485" endtime="20201030 15:51:25.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.489" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07]</msg>
<status status="PASS" starttime="20201030 15:51:25.487" endtime="20201030 15:51:25.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.483" endtime="20201030 15:51:25.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.493" endtime="20201030 15:51:25.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.492" endtime="20201030 15:51:25.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.491" endtime="20201030 15:51:25.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.140" endtime="20201030 15:51:25.514"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.140" endtime="20201030 15:51:25.514"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.522" endtime="20201030 15:51:25.534"></status>
</kw>
<msg timestamp="20201030 15:51:25.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.521" endtime="20201030 15:51:25.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.536" endtime="20201030 15:51:25.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.538" endtime="20201030 15:51:25.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.518" endtime="20201030 15:51:25.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.516" endtime="20201030 15:51:25.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.548" endtime="20201030 15:51:25.836"></status>
</kw>
<msg timestamp="20201030 15:51:25.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018877264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01887775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:25.546" endtime="20201030 15:51:25.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018877264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01887775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:25.840" endtime="20201030 15:51:25.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.849" endtime="20201030 15:51:25.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.543" endtime="20201030 15:51:25.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.541" endtime="20201030 15:51:25.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:25.855" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:25.852" endtime="20201030 15:51:25.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:25.859" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 15:51:25.856" endtime="20201030 15:51:25.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.864" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:25.863" endtime="20201030 15:51:25.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.867" level="INFO">VALUE: [4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:25.865" endtime="20201030 15:51:25.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.860" endtime="20201030 15:51:25.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:25.871" endtime="20201030 15:51:25.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.870" endtime="20201030 15:51:25.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.869" endtime="20201030 15:51:25.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.515" endtime="20201030 15:51:25.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.515" endtime="20201030 15:51:25.892"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.900" endtime="20201030 15:51:25.911"></status>
</kw>
<msg timestamp="20201030 15:51:25.911" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.899" endtime="20201030 15:51:25.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:25.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:25.912" endtime="20201030 15:51:25.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.915" endtime="20201030 15:51:25.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.896" endtime="20201030 15:51:25.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.894" endtime="20201030 15:51:25.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:25.927" endtime="20201030 15:51:26.215"></status>
</kw>
<msg timestamp="20201030 15:51:26.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018789181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:25.925" endtime="20201030 15:51:26.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018789181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:26.219" endtime="20201030 15:51:26.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.228" endtime="20201030 15:51:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.922" endtime="20201030 15:51:26.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.920" endtime="20201030 15:51:26.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.235" level="INFO">${RESULT} = [{'diff': 4.729999999973644e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:26.231" endtime="20201030 15:51:26.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.239" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:51:26.236" endtime="20201030 15:51:26.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.243" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:26.242" endtime="20201030 15:51:26.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.246" level="INFO">VALUE: [4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:26.244" endtime="20201030 15:51:26.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.240" endtime="20201030 15:51:26.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.251" endtime="20201030 15:51:26.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.250" endtime="20201030 15:51:26.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.248" endtime="20201030 15:51:26.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.893" endtime="20201030 15:51:26.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:25.892" endtime="20201030 15:51:26.272"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.281" endtime="20201030 15:51:26.292"></status>
</kw>
<msg timestamp="20201030 15:51:26.292" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.279" endtime="20201030 15:51:26.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.296" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.294" endtime="20201030 15:51:26.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.299" endtime="20201030 15:51:26.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.276" endtime="20201030 15:51:26.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.274" endtime="20201030 15:51:26.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.311" endtime="20201030 15:51:26.599"></status>
</kw>
<msg timestamp="20201030 15:51:26.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01952175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:26.309" endtime="20201030 15:51:26.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01952175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:26.603" endtime="20201030 15:51:26.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.612" endtime="20201030 15:51:26.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.305" endtime="20201030 15:51:26.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.303" endtime="20201030 15:51:26.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.618" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:26.615" endtime="20201030 15:51:26.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:26.624" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4....</msg>
<status status="PASS" starttime="20201030 15:51:26.619" endtime="20201030 15:51:26.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.628" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:26.627" endtime="20201030 15:51:26.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.630" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:26.629" endtime="20201030 15:51:26.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.624" endtime="20201030 15:51:26.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:26.635" endtime="20201030 15:51:26.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.634" endtime="20201030 15:51:26.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.632" endtime="20201030 15:51:26.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.273" endtime="20201030 15:51:26.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.272" endtime="20201030 15:51:26.656"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.664" endtime="20201030 15:51:26.675"></status>
</kw>
<msg timestamp="20201030 15:51:26.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.662" endtime="20201030 15:51:26.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.678" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:26.677" endtime="20201030 15:51:26.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.679" endtime="20201030 15:51:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.660" endtime="20201030 15:51:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.658" endtime="20201030 15:51:26.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.689" endtime="20201030 15:51:26.975"></status>
</kw>
<msg timestamp="20201030 15:51:26.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01885975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018860222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:26.687" endtime="20201030 15:51:26.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:26.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01885975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018860222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:26.979" endtime="20201030 15:51:26.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:26.988" endtime="20201030 15:51:26.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.684" endtime="20201030 15:51:26.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.683" endtime="20201030 15:51:26.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:26.996" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.870000000004038e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:51:26.992" endtime="20201030 15:51:26.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.000" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:26.997" endtime="20201030 15:51:27.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.004" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.003" endtime="20201030 15:51:27.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.007" level="INFO">VALUE: [4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:27.005" endtime="20201030 15:51:27.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.001" endtime="20201030 15:51:27.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.011" endtime="20201030 15:51:27.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.010" endtime="20201030 15:51:27.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.009" endtime="20201030 15:51:27.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.657" endtime="20201030 15:51:27.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:26.656" endtime="20201030 15:51:27.032"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.041" endtime="20201030 15:51:27.052"></status>
</kw>
<msg timestamp="20201030 15:51:27.052" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.039" endtime="20201030 15:51:27.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.055" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.054" endtime="20201030 15:51:27.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.056" endtime="20201030 15:51:27.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.036" endtime="20201030 15:51:27.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.035" endtime="20201030 15:51:27.060"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.066" endtime="20201030 15:51:27.354"></status>
</kw>
<msg timestamp="20201030 15:51:27.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.065" endtime="20201030 15:51:27.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.358" endtime="20201030 15:51:27.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.366" endtime="20201030 15:51:27.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.062" endtime="20201030 15:51:27.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.060" endtime="20201030 15:51:27.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.373" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:27.370" endtime="20201030 15:51:27.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.377" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 15:51:27.374" endtime="20201030 15:51:27.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.382" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.381" endtime="20201030 15:51:27.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.384" level="INFO">VALUE: [4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:27.383" endtime="20201030 15:51:27.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.378" endtime="20201030 15:51:27.386"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.390" endtime="20201030 15:51:27.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.388" endtime="20201030 15:51:27.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.387" endtime="20201030 15:51:27.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.033" endtime="20201030 15:51:27.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.033" endtime="20201030 15:51:27.410"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.419" endtime="20201030 15:51:27.430"></status>
</kw>
<msg timestamp="20201030 15:51:27.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.418" endtime="20201030 15:51:27.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.433" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.431" endtime="20201030 15:51:27.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.434" endtime="20201030 15:51:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.415" endtime="20201030 15:51:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.413" endtime="20201030 15:51:27.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.444" endtime="20201030 15:51:27.730"></status>
</kw>
<msg timestamp="20201030 15:51:27.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.442" endtime="20201030 15:51:27.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019377278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019377764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.734" endtime="20201030 15:51:27.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.743" endtime="20201030 15:51:27.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.439" endtime="20201030 15:51:27.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.437" endtime="20201030 15:51:27.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:27.749" level="INFO">${RESULT} = [{'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:27.746" endtime="20201030 15:51:27.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:27.755" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859...</msg>
<status status="PASS" starttime="20201030 15:51:27.750" endtime="20201030 15:51:27.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.759" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:27.758" endtime="20201030 15:51:27.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.762" level="INFO">VALUE: [4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:27.760" endtime="20201030 15:51:27.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.756" endtime="20201030 15:51:27.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:27.766" endtime="20201030 15:51:27.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.765" endtime="20201030 15:51:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.763" endtime="20201030 15:51:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.412" endtime="20201030 15:51:27.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.411" endtime="20201030 15:51:27.787"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.796" endtime="20201030 15:51:27.805"></status>
</kw>
<msg timestamp="20201030 15:51:27.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.794" endtime="20201030 15:51:27.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:27.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:27.807" endtime="20201030 15:51:27.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.810" endtime="20201030 15:51:27.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.791" endtime="20201030 15:51:27.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.789" endtime="20201030 15:51:27.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:27.819" endtime="20201030 15:51:28.107"></status>
</kw>
<msg timestamp="20201030 15:51:28.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019016917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:27.817" endtime="20201030 15:51:28.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019016917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019017389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.111" endtime="20201030 15:51:28.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.120" endtime="20201030 15:51:28.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.815" endtime="20201030 15:51:28.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.813" endtime="20201030 15:51:28.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.127" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.870000000004038e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:28.124" endtime="20201030 15:51:28.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.132" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 15:51:28.128" endtime="20201030 15:51:28.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.136" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.135" endtime="20201030 15:51:28.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.138" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:28.137" endtime="20201030 15:51:28.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.132" endtime="20201030 15:51:28.140"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.144" endtime="20201030 15:51:28.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.142" endtime="20201030 15:51:28.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.141" endtime="20201030 15:51:28.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.788" endtime="20201030 15:51:28.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:27.788" endtime="20201030 15:51:28.164"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.173" endtime="20201030 15:51:28.183"></status>
</kw>
<msg timestamp="20201030 15:51:28.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.171" endtime="20201030 15:51:28.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.186" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.185" endtime="20201030 15:51:28.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.188" endtime="20201030 15:51:28.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.168" endtime="20201030 15:51:28.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.167" endtime="20201030 15:51:28.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.198" endtime="20201030 15:51:28.484"></status>
</kw>
<msg timestamp="20201030 15:51:28.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:28.196" endtime="20201030 15:51:28.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019035514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:28.489" endtime="20201030 15:51:28.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.497" endtime="20201030 15:51:28.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.194" endtime="20201030 15:51:28.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.192" endtime="20201030 15:51:28.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.504" level="INFO">${RESULT} = [{'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}...</msg>
<status status="PASS" starttime="20201030 15:51:28.500" endtime="20201030 15:51:28.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.508" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:28.505" endtime="20201030 15:51:28.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.512" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.511" endtime="20201030 15:51:28.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.515" level="INFO">VALUE: [4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07]</msg>
<status status="PASS" starttime="20201030 15:51:28.514" endtime="20201030 15:51:28.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.509" endtime="20201030 15:51:28.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.521" endtime="20201030 15:51:28.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.519" endtime="20201030 15:51:28.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.518" endtime="20201030 15:51:28.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.165" endtime="20201030 15:51:28.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.165" endtime="20201030 15:51:28.542"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.550" endtime="20201030 15:51:28.561"></status>
</kw>
<msg timestamp="20201030 15:51:28.561" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.548" endtime="20201030 15:51:28.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.562" endtime="20201030 15:51:28.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.565" endtime="20201030 15:51:28.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.546" endtime="20201030 15:51:28.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.544" endtime="20201030 15:51:28.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.574" endtime="20201030 15:51:28.860"></status>
</kw>
<msg timestamp="20201030 15:51:28.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018809722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.573" endtime="20201030 15:51:28.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018809722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.865" endtime="20201030 15:51:28.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.873" endtime="20201030 15:51:28.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.570" endtime="20201030 15:51:28.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.568" endtime="20201030 15:51:28.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:28.880" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201030 15:51:28.876" endtime="20201030 15:51:28.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:28.885" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4...</msg>
<status status="PASS" starttime="20201030 15:51:28.881" endtime="20201030 15:51:28.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.889" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:28.888" endtime="20201030 15:51:28.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.892" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:51:28.890" endtime="20201030 15:51:28.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.886" endtime="20201030 15:51:28.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:28.901" endtime="20201030 15:51:28.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.900" endtime="20201030 15:51:28.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.898" endtime="20201030 15:51:28.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.543" endtime="20201030 15:51:28.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.542" endtime="20201030 15:51:28.922"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.930" endtime="20201030 15:51:28.941"></status>
</kw>
<msg timestamp="20201030 15:51:28.941" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.929" endtime="20201030 15:51:28.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:28.944" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:28.942" endtime="20201030 15:51:28.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.945" endtime="20201030 15:51:28.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.926" endtime="20201030 15:51:28.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.924" endtime="20201030 15:51:28.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:28.955" endtime="20201030 15:51:29.247"></status>
</kw>
<msg timestamp="20201030 15:51:29.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019084069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019084542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:28.953" endtime="20201030 15:51:29.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019084069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019084542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.251" endtime="20201030 15:51:29.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.259" endtime="20201030 15:51:29.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.950" endtime="20201030 15:51:29.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.948" endtime="20201030 15:51:29.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.266" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999974607e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:29.263" endtime="20201030 15:51:29.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.270" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.719...</msg>
<status status="PASS" starttime="20201030 15:51:29.267" endtime="20201030 15:51:29.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.275" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:29.274" endtime="20201030 15:51:29.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.277" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:29.276" endtime="20201030 15:51:29.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.271" endtime="20201030 15:51:29.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.282" endtime="20201030 15:51:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.281" endtime="20201030 15:51:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.279" endtime="20201030 15:51:29.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.923" endtime="20201030 15:51:29.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:28.923" endtime="20201030 15:51:29.303"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.311" endtime="20201030 15:51:29.322"></status>
</kw>
<msg timestamp="20201030 15:51:29.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.310" endtime="20201030 15:51:29.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.323" endtime="20201030 15:51:29.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.326" endtime="20201030 15:51:29.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.307" endtime="20201030 15:51:29.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.305" endtime="20201030 15:51:29.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.336" endtime="20201030 15:51:29.622"></status>
</kw>
<msg timestamp="20201030 15:51:29.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018696778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.334" endtime="20201030 15:51:29.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018696306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018696778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.627" endtime="20201030 15:51:29.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.635" endtime="20201030 15:51:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.332" endtime="20201030 15:51:29.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.330" endtime="20201030 15:51:29.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:29.642" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.7199999999789077e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:29.638" endtime="20201030 15:51:29.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:29.646" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.730...</msg>
<status status="PASS" starttime="20201030 15:51:29.643" endtime="20201030 15:51:29.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.650" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:29.649" endtime="20201030 15:51:29.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.653" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.869999999969343e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:29.651" endtime="20201030 15:51:29.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.647" endtime="20201030 15:51:29.655"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:29.659" endtime="20201030 15:51:29.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.657" endtime="20201030 15:51:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.656" endtime="20201030 15:51:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.304" endtime="20201030 15:51:29.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.303" endtime="20201030 15:51:29.679"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.688" endtime="20201030 15:51:29.698"></status>
</kw>
<msg timestamp="20201030 15:51:29.699" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.686" endtime="20201030 15:51:29.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:29.701" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:29.700" endtime="20201030 15:51:29.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.702" endtime="20201030 15:51:29.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.683" endtime="20201030 15:51:29.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.681" endtime="20201030 15:51:29.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:29.712" endtime="20201030 15:51:29.997"></status>
</kw>
<msg timestamp="20201030 15:51:30.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018759806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:29.710" endtime="20201030 15:51:30.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018759806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.002" endtime="20201030 15:51:30.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.010" endtime="20201030 15:51:30.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.707" endtime="20201030 15:51:30.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.706" endtime="20201030 15:51:30.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.017" level="INFO">${RESULT} = [{'diff': 4.870000000004038e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201030 15:51:30.014" endtime="20201030 15:51:30.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.022" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 15:51:30.018" endtime="20201030 15:51:30.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.026" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.025" endtime="20201030 15:51:30.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.029" level="INFO">VALUE: [4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.870000000004038e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:30.028" endtime="20201030 15:51:30.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.023" endtime="20201030 15:51:30.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.034" endtime="20201030 15:51:30.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.033" endtime="20201030 15:51:30.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.031" endtime="20201030 15:51:30.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.680" endtime="20201030 15:51:30.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:29.680" endtime="20201030 15:51:30.055"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.063" endtime="20201030 15:51:30.074"></status>
</kw>
<msg timestamp="20201030 15:51:30.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.061" endtime="20201030 15:51:30.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.076" endtime="20201030 15:51:30.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.078" endtime="20201030 15:51:30.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.059" endtime="20201030 15:51:30.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.057" endtime="20201030 15:51:30.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.087" endtime="20201030 15:51:30.373"></status>
</kw>
<msg timestamp="20201030 15:51:30.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018962986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.086" endtime="20201030 15:51:30.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018962986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018963458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.377" endtime="20201030 15:51:30.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.386" endtime="20201030 15:51:30.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.083" endtime="20201030 15:51:30.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.081" endtime="20201030 15:51:30.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.393" level="INFO">${RESULT} = [{'diff': 4.7199999999789077e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.870000000004038e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:30.390" endtime="20201030 15:51:30.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.398" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 15:51:30.394" endtime="20201030 15:51:30.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.402" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.401" endtime="20201030 15:51:30.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.405" level="INFO">VALUE: [4.7199999999789077e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.870000000004038e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.860000000009301e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:30.403" endtime="20201030 15:51:30.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.399" endtime="20201030 15:51:30.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.410" endtime="20201030 15:51:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.408" endtime="20201030 15:51:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.407" endtime="20201030 15:51:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.056" endtime="20201030 15:51:30.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.055" endtime="20201030 15:51:30.430"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.439" endtime="20201030 15:51:30.450"></status>
</kw>
<msg timestamp="20201030 15:51:30.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.437" endtime="20201030 15:51:30.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.451" endtime="20201030 15:51:30.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.454" endtime="20201030 15:51:30.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.434" endtime="20201030 15:51:30.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.433" endtime="20201030 15:51:30.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.464" endtime="20201030 15:51:30.755"></status>
</kw>
<msg timestamp="20201030 15:51:30.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018878556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.462" endtime="20201030 15:51:30.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018878083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018878556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.760" endtime="20201030 15:51:30.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.768" endtime="20201030 15:51:30.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.460" endtime="20201030 15:51:30.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.458" endtime="20201030 15:51:30.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:30.774" level="INFO">${RESULT} = [{'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07}, {'diff': 4.859999999974607e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:30.771" endtime="20201030 15:51:30.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:30.778" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.86...</msg>
<status status="PASS" starttime="20201030 15:51:30.775" endtime="20201030 15:51:30.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.783" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:30.781" endtime="20201030 15:51:30.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.785" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.870000000004038e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201030 15:51:30.784" endtime="20201030 15:51:30.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.779" endtime="20201030 15:51:30.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:30.791" endtime="20201030 15:51:30.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.789" endtime="20201030 15:51:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.788" endtime="20201030 15:51:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.431" endtime="20201030 15:51:30.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.431" endtime="20201030 15:51:30.811"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.819" endtime="20201030 15:51:30.830"></status>
</kw>
<msg timestamp="20201030 15:51:30.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.818" endtime="20201030 15:51:30.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:30.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:30.832" endtime="20201030 15:51:30.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.834" endtime="20201030 15:51:30.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.815" endtime="20201030 15:51:30.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.813" endtime="20201030 15:51:30.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:30.843" endtime="20201030 15:51:31.146"></status>
</kw>
<msg timestamp="20201030 15:51:31.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:30.842" endtime="20201030 15:51:31.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018365097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018365569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.151" endtime="20201030 15:51:31.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.159" endtime="20201030 15:51:31.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.839" endtime="20201030 15:51:31.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.837" endtime="20201030 15:51:31.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.165" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.729999999973644e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.7199999999789077e-07}, {'diff': 4.860000000009301e-07},...</msg>
<status status="PASS" starttime="20201030 15:51:31.162" endtime="20201030 15:51:31.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.170" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.73...</msg>
<status status="PASS" starttime="20201030 15:51:31.166" endtime="20201030 15:51:31.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.175" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:51:31.174" endtime="20201030 15:51:31.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.177" level="INFO">VALUE: [4.720000000013602e-07, 4.729999999973644e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.860000000009301e-07, 4.7199999999789077e-07, 4.729999999973644e-07, 4.7199999999789077e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.859999999974607e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999789077e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.860000000009301e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999974607e-07, 4.7300000000083386e-07, 4.7199999999789077e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.860000000009301e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201030 15:51:31.176" endtime="20201030 15:51:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.171" endtime="20201030 15:51:31.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.182" endtime="20201030 15:51:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.181" endtime="20201030 15:51:31.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.179" endtime="20201030 15:51:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.812" endtime="20201030 15:51:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:30.812" endtime="20201030 15:51:31.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:23.616" endtime="20201030 15:51:31.203"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:23.536" endtime="20201030 15:51:31.204" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.210" endtime="20201030 15:51:31.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.209" endtime="20201030 15:51:31.230"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.244" endtime="20201030 15:51:31.258"></status>
</kw>
<msg timestamp="20201030 15:51:31.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.242" endtime="20201030 15:51:31.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.259" endtime="20201030 15:51:31.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.265" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:31.262" endtime="20201030 15:51:31.265"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.239" endtime="20201030 15:51:31.266"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:31.237" endtime="20201030 15:51:31.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.236" endtime="20201030 15:51:31.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:31.270" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:31.269" endtime="20201030 15:51:31.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.267" endtime="20201030 15:51:31.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.235" endtime="20201030 15:51:31.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.234" endtime="20201030 15:51:31.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.272" endtime="20201030 15:51:31.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.233" endtime="20201030 15:51:31.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.231" endtime="20201030 15:51:31.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.208" endtime="20201030 15:51:31.275"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.283" endtime="20201030 15:51:31.296"></status>
</kw>
<msg timestamp="20201030 15:51:31.296" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.282" endtime="20201030 15:51:31.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.299" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.297" endtime="20201030 15:51:31.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.300" endtime="20201030 15:51:31.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.279" endtime="20201030 15:51:31.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.277" endtime="20201030 15:51:31.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.309" endtime="20201030 15:51:31.596"></status>
</kw>
<msg timestamp="20201030 15:51:31.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063940472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.308" endtime="20201030 15:51:31.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063940472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063942819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.600" endtime="20201030 15:51:31.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.609" endtime="20201030 15:51:31.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.305" endtime="20201030 15:51:31.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.303" endtime="20201030 15:51:31.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.615" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.332999999993257e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999992397e-06}, {'diff': 2.3610000000062747e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:31.612" endtime="20201030 15:51:31.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.620" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3200000000000998e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.346...</msg>
<status status="PASS" starttime="20201030 15:51:31.616" endtime="20201030 15:51:31.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.624" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:31.623" endtime="20201030 15:51:31.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.627" level="INFO">VALUE: [2.346999999999766e-06, 2.3200000000000998e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.29200000000096e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.3340000000066086e-06, 2.3339999999927308e-06, 2.3749999999989058e-06, 2.4169999999906766e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.360999999992397e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.3339999999927308e-06, 2.360999999992397e-06, 2.360999999992397e-06, 2.3889999999915368e-06, 2.3470000000136437e-06, 2.29200000000096e-06, 2.3610000000062747e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.360999999992397e-06, 2.3890000000054146e-06, 2.3339999999927308e-06]</msg>
<status status="PASS" starttime="20201030 15:51:31.626" endtime="20201030 15:51:31.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.621" endtime="20201030 15:51:31.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:31.631" endtime="20201030 15:51:31.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.630" endtime="20201030 15:51:31.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.629" endtime="20201030 15:51:31.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.276" endtime="20201030 15:51:31.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.276" endtime="20201030 15:51:31.652"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.660" endtime="20201030 15:51:31.672"></status>
</kw>
<msg timestamp="20201030 15:51:31.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.659" endtime="20201030 15:51:31.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:31.674" endtime="20201030 15:51:31.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.677" endtime="20201030 15:51:31.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.656" endtime="20201030 15:51:31.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.654" endtime="20201030 15:51:31.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.686" endtime="20201030 15:51:31.973"></status>
</kw>
<msg timestamp="20201030 15:51:31.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.684" endtime="20201030 15:51:31.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:31.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:31.977" endtime="20201030 15:51:31.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:31.985" endtime="20201030 15:51:31.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.682" endtime="20201030 15:51:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.680" endtime="20201030 15:51:31.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:31.992" level="INFO">${RESULT} = [{'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:31.989" endtime="20201030 15:51:31.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:31.996" level="INFO">${OVERHEAD} = {'diff': [2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.42...</msg>
<status status="PASS" starttime="20201030 15:51:31.993" endtime="20201030 15:51:31.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.000" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:31.999" endtime="20201030 15:51:32.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.003" level="INFO">VALUE: [2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.4299999999977118e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.3619999999988095e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3059999999970604e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.001" endtime="20201030 15:51:32.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.997" endtime="20201030 15:51:32.004"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.007" endtime="20201030 15:51:32.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.006" endtime="20201030 15:51:32.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.005" endtime="20201030 15:51:32.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.653" endtime="20201030 15:51:32.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.652" endtime="20201030 15:51:32.028"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.037" endtime="20201030 15:51:32.050"></status>
</kw>
<msg timestamp="20201030 15:51:32.051" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.035" endtime="20201030 15:51:32.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.056" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.055" endtime="20201030 15:51:32.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.058" endtime="20201030 15:51:32.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.032" endtime="20201030 15:51:32.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.030" endtime="20201030 15:51:32.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.072" endtime="20201030 15:51:32.359"></status>
</kw>
<msg timestamp="20201030 15:51:32.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.069" endtime="20201030 15:51:32.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021648722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021651069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.364" endtime="20201030 15:51:32.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.374" endtime="20201030 15:51:32.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.065" endtime="20201030 15:51:32.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.063" endtime="20201030 15:51:32.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.380" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.3059999999970604e-06}, {'diff': 2.3470000000032354e-06}, {'diff': 2.348000000002709e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.360999999999336e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:32.377" endtime="20201030 15:51:32.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.385" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.3059999999970604e-06, 2.3470000000032354e-06, 2.348000000002709e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3880000000024715e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:32.381" endtime="20201030 15:51:32.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.389" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:32.388" endtime="20201030 15:51:32.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.392" level="INFO">VALUE: [2.346999999999766e-06, 2.3059999999970604e-06, 2.3470000000032354e-06, 2.348000000002709e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3880000000024715e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.290999999998017e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.348000000002709e-06, 2.3749999999989058e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.290999999998017e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.348000000002709e-06, 2.360999999999336e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.4029999999980456e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.4299999999977118e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3479999999992396e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.390" endtime="20201030 15:51:32.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.386" endtime="20201030 15:51:32.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.400" endtime="20201030 15:51:32.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.398" endtime="20201030 15:51:32.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.397" endtime="20201030 15:51:32.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.029" endtime="20201030 15:51:32.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.028" endtime="20201030 15:51:32.420"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.429" endtime="20201030 15:51:32.441"></status>
</kw>
<msg timestamp="20201030 15:51:32.442" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.428" endtime="20201030 15:51:32.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.443" endtime="20201030 15:51:32.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.446" endtime="20201030 15:51:32.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.425" endtime="20201030 15:51:32.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.423" endtime="20201030 15:51:32.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.455" endtime="20201030 15:51:32.761"></status>
</kw>
<msg timestamp="20201030 15:51:32.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020763181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.453" endtime="20201030 15:51:32.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020763181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:32.766" endtime="20201030 15:51:32.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.774" endtime="20201030 15:51:32.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.451" endtime="20201030 15:51:32.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.449" endtime="20201030 15:51:32.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:32.781" level="INFO">${RESULT} = [{'diff': 2.3059999999970604e-06}, {'diff': 2.3889999999984757e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3749999999989058e-0...</msg>
<status status="PASS" starttime="20201030 15:51:32.777" endtime="20201030 15:51:32.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:32.786" level="INFO">${OVERHEAD} = {'diff': [2.3059999999970604e-06, 2.3889999999984757e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.360999999999336e-06, ...</msg>
<status status="PASS" starttime="20201030 15:51:32.782" endtime="20201030 15:51:32.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.790" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:32.789" endtime="20201030 15:51:32.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.793" level="INFO">VALUE: [2.3059999999970604e-06, 2.3889999999984757e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.389000000001945e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.387999999999002e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.375000000002375e-06, 2.30600000000053e-06, 2.4169999999976155e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.4029999999980456e-06, 2.348000000002709e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3200000000000998e-06, 2.3619999999988095e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.319000000000626e-06]</msg>
<status status="PASS" starttime="20201030 15:51:32.791" endtime="20201030 15:51:32.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.787" endtime="20201030 15:51:32.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:32.797" endtime="20201030 15:51:32.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.796" endtime="20201030 15:51:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.795" endtime="20201030 15:51:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.422" endtime="20201030 15:51:32.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.421" endtime="20201030 15:51:32.819"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.827" endtime="20201030 15:51:32.840"></status>
</kw>
<msg timestamp="20201030 15:51:32.840" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.825" endtime="20201030 15:51:32.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:32.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:32.841" endtime="20201030 15:51:32.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.844" endtime="20201030 15:51:32.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.822" endtime="20201030 15:51:32.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.821" endtime="20201030 15:51:32.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:32.853" endtime="20201030 15:51:33.141"></status>
</kw>
<msg timestamp="20201030 15:51:33.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:32.851" endtime="20201030 15:51:33.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020156625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:51:33.145" endtime="20201030 15:51:33.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.154" endtime="20201030 15:51:33.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.849" endtime="20201030 15:51:33.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.847" endtime="20201030 15:51:33.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.161" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.360999999999336e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:33.158" endtime="20201030 15:51:33.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.167" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.31...</msg>
<status status="PASS" starttime="20201030 15:51:33.163" endtime="20201030 15:51:33.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.171" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:33.170" endtime="20201030 15:51:33.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.174" level="INFO">VALUE: [2.3749999999989058e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.403000000001515e-06, 2.319000000000626e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3470000000032354e-06, 2.3200000000000998e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.375000000002375e-06, 2.3339999999996697e-06, 2.375000000002375e-06, 2.362000000002279e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.172" endtime="20201030 15:51:33.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.168" endtime="20201030 15:51:33.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.179" endtime="20201030 15:51:33.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.177" endtime="20201030 15:51:33.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.176" endtime="20201030 15:51:33.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.819" endtime="20201030 15:51:33.199"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:32.819" endtime="20201030 15:51:33.200"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.208" endtime="20201030 15:51:33.220"></status>
</kw>
<msg timestamp="20201030 15:51:33.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.206" endtime="20201030 15:51:33.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.223" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.221" endtime="20201030 15:51:33.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.224" endtime="20201030 15:51:33.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.204" endtime="20201030 15:51:33.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.202" endtime="20201030 15:51:33.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.234" endtime="20201030 15:51:33.521"></status>
</kw>
<msg timestamp="20201030 15:51:33.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.233" endtime="20201030 15:51:33.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.526" endtime="20201030 15:51:33.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.535" endtime="20201030 15:51:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.230" endtime="20201030 15:51:33.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.228" endtime="20201030 15:51:33.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.544" level="INFO">${RESULT} = [{'diff': 2.375000000002375e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:33.540" endtime="20201030 15:51:33.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.549" level="INFO">${OVERHEAD} = {'diff': [2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346...</msg>
<status status="PASS" starttime="20201030 15:51:33.545" endtime="20201030 15:51:33.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.555" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:33.554" endtime="20201030 15:51:33.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.558" level="INFO">VALUE: [2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.26400000000182e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.389000000001945e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.4020000000020414e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3470000000032354e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.4020000000020414e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3479999999992396e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.556" endtime="20201030 15:51:33.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.551" endtime="20201030 15:51:33.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.566" endtime="20201030 15:51:33.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.564" endtime="20201030 15:51:33.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.562" endtime="20201030 15:51:33.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.200" endtime="20201030 15:51:33.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.200" endtime="20201030 15:51:33.587"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.596" endtime="20201030 15:51:33.608"></status>
</kw>
<msg timestamp="20201030 15:51:33.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.594" endtime="20201030 15:51:33.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.611" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.609" endtime="20201030 15:51:33.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.612" endtime="20201030 15:51:33.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.591" endtime="20201030 15:51:33.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.589" endtime="20201030 15:51:33.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.621" endtime="20201030 15:51:33.911"></status>
</kw>
<msg timestamp="20201030 15:51:33.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.620" endtime="20201030 15:51:33.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:33.915" endtime="20201030 15:51:33.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.924" endtime="20201030 15:51:33.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.617" endtime="20201030 15:51:33.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.615" endtime="20201030 15:51:33.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:33.931" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3059999999970604e-06}, {'diff': 2.348000000002709e-06}, {'diff': 2.3049999999975868e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:33.927" endtime="20201030 15:51:33.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:33.936" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3059999999970604e-06, 2.348000000002709e-06, 2.3049999999975868e-06, 2.348000000002709e-06, 2.362000000002279e-06, 2.33...</msg>
<status status="PASS" starttime="20201030 15:51:33.932" endtime="20201030 15:51:33.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.940" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:33.939" endtime="20201030 15:51:33.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.943" level="INFO">VALUE: [2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3059999999970604e-06, 2.348000000002709e-06, 2.3049999999975868e-06, 2.348000000002709e-06, 2.362000000002279e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.403000000001515e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.3479999999992396e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:33.941" endtime="20201030 15:51:33.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.937" endtime="20201030 15:51:33.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:33.953" endtime="20201030 15:51:33.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.952" endtime="20201030 15:51:33.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.950" endtime="20201030 15:51:33.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.588" endtime="20201030 15:51:33.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.588" endtime="20201030 15:51:33.974"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.982" endtime="20201030 15:51:33.994"></status>
</kw>
<msg timestamp="20201030 15:51:33.995" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.981" endtime="20201030 15:51:33.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:33.997" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:33.996" endtime="20201030 15:51:33.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:33.998" endtime="20201030 15:51:34.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.978" endtime="20201030 15:51:34.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.976" endtime="20201030 15:51:34.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.008" endtime="20201030 15:51:34.293"></status>
</kw>
<msg timestamp="20201030 15:51:34.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.006" endtime="20201030 15:51:34.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019941778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019944125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.297" endtime="20201030 15:51:34.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.306" endtime="20201030 15:51:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.004" endtime="20201030 15:51:34.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.002" endtime="20201030 15:51:34.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.314" level="INFO">${RESULT} = [{'diff': 2.346999999999766e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3619999999988095e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.375000000002375e-06}, {'diff': 2.3339999999996697e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:34.310" endtime="20201030 15:51:34.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.318" level="INFO">${OVERHEAD} = {'diff': [2.346999999999766e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 15:51:34.315" endtime="20201030 15:51:34.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.322" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:34.321" endtime="20201030 15:51:34.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.325" level="INFO">VALUE: [2.346999999999766e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3329999999967266e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.323" endtime="20201030 15:51:34.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.319" endtime="20201030 15:51:34.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.330" endtime="20201030 15:51:34.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.328" endtime="20201030 15:51:34.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.327" endtime="20201030 15:51:34.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.975" endtime="20201030 15:51:34.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:33.975" endtime="20201030 15:51:34.351"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.359" endtime="20201030 15:51:34.371"></status>
</kw>
<msg timestamp="20201030 15:51:34.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.357" endtime="20201030 15:51:34.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.374" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.372" endtime="20201030 15:51:34.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.375" endtime="20201030 15:51:34.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.355" endtime="20201030 15:51:34.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.353" endtime="20201030 15:51:34.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.385" endtime="20201030 15:51:34.671"></status>
</kw>
<msg timestamp="20201030 15:51:34.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.384" endtime="20201030 15:51:34.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020104528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020106889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.675" endtime="20201030 15:51:34.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.684" endtime="20201030 15:51:34.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.381" endtime="20201030 15:51:34.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.379" endtime="20201030 15:51:34.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:34.690" level="INFO">${RESULT} = [{'diff': 2.360999999999336e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.333000000000196e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:34.687" endtime="20201030 15:51:34.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:34.695" level="INFO">${OVERHEAD} = {'diff': [2.360999999999336e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.32...</msg>
<status status="PASS" starttime="20201030 15:51:34.691" endtime="20201030 15:51:34.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.699" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:34.698" endtime="20201030 15:51:34.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.701" level="INFO">VALUE: [2.360999999999336e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.431000000000655e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.4160000000016113e-06, 2.4450000000002248e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3470000000032354e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3889999999984757e-06, 2.3329999999967266e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:34.700" endtime="20201030 15:51:34.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.696" endtime="20201030 15:51:34.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:34.707" endtime="20201030 15:51:34.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.706" endtime="20201030 15:51:34.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.705" endtime="20201030 15:51:34.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.351" endtime="20201030 15:51:34.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.351" endtime="20201030 15:51:34.728"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.736" endtime="20201030 15:51:34.749"></status>
</kw>
<msg timestamp="20201030 15:51:34.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.735" endtime="20201030 15:51:34.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:34.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:34.750" endtime="20201030 15:51:34.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.753" endtime="20201030 15:51:34.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.732" endtime="20201030 15:51:34.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.730" endtime="20201030 15:51:34.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:34.766" endtime="20201030 15:51:35.054"></status>
</kw>
<msg timestamp="20201030 15:51:35.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:34.764" endtime="20201030 15:51:35.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020257181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020259611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.058" endtime="20201030 15:51:35.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.067" endtime="20201030 15:51:35.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.758" endtime="20201030 15:51:35.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.756" endtime="20201030 15:51:35.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.075" level="INFO">${RESULT} = [{'diff': 2.4300000000011812e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.346999999999766e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:35.071" endtime="20201030 15:51:35.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.080" level="INFO">${OVERHEAD} = {'diff': [2.4300000000011812e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3059999999970604e-06, 2.34...</msg>
<status status="PASS" starttime="20201030 15:51:35.076" endtime="20201030 15:51:35.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.084" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.083" endtime="20201030 15:51:35.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.087" level="INFO">VALUE: [2.4300000000011812e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3059999999970604e-06, 2.348000000002709e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.290999999998017e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.4020000000020414e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.085" endtime="20201030 15:51:35.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.081" endtime="20201030 15:51:35.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.092" endtime="20201030 15:51:35.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.090" endtime="20201030 15:51:35.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.089" endtime="20201030 15:51:35.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.729" endtime="20201030 15:51:35.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:34.728" endtime="20201030 15:51:35.113"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.121" endtime="20201030 15:51:35.133"></status>
</kw>
<msg timestamp="20201030 15:51:35.134" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.119" endtime="20201030 15:51:35.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.135" endtime="20201030 15:51:35.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.137" endtime="20201030 15:51:35.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.117" endtime="20201030 15:51:35.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.115" endtime="20201030 15:51:35.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.147" endtime="20201030 15:51:35.431"></status>
</kw>
<msg timestamp="20201030 15:51:35.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.145" endtime="20201030 15:51:35.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019983806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.435" endtime="20201030 15:51:35.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.444" endtime="20201030 15:51:35.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.142" endtime="20201030 15:51:35.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.140" endtime="20201030 15:51:35.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.451" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3619999999988095e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3339999999996697e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:35.448" endtime="20201030 15:51:35.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.456" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.360999999999336e-06, 2.37...</msg>
<status status="PASS" starttime="20201030 15:51:35.452" endtime="20201030 15:51:35.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.460" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.459" endtime="20201030 15:51:35.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.463" level="INFO">VALUE: [2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.29200000000096e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.2639999999983507e-06, 2.346999999999766e-06, 2.4160000000016113e-06, 2.346999999999766e-06, 2.403000000001515e-06, 2.3329999999967266e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.334000000003139e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.3749999999989058e-06, 2.375000000002375e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3749999999989058e-06, 2.375000000002375e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.461" endtime="20201030 15:51:35.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.457" endtime="20201030 15:51:35.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.468" endtime="20201030 15:51:35.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.466" endtime="20201030 15:51:35.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.465" endtime="20201030 15:51:35.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.114" endtime="20201030 15:51:35.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.113" endtime="20201030 15:51:35.488"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.497" endtime="20201030 15:51:35.509"></status>
</kw>
<msg timestamp="20201030 15:51:35.510" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.495" endtime="20201030 15:51:35.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.512" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.511" endtime="20201030 15:51:35.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.513" endtime="20201030 15:51:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.492" endtime="20201030 15:51:35.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.491" endtime="20201030 15:51:35.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.523" endtime="20201030 15:51:35.810"></status>
</kw>
<msg timestamp="20201030 15:51:35.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.522" endtime="20201030 15:51:35.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020070347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020072708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.814" endtime="20201030 15:51:35.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.823" endtime="20201030 15:51:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.519" endtime="20201030 15:51:35.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.517" endtime="20201030 15:51:35.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:35.830" level="INFO">${RESULT} = [{'diff': 2.3610000000028053e-06}, {'diff': 2.4020000000020414e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.360999999999336e-0...</msg>
<status status="PASS" starttime="20201030 15:51:35.827" endtime="20201030 15:51:35.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:35.834" level="INFO">${OVERHEAD} = {'diff': [2.3610000000028053e-06, 2.4020000000020414e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:35.831" endtime="20201030 15:51:35.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.838" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:35.837" endtime="20201030 15:51:35.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.841" level="INFO">VALUE: [2.3610000000028053e-06, 2.4020000000020414e-06, 2.3610000000028053e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3470000000032354e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.389000000001945e-06, 2.3339999999996697e-06, 2.2639999999983507e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3199999999966303e-06, 2.3610000000028053e-06, 2.4439999999972817e-06, 2.346999999999766e-06, 2.401999999998572e-06, 2.346999999999766e-06, 2.305000000001056e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3619999999988095e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.2910000000014863e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06]</msg>
<status status="PASS" starttime="20201030 15:51:35.840" endtime="20201030 15:51:35.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.835" endtime="20201030 15:51:35.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:35.849" endtime="20201030 15:51:35.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.848" endtime="20201030 15:51:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.846" endtime="20201030 15:51:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.489" endtime="20201030 15:51:35.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.489" endtime="20201030 15:51:35.870"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.878" endtime="20201030 15:51:35.890"></status>
</kw>
<msg timestamp="20201030 15:51:35.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.876" endtime="20201030 15:51:35.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:35.893" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:35.892" endtime="20201030 15:51:35.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.894" endtime="20201030 15:51:35.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.874" endtime="20201030 15:51:35.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.872" endtime="20201030 15:51:35.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:35.904" endtime="20201030 15:51:36.188"></status>
</kw>
<msg timestamp="20201030 15:51:36.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:35.902" endtime="20201030 15:51:36.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019809333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.192" endtime="20201030 15:51:36.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.201" endtime="20201030 15:51:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.899" endtime="20201030 15:51:36.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.898" endtime="20201030 15:51:36.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.208" level="INFO">${RESULT} = [{'diff': 2.334000000003139e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.360999999999336e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:36.204" endtime="20201030 15:51:36.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.213" level="INFO">${OVERHEAD} = {'diff': [2.334000000003139e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:36.209" endtime="20201030 15:51:36.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.217" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:36.216" endtime="20201030 15:51:36.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.220" level="INFO">VALUE: [2.334000000003139e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.29200000000096e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.375000000002375e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.30600000000053e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.389000000001945e-06, 2.3339999999996697e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3619999999988095e-06, 2.3749999999989058e-06, 2.333000000000196e-06, 2.4160000000016113e-06, 2.346999999999766e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.218" endtime="20201030 15:51:36.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.214" endtime="20201030 15:51:36.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.225" endtime="20201030 15:51:36.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.223" endtime="20201030 15:51:36.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.222" endtime="20201030 15:51:36.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.871" endtime="20201030 15:51:36.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:35.870" endtime="20201030 15:51:36.245"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.254" endtime="20201030 15:51:36.265"></status>
</kw>
<msg timestamp="20201030 15:51:36.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.252" endtime="20201030 15:51:36.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.267" endtime="20201030 15:51:36.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.269" endtime="20201030 15:51:36.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.249" endtime="20201030 15:51:36.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.248" endtime="20201030 15:51:36.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.279" endtime="20201030 15:51:36.564"></status>
</kw>
<msg timestamp="20201030 15:51:36.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.277" endtime="20201030 15:51:36.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019831514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.569" endtime="20201030 15:51:36.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.577" endtime="20201030 15:51:36.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.275" endtime="20201030 15:51:36.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.273" endtime="20201030 15:51:36.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.585" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.389000000001945e-06}, {'diff': 2.3889999999984757e-06}, {'diff': 2.360999999999336e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:36.582" endtime="20201030 15:51:36.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.589" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.389000000001945e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.305000000001056e-06, 2.34...</msg>
<status status="PASS" starttime="20201030 15:51:36.586" endtime="20201030 15:51:36.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.594" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:36.592" endtime="20201030 15:51:36.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.596" level="INFO">VALUE: [2.333000000000196e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.389000000001945e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.305000000001056e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.2919999999974905e-06, 2.319000000000626e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.595" endtime="20201030 15:51:36.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.590" endtime="20201030 15:51:36.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.601" endtime="20201030 15:51:36.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.600" endtime="20201030 15:51:36.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.598" endtime="20201030 15:51:36.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.246" endtime="20201030 15:51:36.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.246" endtime="20201030 15:51:36.622"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.630" endtime="20201030 15:51:36.642"></status>
</kw>
<msg timestamp="20201030 15:51:36.643" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.628" endtime="20201030 15:51:36.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.645" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:36.644" endtime="20201030 15:51:36.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.646" endtime="20201030 15:51:36.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.626" endtime="20201030 15:51:36.650"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.624" endtime="20201030 15:51:36.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.657" endtime="20201030 15:51:36.941"></status>
</kw>
<msg timestamp="20201030 15:51:36.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.655" endtime="20201030 15:51:36.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019953681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019956042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:36.945" endtime="20201030 15:51:36.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:36.953" endtime="20201030 15:51:36.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.652" endtime="20201030 15:51:36.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.651" endtime="20201030 15:51:36.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:36.960" level="INFO">${RESULT} = [{'diff': 2.360999999999336e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.389000000001945e-06}, {'diff': 2.3619999999988095e-06}, {'diff': 2.346999999999766e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:36.957" endtime="20201030 15:51:36.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:36.964" level="INFO">${OVERHEAD} = {'diff': [2.360999999999336e-06, 2.3610000000028053e-06, 2.319000000000626e-06, 2.389000000001945e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3470000000032354e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:36.961" endtime="20201030 15:51:36.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.969" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:36.968" endtime="20201030 15:51:36.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:36.971" level="INFO">VALUE: [2.360999999999336e-06, 2.3610000000028053e-06, 2.319000000000626e-06, 2.389000000001945e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.3059999999970604e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.27800000000139e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.3610000000028053e-06, 2.290999999998017e-06, 2.3339999999996697e-06, 2.389000000001945e-06, 2.319000000000626e-06, 2.3610000000028053e-06, 2.375000000002375e-06, 2.3619999999988095e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06]</msg>
<status status="PASS" starttime="20201030 15:51:36.970" endtime="20201030 15:51:36.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.965" endtime="20201030 15:51:36.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:36.977" endtime="20201030 15:51:36.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.976" endtime="20201030 15:51:36.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.974" endtime="20201030 15:51:36.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.623" endtime="20201030 15:51:36.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.622" endtime="20201030 15:51:36.998"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.006" endtime="20201030 15:51:37.018"></status>
</kw>
<msg timestamp="20201030 15:51:37.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.005" endtime="20201030 15:51:37.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.020" endtime="20201030 15:51:37.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.022" endtime="20201030 15:51:37.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.002" endtime="20201030 15:51:37.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.000" endtime="20201030 15:51:37.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.032" endtime="20201030 15:51:37.315"></status>
</kw>
<msg timestamp="20201030 15:51:37.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.030" endtime="20201030 15:51:37.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019972028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019974361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.319" endtime="20201030 15:51:37.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.328" endtime="20201030 15:51:37.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.027" endtime="20201030 15:51:37.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.026" endtime="20201030 15:51:37.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.335" level="INFO">${RESULT} = [{'diff': 2.333000000000196e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.2779999999979206e-06}...</msg>
<status status="PASS" starttime="20201030 15:51:37.331" endtime="20201030 15:51:37.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.340" level="INFO">${OVERHEAD} = {'diff': [2.333000000000196e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.2779999999979206e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 15:51:37.336" endtime="20201030 15:51:37.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.344" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:37.343" endtime="20201030 15:51:37.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.347" level="INFO">VALUE: [2.333000000000196e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.2779999999979206e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.348000000002709e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.4029999999980456e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.2910000000014863e-06, 2.30600000000053e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.27800000000139e-06, 2.3189999999971567e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.389000000001945e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.345" endtime="20201030 15:51:37.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.341" endtime="20201030 15:51:37.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.352" endtime="20201030 15:51:37.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.350" endtime="20201030 15:51:37.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.349" endtime="20201030 15:51:37.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.999" endtime="20201030 15:51:37.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:36.998" endtime="20201030 15:51:37.373"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.381" endtime="20201030 15:51:37.393"></status>
</kw>
<msg timestamp="20201030 15:51:37.393" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.379" endtime="20201030 15:51:37.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.394" endtime="20201030 15:51:37.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.397" endtime="20201030 15:51:37.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.376" endtime="20201030 15:51:37.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.375" endtime="20201030 15:51:37.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.406" endtime="20201030 15:51:37.692"></status>
</kw>
<msg timestamp="20201030 15:51:37.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.405" endtime="20201030 15:51:37.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.696" endtime="20201030 15:51:37.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.705" endtime="20201030 15:51:37.707"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.402" endtime="20201030 15:51:37.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.400" endtime="20201030 15:51:37.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:37.712" level="INFO">${RESULT} = [{'diff': 2.403000000001515e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3610000000028053e-06}, {'diff': 2.3619999999988095e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.375000000002375e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:37.709" endtime="20201030 15:51:37.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:37.717" level="INFO">${OVERHEAD} = {'diff': [2.403000000001515e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 15:51:37.713" endtime="20201030 15:51:37.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.721" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:37.720" endtime="20201030 15:51:37.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.723" level="INFO">VALUE: [2.403000000001515e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3619999999988095e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3889999999984757e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.3339999999996697e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.334000000003139e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.348000000002709e-06, 2.346999999999766e-06, 2.30600000000053e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.333000000000196e-06, 2.389000000001945e-06, 2.3059999999970604e-06, 2.360999999999336e-06, 2.375000000002375e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.27800000000139e-06, 2.3339999999996697e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.3470000000032354e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:37.722" endtime="20201030 15:51:37.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.717" endtime="20201030 15:51:37.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:37.728" endtime="20201030 15:51:37.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.727" endtime="20201030 15:51:37.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.726" endtime="20201030 15:51:37.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.373" endtime="20201030 15:51:37.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.373" endtime="20201030 15:51:37.749"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.757" endtime="20201030 15:51:37.769"></status>
</kw>
<msg timestamp="20201030 15:51:37.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.756" endtime="20201030 15:51:37.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:37.772" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:37.771" endtime="20201030 15:51:37.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.773" endtime="20201030 15:51:37.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.753" endtime="20201030 15:51:37.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.751" endtime="20201030 15:51:37.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:37.784" endtime="20201030 15:51:38.070"></status>
</kw>
<msg timestamp="20201030 15:51:38.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:37.782" endtime="20201030 15:51:38.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020064958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.074" endtime="20201030 15:51:38.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.082" endtime="20201030 15:51:38.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.779" endtime="20201030 15:51:38.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.778" endtime="20201030 15:51:38.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.089" level="INFO">${RESULT} = [{'diff': 2.360999999999336e-06}, {'diff': 2.375000000002375e-06}, {'diff': 2.389000000001945e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3479999999992396e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:38.086" endtime="20201030 15:51:38.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.093" level="INFO">${OVERHEAD} = {'diff': [2.360999999999336e-06, 2.375000000002375e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.36...</msg>
<status status="PASS" starttime="20201030 15:51:38.090" endtime="20201030 15:51:38.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.098" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.097" endtime="20201030 15:51:38.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.100" level="INFO">VALUE: [2.360999999999336e-06, 2.375000000002375e-06, 2.389000000001945e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.346999999999766e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.333000000000196e-06, 2.3610000000028053e-06, 2.333000000000196e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.348000000002709e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.30600000000053e-06, 2.2919999999974905e-06, 2.3479999999992396e-06, 2.3889999999984757e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3619999999988095e-06, 2.348000000002709e-06, 2.2910000000014863e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.375000000002375e-06, 2.348000000002709e-06, 2.360999999999336e-06, 2.3329999999967266e-06, 2.346999999999766e-06, 2.403000000001515e-06, 2.348000000002709e-06, 2.3479999999992396e-06, 2.348000000002709e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3889999999984757e-06, 2.360999999999336e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.099" endtime="20201030 15:51:38.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.094" endtime="20201030 15:51:38.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.107" endtime="20201030 15:51:38.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.105" endtime="20201030 15:51:38.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.104" endtime="20201030 15:51:38.127"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.750" endtime="20201030 15:51:38.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:37.750" endtime="20201030 15:51:38.128"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.136" endtime="20201030 15:51:38.148"></status>
</kw>
<msg timestamp="20201030 15:51:38.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.134" endtime="20201030 15:51:38.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.151" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.149" endtime="20201030 15:51:38.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.152" endtime="20201030 15:51:38.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.132" endtime="20201030 15:51:38.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.130" endtime="20201030 15:51:38.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.161" endtime="20201030 15:51:38.450"></status>
</kw>
<msg timestamp="20201030 15:51:38.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.160" endtime="20201030 15:51:38.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020276722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.454" endtime="20201030 15:51:38.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.463" endtime="20201030 15:51:38.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.157" endtime="20201030 15:51:38.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.155" endtime="20201030 15:51:38.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.469" level="INFO">${RESULT} = [{'diff': 2.3339999999996697e-06}, {'diff': 2.360999999999336e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3339999999996697e-06}, {'diff': 2.333000000000196e-06}, {'diff': 2.3479999999992396e-06...</msg>
<status status="PASS" starttime="20201030 15:51:38.466" endtime="20201030 15:51:38.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.475" level="INFO">${OVERHEAD} = {'diff': [2.3339999999996697e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.305000000001056e-06, 2.346999999999766e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:38.470" endtime="20201030 15:51:38.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.479" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.478" endtime="20201030 15:51:38.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.481" level="INFO">VALUE: [2.3339999999996697e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.3479999999992396e-06, 2.305000000001056e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3339999999996697e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.403000000001515e-06, 2.360999999999336e-06, 2.348000000002709e-06, 2.2639999999983507e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.4029999999980456e-06, 2.417000000001085e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.334000000003139e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.362000000002279e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.333000000000196e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.362000000002279e-06, 2.360999999999336e-06, 2.3619999999988095e-06, 2.3479999999992396e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.480" endtime="20201030 15:51:38.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.475" endtime="20201030 15:51:38.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.487" endtime="20201030 15:51:38.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.485" endtime="20201030 15:51:38.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.484" endtime="20201030 15:51:38.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.129" endtime="20201030 15:51:38.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.128" endtime="20201030 15:51:38.507"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.516" endtime="20201030 15:51:38.528"></status>
</kw>
<msg timestamp="20201030 15:51:38.528" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.514" endtime="20201030 15:51:38.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.531" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.529" endtime="20201030 15:51:38.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.532" endtime="20201030 15:51:38.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.511" endtime="20201030 15:51:38.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.509" endtime="20201030 15:51:38.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.541" endtime="20201030 15:51:38.824"></status>
</kw>
<msg timestamp="20201030 15:51:38.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.540" endtime="20201030 15:51:38.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019981792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019993972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:38.828" endtime="20201030 15:51:38.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.836" endtime="20201030 15:51:38.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.537" endtime="20201030 15:51:38.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.535" endtime="20201030 15:51:38.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:38.844" level="INFO">${RESULT} = [{'diff': 1.2179999999997054e-05}, {'diff': 2.2919999999974905e-06}, {'diff': 2.3470000000032354e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.2919999999974905e-06...</msg>
<status status="PASS" starttime="20201030 15:51:38.841" endtime="20201030 15:51:38.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:38.848" level="INFO">${OVERHEAD} = {'diff': [1.2179999999997054e-05, 2.2919999999974905e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2919999999974905e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2....</msg>
<status status="PASS" starttime="20201030 15:51:38.845" endtime="20201030 15:51:38.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.853" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:51:38.852" endtime="20201030 15:51:38.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.855" level="INFO">VALUE: [1.2179999999997054e-05, 2.2919999999974905e-06, 2.3470000000032354e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.2919999999974905e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.319000000000626e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.3610000000028053e-06, 2.3610000000028053e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.346999999999766e-06, 2.360999999999336e-06, 2.346999999999766e-06, 2.3339999999996697e-06, 2.346999999999766e-06, 2.3619999999988095e-06, 2.362000000002279e-06, 2.3479999999992396e-06, 2.305000000001056e-06, 2.348000000002709e-06, 2.375000000002375e-06, 2.346999999999766e-06, 2.3610000000028053e-06, 2.360999999999336e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.360999999999336e-06, 2.360999999999336e-06, 2.3749999999989058e-06, 2.360999999999336e-06]</msg>
<status status="PASS" starttime="20201030 15:51:38.854" endtime="20201030 15:51:38.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.849" endtime="20201030 15:51:38.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.860" endtime="20201030 15:51:38.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.859" endtime="20201030 15:51:38.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.858" endtime="20201030 15:51:38.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.508" endtime="20201030 15:51:38.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.508" endtime="20201030 15:51:38.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:31.275" endtime="20201030 15:51:38.881"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:31.205" endtime="20201030 15:51:38.882" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:38.889" endtime="20201030 15:51:38.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.887" endtime="20201030 15:51:38.910"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.933" endtime="20201030 15:51:38.948"></status>
</kw>
<msg timestamp="20201030 15:51:38.949" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.931" endtime="20201030 15:51:38.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.950" endtime="20201030 15:51:38.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.954" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:38.952" endtime="20201030 15:51:38.955"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:38.927" endtime="20201030 15:51:38.955"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:38.924" endtime="20201030 15:51:38.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.921" endtime="20201030 15:51:38.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:38.960" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:38.959" endtime="20201030 15:51:38.960"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.957" endtime="20201030 15:51:38.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.920" endtime="20201030 15:51:38.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.917" endtime="20201030 15:51:38.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.962" endtime="20201030 15:51:38.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.915" endtime="20201030 15:51:38.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.913" endtime="20201030 15:51:38.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.886" endtime="20201030 15:51:38.965"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:38.973" endtime="20201030 15:51:38.993"></status>
</kw>
<msg timestamp="20201030 15:51:38.994" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.972" endtime="20201030 15:51:38.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:38.996" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:38.995" endtime="20201030 15:51:39.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.003" endtime="20201030 15:51:39.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.969" endtime="20201030 15:51:39.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.967" endtime="20201030 15:51:39.005"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.008" endtime="20201030 15:51:39.009"></status>
</kw>
<msg timestamp="20201030 15:51:39.010" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:39.006" endtime="20201030 15:51:39.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.014" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:39.013" endtime="20201030 15:51:39.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.016" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:39.015" endtime="20201030 15:51:39.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.011" endtime="20201030 15:51:39.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.024" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:39.020" endtime="20201030 15:51:39.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.027" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:39.026" endtime="20201030 15:51:39.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.018" endtime="20201030 15:51:39.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.034" endtime="20201030 15:51:39.321"></status>
</kw>
<msg timestamp="20201030 15:51:39.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077098556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.033" endtime="20201030 15:51:39.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.077091167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.077098556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.326" endtime="20201030 15:51:39.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.334" endtime="20201030 15:51:39.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.030" endtime="20201030 15:51:39.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.028" endtime="20201030 15:51:39.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.341" level="INFO">${RESULT} = [{'diff': 7.388999999996537e-06}, {'diff': 7.555000000006307e-06}, {'diff': 7.569999999998411e-06}, {'diff': 7.5419999999992715e-06}, {'diff': 7.637999999990375e-06}, {'diff': 7.5830000000054465e-06},...</msg>
<status status="PASS" starttime="20201030 15:51:39.337" endtime="20201030 15:51:39.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.345" level="INFO">${OVERHEAD} = {'diff': [7.388999999996537e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.637999999990375e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7....</msg>
<status status="PASS" starttime="20201030 15:51:39.342" endtime="20201030 15:51:39.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.350" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:39.349" endtime="20201030 15:51:39.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.352" level="INFO">VALUE: [7.388999999996537e-06, 7.555000000006307e-06, 7.569999999998411e-06, 7.5419999999992715e-06, 7.637999999990375e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.5969999999980775e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.58400000000492e-06, 7.5969999999980775e-06, 7.597999999997551e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.652999999996357e-06, 7.583999999991042e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.583999999991042e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.583999999991042e-06, 7.6109999999907085e-06, 7.582999999991569e-06, 7.583999999991042e-06, 7.5969999999980775e-06, 7.6109999999907085e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.652999999996357e-06, 7.582999999991569e-06, 7.527000000007167e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.58400000000492e-06, 7.582999999991569e-06, 7.5280000000066405e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.5559999999919025e-06, 7.58400000000492e-06, 7.597000000011955e-06, 7.5830000000054465e-06]</msg>
<status status="PASS" starttime="20201030 15:51:39.351" endtime="20201030 15:51:39.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.346" endtime="20201030 15:51:39.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.358" endtime="20201030 15:51:39.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.357" endtime="20201030 15:51:39.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.356" endtime="20201030 15:51:39.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:38.965" endtime="20201030 15:51:39.379"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:38.883" endtime="20201030 15:51:39.379" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.386" endtime="20201030 15:51:39.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.385" endtime="20201030 15:51:39.406"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.420" endtime="20201030 15:51:39.434"></status>
</kw>
<msg timestamp="20201030 15:51:39.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.418" endtime="20201030 15:51:39.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.437" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.436" endtime="20201030 15:51:39.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.440" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:39.438" endtime="20201030 15:51:39.441"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.416" endtime="20201030 15:51:39.441"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:39.413" endtime="20201030 15:51:39.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.412" endtime="20201030 15:51:39.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:39.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:39.445" endtime="20201030 15:51:39.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.443" endtime="20201030 15:51:39.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.411" endtime="20201030 15:51:39.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.410" endtime="20201030 15:51:39.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.448" endtime="20201030 15:51:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.409" endtime="20201030 15:51:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.407" endtime="20201030 15:51:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.384" endtime="20201030 15:51:39.451"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.461" endtime="20201030 15:51:39.567"></status>
</kw>
<msg timestamp="20201030 15:51:39.567" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.459" endtime="20201030 15:51:39.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.570" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:39.569" endtime="20201030 15:51:39.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.573" endtime="20201030 15:51:39.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.455" endtime="20201030 15:51:39.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.453" endtime="20201030 15:51:39.580"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.583" endtime="20201030 15:51:39.585"></status>
</kw>
<msg timestamp="20201030 15:51:39.586" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:39.581" endtime="20201030 15:51:39.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.593" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:39.592" endtime="20201030 15:51:39.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.595" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:39.594" endtime="20201030 15:51:39.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.587" endtime="20201030 15:51:39.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.600" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:39.599" endtime="20201030 15:51:39.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.602" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:39.601" endtime="20201030 15:51:39.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.597" endtime="20201030 15:51:39.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.610" endtime="20201030 15:51:39.912"></status>
</kw>
<msg timestamp="20201030 15:51:39.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068567194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.608" endtime="20201030 15:51:39.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068567194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068626708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:39.916" endtime="20201030 15:51:39.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:39.924" endtime="20201030 15:51:39.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.606" endtime="20201030 15:51:39.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.604" endtime="20201030 15:51:39.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:39.931" level="INFO">${RESULT} = [{'diff': 5.9513999999996625e-05}, {'diff': 5.940299999999954e-05}, {'diff': 5.9291999999988576e-05}, {'diff': 5.92909999999891e-05}, {'diff': 5.931900000000212e-05}, {'diff': 5.9277999999995945e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:39.928" endtime="20201030 15:51:39.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:39.936" level="INFO">${OVERHEAD} = {'diff': [5.9513999999996625e-05, 5.940299999999954e-05, 5.9291999999988576e-05, 5.92909999999891e-05, 5.931900000000212e-05, 5.9277999999995945e-05, 5.930600000000896e-05, 5.9320000000001594e-05, 5.9...</msg>
<status status="PASS" starttime="20201030 15:51:39.932" endtime="20201030 15:51:39.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.940" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:39.939" endtime="20201030 15:51:39.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.943" level="INFO">VALUE: [5.9513999999996625e-05, 5.940299999999954e-05, 5.9291999999988576e-05, 5.92909999999891e-05, 5.931900000000212e-05, 5.9277999999995945e-05, 5.930600000000896e-05, 5.9320000000001594e-05, 5.930600000000896e-05, 5.931900000000212e-05, 5.931899999998824e-05, 5.9305999999995085e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.930500000000949e-05, 5.936099999999389e-05, 5.931900000000212e-05, 5.933300000000863e-05, 5.9320000000001594e-05, 5.9291999999988576e-05, 5.931900000000212e-05, 5.9277999999995945e-05, 5.930600000000896e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.931899999998824e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.933300000000863e-05, 5.9333999999994225e-05, 5.9249999999996805e-05, 5.9320000000001594e-05, 5.9348000000000734e-05, 5.933299999999475e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.92909999999891e-05, 5.933299999999475e-05, 5.9264000000003314e-05, 5.930500000000949e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.926399999997556e-05, 5.933299999999475e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.931900000000212e-05, 5.9318999999974364e-05]</msg>
<status status="PASS" starttime="20201030 15:51:39.941" endtime="20201030 15:51:39.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.937" endtime="20201030 15:51:39.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.947" endtime="20201030 15:51:39.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.946" endtime="20201030 15:51:39.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.945" endtime="20201030 15:51:39.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.451" endtime="20201030 15:51:39.968"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:39.381" endtime="20201030 15:51:39.968" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:39.975" endtime="20201030 15:51:39.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.974" endtime="20201030 15:51:39.995"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.008" endtime="20201030 15:51:40.021"></status>
</kw>
<msg timestamp="20201030 15:51:40.022" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.006" endtime="20201030 15:51:40.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.024" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.023" endtime="20201030 15:51:40.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.028" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:40.025" endtime="20201030 15:51:40.028"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.004" endtime="20201030 15:51:40.029"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.002" endtime="20201030 15:51:40.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.000" endtime="20201030 15:51:40.030"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:40.033" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:40.033" endtime="20201030 15:51:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.031" endtime="20201030 15:51:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.999" endtime="20201030 15:51:40.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.999" endtime="20201030 15:51:40.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.035" endtime="20201030 15:51:40.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.998" endtime="20201030 15:51:40.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.996" endtime="20201030 15:51:40.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.972" endtime="20201030 15:51:40.038"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.046" endtime="20201030 15:51:40.381"></status>
</kw>
<msg timestamp="20201030 15:51:40.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.045" endtime="20201030 15:51:40.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.388" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.385" endtime="20201030 15:51:40.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.390" endtime="20201030 15:51:40.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.042" endtime="20201030 15:51:40.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.040" endtime="20201030 15:51:40.396"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.400" endtime="20201030 15:51:40.403"></status>
</kw>
<msg timestamp="20201030 15:51:40.404" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:40.398" endtime="20201030 15:51:40.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.413" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:40.410" endtime="20201030 15:51:40.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.417" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:40.415" endtime="20201030 15:51:40.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.406" endtime="20201030 15:51:40.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.426" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:40.424" endtime="20201030 15:51:40.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.431" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:40.429" endtime="20201030 15:51:40.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.420" endtime="20201030 15:51:40.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.446" endtime="20201030 15:51:40.741"></status>
</kw>
<msg timestamp="20201030 15:51:40.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068711056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068824764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.443" endtime="20201030 15:51:40.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068711056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068824764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.745" endtime="20201030 15:51:40.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.753" endtime="20201030 15:51:40.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.437" endtime="20201030 15:51:40.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.434" endtime="20201030 15:51:40.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:40.760" level="INFO">${RESULT} = [{'diff': 0.00011370799999999015}, {'diff': 0.00011216699999999635}, {'diff': 0.00011215300000000372}, {'diff': 0.00011215300000000372}, {'diff': 0.00011216699999999635}, {'diff': 0.000112138999999997...</msg>
<status status="PASS" starttime="20201030 15:51:40.757" endtime="20201030 15:51:40.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:40.764" level="INFO">${OVERHEAD} = {'diff': [0.00011370799999999015, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011213899999999721, 0.00011215200000000425, 0.00011217999999998951...</msg>
<status status="PASS" starttime="20201030 15:51:40.761" endtime="20201030 15:51:40.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.768" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:40.767" endtime="20201030 15:51:40.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.771" level="INFO">VALUE: [0.00011370799999999015, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011213899999999721, 0.00011215200000000425, 0.00011217999999998951, 0.00011218100000000286, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011215299999997597, 0.00011215300000000372, 0.00011216599999999688, 0.00011213899999998334, 0.00011218100000001674, 0.00011215300000000372, 0.00011215299999997597, 0.00011216700000002411, 0.00011215300000000372, 0.00011216699999999635, 0.00011209699999997769, 0.00011216600000002463, 0.00011219499999998161, 0.00011220800000000253, 0.00011215300000000372, 0.00011216599999999688, 0.00011213899999998334, 0.00011216599999996912, 0.00011215300000000372, 0.00011216599999996912, 0.00011213900000001109, 0.00011216699999999635, 0.00011216699999999635, 0.00011216699999999635, 0.00011213900000001109, 0.00011213900000001109, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011218000000001727, 0.00011216699999999635, 0.0001121810000000445, 0.00011215300000000372, 0.00011218000000001727, 0.00011213799999998386, 0.00011216699999999635, 0.000112152000000032, 0.00011216599999996912]</msg>
<status status="PASS" starttime="20201030 15:51:40.769" endtime="20201030 15:51:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.765" endtime="20201030 15:51:40.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.776" endtime="20201030 15:51:40.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.774" endtime="20201030 15:51:40.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.773" endtime="20201030 15:51:40.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.038" endtime="20201030 15:51:40.796"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:39.970" endtime="20201030 15:51:40.797" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:40.804" endtime="20201030 15:51:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.802" endtime="20201030 15:51:40.823"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.841" endtime="20201030 15:51:40.856"></status>
</kw>
<msg timestamp="20201030 15:51:40.856" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.839" endtime="20201030 15:51:40.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.858" endtime="20201030 15:51:40.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.864" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:40.861" endtime="20201030 15:51:40.865"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.835" endtime="20201030 15:51:40.865"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:40.832" endtime="20201030 15:51:40.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.830" endtime="20201030 15:51:40.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:40.871" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:40.870" endtime="20201030 15:51:40.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.868" endtime="20201030 15:51:40.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.828" endtime="20201030 15:51:40.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.827" endtime="20201030 15:51:40.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.872" endtime="20201030 15:51:40.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.826" endtime="20201030 15:51:40.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.824" endtime="20201030 15:51:40.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.801" endtime="20201030 15:51:40.875"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.884" endtime="20201030 15:51:40.904"></status>
</kw>
<msg timestamp="20201030 15:51:40.905" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.882" endtime="20201030 15:51:40.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.907" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:40.906" endtime="20201030 15:51:40.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.909" endtime="20201030 15:51:40.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.879" endtime="20201030 15:51:40.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.877" endtime="20201030 15:51:40.911"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.913" endtime="20201030 15:51:40.915"></status>
</kw>
<msg timestamp="20201030 15:51:40.915" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:40.912" endtime="20201030 15:51:40.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.919" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:40.918" endtime="20201030 15:51:40.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.921" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:40.920" endtime="20201030 15:51:40.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.916" endtime="20201030 15:51:40.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.927" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:40.926" endtime="20201030 15:51:40.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:40.929" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:40.928" endtime="20201030 15:51:40.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.923" endtime="20201030 15:51:40.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:40.936" endtime="20201030 15:51:41.223"></status>
</kw>
<msg timestamp="20201030 15:51:41.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072792125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072794458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:40.935" endtime="20201030 15:51:41.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072792125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072794458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.227" endtime="20201030 15:51:41.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.235" endtime="20201030 15:51:41.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.932" endtime="20201030 15:51:41.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.931" endtime="20201030 15:51:41.238"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.242" level="INFO">${RESULT} = [{'diff': 2.333000000007135e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.333000000007135e-06}, {'diff': 2.3339999999927308e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.305000000007995e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:51:41.239" endtime="20201030 15:51:41.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.246" level="INFO">${OVERHEAD} = {'diff': [2.333000000007135e-06, 2.319000000000626e-06, 2.333000000007135e-06, 2.3339999999927308e-06, 2.346999999999766e-06, 2.305000000007995e-06, 2.305999999993591e-06, 2.277999999994451e-06, 2.319...</msg>
<status status="PASS" starttime="20201030 15:51:41.243" endtime="20201030 15:51:41.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.252" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:51:41.250" endtime="20201030 15:51:41.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.255" level="INFO">VALUE: [2.333000000007135e-06, 2.319000000000626e-06, 2.333000000007135e-06, 2.3339999999927308e-06, 2.346999999999766e-06, 2.305000000007995e-06, 2.305999999993591e-06, 2.277999999994451e-06, 2.319000000000626e-06, 2.332999999993257e-06, 2.360999999992397e-06, 2.333000000007135e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.3479999999992396e-06, 2.3200000000000998e-06, 2.26400000000182e-06, 2.332999999993257e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.29200000000096e-06, 2.305999999993591e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3060000000074687e-06, 2.319000000000626e-06, 2.278000000008329e-06, 2.305000000007995e-06, 2.333000000007135e-06, 2.3200000000000998e-06, 2.2910000000014863e-06, 2.3049999999941173e-06, 2.3339999999927308e-06, 2.3060000000074687e-06, 2.333000000007135e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.332999999993257e-06, 2.3060000000074687e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.319000000000626e-06, 2.3339999999927308e-06]</msg>
<status status="PASS" starttime="20201030 15:51:41.253" endtime="20201030 15:51:41.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.247" endtime="20201030 15:51:41.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.260" endtime="20201030 15:51:41.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.258" endtime="20201030 15:51:41.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.257" endtime="20201030 15:51:41.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:40.876" endtime="20201030 15:51:41.280"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:40.798" endtime="20201030 15:51:41.281" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.288" endtime="20201030 15:51:41.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.287" endtime="20201030 15:51:41.308"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.322" endtime="20201030 15:51:41.336"></status>
</kw>
<msg timestamp="20201030 15:51:41.336" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.320" endtime="20201030 15:51:41.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.337" endtime="20201030 15:51:41.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:41.340" endtime="20201030 15:51:41.342"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.317" endtime="20201030 15:51:41.343"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.315" endtime="20201030 15:51:41.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.314" endtime="20201030 15:51:41.344"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:41.347" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:41.347" endtime="20201030 15:51:41.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.345" endtime="20201030 15:51:41.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.313" endtime="20201030 15:51:41.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.312" endtime="20201030 15:51:41.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.349" endtime="20201030 15:51:41.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.310" endtime="20201030 15:51:41.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.309" endtime="20201030 15:51:41.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.285" endtime="20201030 15:51:41.352"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.362" endtime="20201030 15:51:41.468"></status>
</kw>
<msg timestamp="20201030 15:51:41.468" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.360" endtime="20201030 15:51:41.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.471" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.470" endtime="20201030 15:51:41.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.473" endtime="20201030 15:51:41.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.357" endtime="20201030 15:51:41.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.354" endtime="20201030 15:51:41.479"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.482" endtime="20201030 15:51:41.484"></status>
</kw>
<msg timestamp="20201030 15:51:41.485" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:41.480" endtime="20201030 15:51:41.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.495" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:41.492" endtime="20201030 15:51:41.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.500" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:41.498" endtime="20201030 15:51:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.488" endtime="20201030 15:51:41.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.506" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:41.505" endtime="20201030 15:51:41.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.508" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:41.507" endtime="20201030 15:51:41.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.502" endtime="20201030 15:51:41.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.515" endtime="20201030 15:51:41.809"></status>
</kw>
<msg timestamp="20201030 15:51:41.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068640847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068659486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.514" endtime="20201030 15:51:41.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068640847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068659486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:41.813" endtime="20201030 15:51:41.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.821" endtime="20201030 15:51:41.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.511" endtime="20201030 15:51:41.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.509" endtime="20201030 15:51:41.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:41.828" level="INFO">${RESULT} = [{'diff': 1.863900000000085e-05}, {'diff': 1.8653000000007358e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.863900000000085e-05}, {'diff': 1.8555999999989026e-05}, {'diff': 1.863900000000085e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:41.825" endtime="20201030 15:51:41.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:41.834" level="INFO">${OVERHEAD} = {'diff': [1.863900000000085e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8555999999989026e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862500000000822e-05, 1.86...</msg>
<status status="PASS" starttime="20201030 15:51:41.829" endtime="20201030 15:51:41.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.838" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:51:41.837" endtime="20201030 15:51:41.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.841" level="INFO">VALUE: [1.863900000000085e-05, 1.8653000000007358e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8555999999989026e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.862500000000822e-05, 1.8638000000001376e-05, 1.866699999999999e-05, 1.861100000000171e-05, 1.856899999999606e-05, 1.8693999999999655e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.865299999999348e-05, 1.8652000000007884e-05, 1.863900000000085e-05, 1.8597999999994674e-05, 1.8652000000007884e-05, 1.866699999999999e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.8651999999994007e-05, 1.865299999999348e-05, 1.865299999999348e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.863900000000085e-05, 1.862500000000822e-05, 1.865299999999348e-05, 1.8651999999994007e-05, 1.863899999998697e-05, 1.863899999998697e-05, 1.8653000000007358e-05, 1.861100000000171e-05, 1.8639000000014727e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.8639000000014727e-05, 1.8653000000007358e-05, 1.8652999999979603e-05, 1.865199999998013e-05, 1.8639000000014727e-05, 1.866699999999999e-05, 1.8681000000020376e-05, 1.8639000000014727e-05, 1.863899999998697e-05, 1.8653000000007358e-05, 1.862499999999434e-05]</msg>
<status status="PASS" starttime="20201030 15:51:41.839" endtime="20201030 15:51:41.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.834" endtime="20201030 15:51:41.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.846" endtime="20201030 15:51:41.865"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.844" endtime="20201030 15:51:41.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.843" endtime="20201030 15:51:41.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.353" endtime="20201030 15:51:41.867"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:41.283" endtime="20201030 15:51:41.867" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:41.874" endtime="20201030 15:51:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.873" endtime="20201030 15:51:41.894"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.908" endtime="20201030 15:51:41.922"></status>
</kw>
<msg timestamp="20201030 15:51:41.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.906" endtime="20201030 15:51:41.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.924" endtime="20201030 15:51:41.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:41.929" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:41.926" endtime="20201030 15:51:41.930"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.904" endtime="20201030 15:51:41.930"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:41.901" endtime="20201030 15:51:41.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.900" endtime="20201030 15:51:41.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:41.935" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:41.934" endtime="20201030 15:51:41.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.932" endtime="20201030 15:51:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.899" endtime="20201030 15:51:41.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.898" endtime="20201030 15:51:41.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.937" endtime="20201030 15:51:41.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.897" endtime="20201030 15:51:41.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.895" endtime="20201030 15:51:41.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.871" endtime="20201030 15:51:41.939"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:41.948" endtime="20201030 15:51:42.284"></status>
</kw>
<msg timestamp="20201030 15:51:42.285" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:41.947" endtime="20201030 15:51:42.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.287" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.286" endtime="20201030 15:51:42.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.289" endtime="20201030 15:51:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.944" endtime="20201030 15:51:42.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.942" endtime="20201030 15:51:42.292"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.294" endtime="20201030 15:51:42.296"></status>
</kw>
<msg timestamp="20201030 15:51:42.296" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:51:42.293" endtime="20201030 15:51:42.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.301" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:51:42.299" endtime="20201030 15:51:42.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.303" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:51:42.302" endtime="20201030 15:51:42.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.297" endtime="20201030 15:51:42.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.308" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:51:42.307" endtime="20201030 15:51:42.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.310" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:51:42.309" endtime="20201030 15:51:42.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.304" endtime="20201030 15:51:42.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.318" endtime="20201030 15:51:42.622"></status>
</kw>
<msg timestamp="20201030 15:51:42.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072836458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072871778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.316" endtime="20201030 15:51:42.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072836458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072871778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:42.631" endtime="20201030 15:51:42.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.649" endtime="20201030 15:51:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.313" endtime="20201030 15:51:42.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.311" endtime="20201030 15:51:42.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:42.663" level="INFO">${RESULT} = [{'diff': 3.531999999999147e-05}, {'diff': 3.5388999999996784e-05}, {'diff': 3.531999999999147e-05}, {'diff': 3.5304999999999365e-05}, {'diff': 3.533399999999798e-05}, {'diff': 3.5319000000005873e-05}...</msg>
<status status="PASS" starttime="20201030 15:51:42.656" endtime="20201030 15:51:42.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:51:42.672" level="INFO">${OVERHEAD} = {'diff': [3.531999999999147e-05, 3.5388999999996784e-05, 3.531999999999147e-05, 3.5304999999999365e-05, 3.533399999999798e-05, 3.5319000000005873e-05, 3.534800000000449e-05, 3.5319000000005873e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:51:42.665" endtime="20201030 15:51:42.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.681" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:51:42.679" endtime="20201030 15:51:42.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.687" level="INFO">VALUE: [3.531999999999147e-05, 3.5388999999996784e-05, 3.531999999999147e-05, 3.5304999999999365e-05, 3.533399999999798e-05, 3.5319000000005873e-05, 3.534800000000449e-05, 3.5319000000005873e-05, 3.533399999999798e-05, 3.5319000000005873e-05, 3.5332999999998504e-05, 3.5319000000005873e-05, 3.5319000000005873e-05, 3.531999999997759e-05, 3.5319000000005873e-05, 3.533399999999798e-05, 3.5332999999998504e-05, 3.5332999999998504e-05, 3.532000000000535e-05, 3.5346999999991136e-05, 3.5332999999998504e-05, 3.5292000000020085e-05, 3.5306000000012716e-05, 3.5332999999998504e-05, 3.532000000000535e-05, 3.531999999997759e-05, 3.530599999998496e-05, 3.5319000000005873e-05, 3.5306000000012716e-05, 3.530499999998549e-05, 3.533299999997075e-05, 3.5306000000012716e-05, 3.530499999998549e-05, 3.531899999997812e-05, 3.532000000000535e-05, 3.532000000000535e-05, 3.5290999999992856e-05, 3.532000000000535e-05, 3.5305000000041e-05, 3.532000000000535e-05, 3.531900000003363e-05, 3.531899999997812e-05, 3.5290999999992856e-05, 3.5306000000012716e-05, 3.531899999997812e-05, 3.5290999999992856e-05, 3.531899999997812e-05, 3.5292000000020085e-05, 3.527799999997194e-05, 3.5306000000012716e-05]</msg>
<status status="PASS" starttime="20201030 15:51:42.684" endtime="20201030 15:51:42.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.674" endtime="20201030 15:51:42.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.696" endtime="20201030 15:51:42.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.694" endtime="20201030 15:51:42.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.691" endtime="20201030 15:51:42.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:41.940" endtime="20201030 15:51:42.717"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:41.869" endtime="20201030 15:51:42.717" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:42.728" endtime="20201030 15:51:42.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.726" endtime="20201030 15:51:42.751"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.765" endtime="20201030 15:51:42.779"></status>
</kw>
<msg timestamp="20201030 15:51:42.780" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.764" endtime="20201030 15:51:42.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:42.781" endtime="20201030 15:51:42.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.785" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:42.783" endtime="20201030 15:51:42.786"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.761" endtime="20201030 15:51:42.786"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:42.759" endtime="20201030 15:51:42.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.756" endtime="20201030 15:51:42.787"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:42.791" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:42.790" endtime="20201030 15:51:42.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.788" endtime="20201030 15:51:42.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.756" endtime="20201030 15:51:42.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.755" endtime="20201030 15:51:42.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:42.793" endtime="20201030 15:51:42.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.753" endtime="20201030 15:51:42.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.751" endtime="20201030 15:51:42.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.722" endtime="20201030 15:51:42.795"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:42.799" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:42.807" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:43.993" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:42.798" endtime="20201030 15:51:43.994"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:43.996" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:51:43.995" endtime="20201030 15:51:43.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:42.796" endtime="20201030 15:51:43.997"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.014" endtime="20201030 15:51:44.022"></status>
</kw>
<msg timestamp="20201030 15:51:44.023" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.006" endtime="20201030 15:51:44.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.026" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.024" endtime="20201030 15:51:44.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.027" endtime="20201030 15:51:44.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.003" endtime="20201030 15:51:44.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.001" endtime="20201030 15:51:44.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.037" endtime="20201030 15:51:44.353"></status>
</kw>
<msg timestamp="20201030 15:51:44.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.886857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.206592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.034" endtime="20201030 15:51:44.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.886857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.206592333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.358" endtime="20201030 15:51:44.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.366" endtime="20201030 15:51:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.032" endtime="20201030 15:51:44.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.030" endtime="20201030 15:51:44.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.373" level="INFO">${PHILIP_RES} = [{'diff': 0.3197352079999999}, {'diff': 7.694000000002532e-06}, {'diff': 7.695000000085273e-06}, {'diff': 7.694000000002532e-06}, {'diff': 7.665999999906248e-06}, {'diff': 7.709000000133415e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:44.370" endtime="20201030 15:51:44.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.377" level="INFO">${RESULT} = {'diff': [0.3197352079999999, 7.694000000002532e-06, 7.695000000085273e-06, 7.694000000002532e-06, 7.665999999906248e-06, 7.709000000133415e-06, 7.67999999995439e-06, 7.749999999973056e-06, 7.69400000...</msg>
<status status="PASS" starttime="20201030 15:51:44.374" endtime="20201030 15:51:44.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.381" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.380" endtime="20201030 15:51:44.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.384" level="INFO">VALUE: [0.3197352079999999, 7.694000000002532e-06, 7.695000000085273e-06, 7.694000000002532e-06, 7.665999999906248e-06, 7.709000000133415e-06, 7.67999999995439e-06, 7.749999999973056e-06, 7.694000000002532e-06, 7.722000000098816e-06, 7.68100000003713e-06, 7.70899999991137e-06, 7.67999999995439e-06, 7.67999999995439e-06, 7.695000000085273e-06, 7.749999999973056e-06, 7.638999999892704e-06, 7.695000000085273e-06, 7.708000000050674e-06, 7.68100000003713e-06, 7.764000000021198e-06, 7.624999999844562e-06, 7.68100000003713e-06, 7.70899999991137e-06, 7.67999999995439e-06, 7.736000000146959e-06, 7.652999999940846e-06, 7.721999999876772e-06, 7.68100000003713e-06, 7.70899999991137e-06, 7.708000000050674e-06, 7.652999999940846e-06, 7.70899999991137e-06, 7.694000000002532e-06, 7.694999999863228e-06, 7.694000000002532e-06, 7.665999999906248e-06, 7.695000000085273e-06, 7.70899999991137e-06, 7.67999999995439e-06, 7.68100000003713e-06, 7.721999999876772e-06, 7.666999999988988e-06, 7.70899999991137e-06, 7.67999999995439e-06, 7.694000000002532e-06, 7.68100000003713e-06, 7.708000000050674e-06, 7.67999999995439e-06, 7.695000000085273e-06, 7.721999999876772e-06]</msg>
<status status="PASS" starttime="20201030 15:51:44.382" endtime="20201030 15:51:44.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.378" endtime="20201030 15:51:44.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.388" endtime="20201030 15:51:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.387" endtime="20201030 15:51:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.386" endtime="20201030 15:51:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.999" endtime="20201030 15:51:44.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.998" endtime="20201030 15:51:44.409"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.419" endtime="20201030 15:51:44.428"></status>
</kw>
<msg timestamp="20201030 15:51:44.428" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.417" endtime="20201030 15:51:44.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.431" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.429" endtime="20201030 15:51:44.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.432" endtime="20201030 15:51:44.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.414" endtime="20201030 15:51:44.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.411" endtime="20201030 15:51:44.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.441" endtime="20201030 15:51:44.727"></status>
</kw>
<msg timestamp="20201030 15:51:44.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.439" endtime="20201030 15:51:44.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020253486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.731" endtime="20201030 15:51:44.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.739" endtime="20201030 15:51:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.437" endtime="20201030 15:51:44.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.435" endtime="20201030 15:51:44.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:44.746" level="INFO">${PHILIP_RES} = [{'diff': 1.5125000000001249e-05}, {'diff': 1.5124999999997779e-05}, {'diff': 1.5125000000001249e-05}, {'diff': 1.5153000000000388e-05}, {'diff': 1.5152000000000915e-05}, {'diff': 1.5125000000001249e-...</msg>
<status status="PASS" starttime="20201030 15:51:44.742" endtime="20201030 15:51:44.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:44.750" level="INFO">${RESULT} = {'diff': [1.5125000000001249e-05, 1.5124999999997779e-05, 1.5125000000001249e-05, 1.5153000000000388e-05, 1.5152000000000915e-05, 1.5125000000001249e-05, 1.5153000000000388e-05, 1.5166999999999958e-05...</msg>
<status status="PASS" starttime="20201030 15:51:44.747" endtime="20201030 15:51:44.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.755" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:44.754" endtime="20201030 15:51:44.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.758" level="INFO">VALUE: [1.5125000000001249e-05, 1.5124999999997779e-05, 1.5125000000001249e-05, 1.5153000000000388e-05, 1.5152000000000915e-05, 1.5125000000001249e-05, 1.5153000000000388e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.509699999999864e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5166000000000485e-05, 1.5152000000000915e-05, 1.5152000000000915e-05, 1.5152999999996919e-05, 1.5166999999999958e-05, 1.5207999999999194e-05, 1.5139000000000818e-05, 1.5166000000000485e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5125000000001249e-05, 1.5179999999996585e-05, 1.5139000000000818e-05, 1.5138999999997349e-05, 1.5166999999999958e-05, 1.508299999999907e-05, 1.5125000000001249e-05, 1.5138999999997349e-05, 1.5138000000001345e-05, 1.5124999999997779e-05, 1.5153000000000388e-05, 1.5138999999997349e-05, 1.5139000000000818e-05, 1.5138000000001345e-05, 1.5153000000000388e-05, 1.5125000000001249e-05, 1.5180999999999528e-05, 1.5166999999999958e-05, 1.5139000000000818e-05, 1.5166000000000485e-05, 1.5138999999997349e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5137999999997875e-05, 1.5153000000000388e-05, 1.5153000000000388e-05]</msg>
<status status="PASS" starttime="20201030 15:51:44.756" endtime="20201030 15:51:44.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.751" endtime="20201030 15:51:44.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:44.762" endtime="20201030 15:51:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.761" endtime="20201030 15:51:44.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.759" endtime="20201030 15:51:44.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.410" endtime="20201030 15:51:44.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.409" endtime="20201030 15:51:44.784"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.795" endtime="20201030 15:51:44.804"></status>
</kw>
<msg timestamp="20201030 15:51:44.805" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.792" endtime="20201030 15:51:44.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:44.808" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:44.806" endtime="20201030 15:51:44.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.809" endtime="20201030 15:51:44.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.789" endtime="20201030 15:51:44.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.787" endtime="20201030 15:51:44.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:44.819" endtime="20201030 15:51:45.103"></status>
</kw>
<msg timestamp="20201030 15:51:45.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:44.817" endtime="20201030 15:51:45.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022737042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.108" endtime="20201030 15:51:45.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.116" endtime="20201030 15:51:45.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.814" endtime="20201030 15:51:45.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.813" endtime="20201030 15:51:45.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.123" level="INFO">${PHILIP_RES} = [{'diff': 2.3652000000002477e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.37229999999998e-05}, {'diff': 2.3694000000001186e-05}, {'diff': 2.366699999999805e-05}, {'diff': 2.366699999999805e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:51:45.119" endtime="20201030 15:51:45.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.128" level="INFO">${RESULT} = {'diff': [2.3652000000002477e-05, 2.366700000000152e-05, 2.37229999999998e-05, 2.3694000000001186e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3679999999998147e-05, 2.3693999999997717e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 15:51:45.124" endtime="20201030 15:51:45.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.132" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.131" endtime="20201030 15:51:45.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.135" level="INFO">VALUE: [2.3652000000002477e-05, 2.366700000000152e-05, 2.37229999999998e-05, 2.3694000000001186e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3679999999998147e-05, 2.3693999999997717e-05, 2.361099999999977e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.369500000000066e-05, 2.366700000000152e-05, 2.35970000000002e-05, 2.361099999999977e-05, 2.368100000000109e-05, 2.3722000000000326e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3680000000001616e-05, 2.3680000000001616e-05, 2.358300000000063e-05, 2.3665999999998577e-05, 2.3694000000001186e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.3749999999999466e-05, 2.37229999999998e-05, 2.3665999999998577e-05, 2.3722000000000326e-05, 2.369500000000066e-05, 2.365299999999848e-05, 2.365299999999848e-05, 2.365300000000195e-05, 2.3680000000001616e-05, 2.3652000000002477e-05, 2.366700000000152e-05, 2.37229999999998e-05, 2.3680000000001616e-05, 2.362499999999934e-05, 2.365300000000195e-05, 2.3680000000001616e-05, 2.3694000000001186e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.368099999999762e-05, 2.365299999999848e-05, 2.3665999999998577e-05]</msg>
<status status="PASS" starttime="20201030 15:51:45.133" endtime="20201030 15:51:45.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.129" endtime="20201030 15:51:45.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.140" endtime="20201030 15:51:45.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.138" endtime="20201030 15:51:45.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.137" endtime="20201030 15:51:45.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.785" endtime="20201030 15:51:45.160"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:44.784" endtime="20201030 15:51:45.160"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.169" endtime="20201030 15:51:45.178"></status>
</kw>
<msg timestamp="20201030 15:51:45.179" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.167" endtime="20201030 15:51:45.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.181" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.180" endtime="20201030 15:51:45.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.182" endtime="20201030 15:51:45.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.165" endtime="20201030 15:51:45.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.163" endtime="20201030 15:51:45.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.191" endtime="20201030 15:51:45.479"></status>
</kw>
<msg timestamp="20201030 15:51:45.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018918444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.190" endtime="20201030 15:51:45.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018885167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018918444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.483" endtime="20201030 15:51:45.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.491" endtime="20201030 15:51:45.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.187" endtime="20201030 15:51:45.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.185" endtime="20201030 15:51:45.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.498" level="INFO">${PHILIP_RES} = [{'diff': 3.3276999999998225e-05}, {'diff': 3.32640000000016e-05}, {'diff': 3.329200000000074e-05}, {'diff': 3.331999999999988e-05}, {'diff': 3.333400000000292e-05}, {'diff': 3.32640000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:45.494" endtime="20201030 15:51:45.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.502" level="INFO">${RESULT} = {'diff': [3.3276999999998225e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.331999999999988e-05, 3.333400000000292e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.330499...</msg>
<status status="PASS" starttime="20201030 15:51:45.499" endtime="20201030 15:51:45.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.506" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.505" endtime="20201030 15:51:45.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.509" level="INFO">VALUE: [3.3276999999998225e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.331999999999988e-05, 3.333400000000292e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.3304999999997364e-05, 3.329200000000074e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.331999999999988e-05, 3.327800000000117e-05, 3.3263000000002124e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.324999999999856e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.326399999999813e-05, 3.3277000000001694e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.3276999999998225e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.329200000000074e-05, 3.3276999999998225e-05, 3.3276999999998225e-05, 3.32779999999977e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.3291000000001264e-05, 3.324999999999856e-05, 3.3290999999997795e-05, 3.327800000000117e-05, 3.327800000000117e-05]</msg>
<status status="PASS" starttime="20201030 15:51:45.507" endtime="20201030 15:51:45.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.503" endtime="20201030 15:51:45.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.514" endtime="20201030 15:51:45.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.512" endtime="20201030 15:51:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.511" endtime="20201030 15:51:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.161" endtime="20201030 15:51:45.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.161" endtime="20201030 15:51:45.534"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.543" endtime="20201030 15:51:45.554"></status>
</kw>
<msg timestamp="20201030 15:51:45.555" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.541" endtime="20201030 15:51:45.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.557" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.556" endtime="20201030 15:51:45.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.558" endtime="20201030 15:51:45.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.539" endtime="20201030 15:51:45.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.537" endtime="20201030 15:51:45.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.567" endtime="20201030 15:51:45.854"></status>
</kw>
<msg timestamp="20201030 15:51:45.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.566" endtime="20201030 15:51:45.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019659931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.858" endtime="20201030 15:51:45.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.866" endtime="20201030 15:51:45.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.563" endtime="20201030 15:51:45.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.561" endtime="20201030 15:51:45.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:45.873" level="INFO">${PHILIP_RES} = [{'diff': 4.3945000000000095e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.395800000000019e-05},...</msg>
<status status="PASS" starttime="20201030 15:51:45.870" endtime="20201030 15:51:45.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:45.877" level="INFO">${RESULT} = {'diff': [4.3945000000000095e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 15:51:45.874" endtime="20201030 15:51:45.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.881" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:45.880" endtime="20201030 15:51:45.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.884" level="INFO">VALUE: [4.3945000000000095e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.3945000000000095e-05, 4.394400000000062e-05, 4.395800000000019e-05, 4.3959000000003134e-05, 4.39860000000028e-05, 4.394399999999715e-05, 4.401400000000194e-05, 4.3945000000000095e-05, 4.394400000000062e-05, 4.397199999999976e-05, 4.3972999999999235e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3972999999999235e-05, 4.3903000000001385e-05, 4.395800000000019e-05, 4.393000000000105e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.3917000000000955e-05, 4.3917000000000955e-05, 4.400000000000237e-05, 4.395800000000019e-05, 4.3959000000003134e-05, 4.395799999999672e-05, 4.397199999999976e-05, 4.3945000000000095e-05, 4.3945000000000095e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.401399999999847e-05, 4.397199999999976e-05, 4.3931000000000525e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.397199999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:51:45.883" endtime="20201030 15:51:45.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.878" endtime="20201030 15:51:45.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.890" endtime="20201030 15:51:45.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.888" endtime="20201030 15:51:45.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.887" endtime="20201030 15:51:45.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.535" endtime="20201030 15:51:45.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.535" endtime="20201030 15:51:45.911"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.919" endtime="20201030 15:51:45.930"></status>
</kw>
<msg timestamp="20201030 15:51:45.930" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.918" endtime="20201030 15:51:45.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.933" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.931" endtime="20201030 15:51:45.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.934" endtime="20201030 15:51:45.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.915" endtime="20201030 15:51:45.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.913" endtime="20201030 15:51:45.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.943" endtime="20201030 15:51:46.230"></status>
</kw>
<msg timestamp="20201030 15:51:46.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:45.941" endtime="20201030 15:51:46.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.234" endtime="20201030 15:51:46.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.243" endtime="20201030 15:51:46.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.939" endtime="20201030 15:51:46.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.937" endtime="20201030 15:51:46.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.250" level="INFO">${PHILIP_RES} = [{'diff': 5.5722000000001104e-05}, {'diff': 5.566699999999883e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.5750000000000244e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.565299999999926e-05...</msg>
<status status="PASS" starttime="20201030 15:51:46.247" endtime="20201030 15:51:46.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.256" level="INFO">${RESULT} = {'diff': [5.5722000000001104e-05, 5.566699999999883e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.565299999999926e-05, 5.5736000000000674e-05, 5.579200000000242e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:51:46.251" endtime="20201030 15:51:46.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.261" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.260" endtime="20201030 15:51:46.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.263" level="INFO">VALUE: [5.5722000000001104e-05, 5.566699999999883e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.565299999999926e-05, 5.5736000000000674e-05, 5.579200000000242e-05, 5.5736000000000674e-05, 5.5679999999998925e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5721999999997635e-05, 5.5721999999997635e-05, 5.5750000000000244e-05, 5.573700000000015e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.573700000000015e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.570899999999754e-05, 5.5736000000000674e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.573700000000015e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5736000000000674e-05, 5.5735999999997204e-05, 5.5736000000000674e-05, 5.5735999999997204e-05, 5.5777999999999384e-05, 5.5651999999999785e-05, 5.5722000000001104e-05, 5.56809999999984e-05, 5.573700000000015e-05, 5.5707999999998065e-05, 5.5736000000000674e-05, 5.5707999999998065e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.262" endtime="20201030 15:51:46.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.257" endtime="20201030 15:51:46.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.268" endtime="20201030 15:51:46.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.267" endtime="20201030 15:51:46.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.266" endtime="20201030 15:51:46.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.912" endtime="20201030 15:51:46.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.911" endtime="20201030 15:51:46.289"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.297" endtime="20201030 15:51:46.309"></status>
</kw>
<msg timestamp="20201030 15:51:46.310" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.296" endtime="20201030 15:51:46.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.312" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.311" endtime="20201030 15:51:46.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.313" endtime="20201030 15:51:46.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.293" endtime="20201030 15:51:46.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.291" endtime="20201030 15:51:46.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.322" endtime="20201030 15:51:46.608"></status>
</kw>
<msg timestamp="20201030 15:51:46.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018947889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.320" endtime="20201030 15:51:46.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018947889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:46.612" endtime="20201030 15:51:46.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.620" endtime="20201030 15:51:46.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.318" endtime="20201030 15:51:46.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.316" endtime="20201030 15:51:46.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:46.628" level="INFO">${PHILIP_RES} = [{'diff': 6.857000000000044e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.859799999999958e-05}, {'diff': 6.85970000000001e-05}, {'diff': 6.85970000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:46.625" endtime="20201030 15:51:46.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:46.632" level="INFO">${RESULT} = {'diff': [6.857000000000044e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.859799999999958e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.863899999999881e-05, 6.861099999999967e-05, 6.8527999...</msg>
<status status="PASS" starttime="20201030 15:51:46.629" endtime="20201030 15:51:46.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.636" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:46.635" endtime="20201030 15:51:46.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.639" level="INFO">VALUE: [6.857000000000044e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.859799999999958e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.863899999999881e-05, 6.861099999999967e-05, 6.852799999999826e-05, 6.858300000000053e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.858300000000053e-05, 6.8584e-05, 6.856899999999749e-05, 6.8584e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.856900000000096e-05, 6.859800000000305e-05, 6.85970000000001e-05, 6.854199999999783e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.8584e-05, 6.85970000000001e-05, 6.8584e-05, 6.858299999999706e-05, 6.856900000000096e-05, 6.859799999999958e-05, 6.863899999999881e-05, 6.861099999999967e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.8584e-05, 6.852799999999826e-05, 6.8584e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.8584e-05, 6.85970000000001e-05, 6.863800000000281e-05, 6.858299999999706e-05, 6.85970000000001e-05, 6.8584e-05, 6.858300000000053e-05, 6.8584e-05]</msg>
<status status="PASS" starttime="20201030 15:51:46.637" endtime="20201030 15:51:46.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.633" endtime="20201030 15:51:46.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:46.644" endtime="20201030 15:51:46.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.642" endtime="20201030 15:51:46.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.641" endtime="20201030 15:51:46.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.290" endtime="20201030 15:51:46.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.289" endtime="20201030 15:51:46.664"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.673" endtime="20201030 15:51:46.686"></status>
</kw>
<msg timestamp="20201030 15:51:46.686" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.671" endtime="20201030 15:51:46.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.689" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:46.687" endtime="20201030 15:51:46.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.690" endtime="20201030 15:51:46.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.668" endtime="20201030 15:51:46.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.667" endtime="20201030 15:51:46.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.699" endtime="20201030 15:51:46.985"></status>
</kw>
<msg timestamp="20201030 15:51:46.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:46.697" endtime="20201030 15:51:46.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:46.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019448014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195305, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:46.989" endtime="20201030 15:51:46.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:46.997" endtime="20201030 15:51:46.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.695" endtime="20201030 15:51:46.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.693" endtime="20201030 15:51:47.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.004" level="INFO">${PHILIP_RES} = [{'diff': 8.248599999999967e-05}, {'diff': 8.252800000000185e-05}, {'diff': 8.252699999999891e-05}, {'diff': 8.254199999999795e-05}, {'diff': 8.255600000000099e-05}, {'diff': 8.254199999999795e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:47.001" endtime="20201030 15:51:47.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.008" level="INFO">${RESULT} = {'diff': [8.248599999999967e-05, 8.252800000000185e-05, 8.252699999999891e-05, 8.254199999999795e-05, 8.255600000000099e-05, 8.254199999999795e-05, 8.255599999999752e-05, 8.254200000000142e-05, 8.2527...</msg>
<status status="PASS" starttime="20201030 15:51:47.005" endtime="20201030 15:51:47.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.013" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.012" endtime="20201030 15:51:47.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.015" level="INFO">VALUE: [8.248599999999967e-05, 8.252800000000185e-05, 8.252699999999891e-05, 8.254199999999795e-05, 8.255600000000099e-05, 8.254199999999795e-05, 8.255599999999752e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.248599999999967e-05, 8.251399999999881e-05, 8.255600000000099e-05, 8.255600000000099e-05, 8.255499999999805e-05, 8.252700000000238e-05, 8.255600000000099e-05, 8.252800000000185e-05, 8.252799999999838e-05, 8.254099999999848e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.251399999999881e-05, 8.252699999999891e-05, 8.249999999999924e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.252800000000185e-05, 8.255600000000099e-05, 8.252799999999838e-05, 8.254100000000195e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.248600000000314e-05, 8.252699999999891e-05, 8.252800000000185e-05, 8.251399999999881e-05, 8.252799999999838e-05, 8.251299999999934e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.26109999999998e-05, 8.251299999999934e-05, 8.250000000000271e-05, 8.252799999999838e-05, 8.254200000000142e-05, 8.254099999999848e-05, 8.255599999999752e-05, 8.252800000000185e-05, 8.248699999999914e-05, 8.255500000000152e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.014" endtime="20201030 15:51:47.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.009" endtime="20201030 15:51:47.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.023" endtime="20201030 15:51:47.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.022" endtime="20201030 15:51:47.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.021" endtime="20201030 15:51:47.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.665" endtime="20201030 15:51:47.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:46.665" endtime="20201030 15:51:47.044"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.052" endtime="20201030 15:51:47.065"></status>
</kw>
<msg timestamp="20201030 15:51:47.065" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.051" endtime="20201030 15:51:47.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.068" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.067" endtime="20201030 15:51:47.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.069" endtime="20201030 15:51:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.048" endtime="20201030 15:51:47.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.046" endtime="20201030 15:51:47.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.078" endtime="20201030 15:51:47.364"></status>
</kw>
<msg timestamp="20201030 15:51:47.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018627403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.076" endtime="20201030 15:51:47.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018529931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018627403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.368" endtime="20201030 15:51:47.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.377" endtime="20201030 15:51:47.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.074" endtime="20201030 15:51:47.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.072" endtime="20201030 15:51:47.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.385" level="INFO">${PHILIP_RES} = [{'diff': 9.747200000000122e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.755599999999864e-05}, {'diff': 9.757000000000168e-05}, {'diff': 9.755600000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:51:47.381" endtime="20201030 15:51:47.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.391" level="INFO">${RESULT} = {'diff': [9.747200000000122e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.755599999999864e-05, 9.757000000000168e-05, 9.755600000000211e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.7555...</msg>
<status status="PASS" starttime="20201030 15:51:47.387" endtime="20201030 15:51:47.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.397" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.396" endtime="20201030 15:51:47.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.400" level="INFO">VALUE: [9.747200000000122e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.755599999999864e-05, 9.757000000000168e-05, 9.755600000000211e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.755599999999864e-05, 9.754200000000254e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.756899999999874e-05, 9.756999999999821e-05, 9.755600000000211e-05, 9.756900000000221e-05, 9.755499999999917e-05, 9.754199999999907e-05, 9.756999999999821e-05, 9.754200000000254e-05, 9.750000000000036e-05, 9.74860000000008e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.75409999999996e-05, 9.755499999999917e-05, 9.751399999999993e-05, 9.755599999999864e-05, 9.75409999999996e-05, 9.759700000000135e-05, 9.750000000000036e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.75409999999996e-05, 9.755600000000211e-05, 9.757000000000168e-05, 9.755600000000211e-05, 9.758299999999831e-05, 9.755499999999917e-05, 9.754200000000254e-05, 9.755600000000211e-05, 9.755499999999917e-05, 9.756899999999874e-05, 9.754199999999907e-05, 9.757000000000168e-05, 9.754200000000254e-05, 9.755499999999917e-05, 9.756899999999874e-05, 9.75279999999995e-05, 9.757000000000168e-05]</msg>
<status status="PASS" starttime="20201030 15:51:47.398" endtime="20201030 15:51:47.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.392" endtime="20201030 15:51:47.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.408" endtime="20201030 15:51:47.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.404" endtime="20201030 15:51:47.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.402" endtime="20201030 15:51:47.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.045" endtime="20201030 15:51:47.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.044" endtime="20201030 15:51:47.429"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.437" endtime="20201030 15:51:47.452"></status>
</kw>
<msg timestamp="20201030 15:51:47.453" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.436" endtime="20201030 15:51:47.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.455" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.454" endtime="20201030 15:51:47.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.456" endtime="20201030 15:51:47.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.433" endtime="20201030 15:51:47.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.431" endtime="20201030 15:51:47.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.465" endtime="20201030 15:51:47.751"></status>
</kw>
<msg timestamp="20201030 15:51:47.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018905861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.464" endtime="20201030 15:51:47.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018792222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018905861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:47.755" endtime="20201030 15:51:47.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.763" endtime="20201030 15:51:47.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.461" endtime="20201030 15:51:47.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.460" endtime="20201030 15:51:47.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:47.771" level="INFO">${PHILIP_RES} = [{'diff': 0.00011363899999999871}, {'diff': 0.00011363899999999871}, {'diff': 0.00011365299999999828}, {'diff': 0.00011369400000000099}, {'diff': 0.00011366600000000185}, {'diff': 0.000113666000000001...</msg>
<status status="PASS" starttime="20201030 15:51:47.768" endtime="20201030 15:51:47.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:47.775" level="INFO">${RESULT} = {'diff': [0.00011363899999999871, 0.00011363899999999871, 0.00011365299999999828, 0.00011369400000000099, 0.00011366600000000185, 0.00011366600000000185, 0.00011366599999999838, 0.00011362499999999914...</msg>
<status status="PASS" starttime="20201030 15:51:47.772" endtime="20201030 15:51:47.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.779" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:47.778" endtime="20201030 15:51:47.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.782" level="INFO">VALUE: [0.00011363899999999871, 0.00011363899999999871, 0.00011365299999999828, 0.00011369400000000099, 0.00011366600000000185, 0.00011366600000000185, 0.00011366599999999838, 0.00011362499999999914, 0.00011366699999999785, 0.00011365300000000175, 0.00011365300000000175, 0.00011365300000000175, 0.00011363899999999871, 0.00011363899999999871, 0.00011365299999999828, 0.00011366699999999785, 0.00011368100000000089, 0.00011365300000000175, 0.00011365300000000175, 0.00011361099999999957, 0.00011361099999999957, 0.00011363899999999871, 0.00011366699999999785, 0.000113597, 0.00011368000000000142, 0.00011358300000000043, 0.00011368000000000142, 0.00011369500000000046, 0.00011369400000000099, 0.00011368000000000142, 0.00011366600000000185, 0.00011368000000000142, 0.00011363899999999871, 0.00011363899999999871, 0.00011368099999999742, 0.00011363899999999871, 0.00011365300000000175, 0.00011369500000000046, 0.00011365300000000175, 0.00011368100000000089, 0.00011369499999999699, 0.00011366699999999785, 0.00011368100000000089, 0.00011365300000000175, 0.00011361099999999957, 0.00011369500000000046, 0.00011365299999999828, 0.00011365299999999828, 0.00011365199999999881, 0.00011366700000000132]</msg>
<status status="PASS" starttime="20201030 15:51:47.780" endtime="20201030 15:51:47.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.776" endtime="20201030 15:51:47.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:47.787" endtime="20201030 15:51:47.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.785" endtime="20201030 15:51:47.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.784" endtime="20201030 15:51:47.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.430" endtime="20201030 15:51:47.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.429" endtime="20201030 15:51:47.807"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.816" endtime="20201030 15:51:47.833"></status>
</kw>
<msg timestamp="20201030 15:51:47.833" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.814" endtime="20201030 15:51:47.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:47.836" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:47.834" endtime="20201030 15:51:47.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.837" endtime="20201030 15:51:47.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.812" endtime="20201030 15:51:47.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.810" endtime="20201030 15:51:47.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:47.846" endtime="20201030 15:51:48.132"></status>
</kw>
<msg timestamp="20201030 15:51:48.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:47.844" endtime="20201030 15:51:48.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01988025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:48.136" endtime="20201030 15:51:48.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.144" endtime="20201030 15:51:48.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.842" endtime="20201030 15:51:48.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.840" endtime="20201030 15:51:48.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.150" level="INFO">${PHILIP_RES} = [{'diff': 0.0001308059999999972}, {'diff': 0.00013087499999999905}, {'diff': 0.0001308469999999999}, {'diff': 0.00013084799999999938}, {'diff': 0.0001308469999999999}, {'diff': 0.00013092999999999785}...</msg>
<status status="PASS" starttime="20201030 15:51:48.147" endtime="20201030 15:51:48.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.154" level="INFO">${RESULT} = {'diff': [0.0001308059999999972, 0.00013087499999999905, 0.0001308469999999999, 0.00013084799999999938, 0.0001308469999999999, 0.00013092999999999785, 0.00013086099999999948, 0.0001308050000000012, 0....</msg>
<status status="PASS" starttime="20201030 15:51:48.151" endtime="20201030 15:51:48.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.159" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.158" endtime="20201030 15:51:48.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.161" level="INFO">VALUE: [0.0001308059999999972, 0.00013087499999999905, 0.0001308469999999999, 0.00013084799999999938, 0.0001308469999999999, 0.00013092999999999785, 0.00013086099999999948, 0.0001308050000000012, 0.00013086099999999948, 0.00013084800000000285, 0.0001308469999999999, 0.0001308469999999999, 0.00013081900000000077, 0.0001308469999999999, 0.00013084799999999938, 0.0001308469999999999, 0.00013087499999999905, 0.00013080499999999773, 0.0001308469999999999, 0.0001308339999999998, 0.00013086099999999948, 0.0001308469999999999, 0.00013086100000000295, 0.00013087500000000252, 0.00013084800000000285, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.0001308469999999999, 0.00013084799999999938, 0.00013087499999999905, 0.0001307920000000011, 0.0001308469999999999, 0.00013084700000000338, 0.0001308469999999999, 0.0001308339999999998, 0.00013086099999999948, 0.00013080600000000067, 0.0001308469999999999, 0.00013086099999999948, 0.00013086199999999895, 0.0001308339999999998, 0.00013086199999999895, 0.0001308469999999999, 0.0001308469999999999, 0.0001307769999999986, 0.00013086099999999948, 0.00013083300000000034, 0.0001308469999999999, 0.00013087499999999905]</msg>
<status status="PASS" starttime="20201030 15:51:48.160" endtime="20201030 15:51:48.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.155" endtime="20201030 15:51:48.164"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.167" endtime="20201030 15:51:48.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.166" endtime="20201030 15:51:48.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.165" endtime="20201030 15:51:48.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.808" endtime="20201030 15:51:48.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:47.808" endtime="20201030 15:51:48.188"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.196" endtime="20201030 15:51:48.213"></status>
</kw>
<msg timestamp="20201030 15:51:48.213" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.195" endtime="20201030 15:51:48.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.216" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.214" endtime="20201030 15:51:48.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.217" endtime="20201030 15:51:48.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.192" endtime="20201030 15:51:48.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.190" endtime="20201030 15:51:48.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.226" endtime="20201030 15:51:48.517"></status>
</kw>
<msg timestamp="20201030 15:51:48.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.224" endtime="20201030 15:51:48.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.521" endtime="20201030 15:51:48.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.529" endtime="20201030 15:51:48.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.222" endtime="20201030 15:51:48.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.220" endtime="20201030 15:51:48.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.536" level="INFO">${PHILIP_RES} = [{'diff': 0.00014909800000000029}, {'diff': 0.00014909699999999734}, {'diff': 0.0001490970000000008}, {'diff': 0.00014917999999999876}, {'diff': 0.00014912499999999995}, {'diff': 0.0001491249999999999...</msg>
<status status="PASS" starttime="20201030 15:51:48.533" endtime="20201030 15:51:48.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.541" level="INFO">${RESULT} = {'diff': [0.00014909800000000029, 0.00014909699999999734, 0.0001490970000000008, 0.00014917999999999876, 0.00014912499999999995, 0.00014912499999999995, 0.00014918000000000223, 0.00014912499999999995,...</msg>
<status status="PASS" starttime="20201030 15:51:48.537" endtime="20201030 15:51:48.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.547" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.546" endtime="20201030 15:51:48.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.550" level="INFO">VALUE: [0.00014909800000000029, 0.00014909699999999734, 0.0001490970000000008, 0.00014917999999999876, 0.00014912499999999995, 0.00014912499999999995, 0.00014918000000000223, 0.00014912499999999995, 0.00014911100000000038, 0.00014912499999999995, 0.0001490970000000008, 0.00014918099999999823, 0.0001490559999999981, 0.00014913899999999952, 0.0001491529999999991, 0.00014912499999999995, 0.00014911100000000038, 0.0001491109999999969, 0.00014912499999999995, 0.00014913899999999952, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.0001491109999999969, 0.00014912499999999995, 0.00014913899999999952, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014913899999999952, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014911100000000038, 0.0001491529999999991, 0.00014912499999999995, 0.00014912499999999995, 0.00014911100000000038, 0.0001491529999999991, 0.00014911199999999986, 0.00014911100000000038, 0.0001491529999999991, 0.00014912499999999995, 0.00014913899999999952, 0.000149139000000003, 0.00014916700000000213]</msg>
<status status="PASS" starttime="20201030 15:51:48.548" endtime="20201030 15:51:48.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.542" endtime="20201030 15:51:48.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.555" endtime="20201030 15:51:48.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.553" endtime="20201030 15:51:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.552" endtime="20201030 15:51:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.189" endtime="20201030 15:51:48.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.188" endtime="20201030 15:51:48.575"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.584" endtime="20201030 15:51:48.601"></status>
</kw>
<msg timestamp="20201030 15:51:48.602" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.582" endtime="20201030 15:51:48.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.605" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.603" endtime="20201030 15:51:48.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.606" endtime="20201030 15:51:48.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.580" endtime="20201030 15:51:48.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.578" endtime="20201030 15:51:48.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.616" endtime="20201030 15:51:48.900"></status>
</kw>
<msg timestamp="20201030 15:51:48.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018874292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.614" endtime="20201030 15:51:48.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018705847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018874292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.905" endtime="20201030 15:51:48.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.913" endtime="20201030 15:51:48.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.611" endtime="20201030 15:51:48.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.609" endtime="20201030 15:51:48.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:48.920" level="INFO">${PHILIP_RES} = [{'diff': 0.0001684449999999997}, {'diff': 0.00016848599999999894}, {'diff': 0.00016847199999999937}, {'diff': 0.0001684579999999998}, {'diff': 0.00016848699999999842}, {'diff': 0.0001684860000000024}...</msg>
<status status="PASS" starttime="20201030 15:51:48.917" endtime="20201030 15:51:48.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:48.925" level="INFO">${RESULT} = {'diff': [0.0001684449999999997, 0.00016848599999999894, 0.00016847199999999937, 0.0001684579999999998, 0.00016848699999999842, 0.0001684860000000024, 0.0001685420000000007, 0.0001684579999999998, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:48.921" endtime="20201030 15:51:48.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.929" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:48.928" endtime="20201030 15:51:48.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.931" level="INFO">VALUE: [0.0001684449999999997, 0.00016848599999999894, 0.00016847199999999937, 0.0001684579999999998, 0.00016848699999999842, 0.0001684860000000024, 0.0001685420000000007, 0.0001684579999999998, 0.00016847299999999885, 0.00016847199999999937, 0.00016852800000000112, 0.00016848599999999894, 0.00016845899999999928, 0.00016845800000000327, 0.0001684860000000024, 0.00016847199999999937, 0.00016847199999999937, 0.00016847199999999937, 0.00016847199999999937, 0.0001684579999999998, 0.0001684860000000024, 0.0001684860000000024, 0.00016852799999999765, 0.00016848599999999894, 0.00016851400000000155, 0.00016854100000000122, 0.00016847199999999937, 0.00016844500000000318, 0.00016847200000000284, 0.00016845899999999928, 0.00016847199999999937, 0.00016841700000000057, 0.00016847199999999937, 0.00016847299999999885, 0.00016851400000000155, 0.00016851300000000208, 0.00016848599999999894, 0.00016847299999999885, 0.00016844400000000023, 0.00016848699999999842, 0.00016847199999999937, 0.00016843099999999667, 0.0001684579999999998, 0.00016847199999999937, 0.0001684579999999998, 0.00016847299999999885, 0.0001684999999999985, 0.00016847299999999885, 0.00016847199999999937, 0.00016847300000000232]</msg>
<status status="PASS" starttime="20201030 15:51:48.930" endtime="20201030 15:51:48.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.925" endtime="20201030 15:51:48.933"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.936" endtime="20201030 15:51:48.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.935" endtime="20201030 15:51:48.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.933" endtime="20201030 15:51:48.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.576" endtime="20201030 15:51:48.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.576" endtime="20201030 15:51:48.957"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.966" endtime="20201030 15:51:48.985"></status>
</kw>
<msg timestamp="20201030 15:51:48.985" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.964" endtime="20201030 15:51:48.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.988" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.986" endtime="20201030 15:51:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.989" endtime="20201030 15:51:48.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.961" endtime="20201030 15:51:48.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.959" endtime="20201030 15:51:48.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.998" endtime="20201030 15:51:49.284"></status>
</kw>
<msg timestamp="20201030 15:51:49.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020080819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:48.996" endtime="20201030 15:51:49.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019891917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020080819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.288" endtime="20201030 15:51:49.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.297" endtime="20201030 15:51:49.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.994" endtime="20201030 15:51:49.299"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.992" endtime="20201030 15:51:49.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.303" level="INFO">${PHILIP_RES} = [{'diff': 0.0001889020000000012}, {'diff': 0.00018891700000000025}, {'diff': 0.00018891700000000025}, {'diff': 0.00018891600000000078}, {'diff': 0.00018884699999999893}, {'diff': 0.0001889030000000006...</msg>
<status status="PASS" starttime="20201030 15:51:49.300" endtime="20201030 15:51:49.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.307" level="INFO">${RESULT} = {'diff': [0.0001889020000000012, 0.00018891700000000025, 0.00018891700000000025, 0.00018891600000000078, 0.00018884699999999893, 0.00018890300000000068, 0.00018891600000000078, 0.00018893099999999982,...</msg>
<status status="PASS" starttime="20201030 15:51:49.304" endtime="20201030 15:51:49.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.312" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.311" endtime="20201030 15:51:49.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.314" level="INFO">VALUE: [0.0001889020000000012, 0.00018891700000000025, 0.00018891700000000025, 0.00018891600000000078, 0.00018884699999999893, 0.00018890300000000068, 0.00018891600000000078, 0.00018893099999999982, 0.00018893000000000035, 0.00018890300000000068, 0.00018890300000000068, 0.00018891600000000078, 0.00018891700000000025, 0.00018890300000000068, 0.00018891600000000078, 0.00018897299999999853, 0.0001889860000000021, 0.00018891600000000078, 0.00018891700000000025, 0.00018893000000000035, 0.00018891700000000025, 0.00018890300000000068, 0.0001889159999999973, 0.00018891700000000025, 0.0001889029999999972, 0.00018894399999999992, 0.00018891700000000025, 0.00018890300000000068, 0.0001889159999999973, 0.00018891700000000025, 0.00018890300000000068, 0.00018890300000000068, 0.00018891700000000025, 0.0001889020000000012, 0.00018891700000000025, 0.00018890300000000068, 0.00018890199999999774, 0.00018890300000000068, 0.00018891700000000025, 0.00018893000000000035, 0.00018893099999999982, 0.0001888609999999985, 0.00018891700000000025, 0.00018893099999999982, 0.00018886100000000197, 0.0001889029999999972, 0.00018893099999999982, 0.00018890300000000068, 0.00018890300000000068, 0.00018891700000000025]</msg>
<status status="PASS" starttime="20201030 15:51:49.313" endtime="20201030 15:51:49.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.308" endtime="20201030 15:51:49.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.326" endtime="20201030 15:51:49.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.324" endtime="20201030 15:51:49.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.323" endtime="20201030 15:51:49.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.958" endtime="20201030 15:51:49.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.957" endtime="20201030 15:51:49.346"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.355" endtime="20201030 15:51:49.375"></status>
</kw>
<msg timestamp="20201030 15:51:49.375" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.353" endtime="20201030 15:51:49.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.378" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.376" endtime="20201030 15:51:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.379" endtime="20201030 15:51:49.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.351" endtime="20201030 15:51:49.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.349" endtime="20201030 15:51:49.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.388" endtime="20201030 15:51:49.673"></status>
</kw>
<msg timestamp="20201030 15:51:49.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018866097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0190765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:49.386" endtime="20201030 15:51:49.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018866097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0190765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:49.677" endtime="20201030 15:51:49.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.685" endtime="20201030 15:51:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.384" endtime="20201030 15:51:49.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.382" endtime="20201030 15:51:49.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:49.691" level="INFO">${PHILIP_RES} = [{'diff': 0.00021040300000000137}, {'diff': 0.00021044399999999713}, {'diff': 0.00021043000000000103}, {'diff': 0.0002104440000000006}, {'diff': 0.00021043000000000103}, {'diff': 0.0002104309999999970...</msg>
<status status="PASS" starttime="20201030 15:51:49.688" endtime="20201030 15:51:49.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:49.696" level="INFO">${RESULT} = {'diff': [0.00021040300000000137, 0.00021044399999999713, 0.00021043000000000103, 0.0002104440000000006, 0.00021043000000000103, 0.00021043099999999704, 0.00021041700000000094, 0.00021044500000000008,...</msg>
<status status="PASS" starttime="20201030 15:51:49.692" endtime="20201030 15:51:49.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.701" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:49.700" endtime="20201030 15:51:49.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.703" level="INFO">VALUE: [0.00021040300000000137, 0.00021044399999999713, 0.00021043000000000103, 0.0002104440000000006, 0.00021043000000000103, 0.00021043099999999704, 0.00021041700000000094, 0.00021044500000000008, 0.00021045899999999965, 0.00021043099999999704, 0.00021042999999999756, 0.00021043000000000103, 0.00021043000000000103, 0.000210415999999998, 0.0002104440000000006, 0.00021047199999999974, 0.0002104310000000005, 0.00021044500000000008, 0.00021045899999999965, 0.0002104440000000006, 0.0002103609999999992, 0.000210415999999998, 0.00021042999999999756, 0.0002104310000000005, 0.00021040300000000137, 0.00021044500000000008, 0.00021043099999999704, 0.0002103890000000018, 0.0002104440000000006, 0.00021041700000000094, 0.00021044399999999713, 0.00021043000000000103, 0.0002104310000000005, 0.00021044500000000008, 0.00021043099999999704, 0.00021044500000000008, 0.0002104310000000005, 0.00021043000000000103, 0.00021042999999999756, 0.0002104440000000006, 0.00021043000000000103, 0.0002104440000000006, 0.00021041699999999747, 0.0002104310000000005, 0.0002104310000000005, 0.0002104310000000005, 0.00021044399999999713, 0.00021049999999999888, 0.00021043000000000103, 0.00021050000000000235]</msg>
<status status="PASS" starttime="20201030 15:51:49.702" endtime="20201030 15:51:49.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.697" endtime="20201030 15:51:49.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:49.708" endtime="20201030 15:51:49.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.707" endtime="20201030 15:51:49.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.706" endtime="20201030 15:51:49.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.347" endtime="20201030 15:51:49.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.347" endtime="20201030 15:51:49.729"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.737" endtime="20201030 15:51:49.758"></status>
</kw>
<msg timestamp="20201030 15:51:49.758" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.736" endtime="20201030 15:51:49.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:49.761" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:49.759" endtime="20201030 15:51:49.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.762" endtime="20201030 15:51:49.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.733" endtime="20201030 15:51:49.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.731" endtime="20201030 15:51:49.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:49.771" endtime="20201030 15:51:50.056"></status>
</kw>
<msg timestamp="20201030 15:51:50.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019126153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:49.769" endtime="20201030 15:51:50.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018893153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019126153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.061" endtime="20201030 15:51:50.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.069" endtime="20201030 15:51:50.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.767" endtime="20201030 15:51:50.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.765" endtime="20201030 15:51:50.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.076" level="INFO">${PHILIP_RES} = [{'diff': 0.00023300000000000057}, {'diff': 0.00023305599999999885}, {'diff': 0.00023300000000000057}, {'diff': 0.00023308299999999851}, {'diff': 0.00023305599999999885}, {'diff': 0.000233055000000002...</msg>
<status status="PASS" starttime="20201030 15:51:50.073" endtime="20201030 15:51:50.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.080" level="INFO">${RESULT} = {'diff': [0.00023300000000000057, 0.00023305599999999885, 0.00023300000000000057, 0.00023308299999999851, 0.00023305599999999885, 0.00023305500000000284, 0.0002330409999999998, 0.0002330409999999998, ...</msg>
<status status="PASS" starttime="20201030 15:51:50.077" endtime="20201030 15:51:50.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.085" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.084" endtime="20201030 15:51:50.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.087" level="INFO">VALUE: [0.00023300000000000057, 0.00023305599999999885, 0.00023300000000000057, 0.00023308299999999851, 0.00023305599999999885, 0.00023305500000000284, 0.0002330409999999998, 0.0002330409999999998, 0.00023305500000000284, 0.00023305499999999937, 0.0002330279999999997, 0.00023304200000000275, 0.00023305599999999885, 0.00023304199999999928, 0.00023305600000000232, 0.00023297200000000143, 0.0002330279999999997, 0.00023304200000000275, 0.0002330409999999998, 0.0002330409999999998, 0.0002330409999999998, 0.00023305499999999937, 0.000232986000000001, 0.0002330279999999997, 0.00023305599999999885, 0.00023305599999999885, 0.00023304199999999928, 0.00023304199999999928, 0.00023306999999999842, 0.00023305600000000232, 0.0002330409999999998, 0.00025287499999999963, 0.00023309700000000155, 0.00023308300000000198, 0.00023305599999999885, 0.00023308300000000198, 0.0002329730000000009, 0.00023305499999999937, 0.0002330409999999998, 0.00023305500000000284, 0.00023305499999999937, 0.00023305499999999937, 0.00023308400000000146, 0.00023301400000000014, 0.00023308299999999851, 0.00023304199999999928, 0.0002330279999999997, 0.0002330700000000019, 0.00023302799999999624, 0.00023304200000000275]</msg>
<status status="PASS" starttime="20201030 15:51:50.086" endtime="20201030 15:51:50.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.081" endtime="20201030 15:51:50.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.092" endtime="20201030 15:51:50.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.090" endtime="20201030 15:51:50.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.089" endtime="20201030 15:51:50.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.730" endtime="20201030 15:51:50.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:49.729" endtime="20201030 15:51:50.113"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.121" endtime="20201030 15:51:50.144"></status>
</kw>
<msg timestamp="20201030 15:51:50.144" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.120" endtime="20201030 15:51:50.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.147" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.145" endtime="20201030 15:51:50.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.148" endtime="20201030 15:51:50.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.117" endtime="20201030 15:51:50.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.115" endtime="20201030 15:51:50.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.157" endtime="20201030 15:51:50.443"></status>
</kw>
<msg timestamp="20201030 15:51:50.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.155" endtime="20201030 15:51:50.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020005361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020262083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.447" endtime="20201030 15:51:50.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.455" endtime="20201030 15:51:50.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.153" endtime="20201030 15:51:50.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.151" endtime="20201030 15:51:50.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.462" level="INFO">${PHILIP_RES} = [{'diff': 0.0002567220000000009}, {'diff': 0.00025672300000000037}, {'diff': 0.0002567220000000009}, {'diff': 0.00025673600000000046}, {'diff': 0.00025673699999999994}, {'diff': 0.00025673600000000046...</msg>
<status status="PASS" starttime="20201030 15:51:50.459" endtime="20201030 15:51:50.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.466" level="INFO">${RESULT} = {'diff': [0.0002567220000000009, 0.00025672300000000037, 0.0002567220000000009, 0.00025673600000000046, 0.00025673699999999994, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, ...</msg>
<status status="PASS" starttime="20201030 15:51:50.463" endtime="20201030 15:51:50.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.470" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.469" endtime="20201030 15:51:50.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.473" level="INFO">VALUE: [0.0002567220000000009, 0.00025672300000000037, 0.0002567220000000009, 0.00025673600000000046, 0.00025673699999999994, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, 0.00025673600000000046, 0.0002567080000000013, 0.00025673600000000046, 0.000256735999999997, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, 0.00025673600000000046, 0.0002567219999999974, 0.00025673699999999994, 0.0002567090000000008, 0.00025673600000000046, 0.0002568190000000019, 0.00025673600000000046, 0.0002567080000000013, 0.00025673600000000046, 0.0002567219999999974, 0.0002567779999999992, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, 0.00025675000000000003, 0.00025677800000000264, 0.00025672300000000037, 0.00025668100000000166, 0.0002567639999999996, 0.0002567220000000009, 0.00025675000000000003, 0.0002568050000000023, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.0002567220000000009, 0.0002567220000000009, 0.00025673600000000046, 0.0002567220000000009, 0.0002567359999999935, 0.00025673600000000046, 0.00025672300000000037]</msg>
<status status="PASS" starttime="20201030 15:51:50.471" endtime="20201030 15:51:50.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.467" endtime="20201030 15:51:50.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.481" endtime="20201030 15:51:50.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.479" endtime="20201030 15:51:50.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.478" endtime="20201030 15:51:50.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.114" endtime="20201030 15:51:50.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.113" endtime="20201030 15:51:50.501"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.510" endtime="20201030 15:51:50.533"></status>
</kw>
<msg timestamp="20201030 15:51:50.533" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.508" endtime="20201030 15:51:50.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.536" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.534" endtime="20201030 15:51:50.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.537" endtime="20201030 15:51:50.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.506" endtime="20201030 15:51:50.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.504" endtime="20201030 15:51:50.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.546" endtime="20201030 15:51:50.831"></status>
</kw>
<msg timestamp="20201030 15:51:50.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.544" endtime="20201030 15:51:50.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018646194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018927681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.835" endtime="20201030 15:51:50.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.843" endtime="20201030 15:51:50.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.542" endtime="20201030 15:51:50.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.540" endtime="20201030 15:51:50.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:50.850" level="INFO">${PHILIP_RES} = [{'diff': 0.00028148699999999693}, {'diff': 0.00028148600000000093}, {'diff': 0.0002815000000000005}, {'diff': 0.00028144399999999875}, {'diff': 0.00028151400000000007}, {'diff': 0.0002814859999999974...</msg>
<status status="PASS" starttime="20201030 15:51:50.847" endtime="20201030 15:51:50.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:50.855" level="INFO">${RESULT} = {'diff': [0.00028148699999999693, 0.00028148600000000093, 0.0002815000000000005, 0.00028144399999999875, 0.00028151400000000007, 0.00028148599999999746, 0.00028151400000000007, 0.0002814719999999979, ...</msg>
<status status="PASS" starttime="20201030 15:51:50.851" endtime="20201030 15:51:50.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.859" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:50.858" endtime="20201030 15:51:50.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.861" level="INFO">VALUE: [0.00028148699999999693, 0.00028148600000000093, 0.0002815000000000005, 0.00028144399999999875, 0.00028151400000000007, 0.00028148599999999746, 0.00028151400000000007, 0.0002814719999999979, 0.00028152799999999964, 0.0002815559999999988, 0.0002815000000000005, 0.0002815000000000005, 0.0002814719999999979, 0.00028151400000000007, 0.0002814719999999979, 0.00028152799999999964, 0.00028151400000000007, 0.0002815419999999992, 0.0002814580000000018, 0.00028151400000000007, 0.0002815000000000005, 0.00028148599999999746, 0.00028152700000000017, 0.0002815830000000019, 0.00028148600000000093, 0.00028151400000000007, 0.0002815549999999993, 0.00028151400000000007, 0.00028152799999999964, 0.0002815419999999992, 0.00028151400000000007, 0.00028151400000000007, 0.00028149999999999703, 0.0002815000000000005, 0.00028148599999999746, 0.0002815130000000006, 0.0002815000000000005, 0.00028151400000000007, 0.0002814440000000022, 0.00028151400000000354, 0.00028150000000000397, 0.00028149999999999703, 0.00028151400000000354, 0.00028150000000000397, 0.00028154199999999574, 0.0002815139999999966, 0.00028151300000000407, 0.0002815280000000031, 0.0002815559999999953, 0.00028149999999999703]</msg>
<status status="PASS" starttime="20201030 15:51:50.860" endtime="20201030 15:51:50.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.855" endtime="20201030 15:51:50.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:50.867" endtime="20201030 15:51:50.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.865" endtime="20201030 15:51:50.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.864" endtime="20201030 15:51:50.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.502" endtime="20201030 15:51:50.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.502" endtime="20201030 15:51:50.887"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.896" endtime="20201030 15:51:50.921"></status>
</kw>
<msg timestamp="20201030 15:51:50.921" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.894" endtime="20201030 15:51:50.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:50.924" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:50.922" endtime="20201030 15:51:50.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.925" endtime="20201030 15:51:50.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.891" endtime="20201030 15:51:50.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.890" endtime="20201030 15:51:50.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:50.934" endtime="20201030 15:51:51.220"></status>
</kw>
<msg timestamp="20201030 15:51:51.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018718319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019025667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:50.932" endtime="20201030 15:51:51.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018718319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019025667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.224" endtime="20201030 15:51:51.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.232" endtime="20201030 15:51:51.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.930" endtime="20201030 15:51:51.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.928" endtime="20201030 15:51:51.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.240" level="INFO">${PHILIP_RES} = [{'diff': 0.00030734799999999896}, {'diff': 0.00030740300000000123}, {'diff': 0.0003073749999999986}, {'diff': 0.0003074019999999983}, {'diff': 0.00030740299999999776}, {'diff': 0.0003073480000000024}...</msg>
<status status="PASS" starttime="20201030 15:51:51.237" endtime="20201030 15:51:51.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.244" level="INFO">${RESULT} = {'diff': [0.00030734799999999896, 0.00030740300000000123, 0.0003073749999999986, 0.0003074019999999983, 0.00030740299999999776, 0.0003073480000000024, 0.0003073469999999995, 0.0003073749999999986, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:51.241" endtime="20201030 15:51:51.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.248" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.247" endtime="20201030 15:51:51.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.251" level="INFO">VALUE: [0.00030734799999999896, 0.00030740300000000123, 0.0003073749999999986, 0.0003074019999999983, 0.00030740299999999776, 0.0003073480000000024, 0.0003073469999999995, 0.0003073749999999986, 0.0003073750000000021, 0.0003073749999999986, 0.0003073749999999986, 0.000307362000000002, 0.00030736099999999905, 0.00030736099999999905, 0.00030736099999999905, 0.0003073750000000021, 0.0003073749999999986, 0.0003073749999999986, 0.00030740300000000123, 0.00030740300000000123, 0.00030727799999999764, 0.00030736099999999905, 0.0003073610000000025, 0.0003074300000000009, 0.00030744499999999994, 0.0003073750000000021, 0.0003073469999999995, 0.0003074170000000008, 0.0003073619999999985, 0.0003073610000000025, 0.00030736099999999905, 0.0003073749999999986, 0.00030738900000000166, 0.00030731900000000034, 0.00030734799999999896, 0.00030731900000000034, 0.0003073469999999995, 0.00030736099999999905, 0.0003073749999999986, 0.0003073749999999986, 0.0003073889999999982, 0.00030737500000000556, 0.0003073749999999986, 0.00030736099999999905, 0.00030736099999999905, 0.00030736099999999905, 0.0003073889999999982, 0.0003073889999999982, 0.00030738900000000513, 0.0003073749999999986]</msg>
<status status="PASS" starttime="20201030 15:51:51.249" endtime="20201030 15:51:51.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.245" endtime="20201030 15:51:51.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.256" endtime="20201030 15:51:51.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.254" endtime="20201030 15:51:51.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.253" endtime="20201030 15:51:51.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.888" endtime="20201030 15:51:51.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:50.888" endtime="20201030 15:51:51.276"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.285" endtime="20201030 15:51:51.312"></status>
</kw>
<msg timestamp="20201030 15:51:51.312" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.283" endtime="20201030 15:51:51.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.315" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.314" endtime="20201030 15:51:51.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.316" endtime="20201030 15:51:51.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.281" endtime="20201030 15:51:51.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.279" endtime="20201030 15:51:51.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.326" endtime="20201030 15:51:51.612"></status>
</kw>
<msg timestamp="20201030 15:51:51.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.324" endtime="20201030 15:51:51.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019529153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019863417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.616" endtime="20201030 15:51:51.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.624" endtime="20201030 15:51:51.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.322" endtime="20201030 15:51:51.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.320" endtime="20201030 15:51:51.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:51.630" level="INFO">${PHILIP_RES} = [{'diff': 0.0003342640000000008}, {'diff': 0.0003611389999999999}, {'diff': 0.000334305}, {'diff': 0.0003343059999999995}, {'diff': 0.00033429100000000045}, {'diff': 0.00033431999999999906}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:51:51.627" endtime="20201030 15:51:51.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:51.634" level="INFO">${RESULT} = {'diff': [0.0003342640000000008, 0.0003611389999999999, 0.000334305, 0.0003343059999999995, 0.00033429100000000045, 0.00033431999999999906, 0.00033429100000000045, 0.00033431999999999906, 0.0003342910...</msg>
<status status="PASS" starttime="20201030 15:51:51.631" endtime="20201030 15:51:51.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.639" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:51.638" endtime="20201030 15:51:51.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.641" level="INFO">VALUE: [0.0003342640000000008, 0.0003611389999999999, 0.000334305, 0.0003343059999999995, 0.00033429100000000045, 0.00033431999999999906, 0.00033429100000000045, 0.00033431999999999906, 0.00033429100000000045, 0.00033427800000000035, 0.00033431900000000306, 0.0003342919999999999, 0.0003343609999999983, 0.0003342919999999999, 0.0003343470000000022, 0.0003343059999999995, 0.0003343059999999995, 0.00033431999999999906, 0.000334305, 0.0003342639999999973, 0.0003343189999999996, 0.0003343059999999995, 0.00033437500000000134, 0.000334305, 0.0003342919999999999, 0.0003343189999999996, 0.00033431999999999906, 0.0003343189999999996, 0.0003343059999999995, 0.00033431900000000306, 0.0003342919999999999, 0.00033438899999999744, 0.000334320000000006, 0.00033429100000000045, 0.0003342919999999999, 0.00033429100000000045, 0.0003343059999999995, 0.0003343189999999996, 0.0003343059999999995, 0.0003343189999999996, 0.0003343059999999995, 0.00033429100000000045, 0.0003343059999999995, 0.000334305, 0.00033431999999999906, 0.0003343189999999996, 0.00033431999999999906, 0.00033427800000000035, 0.0003342919999999999, 0.00033429100000000045]</msg>
<status status="PASS" starttime="20201030 15:51:51.640" endtime="20201030 15:51:51.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.635" endtime="20201030 15:51:51.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:51.647" endtime="20201030 15:51:51.666"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.645" endtime="20201030 15:51:51.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.644" endtime="20201030 15:51:51.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.277" endtime="20201030 15:51:51.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.277" endtime="20201030 15:51:51.668"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.676" endtime="20201030 15:51:51.704"></status>
</kw>
<msg timestamp="20201030 15:51:51.704" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.674" endtime="20201030 15:51:51.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.707" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.705" endtime="20201030 15:51:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.708" endtime="20201030 15:51:51.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.672" endtime="20201030 15:51:51.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.670" endtime="20201030 15:51:51.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.717" endtime="20201030 15:51:52.010"></status>
</kw>
<msg timestamp="20201030 15:51:52.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019241431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:51.716" endtime="20201030 15:51:52.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018879181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019241431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.019" endtime="20201030 15:51:52.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.037" endtime="20201030 15:51:52.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.713" endtime="20201030 15:51:52.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.711" endtime="20201030 15:51:52.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.051" level="INFO">${PHILIP_RES} = [{'diff': 0.00036225000000000146}, {'diff': 0.0003623199999999993}, {'diff': 0.00036230500000000027}, {'diff': 0.00036230500000000027}, {'diff': 0.00036231899999999984}, {'diff': 0.0003623329999999994...</msg>
<status status="PASS" starttime="20201030 15:51:52.045" endtime="20201030 15:51:52.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.061" level="INFO">${RESULT} = {'diff': [0.00036225000000000146, 0.0003623199999999993, 0.00036230500000000027, 0.00036230500000000027, 0.00036231899999999984, 0.0003623329999999994, 0.00036231899999999984, 0.000362361000000002, 0....</msg>
<status status="PASS" starttime="20201030 15:51:52.053" endtime="20201030 15:51:52.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.071" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.069" endtime="20201030 15:51:52.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.076" level="INFO">VALUE: [0.00036225000000000146, 0.0003623199999999993, 0.00036230500000000027, 0.00036230500000000027, 0.00036231899999999984, 0.0003623329999999994, 0.00036231899999999984, 0.000362361000000002, 0.00038037499999999877, 0.0003622910000000007, 0.0003622909999999972, 0.00036234700000000244, 0.000362361000000002, 0.0003623330000000029, 0.00036230500000000027, 0.0003623329999999994, 0.00036231899999999984, 0.00036231899999999984, 0.00036226400000000103, 0.0003623329999999994, 0.0003623329999999994, 0.00036230599999999974, 0.0003623199999999993, 0.0003623339999999989, 0.0003623200000000028, 0.00036230599999999974, 0.0003623480000000019, 0.0003623480000000019, 0.0003623199999999993, 0.0003623339999999989, 0.00036233299999999594, 0.0003623329999999994, 0.00036233300000000634, 0.0003623329999999994, 0.0003623329999999994, 0.000362346999999999, 0.0003623329999999994, 0.0003623329999999994, 0.0003623329999999994, 0.00036230500000000027, 0.0003623329999999994, 0.00036227799999999366, 0.0003623329999999994, 0.0003623470000000059, 0.0003623329999999994, 0.00036232000000000625, 0.0003623329999999994, 0.0003623329999999994, 0.0003623749999999981, 0.0003623339999999989]</msg>
<status status="PASS" starttime="20201030 15:51:52.073" endtime="20201030 15:51:52.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.063" endtime="20201030 15:51:52.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.085" endtime="20201030 15:51:52.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.083" endtime="20201030 15:51:52.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.081" endtime="20201030 15:51:52.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.668" endtime="20201030 15:51:52.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.668" endtime="20201030 15:51:52.106"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.115" endtime="20201030 15:51:52.144"></status>
</kw>
<msg timestamp="20201030 15:51:52.145" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.113" endtime="20201030 15:51:52.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.147" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.146" endtime="20201030 15:51:52.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.148" endtime="20201030 15:51:52.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.110" endtime="20201030 15:51:52.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.108" endtime="20201030 15:51:52.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.157" endtime="20201030 15:51:52.444"></status>
</kw>
<msg timestamp="20201030 15:51:52.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0191505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.156" endtime="20201030 15:51:52.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018759097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0191505, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:52.448" endtime="20201030 15:51:52.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.457" endtime="20201030 15:51:52.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.153" endtime="20201030 15:51:52.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.151" endtime="20201030 15:51:52.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.463" level="INFO">${PHILIP_RES} = [{'diff': 0.00039140300000000197}, {'diff': 0.0003914729999999998}, {'diff': 0.00039143099999999764}, {'diff': 0.0003913890000000024}, {'diff': 0.00039141700000000154}, {'diff': 0.00039140300000000197...</msg>
<status status="PASS" starttime="20201030 15:51:52.460" endtime="20201030 15:51:52.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.468" level="INFO">${RESULT} = {'diff': [0.00039140300000000197, 0.0003914729999999998, 0.00039143099999999764, 0.0003913890000000024, 0.00039141700000000154, 0.00039140300000000197, 0.00039143099999999764, 0.00039143000000000164, ...</msg>
<status status="PASS" starttime="20201030 15:51:52.464" endtime="20201030 15:51:52.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.472" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.471" endtime="20201030 15:51:52.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.474" level="INFO">VALUE: [0.00039140300000000197, 0.0003914729999999998, 0.00039143099999999764, 0.0003913890000000024, 0.00039141700000000154, 0.00039140300000000197, 0.00039143099999999764, 0.00039143000000000164, 0.00039142999999999817, 0.0003914449999999972, 0.00039145900000000025, 0.00039141600000000207, 0.00039144399999999774, 0.0003914450000000007, 0.00039145900000000025, 0.0003914310000000011, 0.00039142999999999817, 0.0003914440000000012, 0.0003914310000000011, 0.0003914029999999985, 0.0003914859999999999, 0.0003914440000000012, 0.00039141699999999807, 0.0003914310000000011, 0.00039138799999999946, 0.0003914580000000008, 0.00039145900000000025, 0.0003914450000000007, 0.0003914440000000012, 0.0003914300000000051, 0.0003914719999999969, 0.0003914449999999972, 0.0003914440000000047, 0.00039140199999999903, 0.00039144399999999774, 0.00039144500000000415, 0.0003914449999999972, 0.0003914860000000034, 0.00039142999999999817, 0.0003914589999999968, 0.00039141699999999807, 0.00039144399999999774, 0.00039144399999999774, 0.00039148700000000286, 0.00039148599999999645, 0.0003914579999999973, 0.0003914440000000047, 0.00039144399999999774, 0.00039143099999999764, 0.0003914310000000046]</msg>
<status status="PASS" starttime="20201030 15:51:52.473" endtime="20201030 15:51:52.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.468" endtime="20201030 15:51:52.476"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.479" endtime="20201030 15:51:52.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.478" endtime="20201030 15:51:52.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.477" endtime="20201030 15:51:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.107" endtime="20201030 15:51:52.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.106" endtime="20201030 15:51:52.500"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.509" endtime="20201030 15:51:52.541"></status>
</kw>
<msg timestamp="20201030 15:51:52.541" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.507" endtime="20201030 15:51:52.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.544" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.542" endtime="20201030 15:51:52.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.545" endtime="20201030 15:51:52.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.505" endtime="20201030 15:51:52.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.503" endtime="20201030 15:51:52.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.554" endtime="20201030 15:51:52.850"></status>
</kw>
<msg timestamp="20201030 15:51:52.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.552" endtime="20201030 15:51:52.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020131403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.860" endtime="20201030 15:51:52.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.878" endtime="20201030 15:51:52.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.550" endtime="20201030 15:51:52.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.548" endtime="20201030 15:51:52.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:52.892" level="INFO">${PHILIP_RES} = [{'diff': 0.00042158399999999915}, {'diff': 0.0004216799999999972}, {'diff': 0.0004216109999999988}, {'diff': 0.00042163800000000196}, {'diff': 0.00042162500000000186}, {'diff': 0.00042162500000000186...</msg>
<status status="PASS" starttime="20201030 15:51:52.885" endtime="20201030 15:51:52.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:52.897" level="INFO">${RESULT} = {'diff': [0.00042158399999999915, 0.0004216799999999972, 0.0004216109999999988, 0.00042163800000000196, 0.00042162500000000186, 0.00042162500000000186, 0.0004216249999999984, 0.00042163899999999796, 0...</msg>
<status status="PASS" starttime="20201030 15:51:52.894" endtime="20201030 15:51:52.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.902" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:52.901" endtime="20201030 15:51:52.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.904" level="INFO">VALUE: [0.00042158399999999915, 0.0004216799999999972, 0.0004216109999999988, 0.00042163800000000196, 0.00042162500000000186, 0.00042162500000000186, 0.0004216249999999984, 0.00042163899999999796, 0.00042165299999999753, 0.00042159699999999925, 0.00042162500000000186, 0.00042162500000000186, 0.00042162500000000186, 0.00042163900000000143, 0.0004215690000000001, 0.0004216249999999984, 0.00042163900000000143, 0.00042163900000000143, 0.00042162500000000186, 0.0004216110000000023, 0.00042162500000000186, 0.0004216109999999988, 0.00042163899999999796, 0.0004216379999999985, 0.0004216249999999984, 0.0004216249999999949, 0.0004216389999999945, 0.00042165299999999406, 0.0004216389999999945, 0.00042162500000000186, 0.0004215970000000027, 0.00042162500000000186, 0.00042163900000000143, 0.00042163800000000196, 0.00042163800000000196, 0.0004215970000000027, 0.00042163900000000143, 0.00042163900000000143, 0.0004216110000000023, 0.0004216249999999949, 0.0004215980000000022, 0.00042165299999999406, 0.0004216519999999946, 0.00042168000000000067, 0.00042161200000000176, 0.00042162500000000186, 0.00042162500000000186, 0.0004216520000000015, 0.00042163900000000143, 0.0004215980000000022]</msg>
<status status="PASS" starttime="20201030 15:51:52.903" endtime="20201030 15:51:52.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.898" endtime="20201030 15:51:52.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:52.910" endtime="20201030 15:51:52.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.908" endtime="20201030 15:51:52.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.907" endtime="20201030 15:51:52.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.501" endtime="20201030 15:51:52.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.500" endtime="20201030 15:51:52.931"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.939" endtime="20201030 15:51:52.972"></status>
</kw>
<msg timestamp="20201030 15:51:52.973" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.938" endtime="20201030 15:51:52.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:52.975" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:52.974" endtime="20201030 15:51:52.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.976" endtime="20201030 15:51:52.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.935" endtime="20201030 15:51:52.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.933" endtime="20201030 15:51:52.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:52.985" endtime="20201030 15:51:53.271"></status>
</kw>
<msg timestamp="20201030 15:51:53.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018853417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019306306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:52.984" endtime="20201030 15:51:53.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018853417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019306306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.276" endtime="20201030 15:51:53.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.285" endtime="20201030 15:51:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.981" endtime="20201030 15:51:53.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.979" endtime="20201030 15:51:53.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.293" level="INFO">${PHILIP_RES} = [{'diff': 0.000452888999999998}, {'diff': 0.00045288900000000146}, {'diff': 0.00045290200000000155}, {'diff': 0.000452903000000001}, {'diff': 0.00045298599999999897}, {'diff': 0.0004529019999999981}, ...</msg>
<status status="PASS" starttime="20201030 15:51:53.289" endtime="20201030 15:51:53.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.298" level="INFO">${RESULT} = {'diff': [0.000452888999999998, 0.00045288900000000146, 0.00045290200000000155, 0.000452903000000001, 0.00045298599999999897, 0.0004529019999999981, 0.000452903000000001, 0.0004529170000000006, 0.0004...</msg>
<status status="PASS" starttime="20201030 15:51:53.294" endtime="20201030 15:51:53.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.304" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.302" endtime="20201030 15:51:53.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.307" level="INFO">VALUE: [0.000452888999999998, 0.00045288900000000146, 0.00045290200000000155, 0.000452903000000001, 0.00045298599999999897, 0.0004529019999999981, 0.000452903000000001, 0.0004529170000000006, 0.00045290200000000155, 0.00045284700000000275, 0.0004529019999999981, 0.0004529160000000011, 0.00045293100000000017, 0.0004528469999999993, 0.0004529170000000006, 0.0004529170000000006, 0.0004529300000000007, 0.000452903000000001, 0.00045299999999999854, 0.000452888999999998, 0.000452903000000001, 0.0004529160000000011, 0.00045288900000000146, 0.0004529589999999993, 0.00045291599999999765, 0.0004528890000000049, 0.000452888999999998, 0.0004529439999999968, 0.0004529030000000045, 0.0004528329999999997, 0.00045293100000000364, 0.00045290299999999756, 0.0004529019999999981, 0.0004528890000000049, 0.00045290299999999756, 0.0004529030000000045, 0.00047711099999999534, 0.00045291700000000407, 0.000452888999999998, 0.0004528469999999993, 0.00045295799999999636, 0.00045291699999999713, 0.0004529160000000046, 0.00045290299999999756, 0.0004528469999999993, 0.00045294400000000373, 0.000452888999999998, 0.0004528890000000049, 0.000452888999999998, 0.00045291699999999713]</msg>
<status status="PASS" starttime="20201030 15:51:53.305" endtime="20201030 15:51:53.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.299" endtime="20201030 15:51:53.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.314" endtime="20201030 15:51:53.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.312" endtime="20201030 15:51:53.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.310" endtime="20201030 15:51:53.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.932" endtime="20201030 15:51:53.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:52.931" endtime="20201030 15:51:53.335"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.344" endtime="20201030 15:51:53.378"></status>
</kw>
<msg timestamp="20201030 15:51:53.379" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.343" endtime="20201030 15:51:53.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.381" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.380" endtime="20201030 15:51:53.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.382" endtime="20201030 15:51:53.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.340" endtime="20201030 15:51:53.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.338" endtime="20201030 15:51:53.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.391" endtime="20201030 15:51:53.698"></status>
</kw>
<msg timestamp="20201030 15:51:53.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.390" endtime="20201030 15:51:53.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020076347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020561583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:53.704" endtime="20201030 15:51:53.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.712" endtime="20201030 15:51:53.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.387" endtime="20201030 15:51:53.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.386" endtime="20201030 15:51:53.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:53.719" level="INFO">${PHILIP_RES} = [{'diff': 0.000485236}, {'diff': 0.00048526299999999967}, {'diff': 0.00048526399999999914}, {'diff': 0.00048526399999999914}, {'diff': 0.00048524999999999957}, {'diff': 0.00048526399999999914}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:51:53.716" endtime="20201030 15:51:53.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:53.723" level="INFO">${RESULT} = {'diff': [0.000485236, 0.00048526299999999967, 0.00048526399999999914, 0.00048526399999999914, 0.00048524999999999957, 0.00048526399999999914, 0.00048526399999999914, 0.00048527699999999924, 0.0004852...</msg>
<status status="PASS" starttime="20201030 15:51:53.720" endtime="20201030 15:51:53.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.727" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:53.726" endtime="20201030 15:51:53.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.730" level="INFO">VALUE: [0.000485236, 0.00048526299999999967, 0.00048526399999999914, 0.00048526399999999914, 0.00048524999999999957, 0.00048526399999999914, 0.00048526399999999914, 0.00048527699999999924, 0.0004852909999999988, 0.0004853190000000014, 0.00048524999999999957, 0.0005130280000000022, 0.00048531899999999795, 0.00048526399999999914, 0.00048526399999999914, 0.00048524999999999957, 0.00048526299999999967, 0.0004852640000000026, 0.00048529200000000175, 0.0004852640000000026, 0.00048526399999999567, 0.000485236, 0.00048533300000000446, 0.00048526399999999914, 0.00048526399999999914, 0.0004852500000000065, 0.00048527800000000565, 0.00048527699999999924, 0.00048524999999999957, 0.0004852779999999987, 0.00048526399999999914, 0.0004853199999999974, 0.00048526399999999914, 0.00048526299999999967, 0.0004852779999999987, 0.000485236, 0.000485236, 0.0004852779999999987, 0.00048526399999999914, 0.00048526399999999914, 0.00048522200000000043, 0.00048526399999999914, 0.0004852919999999983, 0.0004852779999999987, 0.00048524999999999957, 0.00048524999999999957, 0.00048526399999999914, 0.00048524999999999957, 0.0004852079999999939, 0.00048524999999999957]</msg>
<status status="PASS" starttime="20201030 15:51:53.728" endtime="20201030 15:51:53.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.724" endtime="20201030 15:51:53.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:53.735" endtime="20201030 15:51:53.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.733" endtime="20201030 15:51:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.732" endtime="20201030 15:51:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.336" endtime="20201030 15:51:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.335" endtime="20201030 15:51:53.755"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.764" endtime="20201030 15:51:53.800"></status>
</kw>
<msg timestamp="20201030 15:51:53.801" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.762" endtime="20201030 15:51:53.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:53.803" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:53.802" endtime="20201030 15:51:53.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.804" endtime="20201030 15:51:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.760" endtime="20201030 15:51:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.758" endtime="20201030 15:51:53.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:53.814" endtime="20201030 15:51:54.099"></status>
</kw>
<msg timestamp="20201030 15:51:54.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:53.812" endtime="20201030 15:51:54.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:51:54.103" endtime="20201030 15:51:54.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.111" endtime="20201030 15:51:54.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.809" endtime="20201030 15:51:54.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.807" endtime="20201030 15:51:54.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.118" level="INFO">${PHILIP_RES} = [{'diff': 0.0005187779999999975}, {'diff': 0.0005187080000000031}, {'diff': 0.0005187079999999997}, {'diff': 0.0005187219999999992}, {'diff': 0.0005187219999999992}, {'diff': 0.0005187079999999997}, {...</msg>
<status status="PASS" starttime="20201030 15:51:54.114" endtime="20201030 15:51:54.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.122" level="INFO">${RESULT} = {'diff': [0.0005187779999999975, 0.0005187080000000031, 0.0005187079999999997, 0.0005187219999999992, 0.0005187219999999992, 0.0005187079999999997, 0.0005187219999999992, 0.000518681, 0.00051870799999...</msg>
<status status="PASS" starttime="20201030 15:51:54.119" endtime="20201030 15:51:54.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.126" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.125" endtime="20201030 15:51:54.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.129" level="INFO">VALUE: [0.0005187779999999975, 0.0005187080000000031, 0.0005187079999999997, 0.0005187219999999992, 0.0005187219999999992, 0.0005187079999999997, 0.0005187219999999992, 0.000518681, 0.0005187079999999997, 0.0005187219999999992, 0.0005187089999999991, 0.0005187629999999985, 0.0005187079999999997, 0.0005186670000000004, 0.0005186390000000013, 0.0005187079999999997, 0.0005186800000000005, 0.0005187079999999997, 0.0005187080000000031, 0.000518778000000001, 0.0005186949999999996, 0.0005306389999999994, 0.0005187499999999984, 0.0005186940000000001, 0.0005187219999999992, 0.0005187079999999997, 0.0005187079999999997, 0.000518763999999998, 0.0005187089999999991, 0.0005187079999999997, 0.0005187079999999997, 0.0005186949999999996, 0.0005186940000000001, 0.0005187079999999997, 0.0005187089999999991, 0.0005186940000000001, 0.0005187499999999984, 0.000518681, 0.0005187219999999992, 0.0005186800000000005, 0.0005187079999999997, 0.0005187089999999991, 0.0005187079999999997, 0.0005187219999999992, 0.0005186949999999996, 0.0005187219999999992, 0.0005187079999999997, 0.0005187229999999987, 0.000518681, 0.000518666000000001]</msg>
<status status="PASS" starttime="20201030 15:51:54.127" endtime="20201030 15:51:54.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.123" endtime="20201030 15:51:54.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.137" endtime="20201030 15:51:54.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.135" endtime="20201030 15:51:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.134" endtime="20201030 15:51:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.756" endtime="20201030 15:51:54.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:53.756" endtime="20201030 15:51:54.157"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.166" endtime="20201030 15:51:54.204"></status>
</kw>
<msg timestamp="20201030 15:51:54.205" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.164" endtime="20201030 15:51:54.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.207" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.206" endtime="20201030 15:51:54.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.208" endtime="20201030 15:51:54.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.162" endtime="20201030 15:51:54.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.160" endtime="20201030 15:51:54.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.217" endtime="20201030 15:51:54.504"></status>
</kw>
<msg timestamp="20201030 15:51:54.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.216" endtime="20201030 15:51:54.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018851847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019405014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.508" endtime="20201030 15:51:54.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.516" endtime="20201030 15:51:54.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.213" endtime="20201030 15:51:54.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.211" endtime="20201030 15:51:54.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.522" level="INFO">${PHILIP_RES} = [{'diff': 0.0005531670000000002}, {'diff': 0.000553221999999999}, {'diff': 0.000553223000000002}, {'diff': 0.0005532079999999995}, {'diff': 0.0005532359999999986}, {'diff': 0.000553221999999999}, {'di...</msg>
<status status="PASS" starttime="20201030 15:51:54.519" endtime="20201030 15:51:54.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.527" level="INFO">${RESULT} = {'diff': [0.0005531670000000002, 0.000553221999999999, 0.000553223000000002, 0.0005532079999999995, 0.0005532359999999986, 0.000553221999999999, 0.0005861249999999998, 0.0005531949999999994, 0.0005532...</msg>
<status status="PASS" starttime="20201030 15:51:54.523" endtime="20201030 15:51:54.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.531" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.530" endtime="20201030 15:51:54.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.534" level="INFO">VALUE: [0.0005531670000000002, 0.000553221999999999, 0.000553223000000002, 0.0005532079999999995, 0.0005532359999999986, 0.000553221999999999, 0.0005861249999999998, 0.0005531949999999994, 0.0005532369999999981, 0.0005532090000000024, 0.000553221999999999, 0.0005532499999999982, 0.0005532499999999982, 0.000553223000000002, 0.0005532499999999982, 0.0005532359999999986, 0.0005532500000000017, 0.0005532229999999985, 0.0005532639999999978, 0.0005532360000000021, 0.000553221999999999, 0.0005532359999999986, 0.0005532369999999981, 0.0005532499999999982, 0.000553221999999999, 0.0005532500000000051, 0.0005532229999999985, 0.000553221999999999, 0.000553221999999999, 0.000553221999999999, 0.000553208999999999, 0.0005532230000000055, 0.0005532079999999995, 0.0005531939999999999, 0.0005532499999999982, 0.0005532229999999985, 0.0005532359999999986, 0.000553221999999999, 0.0005532229999999985, 0.0005532500000000051, 0.0005532359999999986, 0.0005532499999999982, 0.0005532359999999986, 0.0005532499999999982, 0.0005531949999999994, 0.0005532500000000051, 0.0005532359999999986, 0.0005532079999999995, 0.0005532359999999986, 0.0005532359999999986]</msg>
<status status="PASS" starttime="20201030 15:51:54.533" endtime="20201030 15:51:54.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.528" endtime="20201030 15:51:54.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.547" endtime="20201030 15:51:54.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.545" endtime="20201030 15:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.544" endtime="20201030 15:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.158" endtime="20201030 15:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.158" endtime="20201030 15:51:54.567"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.576" endtime="20201030 15:51:54.616"></status>
</kw>
<msg timestamp="20201030 15:51:54.617" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.574" endtime="20201030 15:51:54.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.619" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.618" endtime="20201030 15:51:54.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.620" endtime="20201030 15:51:54.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.572" endtime="20201030 15:51:54.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.570" endtime="20201030 15:51:54.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.630" endtime="20201030 15:51:54.916"></status>
</kw>
<msg timestamp="20201030 15:51:54.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019156292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.628" endtime="20201030 15:51:54.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019156292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019745097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:54.920" endtime="20201030 15:51:54.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.928" endtime="20201030 15:51:54.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.626" endtime="20201030 15:51:54.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.624" endtime="20201030 15:51:54.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:54.935" level="INFO">${PHILIP_RES} = [{'diff': 0.0005888050000000013}, {'diff': 0.0005888330000000004}, {'diff': 0.0005888609999999996}, {'diff': 0.000588847}, {'diff': 0.0005888330000000004}, {'diff': 0.0005888330000000004}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:51:54.931" endtime="20201030 15:51:54.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:54.939" level="INFO">${RESULT} = {'diff': [0.0005888050000000013, 0.0005888330000000004, 0.0005888609999999996, 0.000588847, 0.0005888330000000004, 0.0005888330000000004, 0.0005888339999999999, 0.000588847, 0.0005888330000000004, 0.0...</msg>
<status status="PASS" starttime="20201030 15:51:54.936" endtime="20201030 15:51:54.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.943" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:54.942" endtime="20201030 15:51:54.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:54.945" level="INFO">VALUE: [0.0005888050000000013, 0.0005888330000000004, 0.0005888609999999996, 0.000588847, 0.0005888330000000004, 0.0005888330000000004, 0.0005888339999999999, 0.000588847, 0.0005888330000000004, 0.000588861000000003, 0.0005888330000000004, 0.0005888479999999995, 0.0005888609999999996, 0.0005888479999999995, 0.0005888330000000004, 0.0005888889999999987, 0.000588847, 0.000588847, 0.0005888339999999999, 0.0005888049999999978, 0.0005888189999999974, 0.0005888329999999969, 0.0005888469999999965, 0.0005888609999999961, 0.0005888469999999965, 0.000588847999999996, 0.0005888329999999969, 0.0005888339999999964, 0.0005888329999999969, 0.0005888469999999965, 0.0005887909999999982, 0.0006051389999999976, 0.0005888469999999965, 0.0005887919999999977, 0.0005888890000000022, 0.0005888469999999965, 0.0005888750000000026, 0.000588861000000003, 0.0005888339999999964, 0.000588861000000003, 0.0005888480000000029, 0.0005888329999999969, 0.0005888340000000034, 0.0005888330000000039, 0.0005888330000000039, 0.0005888200000000038, 0.0005888750000000026, 0.0005888200000000038, 0.0005888470000000035, 0.0005888330000000039]</msg>
<status status="PASS" starttime="20201030 15:51:54.944" endtime="20201030 15:51:54.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.939" endtime="20201030 15:51:54.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:54.950" endtime="20201030 15:51:54.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.949" endtime="20201030 15:51:54.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.947" endtime="20201030 15:51:54.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.568" endtime="20201030 15:51:54.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.568" endtime="20201030 15:51:54.971"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:54.980" endtime="20201030 15:51:55.022"></status>
</kw>
<msg timestamp="20201030 15:51:55.023" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:54.978" endtime="20201030 15:51:55.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.025" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.024" endtime="20201030 15:51:55.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.026" endtime="20201030 15:51:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.975" endtime="20201030 15:51:55.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.973" endtime="20201030 15:51:55.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.035" endtime="20201030 15:51:55.321"></status>
</kw>
<msg timestamp="20201030 15:51:55.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.034" endtime="20201030 15:51:55.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019840861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020466361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.325" endtime="20201030 15:51:55.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.333" endtime="20201030 15:51:55.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.031" endtime="20201030 15:51:55.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.029" endtime="20201030 15:51:55.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.340" level="INFO">${PHILIP_RES} = [{'diff': 0.0006254999999999976}, {'diff': 0.0006255689999999994}, {'diff': 0.0006255410000000003}, {'diff': 0.0006255280000000002}, {'diff': 0.0006255280000000002}, {'diff': 0.0006255549999999999}, {...</msg>
<status status="PASS" starttime="20201030 15:51:55.337" endtime="20201030 15:51:55.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.344" level="INFO">${RESULT} = {'diff': [0.0006254999999999976, 0.0006255689999999994, 0.0006255410000000003, 0.0006255280000000002, 0.0006255280000000002, 0.0006255549999999999, 0.0006255270000000007, 0.0006255559999999993, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:55.341" endtime="20201030 15:51:55.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.348" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.347" endtime="20201030 15:51:55.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.351" level="INFO">VALUE: [0.0006254999999999976, 0.0006255689999999994, 0.0006255410000000003, 0.0006255280000000002, 0.0006255280000000002, 0.0006255549999999999, 0.0006255270000000007, 0.0006255559999999993, 0.0006255280000000002, 0.0006254579999999989, 0.0006255140000000006, 0.0006255280000000002, 0.0006254590000000018, 0.0006497090000000018, 0.0006255689999999994, 0.0006254579999999989, 0.0006255140000000006, 0.0006255970000000055, 0.0006254580000000023, 0.0006255000000000011, 0.0006255000000000011, 0.0006255000000000011, 0.0006255140000000006, 0.0006255000000000011, 0.0006255410000000003, 0.0006255420000000067, 0.0006255280000000002, 0.0006255000000000011, 0.0006255280000000002, 0.0006255280000000002, 0.000625486999999994, 0.0006255270000000007, 0.0006255140000000006, 0.0006254859999999945, 0.0006255549999999999, 0.0006255280000000002, 0.0006255280000000002, 0.0006255280000000002, 0.0006255270000000007, 0.0006254860000000015, 0.0006255419999999998, 0.000625582999999999, 0.0006255280000000002, 0.0006255549999999999, 0.0006255410000000003, 0.0006255280000000002, 0.0006255280000000002, 0.0006255280000000002, 0.0006255270000000007, 0.0006255280000000002]</msg>
<status status="PASS" starttime="20201030 15:51:55.349" endtime="20201030 15:51:55.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.345" endtime="20201030 15:51:55.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.356" endtime="20201030 15:51:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.355" endtime="20201030 15:51:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.354" endtime="20201030 15:51:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.972" endtime="20201030 15:51:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:54.971" endtime="20201030 15:51:55.377"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.386" endtime="20201030 15:51:55.429"></status>
</kw>
<msg timestamp="20201030 15:51:55.430" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.384" endtime="20201030 15:51:55.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.432" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.431" endtime="20201030 15:51:55.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.433" endtime="20201030 15:51:55.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.381" endtime="20201030 15:51:55.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.380" endtime="20201030 15:51:55.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.442" endtime="20201030 15:51:55.730"></status>
</kw>
<msg timestamp="20201030 15:51:55.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.441" endtime="20201030 15:51:55.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019842458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.734" endtime="20201030 15:51:55.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.742" endtime="20201030 15:51:55.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.438" endtime="20201030 15:51:55.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.436" endtime="20201030 15:51:55.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:55.749" level="INFO">${PHILIP_RES} = [{'diff': 0.0006632640000000002}, {'diff': 0.0006633190000000025}, {'diff': 0.0006633060000000024}, {'diff': 0.0006632499999999972}, {'diff': 0.0006632919999999994}, {'diff': 0.0006633469999999982}, {...</msg>
<status status="PASS" starttime="20201030 15:51:55.746" endtime="20201030 15:51:55.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:55.754" level="INFO">${RESULT} = {'diff': [0.0006632640000000002, 0.0006633190000000025, 0.0006633060000000024, 0.0006632499999999972, 0.0006632919999999994, 0.0006633469999999982, 0.0006633749999999973, 0.0006633190000000025, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:51:55.750" endtime="20201030 15:51:55.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.759" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:55.757" endtime="20201030 15:51:55.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.761" level="INFO">VALUE: [0.0006632640000000002, 0.0006633190000000025, 0.0006633060000000024, 0.0006632499999999972, 0.0006632919999999994, 0.0006633469999999982, 0.0006633749999999973, 0.0006633190000000025, 0.0006632919999999994, 0.0006633059999999989, 0.0006633059999999989, 0.0006632360000000011, 0.0006632909999999999, 0.0006633060000000024, 0.0006632919999999994, 0.0006633059999999989, 0.000663304999999996, 0.0006633189999999956, 0.0006632909999999964, 0.000663304999999996, 0.000663320000000002, 0.000663320000000002, 0.0006632920000000028, 0.0006632500000000041, 0.0006633190000000025, 0.0006633190000000025, 0.0006633060000000024, 0.0006633060000000024, 0.0006632919999999959, 0.0006632499999999972, 0.000663221999999998, 0.0006633059999999955, 0.0006633060000000024, 0.000663320000000002, 0.0006633190000000025, 0.0006633050000000029, 0.0006633050000000029, 0.0006633060000000024, 0.0006633059999999955, 0.0006632779999999963, 0.0006632919999999959, 0.0006632909999999964, 0.0006633189999999956, 0.0006633059999999955, 0.0006632919999999959, 0.0006632920000000028, 0.0006632910000000034, 0.0006633330000000021, 0.0006633060000000024, 0.0006632780000000033]</msg>
<status status="PASS" starttime="20201030 15:51:55.760" endtime="20201030 15:51:55.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.755" endtime="20201030 15:51:55.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:55.766" endtime="20201030 15:51:55.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.765" endtime="20201030 15:51:55.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.763" endtime="20201030 15:51:55.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.378" endtime="20201030 15:51:55.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.378" endtime="20201030 15:51:55.787"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.796" endtime="20201030 15:51:55.843"></status>
</kw>
<msg timestamp="20201030 15:51:55.844" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.794" endtime="20201030 15:51:55.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:55.849" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:55.846" endtime="20201030 15:51:55.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.851" endtime="20201030 15:51:55.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.791" endtime="20201030 15:51:55.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.789" endtime="20201030 15:51:55.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:55.871" endtime="20201030 15:51:56.167"></status>
</kw>
<msg timestamp="20201030 15:51:56.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:55.868" endtime="20201030 15:51:56.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019881486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.172" endtime="20201030 15:51:56.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.180" endtime="20201030 15:51:56.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.862" endtime="20201030 15:51:56.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.858" endtime="20201030 15:51:56.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.186" level="INFO">${PHILIP_RES} = [{'diff': 0.0007021110000000018}, {'diff': 0.0007021390000000009}, {'diff': 0.0007021670000000001}, {'diff': 0.0007021670000000001}, {'diff': 0.0007020830000000026}, {'diff': 0.0007021390000000009}, {...</msg>
<status status="PASS" starttime="20201030 15:51:56.183" endtime="20201030 15:51:56.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.190" level="INFO">${RESULT} = {'diff': [0.0007021110000000018, 0.0007021390000000009, 0.0007021670000000001, 0.0007021670000000001, 0.0007020830000000026, 0.0007021390000000009, 0.0007021530000000005, 0.0007021530000000005, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:56.187" endtime="20201030 15:51:56.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.195" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.194" endtime="20201030 15:51:56.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.197" level="INFO">VALUE: [0.0007021110000000018, 0.0007021390000000009, 0.0007021670000000001, 0.0007021670000000001, 0.0007020830000000026, 0.0007021390000000009, 0.0007021530000000005, 0.0007021530000000005, 0.0007021530000000005, 0.0007021809999999996, 0.0007021530000000005, 0.0007022080000000028, 0.0007021390000000009, 0.0007021110000000018, 0.0007021670000000001, 0.0007021810000000031, 0.0007021669999999966, 0.000702153000000004, 0.0007021389999999975, 0.000702152999999997, 0.0007021250000000048, 0.0007020969999999987, 0.000702153000000004, 0.0007022360000000019, 0.000702152999999997, 0.0007021670000000035, 0.0007021669999999966, 0.000702153000000004, 0.0007021519999999976, 0.0007021249999999979, 0.0007021660000000041, 0.0007021659999999971, 0.0007021799999999967, 0.0007021390000000044, 0.0007021799999999967, 0.0007022360000000019, 0.0007021810000000031, 0.0007021809999999962, 0.000702153000000004, 0.0007021809999999962, 0.0007021670000000035, 0.0007021670000000035, 0.0007020969999999987, 0.000702153000000004, 0.0007021669999999966, 0.000702152999999997, 0.0007021390000000044, 0.0007021669999999966, 0.0007022080000000028, 0.0007021810000000031]</msg>
<status status="PASS" starttime="20201030 15:51:56.196" endtime="20201030 15:51:56.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.191" endtime="20201030 15:51:56.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.203" endtime="20201030 15:51:56.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.201" endtime="20201030 15:51:56.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.200" endtime="20201030 15:51:56.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.788" endtime="20201030 15:51:56.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:55.787" endtime="20201030 15:51:56.223"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.232" endtime="20201030 15:51:56.282"></status>
</kw>
<msg timestamp="20201030 15:51:56.282" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.231" endtime="20201030 15:51:56.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.285" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.283" endtime="20201030 15:51:56.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.286" endtime="20201030 15:51:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.228" endtime="20201030 15:51:56.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.226" endtime="20201030 15:51:56.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.295" endtime="20201030 15:51:56.581"></status>
</kw>
<msg timestamp="20201030 15:51:56.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02107625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:56.294" endtime="20201030 15:51:56.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02107625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:51:56.586" endtime="20201030 15:51:56.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.594" endtime="20201030 15:51:56.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.291" endtime="20201030 15:51:56.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.289" endtime="20201030 15:51:56.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:56.600" level="INFO">${PHILIP_RES} = [{'diff': 0.0007420970000000006}, {'diff': 0.000780305999999998}, {'diff': 0.0007420980000000001}, {'diff': 0.0007421110000000002}, {'diff': 0.000742180000000002}, {'diff': 0.0007421110000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 15:51:56.597" endtime="20201030 15:51:56.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:56.605" level="INFO">${RESULT} = {'diff': [0.0007420970000000006, 0.000780305999999998, 0.0007420980000000001, 0.0007421110000000002, 0.000742180000000002, 0.0007421110000000002, 0.0007421110000000002, 0.0007420970000000006, 0.000742...</msg>
<status status="PASS" starttime="20201030 15:51:56.601" endtime="20201030 15:51:56.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.609" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:56.608" endtime="20201030 15:51:56.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.611" level="INFO">VALUE: [0.0007420970000000006, 0.000780305999999998, 0.0007420980000000001, 0.0007421110000000002, 0.000742180000000002, 0.0007421110000000002, 0.0007421110000000002, 0.0007420970000000006, 0.0007421389999999993, 0.0007421249999999997, 0.0007421110000000002, 0.0007420840000000005, 0.0007420139999999992, 0.0007420970000000006, 0.0007421110000000036, 0.0007421109999999967, 0.0007421110000000036, 0.000742068999999998, 0.0007420830000000045, 0.0007421109999999967, 0.0007421250000000032, 0.0007421809999999945, 0.000742084000000004, 0.000742083999999997, 0.0007421110000000036, 0.0007421249999999963, 0.0007421110000000036, 0.0007421109999999967, 0.0007420970000000041, 0.0007420969999999971, 0.0007420970000000041, 0.0007421109999999967, 0.0007421110000000036, 0.0007421109999999967, 0.0007420980000000035, 0.0007420969999999971, 0.0007420970000000041, 0.0007421249999999963, 0.0007421110000000036, 0.0007421109999999967, 0.0007420970000000041, 0.0007420969999999971, 0.0007715420000000001, 0.0007421110000000036, 0.0007421249999999963, 0.0007421110000000036, 0.0007420969999999971, 0.0007420550000000053, 0.0007420969999999971, 0.0007421390000000028]</msg>
<status status="PASS" starttime="20201030 15:51:56.610" endtime="20201030 15:51:56.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.605" endtime="20201030 15:51:56.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.618" endtime="20201030 15:51:56.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.616" endtime="20201030 15:51:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.615" endtime="20201030 15:51:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.224" endtime="20201030 15:51:56.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.224" endtime="20201030 15:51:56.638"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.647" endtime="20201030 15:51:56.696"></status>
</kw>
<msg timestamp="20201030 15:51:56.697" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.645" endtime="20201030 15:51:56.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.699" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.698" endtime="20201030 15:51:56.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.701" endtime="20201030 15:51:56.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.643" endtime="20201030 15:51:56.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.641" endtime="20201030 15:51:56.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.710" endtime="20201030 15:51:56.995"></status>
</kw>
<msg timestamp="20201030 15:51:56.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.708" endtime="20201030 15:51:56.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:56.999" endtime="20201030 15:51:57.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.008" endtime="20201030 15:51:57.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.706" endtime="20201030 15:51:57.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.704" endtime="20201030 15:51:57.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.014" level="INFO">${PHILIP_RES} = [{'diff': 0.0007830979999999994}, {'diff': 0.0007831389999999987}, {'diff': 0.0007831109999999995}, {'diff': 0.0007831389999999987}, {'diff': 0.0007831390000000021}, {'diff': 0.0007831390000000021}, {...</msg>
<status status="PASS" starttime="20201030 15:51:57.011" endtime="20201030 15:51:57.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.019" level="INFO">${RESULT} = {'diff': [0.0007830979999999994, 0.0007831389999999987, 0.0007831109999999995, 0.0007831389999999987, 0.0007831390000000021, 0.0007831390000000021, 0.0007831799999999979, 0.0007831389999999987, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:51:57.015" endtime="20201030 15:51:57.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.024" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.023" endtime="20201030 15:51:57.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.026" level="INFO">VALUE: [0.0007830979999999994, 0.0007831389999999987, 0.0007831109999999995, 0.0007831389999999987, 0.0007831390000000021, 0.0007831390000000021, 0.0007831799999999979, 0.0007831389999999987, 0.0007831249999999991, 0.0007831249999999991, 0.0007831810000000008, 0.0007831380000000027, 0.0007831670000000013, 0.0007831389999999987, 0.0007831249999999991, 0.0007831390000000021, 0.0008038200000000037, 0.0007831670000000013, 0.0007831940000000009, 0.0007830690000000043, 0.0007831249999999956, 0.0007831520000000022, 0.0007831249999999956, 0.0007831380000000027, 0.0007831109999999961, 0.0007831380000000027, 0.0007831249999999956, 0.0007830699999999968, 0.0007831530000000017, 0.0007831389999999952, 0.0007831530000000017, 0.0007831109999999961, 0.0007831390000000021, 0.0007831250000000026, 0.0007831380000000027, 0.0007831250000000026, 0.0007831519999999953, 0.0007831390000000021, 0.0007831249999999956, 0.0007831810000000008, 0.000783111000000003, 0.0007831530000000017, 0.000783111000000003, 0.0007831109999999961, 0.0007831250000000026, 0.0007831379999999957, 0.0007831390000000021, 0.0007831249999999956, 0.0007831250000000026, 0.0007830840000000033]</msg>
<status status="PASS" starttime="20201030 15:51:57.025" endtime="20201030 15:51:57.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.020" endtime="20201030 15:51:57.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.032" endtime="20201030 15:51:57.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.030" endtime="20201030 15:51:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.029" endtime="20201030 15:51:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.639" endtime="20201030 15:51:57.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.639" endtime="20201030 15:51:57.052"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.061" endtime="20201030 15:51:57.113"></status>
</kw>
<msg timestamp="20201030 15:51:57.114" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.059" endtime="20201030 15:51:57.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.116" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.115" endtime="20201030 15:51:57.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.117" endtime="20201030 15:51:57.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.057" endtime="20201030 15:51:57.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.055" endtime="20201030 15:51:57.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.127" endtime="20201030 15:51:57.438"></status>
</kw>
<msg timestamp="20201030 15:51:57.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019101889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.125" endtime="20201030 15:51:57.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019101889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.446" endtime="20201030 15:51:57.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.454" endtime="20201030 15:51:57.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.122" endtime="20201030 15:51:57.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.120" endtime="20201030 15:51:57.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.461" level="INFO">${PHILIP_RES} = [{'diff': 0.0008252220000000005}, {'diff': 0.0008252369999999995}, {'diff': 0.0008252220000000005}, {'diff': 0.0008252500000000031}, {'diff': 0.0008252229999999999}, {'diff': 0.0008252499999999996}, {...</msg>
<status status="PASS" starttime="20201030 15:51:57.457" endtime="20201030 15:51:57.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.465" level="INFO">${RESULT} = {'diff': [0.0008252220000000005, 0.0008252369999999995, 0.0008252220000000005, 0.0008252500000000031, 0.0008252229999999999, 0.0008252499999999996, 0.000825236, 0.000825236, 0.000825236, 0.00082517999...</msg>
<status status="PASS" starttime="20201030 15:51:57.462" endtime="20201030 15:51:57.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.469" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.468" endtime="20201030 15:51:57.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.472" level="INFO">VALUE: [0.0008252220000000005, 0.0008252369999999995, 0.0008252220000000005, 0.0008252500000000031, 0.0008252229999999999, 0.0008252499999999996, 0.000825236, 0.000825236, 0.000825236, 0.0008251799999999983, 0.0008252919999999983, 0.000825236, 0.0008252220000000005, 0.0008252779999999987, 0.000825236, 0.0008252219999999935, 0.0008252499999999996, 0.000825236, 0.0008252639999999992, 0.0008252629999999997, 0.0008252500000000065, 0.0008252640000000061, 0.0008252499999999996, 0.0008252499999999996, 0.0008252499999999996, 0.0008252629999999997, 0.0008252499999999996, 0.0008252220000000005, 0.0008253049999999984, 0.0008252499999999996, 0.000825236, 0.0008251810000000012, 0.000825236, 0.000825236, 0.000825236, 0.000825236, 0.000825236, 0.0008252640000000061, 0.0008252639999999992, 0.0008252499999999996, 0.0008252499999999996, 0.000825236, 0.0008252499999999996, 0.0008252639999999992, 0.0008252499999999996, 0.0008252229999999999, 0.000825236, 0.000825236, 0.0008252229999999999, 0.0008253190000000049]</msg>
<status status="PASS" starttime="20201030 15:51:57.470" endtime="20201030 15:51:57.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.466" endtime="20201030 15:51:57.473"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.477" endtime="20201030 15:51:57.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.475" endtime="20201030 15:51:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.474" endtime="20201030 15:51:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.053" endtime="20201030 15:51:57.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.053" endtime="20201030 15:51:57.497"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.506" endtime="20201030 15:51:57.562"></status>
</kw>
<msg timestamp="20201030 15:51:57.563" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.505" endtime="20201030 15:51:57.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.565" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.564" endtime="20201030 15:51:57.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.566" endtime="20201030 15:51:57.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.502" endtime="20201030 15:51:57.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.500" endtime="20201030 15:51:57.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.576" endtime="20201030 15:51:57.862"></status>
</kw>
<msg timestamp="20201030 15:51:57.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.574" endtime="20201030 15:51:57.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.866" endtime="20201030 15:51:57.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.874" endtime="20201030 15:51:57.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.572" endtime="20201030 15:51:57.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.570" endtime="20201030 15:51:57.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:57.881" level="INFO">${PHILIP_RES} = [{'diff': 0.0008684160000000003}, {'diff': 0.0008684169999999998}, {'diff': 0.0008684299999999999}, {'diff': 0.0008684309999999994}, {'diff': 0.0008684160000000003}, {'diff': 0.0008684169999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:51:57.877" endtime="20201030 15:51:57.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:57.885" level="INFO">${RESULT} = {'diff': [0.0008684160000000003, 0.0008684169999999998, 0.0008684299999999999, 0.0008684309999999994, 0.0008684160000000003, 0.0008684169999999998, 0.000886513999999998, 0.0008684439999999995, 0.00086...</msg>
<status status="PASS" starttime="20201030 15:51:57.882" endtime="20201030 15:51:57.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.889" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:57.888" endtime="20201030 15:51:57.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.892" level="INFO">VALUE: [0.0008684160000000003, 0.0008684169999999998, 0.0008684299999999999, 0.0008684309999999994, 0.0008684160000000003, 0.0008684169999999998, 0.000886513999999998, 0.0008684439999999995, 0.0008684169999999998, 0.0008684169999999998, 0.0008684859999999982, 0.0008684449999999989, 0.000868443999999996, 0.0008684450000000024, 0.0008684440000000029, 0.0008684170000000033, 0.0008684159999999969, 0.0008684310000000028, 0.0008684160000000038, 0.0008684450000000024, 0.0008684299999999964, 0.0008684169999999963, 0.0008684440000000029, 0.0008684310000000028, 0.0008684169999999963, 0.0008684859999999947, 0.0008683889999999972, 0.0008684300000000034, 0.0008684170000000033, 0.0008684299999999964, 0.000868360999999998, 0.0008684300000000034, 0.0008684720000000021, 0.0008684299999999964, 0.0008684169999999963, 0.0008684300000000034, 0.0008684310000000028, 0.0008684170000000033, 0.0008684719999999951, 0.0008684309999999959, 0.0008684300000000034, 0.0008684580000000025, 0.0008684449999999955, 0.0008684299999999964, 0.0008684860000000016, 0.0008684300000000034, 0.0008684310000000028, 0.0008684860000000016, 0.0008684300000000034, 0.0008683749999999907]</msg>
<status status="PASS" starttime="20201030 15:51:57.890" endtime="20201030 15:51:57.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.886" endtime="20201030 15:51:57.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:57.900" endtime="20201030 15:51:57.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.899" endtime="20201030 15:51:57.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.898" endtime="20201030 15:51:57.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.498" endtime="20201030 15:51:57.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.498" endtime="20201030 15:51:57.921"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.930" endtime="20201030 15:51:57.987"></status>
</kw>
<msg timestamp="20201030 15:51:57.987" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.928" endtime="20201030 15:51:57.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:57.990" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:57.988" endtime="20201030 15:51:57.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:57.991" endtime="20201030 15:51:57.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.926" endtime="20201030 15:51:57.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.924" endtime="20201030 15:51:57.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.000" endtime="20201030 15:51:58.306"></status>
</kw>
<msg timestamp="20201030 15:51:58.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019148056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:57.999" endtime="20201030 15:51:58.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019148056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.310" endtime="20201030 15:51:58.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.318" endtime="20201030 15:51:58.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.996" endtime="20201030 15:51:58.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.994" endtime="20201030 15:51:58.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.325" level="INFO">${PHILIP_RES} = [{'diff': 0.000912679999999999}, {'diff': 0.0009127080000000017}, {'diff': 0.0009127079999999982}, {'diff': 0.0009127219999999978}, {'diff': 0.0009127090000000011}, {'diff': 0.0009127089999999977}, {'...</msg>
<status status="PASS" starttime="20201030 15:51:58.322" endtime="20201030 15:51:58.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.330" level="INFO">${RESULT} = {'diff': [0.000912679999999999, 0.0009127080000000017, 0.0009127079999999982, 0.0009127219999999978, 0.0009127090000000011, 0.0009127089999999977, 0.0009127230000000007, 0.0009127090000000011, 0.00091...</msg>
<status status="PASS" starttime="20201030 15:51:58.326" endtime="20201030 15:51:58.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.334" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.333" endtime="20201030 15:51:58.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.337" level="INFO">VALUE: [0.000912679999999999, 0.0009127080000000017, 0.0009127079999999982, 0.0009127219999999978, 0.0009127090000000011, 0.0009127089999999977, 0.0009127230000000007, 0.0009127090000000011, 0.0009127079999999982, 0.0009430279999999985, 0.0009126949999999981, 0.0009127089999999977, 0.0009127229999999972, 0.0009126809999999985, 0.0009127219999999978, 0.0009126659999999995, 0.0009127500000000038, 0.0009127500000000038, 0.0009126939999999986, 0.0009127219999999978, 0.0009127219999999978, 0.0009126250000000002, 0.000912695000000005, 0.0009127089999999977, 0.0009127089999999977, 0.0009127079999999982, 0.0009127359999999973, 0.0009126940000000056, 0.0009126519999999999, 0.0009127079999999982, 0.000912777999999996, 0.0009126939999999986, 0.0009126939999999986, 0.0009127220000000047, 0.0009127770000000035, 0.0009126949999999981, 0.0009127229999999972, 0.0009127089999999977, 0.0009127090000000046, 0.0009127079999999982, 0.0009127219999999978, 0.0009127079999999982, 0.0009482779999999968, 0.0009127219999999978, 0.0009127359999999973, 0.0009127219999999908, 0.0009127079999999982, 0.0009127080000000121, 0.000912679999999999, 0.0009127219999999908]</msg>
<status status="PASS" starttime="20201030 15:51:58.335" endtime="20201030 15:51:58.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.331" endtime="20201030 15:51:58.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.342" endtime="20201030 15:51:58.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.340" endtime="20201030 15:51:58.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.339" endtime="20201030 15:51:58.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.922" endtime="20201030 15:51:58.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:57.921" endtime="20201030 15:51:58.362"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.371" endtime="20201030 15:51:58.430"></status>
</kw>
<msg timestamp="20201030 15:51:58.430" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.369" endtime="20201030 15:51:58.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.433" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.431" endtime="20201030 15:51:58.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.434" endtime="20201030 15:51:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.367" endtime="20201030 15:51:58.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.365" endtime="20201030 15:51:58.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.444" endtime="20201030 15:51:58.733"></status>
</kw>
<msg timestamp="20201030 15:51:58.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.442" endtime="20201030 15:51:58.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018760583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019718625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.740" endtime="20201030 15:51:58.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.750" endtime="20201030 15:51:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.439" endtime="20201030 15:51:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.437" endtime="20201030 15:51:58.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:58.761" level="INFO">${PHILIP_RES} = [{'diff': 0.0009580419999999992}, {'diff': 0.0009580559999999988}, {'diff': 0.0009580699999999984}, {'diff': 0.0009580549999999993}, {'diff': 0.0009580830000000019}, {'diff': 0.0009580419999999992}, {...</msg>
<status status="PASS" starttime="20201030 15:51:58.755" endtime="20201030 15:51:58.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:58.768" level="INFO">${RESULT} = {'diff': [0.0009580419999999992, 0.0009580559999999988, 0.0009580699999999984, 0.0009580549999999993, 0.0009580830000000019, 0.0009580419999999992, 0.0009580689999999989, 0.0009580549999999993, 0.0009...</msg>
<status status="PASS" starttime="20201030 15:51:58.762" endtime="20201030 15:51:58.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.776" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:58.774" endtime="20201030 15:51:58.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.780" level="INFO">VALUE: [0.0009580419999999992, 0.0009580559999999988, 0.0009580699999999984, 0.0009580549999999993, 0.0009580830000000019, 0.0009580419999999992, 0.0009580689999999989, 0.0009580549999999993, 0.0009580419999999992, 0.0009580700000000018, 0.0009580690000000024, 0.0009580279999999997, 0.0009580420000000027, 0.0009580689999999989, 0.0009580689999999989, 0.0009580559999999988, 0.0009580689999999989, 0.0009580549999999993, 0.0009581249999999972, 0.0009580549999999993, 0.0009580549999999993, 0.0009580829999999985, 0.0009580560000000057, 0.0009580409999999998, 0.0009580689999999989, 0.0009581390000000037, 0.0009840139999999983, 0.0009580699999999984, 0.0009580689999999989, 0.0009580689999999989, 0.0009580699999999984, 0.0009580559999999988, 0.0009580549999999993, 0.0009580689999999989, 0.0009580699999999984, 0.0009580409999999998, 0.0009580689999999989, 0.0009580559999999988, 0.0009580829999999985, 0.000958097000000005, 0.0009580699999999984, 0.0009580559999999988, 0.0009580410000000067, 0.0009580830000000123, 0.0009580699999999914, 0.000958097000000005, 0.0009580690000000058, 0.0009580700000000053, 0.0009580559999999988, 0.0009581389999999967]</msg>
<status status="PASS" starttime="20201030 15:51:58.777" endtime="20201030 15:51:58.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.770" endtime="20201030 15:51:58.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:58.789" endtime="20201030 15:51:58.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.787" endtime="20201030 15:51:58.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.784" endtime="20201030 15:51:58.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.363" endtime="20201030 15:51:58.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.363" endtime="20201030 15:51:58.811"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.821" endtime="20201030 15:51:58.885"></status>
</kw>
<msg timestamp="20201030 15:51:58.886" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.818" endtime="20201030 15:51:58.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:58.889" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:58.887" endtime="20201030 15:51:58.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.890" endtime="20201030 15:51:58.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.816" endtime="20201030 15:51:58.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.814" endtime="20201030 15:51:58.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:58.901" endtime="20201030 15:51:59.187"></status>
</kw>
<msg timestamp="20201030 15:51:59.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023305542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:58.899" endtime="20201030 15:51:59.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023305542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.191" endtime="20201030 15:51:59.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.199" endtime="20201030 15:51:59.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.896" endtime="20201030 15:51:59.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.894" endtime="20201030 15:51:59.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.205" level="INFO">${PHILIP_RES} = [{'diff': 0.0010044999999999984}, {'diff': 0.0010295830000000006}, {'diff': 0.0010045140000000015}, {'diff': 0.0010044999999999984}, {'diff': 0.0010044859999999989}, {'diff': 0.0010045140000000015}, {...</msg>
<status status="PASS" starttime="20201030 15:51:59.202" endtime="20201030 15:51:59.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.209" level="INFO">${RESULT} = {'diff': [0.0010044999999999984, 0.0010295830000000006, 0.0010045140000000015, 0.0010044999999999984, 0.0010044859999999989, 0.0010045140000000015, 0.0010044999999999984, 0.0010044999999999984, 0.0010...</msg>
<status status="PASS" starttime="20201030 15:51:59.206" endtime="20201030 15:51:59.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.214" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.213" endtime="20201030 15:51:59.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.216" level="INFO">VALUE: [0.0010044999999999984, 0.0010295830000000006, 0.0010045140000000015, 0.0010044999999999984, 0.0010044859999999989, 0.0010045140000000015, 0.0010044999999999984, 0.0010044999999999984, 0.0010044999999999984, 0.0010044999999999984, 0.0010044999999999984, 0.001004514000000005, 0.0010044999999999984, 0.0010045559999999967, 0.0010044999999999984, 0.0010044999999999984, 0.0010044590000000062, 0.001004513999999998, 0.0010044719999999993, 0.0010045559999999967, 0.0010044999999999984, 0.0010045279999999976, 0.0010044999999999984, 0.0010045279999999976, 0.0010044440000000002, 0.001004513999999998, 0.0010044999999999984, 0.001004514000000005, 0.0010045129999999985, 0.0010045280000000045, 0.0010045419999999972, 0.0010383189999999959, 0.0010044860000000058, 0.001004513999999998, 0.0010044999999999984, 0.0010044999999999984, 0.001004513999999998, 0.0010044860000000058, 0.001004513999999998, 0.001004513999999998, 0.001004513999999998, 0.0010044859999999989, 0.0010045129999999985, 0.0010044859999999989, 0.001004514000000012, 0.0010044999999999915, 0.0010044450000000066, 0.001004513999999998, 0.0010045000000000054, 0.001004542000000011]</msg>
<status status="PASS" starttime="20201030 15:51:59.215" endtime="20201030 15:51:59.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.210" endtime="20201030 15:51:59.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.222" endtime="20201030 15:51:59.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.220" endtime="20201030 15:51:59.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.219" endtime="20201030 15:51:59.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.812" endtime="20201030 15:51:59.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:58.811" endtime="20201030 15:51:59.243"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.251" endtime="20201030 15:51:59.314"></status>
</kw>
<msg timestamp="20201030 15:51:59.315" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.249" endtime="20201030 15:51:59.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.317" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.316" endtime="20201030 15:51:59.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.318" endtime="20201030 15:51:59.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.247" endtime="20201030 15:51:59.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.245" endtime="20201030 15:51:59.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.327" endtime="20201030 15:51:59.613"></status>
</kw>
<msg timestamp="20201030 15:51:59.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.326" endtime="20201030 15:51:59.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018602861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.617" endtime="20201030 15:51:59.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.625" endtime="20201030 15:51:59.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.323" endtime="20201030 15:51:59.627"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.321" endtime="20201030 15:51:59.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:51:59.632" level="INFO">${PHILIP_RES} = [{'diff': 0.0010520140000000004}, {'diff': 0.0010520270000000005}, {'diff': 0.0010520689999999992}, {'diff': 0.0010520419999999996}, {'diff': 0.0010520270000000005}, {'diff': 0.0010520419999999996}, {...</msg>
<status status="PASS" starttime="20201030 15:51:59.628" endtime="20201030 15:51:59.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:51:59.637" level="INFO">${RESULT} = {'diff': [0.0010520140000000004, 0.0010520270000000005, 0.0010520689999999992, 0.0010520419999999996, 0.0010520270000000005, 0.0010520419999999996, 0.0010520419999999996, 0.001052028, 0.00105201300000...</msg>
<status status="PASS" starttime="20201030 15:51:59.633" endtime="20201030 15:51:59.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.641" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:51:59.640" endtime="20201030 15:51:59.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.643" level="INFO">VALUE: [0.0010520140000000004, 0.0010520270000000005, 0.0010520689999999992, 0.0010520419999999996, 0.0010520270000000005, 0.0010520419999999996, 0.0010520419999999996, 0.001052028, 0.001052013000000001, 0.0010520419999999996, 0.0010520419999999996, 0.0010520549999999997, 0.001052042000000003, 0.001052013999999997, 0.001052042000000003, 0.0010520410000000036, 0.001052041999999996, 0.0010520559999999957, 0.001052042000000003, 0.001052041999999996, 0.0010520279999999965, 0.0010520560000000026, 0.0010520550000000031, 0.0010520279999999965, 0.0010519860000000048, 0.0010520279999999965, 0.001052026999999997, 0.001052042000000003, 0.0010771119999999981, 0.001052042000000003, 0.0010520279999999965, 0.0010520409999999966, 0.001052042000000003, 0.001052042000000003, 0.0010520409999999966, 0.0010519729999999977, 0.0010520560000000026, 0.0010520559999999957, 0.0010520410000000036, 0.001052042000000003, 0.0010520560000000095, 0.0010521110000000083, 0.0010520279999999965, 0.0010520280000000104, 0.0010520419999999892, 0.0010520410000000036, 0.0010520690000000027, 0.001052042000000003, 0.0010520279999999965, 0.00105205500000001]</msg>
<status status="PASS" starttime="20201030 15:51:59.642" endtime="20201030 15:51:59.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.637" endtime="20201030 15:51:59.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.653" endtime="20201030 15:51:59.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.651" endtime="20201030 15:51:59.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.650" endtime="20201030 15:51:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.244" endtime="20201030 15:51:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.243" endtime="20201030 15:51:59.677"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.695" endtime="20201030 15:51:59.764"></status>
</kw>
<msg timestamp="20201030 15:51:59.765" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.691" endtime="20201030 15:51:59.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.770" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.767" endtime="20201030 15:51:59.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.773" endtime="20201030 15:51:59.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.686" endtime="20201030 15:51:59.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.682" endtime="20201030 15:51:59.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.792" endtime="20201030 15:52:00.087"></status>
</kw>
<msg timestamp="20201030 15:52:00.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032704778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033805417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:51:59.789" endtime="20201030 15:52:00.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032704778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033805417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.091" endtime="20201030 15:52:00.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.099" endtime="20201030 15:52:00.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.783" endtime="20201030 15:52:00.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.779" endtime="20201030 15:52:00.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.105" level="INFO">${PHILIP_RES} = [{'diff': 0.0011006390000000005}, {'diff': 0.001100653}, {'diff': 0.001100653}, {'diff': 0.0011006390000000005}, {'diff': 0.0011006809999999992}, {'diff': 0.0011006389999999935}, {'diff': 0.0011006390...</msg>
<status status="PASS" starttime="20201030 15:52:00.102" endtime="20201030 15:52:00.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.109" level="INFO">${RESULT} = {'diff': [0.0011006390000000005, 0.001100653, 0.001100653, 0.0011006390000000005, 0.0011006809999999992, 0.0011006389999999935, 0.0011006390000000005, 0.001100653, 0.0011006390000000005, 0.00110062500...</msg>
<status status="PASS" starttime="20201030 15:52:00.106" endtime="20201030 15:52:00.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.113" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.112" endtime="20201030 15:52:00.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.116" level="INFO">VALUE: [0.0011006390000000005, 0.001100653, 0.001100653, 0.0011006390000000005, 0.0011006809999999992, 0.0011006389999999935, 0.0011006390000000005, 0.001100653, 0.0011006390000000005, 0.001100625000000001, 0.0011449860000000006, 0.0011006390000000005, 0.0011006669999999996, 0.0011006669999999996, 0.001100653, 0.0011007089999999983, 0.0011006520000000006, 0.001100555000000003, 0.0011006520000000006, 0.001100653, 0.0011005840000000017, 0.0011006669999999996, 0.001100653, 0.0011006390000000005, 0.001100653, 0.001100653, 0.0011006390000000005, 0.0011006529999999931, 0.0011006529999999931, 0.0011006390000000005, 0.0011006660000000001, 0.001100638000000001, 0.0011006520000000075, 0.0011006529999999931, 0.0011006529999999931, 0.001100653000000007, 0.0011006939999999993, 0.0011006529999999931, 0.0011380140000000066, 0.0011006520000000075, 0.001100624999999994, 0.0011006660000000001, 0.0011006669999999996, 0.0011006390000000005, 0.0011006390000000005, 0.001100653000000007, 0.0011005970000000087, 0.0011006529999999931, 0.0011006390000000005, 0.0011006110000000013]</msg>
<status status="PASS" starttime="20201030 15:52:00.114" endtime="20201030 15:52:00.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.110" endtime="20201030 15:52:00.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.121" endtime="20201030 15:52:00.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.119" endtime="20201030 15:52:00.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.118" endtime="20201030 15:52:00.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.679" endtime="20201030 15:52:00.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.677" endtime="20201030 15:52:00.141"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.150" endtime="20201030 15:52:00.220"></status>
</kw>
<msg timestamp="20201030 15:52:00.221" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.148" endtime="20201030 15:52:00.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.223" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.222" endtime="20201030 15:52:00.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.224" endtime="20201030 15:52:00.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.146" endtime="20201030 15:52:00.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.144" endtime="20201030 15:52:00.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.234" endtime="20201030 15:52:00.520"></status>
</kw>
<msg timestamp="20201030 15:52:00.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020754778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.232" endtime="20201030 15:52:00.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020754778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.524" endtime="20201030 15:52:00.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.532" endtime="20201030 15:52:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.229" endtime="20201030 15:52:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.228" endtime="20201030 15:52:00.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.538" level="INFO">${PHILIP_RES} = [{'diff': 0.0011503340000000029}, {'diff': 0.0011503049999999973}, {'diff': 0.001150333}, {'diff': 0.0011504030000000012}, {'diff': 0.0011504170000000008}, {'diff': 0.001150360999999999}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:00.535" endtime="20201030 15:52:00.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.543" level="INFO">${RESULT} = {'diff': [0.0011503340000000029, 0.0011503049999999973, 0.001150333, 0.0011504030000000012, 0.0011504170000000008, 0.001150360999999999, 0.0011503469999999995, 0.0011502910000000012, 0.001150333, 0.00...</msg>
<status status="PASS" starttime="20201030 15:52:00.539" endtime="20201030 15:52:00.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.547" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.546" endtime="20201030 15:52:00.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.549" level="INFO">VALUE: [0.0011503340000000029, 0.0011503049999999973, 0.001150333, 0.0011504030000000012, 0.0011504170000000008, 0.001150360999999999, 0.0011503469999999995, 0.0011502910000000012, 0.001150333, 0.001150347999999999, 0.0011503479999999955, 0.0011503610000000025, 0.0011503049999999973, 0.0011503330000000034, 0.0011503190000000038, 0.0011503329999999964, 0.001150347000000003, 0.0011503610000000025, 0.001150346999999996, 0.0011503890000000017, 0.0011503329999999964, 0.0011503190000000038, 0.0011503479999999955, 0.0011503610000000025, 0.0011503189999999969, 0.001150347000000003, 0.0011503889999999947, 0.0011503890000000017, 0.001150333999999996, 0.0011503610000000025, 0.0011503329999999964, 0.0011503610000000025, 0.0011503340000000029, 0.001150333999999996, 0.0011503610000000025, 0.0011503330000000034, 0.0011503610000000025, 0.001150346999999996, 0.0011503479999999955, 0.0011503479999999955, 0.0011867909999999926, 0.0011503340000000029, 0.0011503330000000034, 0.0011503609999999886, 0.001150346999999996, 0.0011503330000000034, 0.0011503340000000029, 0.0011503610000000025, 0.0011503470000000099, 0.0011503330000000034]</msg>
<status status="PASS" starttime="20201030 15:52:00.548" endtime="20201030 15:52:00.551"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.543" endtime="20201030 15:52:00.551"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.555" endtime="20201030 15:52:00.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.554" endtime="20201030 15:52:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.552" endtime="20201030 15:52:00.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.142" endtime="20201030 15:52:00.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.142" endtime="20201030 15:52:00.576"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.584" endtime="20201030 15:52:00.656"></status>
</kw>
<msg timestamp="20201030 15:52:00.656" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.583" endtime="20201030 15:52:00.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.659" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:00.658" endtime="20201030 15:52:00.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.660" endtime="20201030 15:52:00.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.580" endtime="20201030 15:52:00.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.578" endtime="20201030 15:52:00.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.669" endtime="20201030 15:52:00.955"></status>
</kw>
<msg timestamp="20201030 15:52:00.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.668" endtime="20201030 15:52:00.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020169708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:00.959" endtime="20201030 15:52:00.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:00.967" endtime="20201030 15:52:00.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.665" endtime="20201030 15:52:00.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.663" endtime="20201030 15:52:00.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:00.974" level="INFO">${PHILIP_RES} = [{'diff': 0.0012010970000000017}, {'diff': 0.0012011250000000008}, {'diff': 0.001201138000000001}, {'diff': 0.0012010969999999982}, {'diff': 0.0012011110000000012}, {'diff': 0.0012011250000000008}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:00.971" endtime="20201030 15:52:00.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:00.979" level="INFO">${RESULT} = {'diff': [0.0012010970000000017, 0.0012011250000000008, 0.001201138000000001, 0.0012010969999999982, 0.0012011110000000012, 0.0012011250000000008, 0.0012011390000000004, 0.001235791, 0.001201110999999...</msg>
<status status="PASS" starttime="20201030 15:52:00.975" endtime="20201030 15:52:00.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.983" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:00.982" endtime="20201030 15:52:00.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:00.986" level="INFO">VALUE: [0.0012010970000000017, 0.0012011250000000008, 0.001201138000000001, 0.0012010969999999982, 0.0012011110000000012, 0.0012011250000000008, 0.0012011390000000004, 0.001235791, 0.0012011109999999978, 0.0012011110000000012, 0.0012011110000000047, 0.0012011529999999965, 0.0012011109999999978, 0.001201068999999999, 0.0012011249999999973, 0.0012011250000000043, 0.0012011390000000038, 0.0012011120000000042, 0.0012011109999999978, 0.0012011109999999978, 0.0012010969999999982, 0.0012011109999999978, 0.0012011109999999978, 0.0012011109999999978, 0.0012011110000000047, 0.0012011250000000043, 0.001201166999999996, 0.0012011249999999973, 0.0012012079999999953, 0.0012011249999999973, 0.001201167000000003, 0.0012010980000000046, 0.0012472089999999991, 0.001201068999999999, 0.0012011120000000042, 0.0012010979999999977, 0.00120113899999999, 0.0012011249999999973, 0.0012011110000000047, 0.0012011249999999973, 0.0012011110000000047, 0.0012011249999999973, 0.0012011109999999908, 0.0012011249999999973, 0.0012011110000000047, 0.0012011390000000038, 0.0012011250000000112, 0.001201097000000012, 0.0012011109999999908, 0.0012011249999999973]</msg>
<status status="PASS" starttime="20201030 15:52:00.984" endtime="20201030 15:52:00.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.979" endtime="20201030 15:52:00.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:00.990" endtime="20201030 15:52:01.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.989" endtime="20201030 15:52:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.988" endtime="20201030 15:52:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.577" endtime="20201030 15:52:01.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:00.576" endtime="20201030 15:52:01.011"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.020" endtime="20201030 15:52:01.095"></status>
</kw>
<msg timestamp="20201030 15:52:01.096" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.018" endtime="20201030 15:52:01.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.098" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.097" endtime="20201030 15:52:01.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.099" endtime="20201030 15:52:01.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.016" endtime="20201030 15:52:01.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.014" endtime="20201030 15:52:01.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.108" endtime="20201030 15:52:01.412"></status>
</kw>
<msg timestamp="20201030 15:52:01.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.107" endtime="20201030 15:52:01.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020290847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.417" endtime="20201030 15:52:01.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.425" endtime="20201030 15:52:01.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.104" endtime="20201030 15:52:01.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.102" endtime="20201030 15:52:01.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.431" level="INFO">${PHILIP_RES} = [{'diff': 0.0012754160000000014}, {'diff': 0.0012529720000000015}, {'diff': 0.001252986000000001}, {'diff': 0.001252958999999998}, {'diff': 0.0012529579999999985}, {'diff': 0.0012530140000000002}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:01.428" endtime="20201030 15:52:01.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.435" level="INFO">${RESULT} = {'diff': [0.0012754160000000014, 0.0012529720000000015, 0.001252986000000001, 0.001252958999999998, 0.0012529579999999985, 0.0012530140000000002, 0.001252971999999998, 0.0012529999999999972, 0.0012529...</msg>
<status status="PASS" starttime="20201030 15:52:01.432" endtime="20201030 15:52:01.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.439" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.438" endtime="20201030 15:52:01.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.442" level="INFO">VALUE: [0.0012754160000000014, 0.0012529720000000015, 0.001252986000000001, 0.001252958999999998, 0.0012529579999999985, 0.0012530140000000002, 0.001252971999999998, 0.0012529999999999972, 0.001252971999999998, 0.001252971999999998, 0.001252987000000004, 0.0012530000000000041, 0.0012529859999999976, 0.001252971999999998, 0.0012529579999999985, 0.001252958999999998, 0.001252971999999998, 0.0012529579999999985, 0.001252971999999998, 0.0012529999999999972, 0.001252971999999998, 0.001252971999999998, 0.001252986999999997, 0.0012529859999999976, 0.0012920699999999993, 0.001252972000000005, 0.0012529029999999997, 0.001252972000000005, 0.0012529860000000045, 0.0012530000000000041, 0.001252986999999997, 0.0012529859999999976, 0.001252971999999998, 0.0012529579999999985, 0.0012529999999999902, 0.0012530129999999973, 0.0012529860000000115, 0.0012529450000000053, 0.001252972000000005, 0.0012529579999999985, 0.001252972000000005, 0.001252972000000005, 0.0012529859999999976, 0.0012530139999999967, 0.0012529450000000053, 0.0012530139999999967, 0.0012529859999999976, 0.0012530129999999973, 0.0012530000000000041, 0.0012649170000000043]</msg>
<status status="PASS" starttime="20201030 15:52:01.441" endtime="20201030 15:52:01.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.436" endtime="20201030 15:52:01.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.447" endtime="20201030 15:52:01.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.445" endtime="20201030 15:52:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.444" endtime="20201030 15:52:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.012" endtime="20201030 15:52:01.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.012" endtime="20201030 15:52:01.467"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.477" endtime="20201030 15:52:01.555"></status>
</kw>
<msg timestamp="20201030 15:52:01.556" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.475" endtime="20201030 15:52:01.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.558" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.557" endtime="20201030 15:52:01.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.559" endtime="20201030 15:52:01.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.472" endtime="20201030 15:52:01.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.470" endtime="20201030 15:52:01.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.568" endtime="20201030 15:52:01.854"></status>
</kw>
<msg timestamp="20201030 15:52:01.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.567" endtime="20201030 15:52:01.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020747833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:01.858" endtime="20201030 15:52:01.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.867" endtime="20201030 15:52:01.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.564" endtime="20201030 15:52:01.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.562" endtime="20201030 15:52:01.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:01.873" level="INFO">${PHILIP_RES} = [{'diff': 0.0013484859999999994}, {'diff': 0.001305874999999998}, {'diff': 0.0013059439999999999}, {'diff': 0.0013059030000000006}, {'diff': 0.0013059439999999999}, {'diff': 0.0013059160000000007}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:01.870" endtime="20201030 15:52:01.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:01.877" level="INFO">${RESULT} = {'diff': [0.0013484859999999994, 0.001305874999999998, 0.0013059439999999999, 0.0013059030000000006, 0.0013059439999999999, 0.0013059160000000007, 0.0013059170000000002, 0.0013059439999999964, 0.00130...</msg>
<status status="PASS" starttime="20201030 15:52:01.874" endtime="20201030 15:52:01.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.881" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:01.880" endtime="20201030 15:52:01.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:01.884" level="INFO">VALUE: [0.0013484859999999994, 0.001305874999999998, 0.0013059439999999999, 0.0013059030000000006, 0.0013059439999999999, 0.0013059160000000007, 0.0013059170000000002, 0.0013059439999999964, 0.0013059309999999963, 0.001305986000000002, 0.0013059169999999967, 0.0013059019999999977, 0.0013059029999999971, 0.0013059169999999967, 0.0013058609999999984, 0.0013058889999999976, 0.0013059159999999972, 0.0013059169999999967, 0.0013058889999999976, 0.001305985999999995, 0.0013059019999999977, 0.0013059169999999967, 0.0013059159999999972, 0.0013059169999999967, 0.0013293469999999946, 0.0013059299999999968, 0.0013059169999999967, 0.0013059159999999972, 0.001305874999999998, 0.0013059159999999972, 0.001305903000000011, 0.0013059299999999968, 0.0013059309999999963, 0.0013059170000000037, 0.0013059450000000028, 0.0013059170000000037, 0.0013059299999999968, 0.0013059029999999971, 0.0013059019999999977, 0.0013059029999999971, 0.0013058889999999906, 0.0013059309999999963, 0.0013059159999999903, 0.0013059169999999898, 0.0013058889999999906, 0.0013059169999999898, 0.0013058889999999906, 0.0013467499999999938, 0.0013059160000000042, 0.0013059580000000098]</msg>
<status status="PASS" starttime="20201030 15:52:01.883" endtime="20201030 15:52:01.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.878" endtime="20201030 15:52:01.889"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:01.892" endtime="20201030 15:52:01.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.891" endtime="20201030 15:52:01.912"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.890" endtime="20201030 15:52:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.468" endtime="20201030 15:52:01.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.468" endtime="20201030 15:52:01.913"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:01.921" endtime="20201030 15:52:02.002"></status>
</kw>
<msg timestamp="20201030 15:52:02.003" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:01.920" endtime="20201030 15:52:02.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.006" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.004" endtime="20201030 15:52:02.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.007" endtime="20201030 15:52:02.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.917" endtime="20201030 15:52:02.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.915" endtime="20201030 15:52:02.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.019" endtime="20201030 15:52:02.319"></status>
</kw>
<msg timestamp="20201030 15:52:02.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.017" endtime="20201030 15:52:02.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018882861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020242778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.323" endtime="20201030 15:52:02.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.331" endtime="20201030 15:52:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.014" endtime="20201030 15:52:02.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.012" endtime="20201030 15:52:02.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.338" level="INFO">${PHILIP_RES} = [{'diff': 0.0013599169999999987}, {'diff': 0.0013598889999999995}, {'diff': 0.0013599450000000013}, {'diff': 0.0013599449999999978}, {'diff': 0.0013599170000000022}, {'diff': 0.0013600139999999997}, {...</msg>
<status status="PASS" starttime="20201030 15:52:02.334" endtime="20201030 15:52:02.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.343" level="INFO">${RESULT} = {'diff': [0.0013599169999999987, 0.0013598889999999995, 0.0013599450000000013, 0.0013599449999999978, 0.0013599170000000022, 0.0013600139999999997, 0.0013599029999999991, 0.0013599310000000017, 0.0013...</msg>
<status status="PASS" starttime="20201030 15:52:02.339" endtime="20201030 15:52:02.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.347" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.346" endtime="20201030 15:52:02.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.350" level="INFO">VALUE: [0.0013599169999999987, 0.0013598889999999995, 0.0013599450000000013, 0.0013599449999999978, 0.0013599170000000022, 0.0013600139999999997, 0.0013599029999999991, 0.0013599310000000017, 0.0013599590000000009, 0.0013599310000000017, 0.0013599449999999944, 0.0013788750000000016, 0.001359972000000001, 0.0013599440000000018, 0.0013599300000000022, 0.0013599860000000005, 0.0013599579999999944, 0.001359972000000001, 0.0013599580000000014, 0.0013599580000000014, 0.0013599310000000017, 0.001359987, 0.0013598750000000034, 0.0013599440000000018, 0.0013599310000000017, 0.0013599440000000018, 0.0013599440000000018, 0.0013599439999999949, 0.0013599580000000014, 0.0013599450000000013, 0.001359917000000009, 0.0013599450000000013, 0.001359958999999994, 0.0014025140000000075, 0.0013599440000000018, 0.0013599440000000018, 0.0013599579999999944, 0.0013599440000000018, 0.0013599440000000018, 0.0013599579999999944, 0.001359972000000001, 0.0013599579999999944, 0.0013599300000000092, 0.0013599440000000018, 0.0013599300000000092, 0.0013599440000000018, 0.0013599299999999953, 0.00136, 0.0013599440000000018, 0.0013600139999999927]</msg>
<status status="PASS" starttime="20201030 15:52:02.348" endtime="20201030 15:52:02.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.344" endtime="20201030 15:52:02.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.355" endtime="20201030 15:52:02.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.353" endtime="20201030 15:52:02.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.352" endtime="20201030 15:52:02.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.914" endtime="20201030 15:52:02.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:01.913" endtime="20201030 15:52:02.375"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.384" endtime="20201030 15:52:02.467"></status>
</kw>
<msg timestamp="20201030 15:52:02.467" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.382" endtime="20201030 15:52:02.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.470" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.468" endtime="20201030 15:52:02.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.471" endtime="20201030 15:52:02.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.379" endtime="20201030 15:52:02.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.378" endtime="20201030 15:52:02.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.480" endtime="20201030 15:52:02.767"></status>
</kw>
<msg timestamp="20201030 15:52:02.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:02.478" endtime="20201030 15:52:02.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020327514, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:02.771" endtime="20201030 15:52:02.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.779" endtime="20201030 15:52:02.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.476" endtime="20201030 15:52:02.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.474" endtime="20201030 15:52:02.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:02.786" level="INFO">${PHILIP_RES} = [{'diff': 0.0014150140000000026}, {'diff': 0.001415070000000001}, {'diff': 0.001415083000000001}, {'diff': 0.0014150550000000019}, {'diff': 0.0014150419999999983}, {'diff': 0.001414986}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 15:52:02.783" endtime="20201030 15:52:02.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.790" level="INFO">${RESULT} = {'diff': [0.0014150140000000026, 0.001415070000000001, 0.001415083000000001, 0.0014150550000000019, 0.0014150419999999983, 0.001414986, 0.0014150409999999988, 0.0014150409999999988, 0.0014541389999999...</msg>
<status status="PASS" starttime="20201030 15:52:02.787" endtime="20201030 15:52:02.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.794" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:02.793" endtime="20201030 15:52:02.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.797" level="INFO">VALUE: [0.0014150140000000026, 0.001415070000000001, 0.001415083000000001, 0.0014150550000000019, 0.0014150419999999983, 0.001414986, 0.0014150409999999988, 0.0014150409999999988, 0.0014541389999999967, 0.0014150409999999988, 0.0014150559999999979, 0.0014150559999999979, 0.0014150560000000048, 0.0014150409999999988, 0.0014150550000000053, 0.0014150139999999992, 0.0014150279999999987, 0.001415096999999997, 0.0014151249999999962, 0.0014150699999999974, 0.0014150699999999974, 0.0014150549999999984, 0.0014150829999999975, 0.0014150700000000044, 0.0014150699999999974, 0.0014150420000000052, 0.0014150549999999984, 0.0014150549999999984, 0.0014150419999999983, 0.0014150419999999914, 0.0014427499999999926, 0.0014150279999999987, 0.0014150549999999984, 0.0014150549999999984, 0.0014150700000000044, 0.0014150559999999979, 0.0014150269999999993, 0.0014150549999999984, 0.001415069000000005, 0.0014150700000000044, 0.0014150829999999975, 0.0014150549999999984, 0.001415068999999991, 0.0014150700000000044, 0.0014150419999999914, 0.001415068999999991, 0.001415069000000005, 0.0014150279999999987, 0.0014150560000000117, 0.001415069000000005]</msg>
<status status="PASS" starttime="20201030 15:52:02.796" endtime="20201030 15:52:02.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.791" endtime="20201030 15:52:02.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.802" endtime="20201030 15:52:02.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.800" endtime="20201030 15:52:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.799" endtime="20201030 15:52:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.376" endtime="20201030 15:52:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.376" endtime="20201030 15:52:02.823"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.831" endtime="20201030 15:52:02.919"></status>
</kw>
<msg timestamp="20201030 15:52:02.920" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.830" endtime="20201030 15:52:02.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.926" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.923" endtime="20201030 15:52:02.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.928" endtime="20201030 15:52:02.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.827" endtime="20201030 15:52:02.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.825" endtime="20201030 15:52:02.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.947" endtime="20201030 15:52:03.242"></status>
</kw>
<msg timestamp="20201030 15:52:03.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.944" endtime="20201030 15:52:03.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019797611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021268917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.246" endtime="20201030 15:52:03.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.254" endtime="20201030 15:52:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.938" endtime="20201030 15:52:03.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.935" endtime="20201030 15:52:03.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.260" level="INFO">${PHILIP_RES} = [{'diff': 0.0014713059999999986}, {'diff': 0.0014712220000000012}, {'diff': 0.0014712500000000003}, {'diff': 0.001471264}, {'diff': 0.0014712360000000008}, {'diff': 0.0014712500000000003}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:52:03.257" endtime="20201030 15:52:03.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.264" level="INFO">${RESULT} = {'diff': [0.0014713059999999986, 0.0014712220000000012, 0.0014712500000000003, 0.001471264, 0.0014712360000000008, 0.0014712500000000003, 0.0014712630000000004, 0.001471278000000003, 0.001471250000000...</msg>
<status status="PASS" starttime="20201030 15:52:03.261" endtime="20201030 15:52:03.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.269" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.267" endtime="20201030 15:52:03.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.271" level="INFO">VALUE: [0.0014713059999999986, 0.0014712220000000012, 0.0014712500000000003, 0.001471264, 0.0014712360000000008, 0.0014712500000000003, 0.0014712630000000004, 0.001471278000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.001471264, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.001471277, 0.0014712500000000003, 0.0014712080000000016, 0.0014713059999999986, 0.0014712360000000008, 0.0014712500000000003, 0.0014712500000000003, 0.001471194000000002, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000073, 0.0014712220000000081, 0.001471264, 0.001471264, 0.001471264, 0.0014712499999999934, 0.001471291999999999, 0.0014712360000000008, 0.0015208189999999927, 0.0014712360000000008, 0.0014713329999999913, 0.001471264, 0.001471264, 0.0014712499999999934, 0.0014712499999999934, 0.001471264, 0.0014712500000000073, 0.0014712360000000008, 0.0014712500000000073, 0.0014712220000000081, 0.0014712500000000073, 0.001471277000000007, 0.0014712080000000016]</msg>
<status status="PASS" starttime="20201030 15:52:03.270" endtime="20201030 15:52:03.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.265" endtime="20201030 15:52:03.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.277" endtime="20201030 15:52:03.296"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.275" endtime="20201030 15:52:03.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.274" endtime="20201030 15:52:03.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.824" endtime="20201030 15:52:03.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.823" endtime="20201030 15:52:03.297"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.306" endtime="20201030 15:52:03.395"></status>
</kw>
<msg timestamp="20201030 15:52:03.396" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.304" endtime="20201030 15:52:03.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.398" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.397" endtime="20201030 15:52:03.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.399" endtime="20201030 15:52:03.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.302" endtime="20201030 15:52:03.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.300" endtime="20201030 15:52:03.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.408" endtime="20201030 15:52:03.695"></status>
</kw>
<msg timestamp="20201030 15:52:03.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018723514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.407" endtime="20201030 15:52:03.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018723514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020252028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.699" endtime="20201030 15:52:03.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.707" endtime="20201030 15:52:03.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.404" endtime="20201030 15:52:03.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.402" endtime="20201030 15:52:03.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:03.714" level="INFO">${PHILIP_RES} = [{'diff': 0.0015285139999999982}, {'diff': 0.0015285560000000004}, {'diff': 0.001528485999999999}, {'diff': 0.0015285279999999977}, {'diff': 0.0015284719999999995}, {'diff': 0.001559708}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 15:52:03.710" endtime="20201030 15:52:03.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.724" level="INFO">${RESULT} = {'diff': [0.0015285139999999982, 0.0015285560000000004, 0.001528485999999999, 0.0015285279999999977, 0.0015284719999999995, 0.001559708, 0.0015285140000000016, 0.0015285279999999977, 0.001528514000000...</msg>
<status status="PASS" starttime="20201030 15:52:03.716" endtime="20201030 15:52:03.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.733" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:03.731" endtime="20201030 15:52:03.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.738" level="INFO">VALUE: [0.0015285139999999982, 0.0015285560000000004, 0.001528485999999999, 0.0015285279999999977, 0.0015284719999999995, 0.001559708, 0.0015285140000000016, 0.0015285279999999977, 0.0015285140000000016, 0.0015285270000000017, 0.0015284590000000028, 0.0015285420000000008, 0.0015285409999999944, 0.0015285420000000008, 0.00152857, 0.0015285280000000012, 0.001528500000000002, 0.0015285420000000008, 0.0015284579999999964, 0.0015285280000000012, 0.001528500000000002, 0.0015285280000000012, 0.0015285270000000017, 0.0015285279999999943, 0.0015284999999999951, 0.0015658330000000026, 0.0015285270000000017, 0.0015285419999999939, 0.0015285280000000012, 0.0015285409999999944, 0.0015285689999999935, 0.0015285419999999939, 0.0015285560000000004, 0.0015285280000000012, 0.0015285280000000012, 0.0015285270000000017, 0.0015285280000000012, 0.0015285560000000004, 0.0015285409999999944, 0.0015284729999999885, 0.0015285970000000065, 0.0015285550000000009, 0.001528500000000002, 0.0015285280000000012, 0.0015285560000000004, 0.00157022200000001, 0.0015285270000000017, 0.0015285139999999947, 0.0015285560000000004, 0.0015285140000000086]</msg>
<status status="PASS" starttime="20201030 15:52:03.736" endtime="20201030 15:52:03.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.726" endtime="20201030 15:52:03.742"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.752" endtime="20201030 15:52:03.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.748" endtime="20201030 15:52:03.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.745" endtime="20201030 15:52:03.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.298" endtime="20201030 15:52:03.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.298" endtime="20201030 15:52:03.777"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.795" endtime="20201030 15:52:03.889"></status>
</kw>
<msg timestamp="20201030 15:52:03.889" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.792" endtime="20201030 15:52:03.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.892" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.890" endtime="20201030 15:52:03.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.893" endtime="20201030 15:52:03.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.786" endtime="20201030 15:52:03.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.782" endtime="20201030 15:52:03.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.902" endtime="20201030 15:52:04.192"></status>
</kw>
<msg timestamp="20201030 15:52:04.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0348695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:03.901" endtime="20201030 15:52:04.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0348695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:04.196" endtime="20201030 15:52:04.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.204" endtime="20201030 15:52:04.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.898" endtime="20201030 15:52:04.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.896" endtime="20201030 15:52:04.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.210" level="INFO">${PHILIP_RES} = [{'diff': 0.001586889000000001}, {'diff': 0.0015869020000000011}, {'diff': 0.0015868880000000016}, {'diff': 0.0015868339999999953}, {'diff': 0.0015869300000000003}, {'diff': 0.0016338190000000016}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:04.207" endtime="20201030 15:52:04.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.214" level="INFO">${RESULT} = {'diff': [0.001586889000000001, 0.0015869020000000011, 0.0015868880000000016, 0.0015868339999999953, 0.0015869300000000003, 0.0016338190000000016, 0.0015869020000000011, 0.0015869020000000011, 0.00158...</msg>
<status status="PASS" starttime="20201030 15:52:04.211" endtime="20201030 15:52:04.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.219" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.217" endtime="20201030 15:52:04.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.221" level="INFO">VALUE: [0.001586889000000001, 0.0015869020000000011, 0.0015868880000000016, 0.0015868339999999953, 0.0015869300000000003, 0.0016338190000000016, 0.0015869020000000011, 0.0015869020000000011, 0.0015869300000000003, 0.0015869439999999999, 0.0015868750000000015, 0.001586889000000001, 0.0015868750000000015, 0.0015869030000000006, 0.0015869309999999998, 0.001586889000000001, 0.0015869020000000011, 0.0015868749999999945, 0.001586860999999995, 0.0015868889999999941, 0.0015868889999999941, 0.001586889000000008, 0.001586889000000008, 0.0015868750000000015, 0.0015868750000000015, 0.0016111800000000037, 0.0015869030000000006, 0.001586889000000008, 0.001586889000000008, 0.0015868880000000085, 0.0015868889999999941, 0.0015869030000000006, 0.0015868889999999941, 0.0015869169999999932, 0.0015869030000000006, 0.0015869030000000006, 0.001586889000000008, 0.0015868889999999941, 0.0015868750000000015, 0.001586943999999993, 0.0015868480000000018, 0.0015868889999999941, 0.001586860999999995, 0.0015869030000000006, 0.0016294589999999998, 0.0015868889999999941, 0.001586889000000008, 0.0015869030000000006, 0.001586889000000008, 0.0015868189999999893]</msg>
<status status="PASS" starttime="20201030 15:52:04.220" endtime="20201030 15:52:04.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.215" endtime="20201030 15:52:04.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.226" endtime="20201030 15:52:04.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.225" endtime="20201030 15:52:04.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.223" endtime="20201030 15:52:04.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.779" endtime="20201030 15:52:04.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.778" endtime="20201030 15:52:04.247"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.255" endtime="20201030 15:52:04.352"></status>
</kw>
<msg timestamp="20201030 15:52:04.352" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.254" endtime="20201030 15:52:04.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.355" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.353" endtime="20201030 15:52:04.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.356" endtime="20201030 15:52:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.251" endtime="20201030 15:52:04.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.249" endtime="20201030 15:52:04.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.365" endtime="20201030 15:52:04.673"></status>
</kw>
<msg timestamp="20201030 15:52:04.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.363" endtime="20201030 15:52:04.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019658611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.677" endtime="20201030 15:52:04.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.685" endtime="20201030 15:52:04.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.361" endtime="20201030 15:52:04.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.359" endtime="20201030 15:52:04.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:04.691" level="INFO">${PHILIP_RES} = [{'diff': 0.0016463469999999994}, {'diff': 0.0016463199999999997}, {'diff': 0.0016463060000000002}, {'diff': 0.0016463329999999998}, {'diff': 0.0016463329999999998}, {'diff': 0.0016696390000000005}, {...</msg>
<status status="PASS" starttime="20201030 15:52:04.688" endtime="20201030 15:52:04.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.695" level="INFO">${RESULT} = {'diff': [0.0016463469999999994, 0.0016463199999999997, 0.0016463060000000002, 0.0016463329999999998, 0.0016463329999999998, 0.0016696390000000005, 0.001646360999999999, 0.0016463329999999998, 0.00164...</msg>
<status status="PASS" starttime="20201030 15:52:04.692" endtime="20201030 15:52:04.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.700" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:04.699" endtime="20201030 15:52:04.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.702" level="INFO">VALUE: [0.0016463469999999994, 0.0016463199999999997, 0.0016463060000000002, 0.0016463329999999998, 0.0016463329999999998, 0.0016696390000000005, 0.001646360999999999, 0.0016463329999999998, 0.0016463340000000062, 0.0016463190000000003, 0.001646360999999999, 0.0016463329999999998, 0.0016462640000000014, 0.0016463329999999998, 0.0016463190000000003, 0.0016463329999999998, 0.0016463339999999993, 0.0016463199999999997, 0.0016463190000000003, 0.0016463469999999994, 0.0016463469999999994, 0.0016463339999999993, 0.0016463339999999993, 0.0016985549999999974, 0.0016464029999999977, 0.001646360999999999, 0.0016463189999999933, 0.0016463189999999933, 0.0016463339999999993, 0.0016463619999999984, 0.0016463469999999925, 0.0016463329999999998, 0.0016463189999999933, 0.0016463339999999993, 0.0016463470000000063, 0.001646360999999999, 0.0016463329999999998, 0.001646360999999999, 0.001646347999999992, 0.0016463750000000055, 0.0016463329999999998, 0.0016462639999999945, 0.0016906530000000003, 0.0016463329999999998, 0.0016463329999999998, 0.0016463200000000067, 0.0016463339999999993, 0.0016463050000000007, 0.0016463469999999925, 0.0016463339999999993]</msg>
<status status="PASS" starttime="20201030 15:52:04.701" endtime="20201030 15:52:04.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.696" endtime="20201030 15:52:04.710"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.714" endtime="20201030 15:52:04.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.712" endtime="20201030 15:52:04.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.711" endtime="20201030 15:52:04.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.248" endtime="20201030 15:52:04.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.247" endtime="20201030 15:52:04.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:43.997" endtime="20201030 15:52:04.735"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:42.719" endtime="20201030 15:52:04.735" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:22.053" endtime="20201030 15:52:04.744"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.815" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:52:04.823" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:06.037" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:52:04.814" endtime="20201030 15:52:06.038"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.040" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:52:06.039" endtime="20201030 15:52:06.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.812" endtime="20201030 15:52:06.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.044" endtime="20201030 15:52:06.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.042" endtime="20201030 15:52:06.292"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.305" endtime="20201030 15:52:06.319"></status>
</kw>
<msg timestamp="20201030 15:52:06.319" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 15:52:06.303" endtime="20201030 15:52:06.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201030 15:52:06.320" endtime="20201030 15:52:06.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.325" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:06.323" endtime="20201030 15:52:06.325"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:06.301" endtime="20201030 15:52:06.326"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:06.298" endtime="20201030 15:52:06.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.297" endtime="20201030 15:52:06.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:06.331" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:06.330" endtime="20201030 15:52:06.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.328" endtime="20201030 15:52:06.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.296" endtime="20201030 15:52:06.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.296" endtime="20201030 15:52:06.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.334" endtime="20201030 15:52:06.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.294" endtime="20201030 15:52:06.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.336" endtime="20201030 15:52:06.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.293" endtime="20201030 15:52:06.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.811" endtime="20201030 15:52:06.339"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.345" endtime="20201030 15:52:06.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.344" endtime="20201030 15:52:06.365"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.378" endtime="20201030 15:52:06.393"></status>
</kw>
<msg timestamp="20201030 15:52:06.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.377" endtime="20201030 15:52:06.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.396" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.394" endtime="20201030 15:52:06.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.399" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:06.397" endtime="20201030 15:52:06.399"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:06.374" endtime="20201030 15:52:06.400"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:06.372" endtime="20201030 15:52:06.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.370" endtime="20201030 15:52:06.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:06.405" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:06.404" endtime="20201030 15:52:06.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.402" endtime="20201030 15:52:06.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.370" endtime="20201030 15:52:06.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.369" endtime="20201030 15:52:06.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.406" endtime="20201030 15:52:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.368" endtime="20201030 15:52:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.366" endtime="20201030 15:52:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.342" endtime="20201030 15:52:06.409"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.420" endtime="20201030 15:52:06.435"></status>
</kw>
<msg timestamp="20201030 15:52:06.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.419" endtime="20201030 15:52:06.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.436" endtime="20201030 15:52:06.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.439" endtime="20201030 15:52:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.415" endtime="20201030 15:52:06.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.412" endtime="20201030 15:52:06.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.448" endtime="20201030 15:52:06.739"></status>
</kw>
<msg timestamp="20201030 15:52:06.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067347306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067351958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.446" endtime="20201030 15:52:06.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067347306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067351958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.743" endtime="20201030 15:52:06.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.752" endtime="20201030 15:52:06.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.444" endtime="20201030 15:52:06.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.442" endtime="20201030 15:52:06.756"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.760" level="INFO">${RESULT} = [{'diff': 4.652000000007761e-06}, {'diff': 4.7639999999904425e-06}, {'diff': 4.666999999999866e-06}, {'diff': 4.639000000000726e-06}, {'diff': 4.708000000006041e-06}, {'diff': 4.693999999999532e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.757" endtime="20201030 15:52:06.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:06.764" level="INFO">${ACCURACY} = {'diff': [4.652000000007761e-06, 4.7639999999904425e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.708000000006041e-06, 4.693999999999532e-06, 4.653000000007235e-06, 4.055000000002806e-06, 4.721...</msg>
<status status="PASS" starttime="20201030 15:52:06.761" endtime="20201030 15:52:06.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.770" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:06.769" endtime="20201030 15:52:06.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.772" level="INFO">VALUE: [4.652000000007761e-06, 4.7639999999904425e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.708000000006041e-06, 4.693999999999532e-06, 4.653000000007235e-06, 4.055000000002806e-06, 4.721999999998672e-06, 4.680000000006901e-06, 4.6810000000063745e-06, 4.096999999994577e-06, 4.721999999998672e-06, 4.6949999999990055e-06, 4.693999999999532e-06, 4.111000000001086e-06, 4.735999999991303e-06, 4.098000000007929e-06, 4.680999999992497e-06, 4.166999999999366e-06, 4.125000000007595e-06, 4.721999999998672e-06, 4.707999999992163e-06, 4.708000000006041e-06, 4.721999999998672e-06, 4.083000000001946e-06, 4.708000000006041e-06, 4.680999999992497e-06, 4.693999999999532e-06, 4.708000000006041e-06, 4.111000000001086e-06, 4.097999999994051e-06, 4.708000000006041e-06, 4.7499999999978115e-06, 4.707999999992163e-06, 4.708000000006041e-06, 4.125000000007595e-06, 4.097000000008455e-06, 4.708000000006041e-06, 4.125000000007595e-06, 4.111000000001086e-06, 4.096999999994577e-06, 4.723000000012023e-06, 4.124999999993717e-06, 4.027999999989262e-06, 4.096999999994577e-06, 4.722999999998145e-06, 4.110999999987208e-06, 4.6949999999990055e-06, 4.6810000000063745e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.771" endtime="20201030 15:52:06.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.765" endtime="20201030 15:52:06.773"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.777" endtime="20201030 15:52:06.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.775" endtime="20201030 15:52:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.774" endtime="20201030 15:52:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.411" endtime="20201030 15:52:06.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.410" endtime="20201030 15:52:06.798"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.806" endtime="20201030 15:52:06.821"></status>
</kw>
<msg timestamp="20201030 15:52:06.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.805" endtime="20201030 15:52:06.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.822" endtime="20201030 15:52:06.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.825" endtime="20201030 15:52:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.802" endtime="20201030 15:52:06.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.800" endtime="20201030 15:52:06.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.837" endtime="20201030 15:52:07.125"></status>
</kw>
<msg timestamp="20201030 15:52:07.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02212075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:06.835" endtime="20201030 15:52:07.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022116042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02212075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:07.129" endtime="20201030 15:52:07.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.137" endtime="20201030 15:52:07.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.832" endtime="20201030 15:52:07.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.830" endtime="20201030 15:52:07.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.144" level="INFO">${RESULT} = [{'diff': 4.708000000002571e-06}, {'diff': 5.305000000000587e-06}, {'diff': 5.319999999999631e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.917000000001116e-06}, {'diff': 5.901999999998603e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.140" endtime="20201030 15:52:07.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.149" level="INFO">${ACCURACY} = {'diff': [4.708000000002571e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.917000000001116e-06, 5.901999999998603e-06, 5.931000000000686e-06, 5.319000000000157e-06, 5.3329...</msg>
<status status="PASS" starttime="20201030 15:52:07.145" endtime="20201030 15:52:07.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.154" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.153" endtime="20201030 15:52:07.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.156" level="INFO">VALUE: [4.708000000002571e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.346999999999297e-06, 5.917000000001116e-06, 5.901999999998603e-06, 5.931000000000686e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.306000000000061e-06, 4.707999999999102e-06, 5.305000000000587e-06, 5.319999999999631e-06, 5.34799999999877e-06, 5.306000000000061e-06, 5.9029999999980765e-06, 5.917000000001116e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.9029999999980765e-06, 5.901999999998603e-06, 5.916999999997646e-06, 5.375000000001906e-06, 5.903000000001546e-06, 5.319999999999631e-06, 5.917000000001116e-06, 5.306000000000061e-06, 5.319000000000157e-06, 5.3189999999966875e-06, 5.319000000000157e-06, 5.332999999999727e-06, 5.292000000000491e-06, 4.778000000000421e-06, 5.389000000001476e-06, 5.2499999999983116e-06, 5.305000000000587e-06, 5.916999999997646e-06, 5.917000000001116e-06, 5.292000000000491e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.931000000000686e-06, 5.319000000000157e-06, 5.305000000000587e-06, 5.306000000000061e-06, 5.306000000000061e-06, 5.305000000000587e-06, 5.332999999999727e-06, 5.306000000000061e-06, 5.903000000001546e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.155" endtime="20201030 15:52:07.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.150" endtime="20201030 15:52:07.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.163" endtime="20201030 15:52:07.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.159" endtime="20201030 15:52:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.158" endtime="20201030 15:52:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.798" endtime="20201030 15:52:07.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.798" endtime="20201030 15:52:07.185"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.196" endtime="20201030 15:52:07.211"></status>
</kw>
<msg timestamp="20201030 15:52:07.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.194" endtime="20201030 15:52:07.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.213" endtime="20201030 15:52:07.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.216" endtime="20201030 15:52:07.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.191" endtime="20201030 15:52:07.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.188" endtime="20201030 15:52:07.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.225" endtime="20201030 15:52:07.511"></status>
</kw>
<msg timestamp="20201030 15:52:07.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025471264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025477181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.223" endtime="20201030 15:52:07.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025471264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025477181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.515" endtime="20201030 15:52:07.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.524" endtime="20201030 15:52:07.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.221" endtime="20201030 15:52:07.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.219" endtime="20201030 15:52:07.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.531" level="INFO">${RESULT} = [{'diff': 5.917000000001116e-06}, {'diff': 5.917000000001116e-06}, {'diff': 6.513999999999132e-06}, {'diff': 5.929999999997743e-06}, {'diff': 6.528000000002171e-06}, {'diff': 5.903000000001546e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.527" endtime="20201030 15:52:07.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.535" level="INFO">${ACCURACY} = {'diff': [5.917000000001116e-06, 5.917000000001116e-06, 6.513999999999132e-06, 5.929999999997743e-06, 6.528000000002171e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.944...</msg>
<status status="PASS" starttime="20201030 15:52:07.532" endtime="20201030 15:52:07.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.539" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.538" endtime="20201030 15:52:07.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.542" level="INFO">VALUE: [5.917000000001116e-06, 5.917000000001116e-06, 6.513999999999132e-06, 5.929999999997743e-06, 6.528000000002171e-06, 5.903000000001546e-06, 5.9029999999980765e-06, 5.916999999997646e-06, 5.944000000000782e-06, 7.125000000000187e-06, 6.5279999999987015e-06, 6.542000000001741e-06, 5.915999999998173e-06, 6.526999999999228e-06, 6.5279999999987015e-06, 7.111999999996621e-06, 6.514000000002601e-06, 5.917000000001116e-06, 7.125000000000187e-06, 6.542000000001741e-06, 6.514000000002601e-06, 5.9439999999973125e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.528000000002171e-06, 7.111000000000617e-06, 5.917000000001116e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 6.499999999999562e-06, 6.513999999999132e-06, 6.499999999999562e-06, 6.528000000002171e-06, 6.5279999999987015e-06, 5.915999999998173e-06, 5.903000000001546e-06, 5.916999999997646e-06, 7.111000000000617e-06, 6.499999999999562e-06, 6.485999999999992e-06, 7.125000000000187e-06, 6.499999999999562e-06, 5.917000000001116e-06, 6.499999999999562e-06, 5.930000000001212e-06, 5.917000000001116e-06, 5.917000000001116e-06, 6.5279999999987015e-06, 6.513999999999132e-06, 6.514000000002601e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.541" endtime="20201030 15:52:07.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.536" endtime="20201030 15:52:07.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.547" endtime="20201030 15:52:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.545" endtime="20201030 15:52:07.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.544" endtime="20201030 15:52:07.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.186" endtime="20201030 15:52:07.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.185" endtime="20201030 15:52:07.568"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.579" endtime="20201030 15:52:07.595"></status>
</kw>
<msg timestamp="20201030 15:52:07.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.576" endtime="20201030 15:52:07.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.597" endtime="20201030 15:52:07.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.600" endtime="20201030 15:52:07.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.573" endtime="20201030 15:52:07.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.571" endtime="20201030 15:52:07.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.611" endtime="20201030 15:52:07.920"></status>
</kw>
<msg timestamp="20201030 15:52:07.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026179528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026186653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.610" endtime="20201030 15:52:07.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026179528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026186653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.924" endtime="20201030 15:52:07.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.932" endtime="20201030 15:52:07.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.607" endtime="20201030 15:52:07.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.604" endtime="20201030 15:52:07.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.939" level="INFO">${RESULT} = [{'diff': 7.125000000000187e-06}, {'diff': 7.709000000001576e-06}, {'diff': 7.722000000001672e-06}, {'diff': 7.735999999997772e-06}, {'diff': 7.1669999999988965e-06}, {'diff': 7.749999999997342e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:07.936" endtime="20201030 15:52:07.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:07.943" level="INFO">${ACCURACY} = {'diff': [7.125000000000187e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.1669999999988965e-06, 7.749999999997342e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.721...</msg>
<status status="PASS" starttime="20201030 15:52:07.940" endtime="20201030 15:52:07.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.948" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:07.947" endtime="20201030 15:52:07.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.951" level="INFO">VALUE: [7.125000000000187e-06, 7.709000000001576e-06, 7.722000000001672e-06, 7.735999999997772e-06, 7.1669999999988965e-06, 7.749999999997342e-06, 7.138000000000283e-06, 7.125000000000187e-06, 7.721999999998203e-06, 7.749999999997342e-06, 7.111000000000617e-06, 7.069999999997911e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.721999999998203e-06, 7.804999999999618e-06, 7.736000000001242e-06, 7.736000000001242e-06, 7.735999999997772e-06, 7.111000000000617e-06, 7.1529999999993266e-06, 7.735999999997772e-06, 7.721999999998203e-06, 7.777999999999952e-06, 7.138999999999757e-06, 7.125000000000187e-06, 7.138999999999757e-06, 7.722000000001672e-06, 7.777999999999952e-06, 7.125000000000187e-06, 7.110999999997147e-06, 7.777999999999952e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.1529999999993266e-06, 7.0829999999980076e-06, 7.125000000000187e-06, 7.735999999997772e-06, 7.749999999997342e-06, 7.695000000002006e-06, 7.707999999998633e-06, 7.679999999999493e-06, 7.735999999997772e-06, 7.152000000003322e-06, 7.1669999999988965e-06, 7.722000000001672e-06, 7.1120000000000905e-06, 7.736000000001242e-06, 7.195000000001506e-06, 7.722999999997676e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.949" endtime="20201030 15:52:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.944" endtime="20201030 15:52:07.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.956" endtime="20201030 15:52:07.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.955" endtime="20201030 15:52:07.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.953" endtime="20201030 15:52:07.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.569" endtime="20201030 15:52:07.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.568" endtime="20201030 15:52:07.977"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.986" endtime="20201030 15:52:08.001"></status>
</kw>
<msg timestamp="20201030 15:52:08.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.985" endtime="20201030 15:52:08.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.003" endtime="20201030 15:52:08.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.005" endtime="20201030 15:52:08.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.982" endtime="20201030 15:52:08.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.980" endtime="20201030 15:52:08.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.015" endtime="20201030 15:52:08.300"></status>
</kw>
<msg timestamp="20201030 15:52:08.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.013" endtime="20201030 15:52:08.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022636208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022644542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.305" endtime="20201030 15:52:08.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.313" endtime="20201030 15:52:08.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.010" endtime="20201030 15:52:08.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.009" endtime="20201030 15:52:08.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.320" level="INFO">${RESULT} = [{'diff': 8.333999999998731e-06}, {'diff': 8.332999999999258e-06}, {'diff': 8.332999999999258e-06}, {'diff': 7.723000000001146e-06}, {'diff': 8.917000000000647e-06}, {'diff': 8.318999999999688e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:08.317" endtime="20201030 15:52:08.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.325" level="INFO">${ACCURACY} = {'diff': [8.333999999998731e-06, 8.332999999999258e-06, 8.332999999999258e-06, 7.723000000001146e-06, 8.917000000000647e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.930000000000743e-06, 8.9169...</msg>
<status status="PASS" starttime="20201030 15:52:08.321" endtime="20201030 15:52:08.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.330" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.329" endtime="20201030 15:52:08.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.332" level="INFO">VALUE: [8.333999999998731e-06, 8.332999999999258e-06, 8.332999999999258e-06, 7.723000000001146e-06, 8.917000000000647e-06, 8.318999999999688e-06, 8.346999999998828e-06, 8.930000000000743e-06, 8.916999999997177e-06, 8.375000000001437e-06, 8.32000000000263e-06, 8.958999999999356e-06, 8.971999999999453e-06, 8.986999999998496e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.332999999999258e-06, 7.736000000001242e-06, 8.346999999998828e-06, 8.332999999999258e-06, 8.34800000000177e-06, 8.931000000000217e-06, 8.332999999999258e-06, 8.333999999998731e-06, 8.318999999999688e-06, 8.332999999999258e-06, 8.305999999999591e-06, 7.722000000001672e-06, 8.278000000000452e-06, 8.917000000000647e-06, 8.347999999998301e-06, 8.332999999999258e-06, 8.319999999999161e-06, 8.347999999998301e-06, 8.930000000000743e-06, 8.944000000000313e-06, 8.346999999998828e-06, 7.707999999998633e-06, 8.944000000000313e-06, 8.346999999998828e-06, 8.333999999998731e-06, 8.930000000000743e-06, 1.4500000000000624e-05, 8.931000000000217e-06, 8.332999999999258e-06, 7.721999999998203e-06, 8.360999999998397e-06, 8.332999999999258e-06, 8.333999999998731e-06, 7.708999999998106e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.331" endtime="20201030 15:52:08.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.326" endtime="20201030 15:52:08.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.337" endtime="20201030 15:52:08.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.335" endtime="20201030 15:52:08.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.334" endtime="20201030 15:52:08.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.978" endtime="20201030 15:52:08.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.977" endtime="20201030 15:52:08.358"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.367" endtime="20201030 15:52:08.382"></status>
</kw>
<msg timestamp="20201030 15:52:08.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.366" endtime="20201030 15:52:08.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.383" endtime="20201030 15:52:08.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.386" endtime="20201030 15:52:08.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.363" endtime="20201030 15:52:08.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.361" endtime="20201030 15:52:08.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.395" endtime="20201030 15:52:08.684"></status>
</kw>
<msg timestamp="20201030 15:52:08.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.394" endtime="20201030 15:52:08.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022714167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.688" endtime="20201030 15:52:08.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.697" endtime="20201030 15:52:08.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.391" endtime="20201030 15:52:08.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.389" endtime="20201030 15:52:08.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.704" level="INFO">${RESULT} = [{'diff': 9.528000000001702e-06}, {'diff': 9.542000000001272e-06}, {'diff': 8.931000000000217e-06}, {'diff': 8.945000000003256e-06}, {'diff': 1.0124999999999718e-05}, {'diff': 9.583000000000508e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.700" endtime="20201030 15:52:08.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:08.708" level="INFO">${ACCURACY} = {'diff': [9.528000000001702e-06, 9.542000000001272e-06, 8.931000000000217e-06, 8.945000000003256e-06, 1.0124999999999718e-05, 9.583000000000508e-06, 8.917000000000647e-06, 9.540999999998329e-06, 9.541...</msg>
<status status="PASS" starttime="20201030 15:52:08.705" endtime="20201030 15:52:08.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.713" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:08.712" endtime="20201030 15:52:08.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.716" level="INFO">VALUE: [9.528000000001702e-06, 9.542000000001272e-06, 8.931000000000217e-06, 8.945000000003256e-06, 1.0124999999999718e-05, 9.583000000000508e-06, 8.917000000000647e-06, 9.540999999998329e-06, 9.541000000001798e-06, 8.930000000000743e-06, 8.931000000000217e-06, 9.499999999999093e-06, 9.527999999998232e-06, 9.541000000001798e-06, 9.541000000001798e-06, 1.0181000000001467e-05, 9.540999999998329e-06, 9.541999999997802e-06, 1.0138999999999287e-05, 9.528000000001702e-06, 9.499999999999093e-06, 9.554999999997899e-06, 9.528000000001702e-06, 9.555000000001368e-06, 9.512999999999189e-06, 9.555000000001368e-06, 9.541999999997802e-06, 8.930000000000743e-06, 8.944999999999786e-06, 1.0138999999999287e-05, 8.944000000000313e-06, 9.624999999999218e-06, 8.917000000000647e-06, 9.000000000002062e-06, 9.542000000001272e-06, 9.556000000000842e-06, 8.929999999997273e-06, 9.556000000000842e-06, 8.944999999999786e-06, 8.985999999999023e-06, 1.0138999999999287e-05, 9.542000000001272e-06, 9.556000000000842e-06, 1.0138999999999287e-05, 9.555000000001368e-06, 9.542000000001272e-06, 9.610999999999648e-06, 9.541000000001798e-06, 8.917000000000647e-06, 9.542000000001272e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.715" endtime="20201030 15:52:08.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.709" endtime="20201030 15:52:08.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.753" endtime="20201030 15:52:08.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.752" endtime="20201030 15:52:08.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.750" endtime="20201030 15:52:08.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.359" endtime="20201030 15:52:08.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.359" endtime="20201030 15:52:08.774"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.783" endtime="20201030 15:52:08.799"></status>
</kw>
<msg timestamp="20201030 15:52:08.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.782" endtime="20201030 15:52:08.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.801" endtime="20201030 15:52:08.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.804" endtime="20201030 15:52:08.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.779" endtime="20201030 15:52:08.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.777" endtime="20201030 15:52:08.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.813" endtime="20201030 15:52:09.099"></status>
</kw>
<msg timestamp="20201030 15:52:09.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023289833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.811" endtime="20201030 15:52:09.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023289833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023299986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.103" endtime="20201030 15:52:09.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.112" endtime="20201030 15:52:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.809" endtime="20201030 15:52:09.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.807" endtime="20201030 15:52:09.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.119" level="INFO">${RESULT} = [{'diff': 1.0153000000002327e-05}, {'diff': 1.0180999999997997e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0750000000000343e-05}, {'diff': 1.0750000000000343e-...</msg>
<status status="PASS" starttime="20201030 15:52:09.115" endtime="20201030 15:52:09.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.123" level="INFO">${ACCURACY} = {'diff': [1.0153000000002327e-05, 1.0180999999997997e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0165999999998954e-05, 1.0167000000001897e-05...</msg>
<status status="PASS" starttime="20201030 15:52:09.120" endtime="20201030 15:52:09.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.128" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.127" endtime="20201030 15:52:09.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.130" level="INFO">VALUE: [1.0153000000002327e-05, 1.0180999999997997e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0750000000000343e-05, 1.0165999999998954e-05, 1.0167000000001897e-05, 1.0763999999999913e-05, 1.0152999999998857e-05, 1.0763999999999913e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0165999999998954e-05, 1.0736000000000773e-05, 1.0151999999999384e-05, 1.0151999999999384e-05, 1.0139000000002757e-05, 1.0750000000000343e-05, 1.0694999999998067e-05, 1.0736000000000773e-05, 1.0124999999999718e-05, 1.0097000000000578e-05, 1.0209000000000606e-05, 1.0750000000000343e-05, 1.0097000000000578e-05, 1.0750000000000343e-05, 1.0806000000002092e-05, 1.0167000000001897e-05, 1.0750000000000343e-05, 1.0735999999997303e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0736000000000773e-05, 1.0195000000001037e-05, 1.0152999999998857e-05, 1.0194000000001563e-05, 1.0763999999999913e-05, 1.0750000000000343e-05, 1.0763999999999913e-05, 1.0818999999998719e-05, 1.0722000000001203e-05, 1.0750000000000343e-05, 1.0722999999997207e-05, 1.0138999999999287e-05, 1.0693999999998594e-05, 1.0736000000000773e-05, 1.0750000000000343e-05, 1.0137999999999814e-05, 1.0124999999999718e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.129" endtime="20201030 15:52:09.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.124" endtime="20201030 15:52:09.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.136" endtime="20201030 15:52:09.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.135" endtime="20201030 15:52:09.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.133" endtime="20201030 15:52:09.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.775" endtime="20201030 15:52:09.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.774" endtime="20201030 15:52:09.157"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.166" endtime="20201030 15:52:09.181"></status>
</kw>
<msg timestamp="20201030 15:52:09.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.165" endtime="20201030 15:52:09.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.182" endtime="20201030 15:52:09.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.185" endtime="20201030 15:52:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.162" endtime="20201030 15:52:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.159" endtime="20201030 15:52:09.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.194" endtime="20201030 15:52:09.482"></status>
</kw>
<msg timestamp="20201030 15:52:09.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.193" endtime="20201030 15:52:09.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022554181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.486" endtime="20201030 15:52:09.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.495" endtime="20201030 15:52:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.190" endtime="20201030 15:52:09.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.188" endtime="20201030 15:52:09.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.502" level="INFO">${RESULT} = [{'diff': 1.0763999999999913e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1958999999998887e-05}, {'diff': 1.1361000000001398e-05}, {'diff': 1.1360999999997928e-05}, {'diff': 1.0750000000000343e-...</msg>
<status status="PASS" starttime="20201030 15:52:09.498" endtime="20201030 15:52:09.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.507" level="INFO">${ACCURACY} = {'diff': [1.0763999999999913e-05, 1.1347000000001828e-05, 1.1958999999998887e-05, 1.1361000000001398e-05, 1.1360999999997928e-05, 1.0750000000000343e-05, 1.1957999999999414e-05, 1.1348000000001301e-05...</msg>
<status status="PASS" starttime="20201030 15:52:09.503" endtime="20201030 15:52:09.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.511" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.510" endtime="20201030 15:52:09.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.514" level="INFO">VALUE: [1.0763999999999913e-05, 1.1347000000001828e-05, 1.1958999999998887e-05, 1.1361000000001398e-05, 1.1360999999997928e-05, 1.0750000000000343e-05, 1.1957999999999414e-05, 1.1348000000001301e-05, 1.1958999999998887e-05, 1.1430999999999247e-05, 1.1347999999997832e-05, 1.1361999999997402e-05, 1.1304999999999649e-05, 1.2014000000001163e-05, 1.1957999999999414e-05, 1.0749999999996873e-05, 1.1971999999998983e-05, 1.1430999999999247e-05, 1.1361000000001398e-05, 1.1985999999998553e-05, 1.1346999999998358e-05, 1.1346999999998358e-05, 1.1416999999999677e-05, 1.1957999999999414e-05, 1.1361000000001398e-05, 1.1957999999999414e-05, 1.0736000000000773e-05, 1.1957999999999414e-05, 1.1346999999998358e-05, 1.1346999999998358e-05, 1.1333999999998262e-05, 1.1971999999998983e-05, 1.1318999999999219e-05, 1.1360999999997928e-05, 1.1347000000001828e-05, 1.1971999999998983e-05, 1.1361000000001398e-05, 1.1972000000002453e-05, 1.1958999999998887e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1360999999997928e-05, 1.1875000000001468e-05, 1.1362000000000871e-05, 1.1957999999999414e-05, 1.2013000000001689e-05, 1.1943999999999844e-05, 1.0735999999997303e-05, 1.1347999999997832e-05, 1.1375000000000968e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.513" endtime="20201030 15:52:09.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.508" endtime="20201030 15:52:09.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.519" endtime="20201030 15:52:09.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.518" endtime="20201030 15:52:09.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.516" endtime="20201030 15:52:09.539"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.158" endtime="20201030 15:52:09.540"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.157" endtime="20201030 15:52:09.540"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.549" endtime="20201030 15:52:09.563"></status>
</kw>
<msg timestamp="20201030 15:52:09.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.547" endtime="20201030 15:52:09.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.565" endtime="20201030 15:52:09.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.567" endtime="20201030 15:52:09.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.545" endtime="20201030 15:52:09.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.542" endtime="20201030 15:52:09.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.577" endtime="20201030 15:52:09.864"></status>
</kw>
<msg timestamp="20201030 15:52:09.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.575" endtime="20201030 15:52:09.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022234625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022247181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.869" endtime="20201030 15:52:09.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.877" endtime="20201030 15:52:09.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.572" endtime="20201030 15:52:09.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.571" endtime="20201030 15:52:09.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.884" level="INFO">${RESULT} = [{'diff': 1.2556000000000372e-05}, {'diff': 1.2569000000000469e-05}, {'diff': 1.2569000000000469e-05}, {'diff': 1.2555000000000899e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.3152999999998388e-...</msg>
<status status="PASS" starttime="20201030 15:52:09.881" endtime="20201030 15:52:09.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:09.888" level="INFO">${ACCURACY} = {'diff': [1.2556000000000372e-05, 1.2569000000000469e-05, 1.2569000000000469e-05, 1.2555000000000899e-05, 1.2499999999998623e-05, 1.3152999999998388e-05, 1.2569000000000469e-05, 1.2624999999998748e-05...</msg>
<status status="PASS" starttime="20201030 15:52:09.885" endtime="20201030 15:52:09.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.893" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:09.892" endtime="20201030 15:52:09.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.896" level="INFO">VALUE: [1.2556000000000372e-05, 1.2569000000000469e-05, 1.2569000000000469e-05, 1.2555000000000899e-05, 1.2499999999998623e-05, 1.3152999999998388e-05, 1.2569000000000469e-05, 1.2624999999998748e-05, 1.2569000000000469e-05, 1.2556000000000372e-05, 1.1958000000002883e-05, 1.1957999999999414e-05, 1.2569999999999942e-05, 1.2583000000000039e-05, 1.1957999999999414e-05, 1.1943999999999844e-05, 1.1958999999998887e-05, 1.1889000000001038e-05, 1.1999999999998123e-05, 1.2555000000000899e-05, 1.2527000000001759e-05, 1.2583999999999512e-05, 1.2569999999999942e-05, 1.2569000000000469e-05, 1.1957999999999414e-05, 1.1999999999998123e-05, 1.2542000000000803e-05, 1.3110999999999678e-05, 1.1943999999999844e-05, 1.2528000000001233e-05, 1.1957999999999414e-05, 1.252699999999829e-05, 1.2583000000000039e-05, 1.1917000000000177e-05, 1.1957999999999414e-05, 1.2569000000000469e-05, 1.2542000000000803e-05, 1.2569000000000469e-05, 1.1958999999998887e-05, 1.2556000000000372e-05, 1.2569000000000469e-05, 1.3152999999998388e-05, 1.2556000000000372e-05, 1.1943999999999844e-05, 1.2527999999997763e-05, 1.1973000000001927e-05, 1.1971999999998983e-05, 1.2597999999999082e-05, 1.2555999999996903e-05, 1.2556000000000372e-05]</msg>
<status status="PASS" starttime="20201030 15:52:09.894" endtime="20201030 15:52:09.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.889" endtime="20201030 15:52:09.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.901" endtime="20201030 15:52:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.899" endtime="20201030 15:52:09.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.898" endtime="20201030 15:52:09.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.541" endtime="20201030 15:52:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.540" endtime="20201030 15:52:09.922"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.931" endtime="20201030 15:52:09.950"></status>
</kw>
<msg timestamp="20201030 15:52:09.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.929" endtime="20201030 15:52:09.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.951" endtime="20201030 15:52:09.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.954" endtime="20201030 15:52:09.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.927" endtime="20201030 15:52:09.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.924" endtime="20201030 15:52:09.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.963" endtime="20201030 15:52:10.249"></status>
</kw>
<msg timestamp="20201030 15:52:10.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025573958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025587708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.962" endtime="20201030 15:52:10.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025573958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025587708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.254" endtime="20201030 15:52:10.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.262" endtime="20201030 15:52:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.959" endtime="20201030 15:52:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.957" endtime="20201030 15:52:10.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.269" level="INFO">${RESULT} = [{'diff': 1.3749999999999873e-05}, {'diff': 1.3138999999998818e-05}, {'diff': 1.377699999999954e-05}, {'diff': 1.3167000000001428e-05}, {'diff': 1.377699999999954e-05}, {'diff': 1.3763999999999443e-05...</msg>
<status status="PASS" starttime="20201030 15:52:10.266" endtime="20201030 15:52:10.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.273" level="INFO">${ACCURACY} = {'diff': [1.3749999999999873e-05, 1.3138999999998818e-05, 1.377699999999954e-05, 1.3167000000001428e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.379099999999911e-05, 1.3722000000000734e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:52:10.270" endtime="20201030 15:52:10.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.278" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.277" endtime="20201030 15:52:10.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.281" level="INFO">VALUE: [1.3749999999999873e-05, 1.3138999999998818e-05, 1.377699999999954e-05, 1.3167000000001428e-05, 1.377699999999954e-05, 1.3763999999999443e-05, 1.379099999999911e-05, 1.3722000000000734e-05, 1.3152999999998388e-05, 1.3138999999998818e-05, 1.3777999999999013e-05, 1.3167000000001428e-05, 1.3791999999998583e-05, 1.3138999999998818e-05, 1.3167000000001428e-05, 1.3249999999999373e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3723000000000207e-05, 1.3153000000001858e-05, 1.3165999999998484e-05, 1.3777999999999013e-05, 1.3181000000000997e-05, 1.3167000000001428e-05, 1.3778000000002483e-05, 1.3792000000002053e-05, 1.3181000000000997e-05, 1.3709000000000637e-05, 1.3777999999999013e-05, 1.3736000000000304e-05, 1.3736000000000304e-05, 1.3166999999997958e-05, 1.3166000000001954e-05, 1.3806000000001623e-05, 1.3777999999999013e-05, 1.3749999999999873e-05, 1.3152999999998388e-05, 1.3179999999998054e-05, 1.3763999999999443e-05, 1.377699999999954e-05, 1.3777999999999013e-05, 1.3763999999999443e-05, 1.3166999999997958e-05, 1.3749999999999873e-05, 1.3194000000001094e-05, 1.3736000000000304e-05, 1.3152999999998388e-05, 1.3181000000000997e-05, 1.3151999999998915e-05, 1.3179999999998054e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.279" endtime="20201030 15:52:10.282"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.274" endtime="20201030 15:52:10.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.287" endtime="20201030 15:52:10.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.285" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.284" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.923" endtime="20201030 15:52:10.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.922" endtime="20201030 15:52:10.307"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.317" endtime="20201030 15:52:10.331"></status>
</kw>
<msg timestamp="20201030 15:52:10.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.315" endtime="20201030 15:52:10.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.333" endtime="20201030 15:52:10.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.335" endtime="20201030 15:52:10.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.312" endtime="20201030 15:52:10.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.310" endtime="20201030 15:52:10.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.345" endtime="20201030 15:52:10.630"></status>
</kw>
<msg timestamp="20201030 15:52:10.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.343" endtime="20201030 15:52:10.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022508278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022521986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.635" endtime="20201030 15:52:10.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.643" endtime="20201030 15:52:10.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.340" endtime="20201030 15:52:10.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.339" endtime="20201030 15:52:10.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:10.650" level="INFO">${RESULT} = [{'diff': 1.3708000000001164e-05}, {'diff': 1.4375000000000498e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4985999999998084e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.4402999999999638e-...</msg>
<status status="PASS" starttime="20201030 15:52:10.646" endtime="20201030 15:52:10.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:10.655" level="INFO">${ACCURACY} = {'diff': [1.3708000000001164e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4985999999998084e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4306000000002123e-05, 1.4903000000000138e-05...</msg>
<status status="PASS" starttime="20201030 15:52:10.651" endtime="20201030 15:52:10.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.660" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:10.659" endtime="20201030 15:52:10.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.662" level="INFO">VALUE: [1.3708000000001164e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4985999999998084e-05, 1.4389000000000068e-05, 1.4402999999999638e-05, 1.4306000000002123e-05, 1.4903000000000138e-05, 1.4375000000000498e-05, 1.4986000000001554e-05, 1.4389000000000068e-05, 1.4319999999998223e-05, 1.4389000000000068e-05, 1.433299999999832e-05, 1.4972999999997988e-05, 1.4375000000000498e-05, 1.4971999999998514e-05, 1.4389000000000068e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.3792000000002053e-05, 1.4375000000000498e-05, 1.3777999999999013e-05, 1.4958999999998418e-05, 1.4375000000000498e-05, 1.3777999999999013e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4985999999998084e-05, 1.4360999999997459e-05, 1.4402999999999638e-05, 1.4360999999997459e-05, 1.4361000000000929e-05, 1.5013999999997224e-05, 1.4361000000000929e-05, 1.4375000000000498e-05, 1.5056000000002873e-05, 1.4375000000000498e-05, 1.4985999999998084e-05, 1.4361000000000929e-05, 1.4360999999997459e-05, 1.4375000000000498e-05, 1.4360999999997459e-05, 1.4374999999997029e-05, 1.4375000000000498e-05, 1.3805999999998153e-05, 1.4361000000000929e-05, 1.4389000000000068e-05, 1.3764000000002913e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201030 15:52:10.661" endtime="20201030 15:52:10.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.656" endtime="20201030 15:52:10.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:10.667" endtime="20201030 15:52:10.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.666" endtime="20201030 15:52:10.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.665" endtime="20201030 15:52:10.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.308" endtime="20201030 15:52:10.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.308" endtime="20201030 15:52:10.688"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.697" endtime="20201030 15:52:10.713"></status>
</kw>
<msg timestamp="20201030 15:52:10.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.696" endtime="20201030 15:52:10.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:10.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:10.714" endtime="20201030 15:52:10.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.717" endtime="20201030 15:52:10.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.693" endtime="20201030 15:52:10.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.691" endtime="20201030 15:52:10.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:10.726" endtime="20201030 15:52:11.016"></status>
</kw>
<msg timestamp="20201030 15:52:11.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:10.724" endtime="20201030 15:52:11.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022399597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022415153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.021" endtime="20201030 15:52:11.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.029" endtime="20201030 15:52:11.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.722" endtime="20201030 15:52:11.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.720" endtime="20201030 15:52:11.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.036" level="INFO">${RESULT} = [{'diff': 1.5555999999999903e-05}, {'diff': 1.561099999999871e-05}, {'diff': 1.4986000000001554e-05}, {'diff': 1.558300000000304e-05}, {'diff': 1.4985999999998084e-05}, {'diff': 1.4972000000001984e-05...</msg>
<status status="PASS" starttime="20201030 15:52:11.033" endtime="20201030 15:52:11.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.040" level="INFO">${ACCURACY} = {'diff': [1.5555999999999903e-05, 1.561099999999871e-05, 1.4986000000001554e-05, 1.558300000000304e-05, 1.4985999999998084e-05, 1.4972000000001984e-05, 1.5542000000000333e-05, 1.5014000000000693e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:11.037" endtime="20201030 15:52:11.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.045" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.044" endtime="20201030 15:52:11.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.048" level="INFO">VALUE: [1.5555999999999903e-05, 1.561099999999871e-05, 1.4986000000001554e-05, 1.558300000000304e-05, 1.4985999999998084e-05, 1.4972000000001984e-05, 1.5542000000000333e-05, 1.5014000000000693e-05, 1.5000000000001124e-05, 1.4973000000001457e-05, 1.4985999999998084e-05, 1.4971999999998514e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.5041999999999833e-05, 1.4985999999998084e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.4986999999997558e-05, 1.4972999999997988e-05, 1.4972000000001984e-05, 1.5569e-05, 1.4986000000001554e-05, 1.4985999999998084e-05, 1.4971999999998514e-05, 1.502700000000079e-05, 1.559699999999914e-05, 1.5569e-05, 1.4903000000000138e-05, 1.4971999999998514e-05, 1.4972999999997988e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5583999999999043e-05, 1.5069999999998973e-05, 1.558299999999957e-05, 1.5584000000002513e-05, 1.5542000000000333e-05, 1.558299999999957e-05, 1.5569999999999473e-05, 1.4971999999998514e-05, 1.4985999999998084e-05, 1.4987000000001027e-05, 1.4916000000000235e-05, 1.558299999999957e-05, 1.559699999999914e-05, 1.501300000000122e-05, 1.6180000000001055e-05, 1.4971999999998514e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.046" endtime="20201030 15:52:11.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.041" endtime="20201030 15:52:11.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.053" endtime="20201030 15:52:11.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.051" endtime="20201030 15:52:11.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.050" endtime="20201030 15:52:11.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.689" endtime="20201030 15:52:11.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:10.688" endtime="20201030 15:52:11.074"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.083" endtime="20201030 15:52:11.099"></status>
</kw>
<msg timestamp="20201030 15:52:11.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.081" endtime="20201030 15:52:11.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.100" endtime="20201030 15:52:11.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.103" endtime="20201030 15:52:11.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.078" endtime="20201030 15:52:11.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.076" endtime="20201030 15:52:11.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.112" endtime="20201030 15:52:11.398"></status>
</kw>
<msg timestamp="20201030 15:52:11.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.111" endtime="20201030 15:52:11.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023324569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.402" endtime="20201030 15:52:11.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.411" endtime="20201030 15:52:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.108" endtime="20201030 15:52:11.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.106" endtime="20201030 15:52:11.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.418" level="INFO">${RESULT} = [{'diff': 1.677699999999907e-05}, {'diff': 1.618099999999706e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.679099999999864e-05}, {'diff': 1.6195000000000098e-05}, {'diff': 1.6195000000000098e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:11.414" endtime="20201030 15:52:11.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.422" level="INFO">${ACCURACY} = {'diff': [1.677699999999907e-05, 1.618099999999706e-05, 1.6208000000000194e-05, 1.679099999999864e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.680500000000168e-05, 1.6791999999998114e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:11.419" endtime="20201030 15:52:11.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.427" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.425" endtime="20201030 15:52:11.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.429" level="INFO">VALUE: [1.677699999999907e-05, 1.618099999999706e-05, 1.6208000000000194e-05, 1.679099999999864e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.680500000000168e-05, 1.6791999999998114e-05, 1.6181000000000528e-05, 1.6195000000000098e-05, 1.6195000000000098e-05, 1.6208000000000194e-05, 1.6820000000000723e-05, 1.6777999999998544e-05, 1.618099999999706e-05, 1.684700000000039e-05, 1.613900000000182e-05, 1.6179999999997585e-05, 1.679099999999864e-05, 1.6806000000001153e-05, 1.6194000000000625e-05, 1.6792000000001583e-05, 1.6194000000000625e-05, 1.6208000000000194e-05, 1.6194000000000625e-05, 1.6778000000002014e-05, 1.6847999999999863e-05, 1.6221999999999764e-05, 1.6207999999996725e-05, 1.6791999999998114e-05, 1.6195000000000098e-05, 1.6194000000000625e-05, 1.6179999999997585e-05, 1.681899999999778e-05, 1.6792000000001583e-05, 1.6792000000001583e-05, 1.6195000000000098e-05, 1.6792000000001583e-05, 1.612499999999878e-05, 1.6195000000000098e-05, 1.6193999999997155e-05, 1.616700000000096e-05, 1.6195000000000098e-05, 1.681899999999778e-05, 1.6792000000001583e-05, 1.6792000000001583e-05, 1.680500000000168e-05, 1.6181000000000528e-05, 1.6792000000001583e-05, 1.6778000000002014e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.428" endtime="20201030 15:52:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.423" endtime="20201030 15:52:11.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.435" endtime="20201030 15:52:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.434" endtime="20201030 15:52:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.432" endtime="20201030 15:52:11.455"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.075" endtime="20201030 15:52:11.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.074" endtime="20201030 15:52:11.456"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.465" endtime="20201030 15:52:11.480"></status>
</kw>
<msg timestamp="20201030 15:52:11.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.463" endtime="20201030 15:52:11.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.482" endtime="20201030 15:52:11.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.484" endtime="20201030 15:52:11.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.461" endtime="20201030 15:52:11.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.458" endtime="20201030 15:52:11.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.494" endtime="20201030 15:52:11.781"></status>
</kw>
<msg timestamp="20201030 15:52:11.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.492" endtime="20201030 15:52:11.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022345111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.786" endtime="20201030 15:52:11.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.794" endtime="20201030 15:52:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.489" endtime="20201030 15:52:11.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.488" endtime="20201030 15:52:11.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:11.801" level="INFO">${RESULT} = [{'diff': 1.734700000000089e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.7416000000002735e-05}, {'diff': 1.73889999999996e-05}, {'diff': 1.6792000000001583e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:11.798" endtime="20201030 15:52:11.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:11.806" level="INFO">${ACCURACY} = {'diff': [1.734700000000089e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7416000000002735e-05, 1.73889999999996e-05, 1.6792000000001583e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.738...</msg>
<status status="PASS" starttime="20201030 15:52:11.802" endtime="20201030 15:52:11.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.811" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:11.810" endtime="20201030 15:52:11.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.813" level="INFO">VALUE: [1.734700000000089e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.7416000000002735e-05, 1.73889999999996e-05, 1.6792000000001583e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.681900000000125e-05, 1.7999999999997185e-05, 1.6777999999998544e-05, 1.8027999999999794e-05, 1.737500000000003e-05, 1.736100000000046e-05, 1.7986000000001084e-05, 1.737500000000003e-05, 1.740299999999917e-05, 1.6778000000002014e-05, 1.73889999999996e-05, 1.7401999999999695e-05, 1.738900000000307e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.737500000000003e-05, 1.7444000000001875e-05, 1.6792000000001583e-05, 1.741700000000221e-05, 1.73889999999996e-05, 1.8014000000000224e-05, 1.740299999999917e-05, 1.8014000000000224e-05, 1.740300000000264e-05, 1.7401999999999695e-05, 1.736100000000046e-05, 1.8000000000000654e-05, 1.737500000000003e-05, 1.7985999999997615e-05, 1.681900000000125e-05, 1.7401999999999695e-05, 1.795899999999795e-05, 1.7959000000001418e-05, 1.8014000000000224e-05, 1.740299999999917e-05, 1.740299999999917e-05, 1.7429999999998835e-05, 1.73889999999996e-05, 1.8000000000000654e-05]</msg>
<status status="PASS" starttime="20201030 15:52:11.812" endtime="20201030 15:52:11.814"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.807" endtime="20201030 15:52:11.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:11.818" endtime="20201030 15:52:11.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.817" endtime="20201030 15:52:11.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.816" endtime="20201030 15:52:11.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.457" endtime="20201030 15:52:11.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.456" endtime="20201030 15:52:11.839"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.848" endtime="20201030 15:52:11.864"></status>
</kw>
<msg timestamp="20201030 15:52:11.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.847" endtime="20201030 15:52:11.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:11.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:11.865" endtime="20201030 15:52:11.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.868" endtime="20201030 15:52:11.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.844" endtime="20201030 15:52:11.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.842" endtime="20201030 15:52:11.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:11.877" endtime="20201030 15:52:12.166"></status>
</kw>
<msg timestamp="20201030 15:52:12.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:11.876" endtime="20201030 15:52:12.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022362694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.170" endtime="20201030 15:52:12.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.179" endtime="20201030 15:52:12.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.873" endtime="20201030 15:52:12.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.871" endtime="20201030 15:52:12.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.185" level="INFO">${RESULT} = [{'diff': 1.7987000000000558e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.856899999999953e-05}, {'diff': 1.8000000000000654e-05}, {'diff': 1.862500000000128e-05}, {'diff': 1.85829999999991e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:12.182" endtime="20201030 15:52:12.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.190" level="INFO">${ACCURACY} = {'diff': [1.7987000000000558e-05, 1.8000000000000654e-05, 1.856899999999953e-05, 1.8000000000000654e-05, 1.862500000000128e-05, 1.85829999999991e-05, 1.859700000000214e-05, 1.8000000000000654e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:52:12.186" endtime="20201030 15:52:12.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.194" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.193" endtime="20201030 15:52:12.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.197" level="INFO">VALUE: [1.7987000000000558e-05, 1.8000000000000654e-05, 1.856899999999953e-05, 1.8000000000000654e-05, 1.862500000000128e-05, 1.85829999999991e-05, 1.859700000000214e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8000000000000654e-05, 1.8583999999998574e-05, 1.92089999999992e-05, 1.861100000000171e-05, 1.865300000000042e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.7999999999997185e-05, 1.8000000000000654e-05, 1.8665999999997046e-05, 1.858300000000257e-05, 1.859699999999867e-05, 1.863900000000085e-05, 1.7999999999997185e-05, 1.863900000000085e-05, 1.862499999999781e-05, 1.806899999999903e-05, 1.8000000000000654e-05, 1.7986000000001084e-05, 1.862500000000128e-05, 1.855499999999996e-05, 1.8638000000001376e-05, 1.861100000000171e-05, 1.861099999999824e-05, 1.8000000000000654e-05, 1.8014000000000224e-05, 1.861099999999824e-05, 1.861100000000171e-05, 1.8569999999999004e-05, 1.7986000000001084e-05, 1.7999999999997185e-05, 1.861100000000171e-05, 1.859699999999867e-05, 1.7999999999997185e-05, 1.859699999999867e-05, 1.859699999999867e-05, 1.862499999999781e-05, 1.863900000000085e-05, 1.859700000000214e-05, 1.859699999999867e-05, 1.7986000000001084e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.195" endtime="20201030 15:52:12.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.190" endtime="20201030 15:52:12.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.202" endtime="20201030 15:52:12.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.200" endtime="20201030 15:52:12.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.199" endtime="20201030 15:52:12.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.840" endtime="20201030 15:52:12.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:11.839" endtime="20201030 15:52:12.223"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.232" endtime="20201030 15:52:12.248"></status>
</kw>
<msg timestamp="20201030 15:52:12.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.230" endtime="20201030 15:52:12.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.250" endtime="20201030 15:52:12.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.252" endtime="20201030 15:52:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.228" endtime="20201030 15:52:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.226" endtime="20201030 15:52:12.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.262" endtime="20201030 15:52:12.547"></status>
</kw>
<msg timestamp="20201030 15:52:12.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.260" endtime="20201030 15:52:12.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023762722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023782514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.552" endtime="20201030 15:52:12.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.560" endtime="20201030 15:52:12.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.257" endtime="20201030 15:52:12.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.256" endtime="20201030 15:52:12.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.567" level="INFO">${RESULT} = [{'diff': 1.9792000000001114e-05}, {'diff': 1.9207999999999725e-05}, {'diff': 1.92089999999992e-05}, {'diff': 1.9833999999999824e-05}, {'diff': 1.9777999999998075e-05}, {'diff': 1.9249999999998435e-05...</msg>
<status status="PASS" starttime="20201030 15:52:12.564" endtime="20201030 15:52:12.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.571" level="INFO">${ACCURACY} = {'diff': [1.9792000000001114e-05, 1.9207999999999725e-05, 1.92089999999992e-05, 1.9833999999999824e-05, 1.9777999999998075e-05, 1.9249999999998435e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:12.568" endtime="20201030 15:52:12.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.576" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.575" endtime="20201030 15:52:12.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.578" level="INFO">VALUE: [1.9792000000001114e-05, 1.9207999999999725e-05, 1.92089999999992e-05, 1.9833999999999824e-05, 1.9777999999998075e-05, 1.9249999999998435e-05, 1.9207999999999725e-05, 1.9221999999999295e-05, 1.9806000000000684e-05, 1.981900000000078e-05, 1.92089999999992e-05, 1.9250000000001904e-05, 1.919499999999963e-05, 1.9264000000001474e-05, 1.981899999999731e-05, 1.981900000000078e-05, 1.984699999999992e-05, 1.9166000000001016e-05, 1.981900000000078e-05, 1.9222000000002765e-05, 1.9207999999999725e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.983300000000035e-05, 1.9820000000000254e-05, 1.922299999999877e-05, 1.919499999999963e-05, 1.983300000000035e-05, 1.984699999999992e-05, 1.920900000000267e-05, 1.9777999999998075e-05, 1.920900000000267e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.983300000000035e-05, 1.980499999999774e-05, 1.913900000000135e-05, 1.9264000000001474e-05, 1.92089999999992e-05, 1.9194000000000155e-05, 1.9805999999997215e-05, 1.980500000000121e-05, 1.9207999999999725e-05, 1.9833999999999824e-05, 1.9263999999998005e-05, 1.919499999999963e-05, 1.981900000000078e-05, 1.980500000000121e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.577" endtime="20201030 15:52:12.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.572" endtime="20201030 15:52:12.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.585" endtime="20201030 15:52:12.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.583" endtime="20201030 15:52:12.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.582" endtime="20201030 15:52:12.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.224" endtime="20201030 15:52:12.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.223" endtime="20201030 15:52:12.605"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.614" endtime="20201030 15:52:12.630"></status>
</kw>
<msg timestamp="20201030 15:52:12.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.613" endtime="20201030 15:52:12.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.631" endtime="20201030 15:52:12.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.634" endtime="20201030 15:52:12.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.610" endtime="20201030 15:52:12.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.608" endtime="20201030 15:52:12.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.644" endtime="20201030 15:52:12.932"></status>
</kw>
<msg timestamp="20201030 15:52:12.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.642" endtime="20201030 15:52:12.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022254014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.936" endtime="20201030 15:52:12.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.944" endtime="20201030 15:52:12.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.639" endtime="20201030 15:52:12.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.637" endtime="20201030 15:52:12.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:12.951" level="INFO">${RESULT} = [{'diff': 2.10830000000016e-05}, {'diff': 1.9806000000000684e-05}, {'diff': 1.981900000000078e-05}, {'diff': 2.0472000000000545e-05}, {'diff': 2.1027999999999325e-05}, {'diff': 2.1013999999999755e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:12.948" endtime="20201030 15:52:12.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:12.956" level="INFO">${ACCURACY} = {'diff': [2.10830000000016e-05, 1.9806000000000684e-05, 1.981900000000078e-05, 2.0472000000000545e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 1.980499999999774e-05, 2.04029999999987e-05, 1.98...</msg>
<status status="PASS" starttime="20201030 15:52:12.952" endtime="20201030 15:52:12.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.961" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:12.960" endtime="20201030 15:52:12.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.964" level="INFO">VALUE: [2.10830000000016e-05, 1.9806000000000684e-05, 1.981900000000078e-05, 2.0472000000000545e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 1.980499999999774e-05, 2.04029999999987e-05, 1.9806000000000684e-05, 2.041700000000174e-05, 2.043100000000131e-05, 2.041700000000174e-05, 2.036099999999999e-05, 2.0415999999998796e-05, 2.0401999999999226e-05, 2.038899999999913e-05, 2.0415999999998796e-05, 2.043099999999784e-05, 2.104099999999942e-05, 1.979099999999817e-05, 2.0415999999998796e-05, 2.041700000000174e-05, 2.1013999999999755e-05, 2.0401999999999226e-05, 2.037499999999956e-05, 2.0430000000001836e-05, 2.0486000000000115e-05, 2.041700000000174e-05, 1.9792000000001114e-05, 1.9764000000001974e-05, 2.1013999999999755e-05, 2.0402000000002696e-05, 2.0472000000000545e-05, 2.1013999999999755e-05, 2.0401999999999226e-05, 1.9763999999998505e-05, 2.0387999999999656e-05, 2.0415999999998796e-05, 2.0957999999998006e-05, 2.041699999999827e-05, 2.04029999999987e-05, 2.041700000000174e-05, 2.1027999999999325e-05, 2.1028000000002794e-05, 1.979099999999817e-05, 1.980500000000121e-05, 2.041700000000174e-05, 2.040300000000217e-05, 2.04029999999987e-05, 2.044499999999741e-05]</msg>
<status status="PASS" starttime="20201030 15:52:12.962" endtime="20201030 15:52:12.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.957" endtime="20201030 15:52:12.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:12.969" endtime="20201030 15:52:12.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.967" endtime="20201030 15:52:12.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.966" endtime="20201030 15:52:12.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.606" endtime="20201030 15:52:12.989"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.606" endtime="20201030 15:52:12.989"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.998" endtime="20201030 15:52:13.014"></status>
</kw>
<msg timestamp="20201030 15:52:13.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.997" endtime="20201030 15:52:13.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.015" endtime="20201030 15:52:13.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.018" endtime="20201030 15:52:13.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.994" endtime="20201030 15:52:13.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.992" endtime="20201030 15:52:13.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.027" endtime="20201030 15:52:13.316"></status>
</kw>
<msg timestamp="20201030 15:52:13.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.026" endtime="20201030 15:52:13.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022277333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022298972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.320" endtime="20201030 15:52:13.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.329" endtime="20201030 15:52:13.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.023" endtime="20201030 15:52:13.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.021" endtime="20201030 15:52:13.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.335" level="INFO">${RESULT} = [{'diff': 2.163900000000038e-05}, {'diff': 2.1013999999999755e-05}, {'diff': 2.1013999999999755e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.1027999999999325e-05}, {'diff': 2.165299999999995e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:13.332" endtime="20201030 15:52:13.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.340" level="INFO">${ACCURACY} = {'diff': [2.163900000000038e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.1027999999999325e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 15:52:13.336" endtime="20201030 15:52:13.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.344" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.343" endtime="20201030 15:52:13.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.347" level="INFO">VALUE: [2.163900000000038e-05, 2.1013999999999755e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.1027999999999325e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1027999999999325e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.161100000000124e-05, 2.162500000000081e-05, 2.1013999999999755e-05, 2.0958000000001475e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.2235999999998396e-05, 2.162499999999734e-05, 2.0985999999997146e-05, 2.1000000000000185e-05, 2.102699999999985e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.165299999999995e-05, 2.1028000000002794e-05, 2.1027999999999325e-05, 2.1000000000000185e-05, 2.104099999999942e-05, 2.1056000000001934e-05, 2.101300000000028e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.163900000000038e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.1652000000000476e-05, 2.163900000000038e-05, 2.163900000000038e-05, 2.1651999999997007e-05, 2.162499999999734e-05, 2.1027999999999325e-05, 2.1013999999999755e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.097300000000052e-05, 2.1056000000001934e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.345" endtime="20201030 15:52:13.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.341" endtime="20201030 15:52:13.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.352" endtime="20201030 15:52:13.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.350" endtime="20201030 15:52:13.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.349" endtime="20201030 15:52:13.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.990" endtime="20201030 15:52:13.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.990" endtime="20201030 15:52:13.373"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.382" endtime="20201030 15:52:13.400"></status>
</kw>
<msg timestamp="20201030 15:52:13.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.380" endtime="20201030 15:52:13.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.402" endtime="20201030 15:52:13.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.405" endtime="20201030 15:52:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.378" endtime="20201030 15:52:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.375" endtime="20201030 15:52:13.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.419" endtime="20201030 15:52:13.706"></status>
</kw>
<msg timestamp="20201030 15:52:13.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025736903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025759125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.417" endtime="20201030 15:52:13.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025736903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025759125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.711" endtime="20201030 15:52:13.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.719" endtime="20201030 15:52:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.413" endtime="20201030 15:52:13.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.410" endtime="20201030 15:52:13.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.726" level="INFO">${RESULT} = [{'diff': 2.2222000000002295e-05}, {'diff': 2.2249999999997966e-05}, {'diff': 2.22229999999983e-05}, {'diff': 2.288899999999816e-05}, {'diff': 2.2236000000001865e-05}, {'diff': 2.2193999999999686e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:13.723" endtime="20201030 15:52:13.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:13.730" level="INFO">${ACCURACY} = {'diff': [2.2222000000002295e-05, 2.2249999999997966e-05, 2.22229999999983e-05, 2.288899999999816e-05, 2.2236000000001865e-05, 2.2193999999999686e-05, 2.288899999999816e-05, 2.283299999999988e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 15:52:13.727" endtime="20201030 15:52:13.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.735" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:13.734" endtime="20201030 15:52:13.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.737" level="INFO">VALUE: [2.2222000000002295e-05, 2.2249999999997966e-05, 2.22229999999983e-05, 2.288899999999816e-05, 2.2236000000001865e-05, 2.2193999999999686e-05, 2.288899999999816e-05, 2.283299999999988e-05, 2.284699999999945e-05, 2.2222000000002295e-05, 2.2221999999998826e-05, 2.279100000000117e-05, 2.229100000000067e-05, 2.2249999999997966e-05, 2.2249999999997966e-05, 2.2763999999998036e-05, 2.223700000000134e-05, 2.2862000000001964e-05, 2.2833999999999355e-05, 2.281900000000031e-05, 2.223700000000134e-05, 2.283299999999988e-05, 2.2236000000001865e-05, 2.2250000000001435e-05, 2.2236000000001865e-05, 2.222300000000177e-05, 2.2833999999999355e-05, 2.2833999999999355e-05, 2.2222000000002295e-05, 2.2207999999999256e-05, 2.2207999999999256e-05, 2.2235999999998396e-05, 2.284699999999945e-05, 2.283299999999988e-05, 2.2236000000001865e-05, 2.2264000000001005e-05, 2.283299999999988e-05, 2.2250000000001435e-05, 2.2319999999999285e-05, 2.220899999999873e-05, 2.22229999999983e-05, 2.2235999999998396e-05, 2.284699999999945e-05, 2.2221999999998826e-05, 2.286099999999902e-05, 2.284699999999945e-05, 2.2221999999998826e-05, 2.2221999999998826e-05, 2.2235999999998396e-05, 2.284699999999945e-05]</msg>
<status status="PASS" starttime="20201030 15:52:13.736" endtime="20201030 15:52:13.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.731" endtime="20201030 15:52:13.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.743" endtime="20201030 15:52:13.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.742" endtime="20201030 15:52:13.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.740" endtime="20201030 15:52:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.374" endtime="20201030 15:52:13.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.373" endtime="20201030 15:52:13.764"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.773" endtime="20201030 15:52:13.788"></status>
</kw>
<msg timestamp="20201030 15:52:13.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.771" endtime="20201030 15:52:13.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.790" endtime="20201030 15:52:13.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.792" endtime="20201030 15:52:13.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.769" endtime="20201030 15:52:13.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.767" endtime="20201030 15:52:13.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.802" endtime="20201030 15:52:14.088"></status>
</kw>
<msg timestamp="20201030 15:52:14.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:13.800" endtime="20201030 15:52:14.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022830167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:14.092" endtime="20201030 15:52:14.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.101" endtime="20201030 15:52:14.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.798" endtime="20201030 15:52:14.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.796" endtime="20201030 15:52:14.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.107" level="INFO">${RESULT} = [{'diff': 2.34169999999978e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.344500000000041e-05}, {'diff': 2.345899999999998e-05}, {'diff': 2.283299999999988e-05}, {'diff': 2.3444000000000936e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:14.104" endtime="20201030 15:52:14.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.112" level="INFO">${ACCURACY} = {'diff': [2.34169999999978e-05, 2.344500000000041e-05, 2.344500000000041e-05, 2.345899999999998e-05, 2.283299999999988e-05, 2.3444000000000936e-05, 2.343100000000084e-05, 2.4042000000001895e-05, 2.343...</msg>
<status status="PASS" starttime="20201030 15:52:14.108" endtime="20201030 15:52:14.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.117" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.116" endtime="20201030 15:52:14.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.120" level="INFO">VALUE: [2.34169999999978e-05, 2.344500000000041e-05, 2.344500000000041e-05, 2.345899999999998e-05, 2.283299999999988e-05, 2.3444000000000936e-05, 2.343100000000084e-05, 2.4042000000001895e-05, 2.3430000000001366e-05, 2.283299999999988e-05, 2.3429999999997897e-05, 2.3444000000000936e-05, 2.405500000000199e-05, 2.344500000000041e-05, 2.3499999999999216e-05, 2.3430000000001366e-05, 2.3443999999997467e-05, 2.3430000000001366e-05, 2.284699999999945e-05, 2.3430000000001366e-05, 2.3430000000001366e-05, 2.4014000000002755e-05, 2.4040999999998952e-05, 2.280500000000074e-05, 2.284699999999945e-05, 2.412499999999984e-05, 2.284700000000292e-05, 2.344500000000041e-05, 2.4098000000000175e-05, 2.3430000000001366e-05, 2.344500000000041e-05, 2.2833999999999355e-05, 2.3444000000000936e-05, 2.405500000000199e-05, 2.2818999999996842e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.345899999999998e-05, 2.344500000000041e-05, 2.3430000000001366e-05, 2.3485999999999646e-05, 2.343100000000084e-05, 2.2834000000002824e-05, 2.3458000000000506e-05, 2.3443999999997467e-05, 2.3402000000002227e-05, 2.2819999999999785e-05, 2.284700000000292e-05, 2.343100000000084e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.118" endtime="20201030 15:52:14.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.113" endtime="20201030 15:52:14.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.125" endtime="20201030 15:52:14.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.123" endtime="20201030 15:52:14.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.122" endtime="20201030 15:52:14.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.765" endtime="20201030 15:52:14.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.764" endtime="20201030 15:52:14.146"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.155" endtime="20201030 15:52:14.171"></status>
</kw>
<msg timestamp="20201030 15:52:14.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.153" endtime="20201030 15:52:14.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.173" endtime="20201030 15:52:14.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.175" endtime="20201030 15:52:14.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.151" endtime="20201030 15:52:14.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.148" endtime="20201030 15:52:14.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.185" endtime="20201030 15:52:14.472"></status>
</kw>
<msg timestamp="20201030 15:52:14.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:14.183" endtime="20201030 15:52:14.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02280425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022828306, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:14.476" endtime="20201030 15:52:14.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.485" endtime="20201030 15:52:14.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.180" endtime="20201030 15:52:14.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.179" endtime="20201030 15:52:14.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.491" level="INFO">${RESULT} = [{'diff': 2.4055999999997996e-05}, {'diff': 2.4666000000003047e-05}, {'diff': 2.463900000000338e-05}, {'diff': 2.465299999999948e-05}, {'diff': 2.465299999999948e-05}, {'diff': 2.465299999999948e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:14.488" endtime="20201030 15:52:14.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.496" level="INFO">${ACCURACY} = {'diff': [2.4055999999997996e-05, 2.4666000000003047e-05, 2.463900000000338e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.4068999999998092e-05, 2.4652000000000007e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:52:14.492" endtime="20201030 15:52:14.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.500" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.499" endtime="20201030 15:52:14.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.503" level="INFO">VALUE: [2.4055999999997996e-05, 2.4666000000003047e-05, 2.463900000000338e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.465299999999948e-05, 2.4068999999998092e-05, 2.4652000000000007e-05, 2.462500000000034e-05, 2.465299999999948e-05, 2.463899999999991e-05, 2.463899999999991e-05, 2.4068999999998092e-05, 2.4041999999998426e-05, 2.4056000000001465e-05, 2.462500000000034e-05, 2.4041999999998426e-05, 2.408300000000113e-05, 2.40970000000007e-05, 2.465299999999948e-05, 2.465300000000295e-05, 2.41109999999968e-05, 2.463899999999991e-05, 2.462500000000034e-05, 2.4013999999999286e-05, 2.463899999999991e-05, 2.4027999999998856e-05, 2.4027999999998856e-05, 2.4041999999998426e-05, 2.4028000000002325e-05, 2.465299999999948e-05, 2.466699999999905e-05, 2.4028000000002325e-05, 2.412499999999984e-05, 2.461100000000077e-05, 2.3999999999999716e-05, 2.404100000000242e-05, 2.4056000000001465e-05, 2.4042000000001895e-05, 2.463899999999991e-05, 2.4056000000001465e-05, 2.463899999999991e-05, 2.465299999999948e-05, 2.466699999999905e-05, 2.461100000000077e-05, 2.412499999999984e-05, 2.4028000000002325e-05, 2.4555999999998496e-05, 2.4041999999998426e-05, 2.4041999999998426e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.501" endtime="20201030 15:52:14.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.496" endtime="20201030 15:52:14.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.508" endtime="20201030 15:52:14.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.506" endtime="20201030 15:52:14.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.505" endtime="20201030 15:52:14.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.147" endtime="20201030 15:52:14.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.146" endtime="20201030 15:52:14.529"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.538" endtime="20201030 15:52:14.554"></status>
</kw>
<msg timestamp="20201030 15:52:14.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.536" endtime="20201030 15:52:14.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.556" endtime="20201030 15:52:14.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.558" endtime="20201030 15:52:14.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.534" endtime="20201030 15:52:14.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.531" endtime="20201030 15:52:14.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.568" endtime="20201030 15:52:14.853"></status>
</kw>
<msg timestamp="20201030 15:52:14.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.566" endtime="20201030 15:52:14.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023313042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023338361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.858" endtime="20201030 15:52:14.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.866" endtime="20201030 15:52:14.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.563" endtime="20201030 15:52:14.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.561" endtime="20201030 15:52:14.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.873" level="INFO">${RESULT} = [{'diff': 2.5318999999999342e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.5263999999997067e-05}, {'diff': 2.587500000000159e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.5888000000001687e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:14.870" endtime="20201030 15:52:14.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:14.877" level="INFO">${ACCURACY} = {'diff': [2.5318999999999342e-05, 2.586100000000202e-05, 2.5263999999997067e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.5888000000001687e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:14.874" endtime="20201030 15:52:14.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.882" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:14.881" endtime="20201030 15:52:14.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.885" level="INFO">VALUE: [2.5318999999999342e-05, 2.586100000000202e-05, 2.5263999999997067e-05, 2.587500000000159e-05, 2.586100000000202e-05, 2.5888000000001687e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.5805000000000272e-05, 2.5846999999998982e-05, 2.5235999999997927e-05, 2.5861999999998025e-05, 2.5290999999996733e-05, 2.5278000000000106e-05, 2.584700000000245e-05, 2.5249999999997497e-05, 2.5847999999998456e-05, 2.5319999999998816e-05, 2.5778000000000606e-05, 2.5250000000000966e-05, 2.5291000000000202e-05, 2.5848000000001925e-05, 2.586100000000202e-05, 2.5250000000000966e-05, 2.5304999999999772e-05, 2.5250000000000966e-05, 2.5305999999999246e-05, 2.5846999999998982e-05, 2.5874999999998122e-05, 2.5277000000000632e-05, 2.5263000000001062e-05, 2.5860999999998552e-05, 2.5250000000000966e-05, 2.5278000000000106e-05, 2.5862000000001495e-05, 2.5320000000002285e-05, 2.5264000000000536e-05, 2.5861999999998025e-05, 2.5860999999998552e-05, 2.5278000000000106e-05, 2.5249999999997497e-05, 2.5318999999999342e-05, 2.5264000000000536e-05, 2.5250000000000966e-05, 2.587500000000159e-05, 2.5846999999998982e-05, 2.586100000000202e-05, 2.5860999999998552e-05, 2.5193999999999217e-05, 2.586100000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:52:14.883" endtime="20201030 15:52:14.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.878" endtime="20201030 15:52:14.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.891" endtime="20201030 15:52:14.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.889" endtime="20201030 15:52:14.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.888" endtime="20201030 15:52:14.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.530" endtime="20201030 15:52:14.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.529" endtime="20201030 15:52:14.911"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.920" endtime="20201030 15:52:14.936"></status>
</kw>
<msg timestamp="20201030 15:52:14.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.919" endtime="20201030 15:52:14.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.938" endtime="20201030 15:52:14.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.941" endtime="20201030 15:52:14.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.916" endtime="20201030 15:52:14.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.914" endtime="20201030 15:52:14.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.950" endtime="20201030 15:52:15.237"></status>
</kw>
<msg timestamp="20201030 15:52:15.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.948" endtime="20201030 15:52:15.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022624028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022650458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.241" endtime="20201030 15:52:15.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.249" endtime="20201030 15:52:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.946" endtime="20201030 15:52:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.944" endtime="20201030 15:52:15.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.256" level="INFO">${RESULT} = [{'diff': 2.6429999999997428e-05}, {'diff': 2.584700000000245e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.6528000000001356e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.253" endtime="20201030 15:52:15.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.261" level="INFO">${ACCURACY} = {'diff': [2.6429999999997428e-05, 2.584700000000245e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.586100000000202e-05, 2.6528000000001356e-05, 2.6458000000000037e-05, 2.7069999999997096e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:15.257" endtime="20201030 15:52:15.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.266" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.265" endtime="20201030 15:52:15.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.269" level="INFO">VALUE: [2.6429999999997428e-05, 2.584700000000245e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.586100000000202e-05, 2.6528000000001356e-05, 2.6458000000000037e-05, 2.7069999999997096e-05, 2.647299999999908e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.5846999999998982e-05, 2.6485999999999177e-05, 2.6458000000000037e-05, 2.7042000000001426e-05, 2.6458000000000037e-05, 2.645899999999951e-05, 2.645899999999951e-05, 2.5874999999998122e-05, 2.6444000000000467e-05, 2.645899999999951e-05, 2.5848000000001925e-05, 2.7069999999997096e-05, 2.64170000000008e-05, 2.7069000000001092e-05, 2.645899999999951e-05, 2.7097000000000232e-05, 2.644499999999994e-05, 2.6485999999999177e-05, 2.7069000000001092e-05, 2.7028000000001856e-05, 2.5848000000001925e-05, 2.6443999999996998e-05, 2.6527999999997887e-05, 2.6458000000000037e-05, 2.7054999999998053e-05, 2.6444000000000467e-05, 2.7040999999998483e-05, 2.586100000000202e-05, 2.640300000000123e-05, 2.6471999999999607e-05, 2.7070000000000566e-05, 2.644499999999994e-05, 2.5848000000001925e-05, 2.7070000000000566e-05, 2.644499999999994e-05, 2.5860999999998552e-05, 2.5846999999998982e-05, 2.7084000000000136e-05, 2.6458000000000037e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.267" endtime="20201030 15:52:15.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.262" endtime="20201030 15:52:15.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.278" endtime="20201030 15:52:15.297"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.276" endtime="20201030 15:52:15.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.275" endtime="20201030 15:52:15.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.912" endtime="20201030 15:52:15.298"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.912" endtime="20201030 15:52:15.298"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.308" endtime="20201030 15:52:15.323"></status>
</kw>
<msg timestamp="20201030 15:52:15.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.306" endtime="20201030 15:52:15.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.325" endtime="20201030 15:52:15.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.328" endtime="20201030 15:52:15.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.303" endtime="20201030 15:52:15.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.301" endtime="20201030 15:52:15.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.337" endtime="20201030 15:52:15.624"></status>
</kw>
<msg timestamp="20201030 15:52:15.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.335" endtime="20201030 15:52:15.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022352514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022379583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.629" endtime="20201030 15:52:15.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.637" endtime="20201030 15:52:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.333" endtime="20201030 15:52:15.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.331" endtime="20201030 15:52:15.640"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.644" level="INFO">${RESULT} = [{'diff': 2.7069000000001092e-05}, {'diff': 2.7070000000000566e-05}, {'diff': 2.7652999999999012e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.7069000000001092e-...</msg>
<status status="PASS" starttime="20201030 15:52:15.641" endtime="20201030 15:52:15.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:15.648" level="INFO">${ACCURACY} = {'diff': [2.7069000000001092e-05, 2.7070000000000566e-05, 2.7652999999999012e-05, 2.7042000000001426e-05, 2.7680000000002147e-05, 2.7069000000001092e-05, 2.7611000000000302e-05, 2.7055000000001522e-05...</msg>
<status status="PASS" starttime="20201030 15:52:15.645" endtime="20201030 15:52:15.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.653" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:15.652" endtime="20201030 15:52:15.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.655" level="INFO">VALUE: [2.7069000000001092e-05, 2.7070000000000566e-05, 2.7652999999999012e-05, 2.7042000000001426e-05, 2.7680000000002147e-05, 2.7069000000001092e-05, 2.7611000000000302e-05, 2.7055000000001522e-05, 2.7056000000000996e-05, 2.7694000000001717e-05, 2.7638999999999442e-05, 2.766700000000205e-05, 2.7665999999999108e-05, 2.7054999999998053e-05, 2.7084000000000136e-05, 2.7068999999997623e-05, 2.7665999999999108e-05, 2.768100000000162e-05, 2.7083000000000662e-05, 2.765300000000248e-05, 2.7665999999999108e-05, 2.7068999999997623e-05, 2.7027999999998387e-05, 2.7056000000000996e-05, 2.7069000000001092e-05, 2.766699999999858e-05, 2.7679999999998678e-05, 2.7652999999999012e-05, 2.7624999999999872e-05, 2.7652999999999012e-05, 2.7055999999997526e-05, 2.766699999999858e-05, 2.766700000000205e-05, 2.7679999999998678e-05, 2.7679999999998678e-05, 2.766700000000205e-05, 2.766699999999858e-05, 2.7665999999999108e-05, 2.7040999999998483e-05, 2.7084000000000136e-05, 2.768100000000162e-05, 2.7070000000000566e-05, 2.7069000000001092e-05, 2.766699999999858e-05, 2.7028000000001856e-05, 2.7624999999999872e-05, 2.768099999999815e-05, 2.7611000000000302e-05, 2.7084000000000136e-05, 2.765300000000248e-05]</msg>
<status status="PASS" starttime="20201030 15:52:15.654" endtime="20201030 15:52:15.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.649" endtime="20201030 15:52:15.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.661" endtime="20201030 15:52:15.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.659" endtime="20201030 15:52:15.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.658" endtime="20201030 15:52:15.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.299" endtime="20201030 15:52:15.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.299" endtime="20201030 15:52:15.681"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.691" endtime="20201030 15:52:15.709"></status>
</kw>
<msg timestamp="20201030 15:52:15.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.690" endtime="20201030 15:52:15.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.711" endtime="20201030 15:52:15.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.713" endtime="20201030 15:52:15.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.687" endtime="20201030 15:52:15.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.684" endtime="20201030 15:52:15.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.723" endtime="20201030 15:52:16.008"></status>
</kw>
<msg timestamp="20201030 15:52:16.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:15.721" endtime="20201030 15:52:16.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024791, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024819264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:16.012" endtime="20201030 15:52:16.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.021" endtime="20201030 15:52:16.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.719" endtime="20201030 15:52:16.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.717" endtime="20201030 15:52:16.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.027" level="INFO">${RESULT} = [{'diff': 2.8264000000000067e-05}, {'diff': 2.8860999999998083e-05}, {'diff': 2.8889000000000692e-05}, {'diff': 2.8874999999997653e-05}, {'diff': 2.8875000000001122e-05}, {'diff': 2.8264000000000067e-...</msg>
<status status="PASS" starttime="20201030 15:52:16.024" endtime="20201030 15:52:16.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.032" level="INFO">${ACCURACY} = {'diff': [2.8264000000000067e-05, 2.8860999999998083e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8875000000001122e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8860999999998083e-05...</msg>
<status status="PASS" starttime="20201030 15:52:16.028" endtime="20201030 15:52:16.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.036" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.035" endtime="20201030 15:52:16.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.039" level="INFO">VALUE: [2.8264000000000067e-05, 2.8860999999998083e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8875000000001122e-05, 2.8264000000000067e-05, 2.8250000000000497e-05, 2.8860999999998083e-05, 2.8277999999999637e-05, 2.8250000000000497e-05, 2.8860999999998083e-05, 2.8264000000000067e-05, 2.8277999999999637e-05, 2.8263000000000593e-05, 2.8875000000001122e-05, 2.819499999999822e-05, 2.8306000000002246e-05, 2.8957999999999068e-05, 2.8236000000000927e-05, 2.8264000000000067e-05, 2.8860999999998083e-05, 2.8264000000000067e-05, 2.8832999999998943e-05, 2.8833999999998416e-05, 2.8874999999997653e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8861000000001552e-05, 2.8277000000000163e-05, 2.8860999999998083e-05, 2.8277999999999637e-05, 2.8264000000000067e-05, 2.8889000000000692e-05, 2.8263000000000593e-05, 2.8249999999997027e-05, 2.8889000000000692e-05, 2.8875000000001122e-05, 2.8290999999999733e-05, 2.7652999999999012e-05, 2.8291999999999207e-05, 2.8290999999999733e-05, 2.8875000000001122e-05, 2.8860999999998083e-05, 2.8277999999999637e-05, 2.8221999999997888e-05, 2.8277999999999637e-05, 2.8277999999999637e-05, 2.8889000000000692e-05, 2.8332999999998443e-05, 2.8277999999999637e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.037" endtime="20201030 15:52:16.041"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.033" endtime="20201030 15:52:16.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.045" endtime="20201030 15:52:16.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.043" endtime="20201030 15:52:16.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.042" endtime="20201030 15:52:16.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.682" endtime="20201030 15:52:16.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.682" endtime="20201030 15:52:16.066"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.075" endtime="20201030 15:52:16.091"></status>
</kw>
<msg timestamp="20201030 15:52:16.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.073" endtime="20201030 15:52:16.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.093" endtime="20201030 15:52:16.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.095" endtime="20201030 15:52:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.070" endtime="20201030 15:52:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.068" endtime="20201030 15:52:16.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.104" endtime="20201030 15:52:16.391"></status>
</kw>
<msg timestamp="20201030 15:52:16.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.103" endtime="20201030 15:52:16.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022568903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022597792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.395" endtime="20201030 15:52:16.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.404" endtime="20201030 15:52:16.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.100" endtime="20201030 15:52:16.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.098" endtime="20201030 15:52:16.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.411" level="INFO">${RESULT} = [{'diff': 2.8888999999997222e-05}, {'diff': 2.9458000000003037e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 2.9486000000002177e-05}, {'diff': 2.9485999999998708e-...</msg>
<status status="PASS" starttime="20201030 15:52:16.407" endtime="20201030 15:52:16.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.416" level="INFO">${ACCURACY} = {'diff': [2.8888999999997222e-05, 2.9458000000003037e-05, 2.8832999999998943e-05, 2.9514000000001317e-05, 2.9486000000002177e-05, 2.9485999999998708e-05, 2.9512999999998374e-05, 2.8888000000001218e-05...</msg>
<status status="PASS" starttime="20201030 15:52:16.412" endtime="20201030 15:52:16.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.421" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.419" endtime="20201030 15:52:16.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.423" level="INFO">VALUE: [2.8888999999997222e-05, 2.9458000000003037e-05, 2.8832999999998943e-05, 2.9514000000001317e-05, 2.9486000000002177e-05, 2.9485999999998708e-05, 2.9512999999998374e-05, 2.8888000000001218e-05, 2.9485999999998708e-05, 3.0096999999999763e-05, 3.0028000000001387e-05, 2.9485999999998708e-05, 3.0096999999999763e-05, 2.9485999999998708e-05, 2.9485999999998708e-05, 3.0096999999999763e-05, 2.9471999999999138e-05, 2.9471999999999138e-05, 2.9500000000001747e-05, 2.9471999999999138e-05, 2.888799999999775e-05, 2.9485999999998708e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.948699999999818e-05, 2.9471999999999138e-05, 2.9541000000000983e-05, 2.9485999999998708e-05, 2.8875000000001122e-05, 2.9541999999996987e-05, 2.8860999999998083e-05, 2.8903000000000262e-05, 2.9499999999998278e-05, 2.8874999999997653e-05, 2.8860999999998083e-05, 2.9512999999998374e-05, 2.945899999999904e-05, 2.8875000000001122e-05, 2.9499999999998278e-05, 2.9500000000001747e-05, 2.9485999999998708e-05, 2.9471999999999138e-05, 2.9528000000000887e-05, 2.8943999999999498e-05, 2.9486000000002177e-05, 3.0083000000000193e-05, 2.8862000000001026e-05, 2.8902999999996792e-05, 2.948700000000165e-05, 2.9500000000001747e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.422" endtime="20201030 15:52:16.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.417" endtime="20201030 15:52:16.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.428" endtime="20201030 15:52:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.427" endtime="20201030 15:52:16.448"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.426" endtime="20201030 15:52:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.067" endtime="20201030 15:52:16.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.066" endtime="20201030 15:52:16.449"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.458" endtime="20201030 15:52:16.474"></status>
</kw>
<msg timestamp="20201030 15:52:16.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.456" endtime="20201030 15:52:16.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.475" endtime="20201030 15:52:16.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.478" endtime="20201030 15:52:16.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.454" endtime="20201030 15:52:16.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.451" endtime="20201030 15:52:16.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.487" endtime="20201030 15:52:16.775"></status>
</kw>
<msg timestamp="20201030 15:52:16.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.486" endtime="20201030 15:52:16.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.779" endtime="20201030 15:52:16.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.787" endtime="20201030 15:52:16.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.483" endtime="20201030 15:52:16.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.481" endtime="20201030 15:52:16.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.794" level="INFO">${RESULT} = [{'diff': 3.068100000000115e-05}, {'diff': 3.070900000000029e-05}, {'diff': 3.068100000000115e-05}, {'diff': 3.066600000000211e-05}, {'diff': 3.0083000000000193e-05}, {'diff': 3.069400000000125e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.791" endtime="20201030 15:52:16.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:16.798" level="INFO">${ACCURACY} = {'diff': [3.068100000000115e-05, 3.070900000000029e-05, 3.068100000000115e-05, 3.066600000000211e-05, 3.0083000000000193e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.0056000000000527e-05, 3.06...</msg>
<status status="PASS" starttime="20201030 15:52:16.795" endtime="20201030 15:52:16.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.803" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:16.802" endtime="20201030 15:52:16.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.806" level="INFO">VALUE: [3.068100000000115e-05, 3.070900000000029e-05, 3.068100000000115e-05, 3.066600000000211e-05, 3.0083000000000193e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.0056000000000527e-05, 3.069500000000072e-05, 3.06249999999994e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.0083000000000193e-05, 3.065299999999854e-05, 3.068100000000115e-05, 3.074999999999953e-05, 3.069400000000125e-05, 3.0070000000000097e-05, 3.0069000000000623e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.0096999999999763e-05, 3.069399999999778e-05, 3.0041000000001483e-05, 3.0083000000000193e-05, 3.0139000000001942e-05, 3.013800000000247e-05, 3.0083999999999667e-05, 3.068099999999768e-05, 3.069500000000072e-05, 3.073599999999996e-05, 3.066700000000158e-05, 3.0096999999999763e-05, 3.070800000000082e-05, 3.069500000000072e-05, 3.0069000000000623e-05, 3.0083999999999667e-05, 3.069500000000072e-05, 3.068000000000168e-05, 3.0083000000000193e-05, 3.0069000000000623e-05, 3.0097999999999236e-05, 3.069500000000072e-05, 3.0069000000000623e-05, 3.069500000000072e-05, 3.0070000000000097e-05, 3.0097999999999236e-05, 3.069400000000125e-05, 3.070800000000082e-05, 3.069500000000072e-05]</msg>
<status status="PASS" starttime="20201030 15:52:16.804" endtime="20201030 15:52:16.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.799" endtime="20201030 15:52:16.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.811" endtime="20201030 15:52:16.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.809" endtime="20201030 15:52:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.808" endtime="20201030 15:52:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.450" endtime="20201030 15:52:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.449" endtime="20201030 15:52:16.832"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.841" endtime="20201030 15:52:16.860"></status>
</kw>
<msg timestamp="20201030 15:52:16.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.839" endtime="20201030 15:52:16.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.862" endtime="20201030 15:52:16.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.865" endtime="20201030 15:52:16.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.836" endtime="20201030 15:52:16.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.834" endtime="20201030 15:52:16.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.874" endtime="20201030 15:52:17.162"></status>
</kw>
<msg timestamp="20201030 15:52:17.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026043292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.873" endtime="20201030 15:52:17.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026011986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026043292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.167" endtime="20201030 15:52:17.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.175" endtime="20201030 15:52:17.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.870" endtime="20201030 15:52:17.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.868" endtime="20201030 15:52:17.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.182" level="INFO">${RESULT} = [{'diff': 3.130599999999831e-05}, {'diff': 3.12639999999996e-05}, {'diff': 3.12639999999996e-05}, {'diff': 3.129199999999874e-05}, {'diff': 3.190200000000032e-05}, {'diff': 3.188900000000022e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:17.178" endtime="20201030 15:52:17.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.186" level="INFO">${ACCURACY} = {'diff': [3.130599999999831e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.129199999999874e-05, 3.190200000000032e-05, 3.188900000000022e-05, 3.12639999999996e-05, 3.190299999999979e-05, 3.1902999...</msg>
<status status="PASS" starttime="20201030 15:52:17.183" endtime="20201030 15:52:17.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.191" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.190" endtime="20201030 15:52:17.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.193" level="INFO">VALUE: [3.130599999999831e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.129199999999874e-05, 3.190200000000032e-05, 3.188900000000022e-05, 3.12639999999996e-05, 3.190299999999979e-05, 3.190299999999979e-05, 3.134799999999702e-05, 3.191599999999989e-05, 3.127799999999917e-05, 3.1304999999998834e-05, 3.188900000000022e-05, 3.131900000000187e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.190299999999979e-05, 3.065300000000201e-05, 3.190199999999685e-05, 3.129199999999874e-05, 3.07370000000029e-05, 3.068099999999768e-05, 3.1290999999999264e-05, 3.129200000000221e-05, 3.187499999999718e-05, 3.190200000000032e-05, 3.12639999999996e-05, 3.190299999999979e-05, 3.188900000000022e-05, 3.1304999999998834e-05, 3.188899999999675e-05, 3.190200000000032e-05, 3.125000000000003e-05, 3.130600000000178e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.188900000000022e-05, 3.187500000000065e-05, 3.190299999999979e-05, 3.1276999999999694e-05, 3.131900000000187e-05, 3.190299999999979e-05, 3.13050000000023e-05, 3.187500000000065e-05, 3.1304999999998834e-05, 3.188800000000075e-05, 3.127800000000264e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.192" endtime="20201030 15:52:17.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.187" endtime="20201030 15:52:17.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.199" endtime="20201030 15:52:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.198" endtime="20201030 15:52:17.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.196" endtime="20201030 15:52:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.833" endtime="20201030 15:52:17.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.832" endtime="20201030 15:52:17.220"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.229" endtime="20201030 15:52:17.244"></status>
</kw>
<msg timestamp="20201030 15:52:17.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.227" endtime="20201030 15:52:17.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.246" endtime="20201030 15:52:17.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.248" endtime="20201030 15:52:17.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.225" endtime="20201030 15:52:17.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.223" endtime="20201030 15:52:17.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.258" endtime="20201030 15:52:17.544"></status>
</kw>
<msg timestamp="20201030 15:52:17.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.256" endtime="20201030 15:52:17.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022272861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022305375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.548" endtime="20201030 15:52:17.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.556" endtime="20201030 15:52:17.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.253" endtime="20201030 15:52:17.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.252" endtime="20201030 15:52:17.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.563" level="INFO">${RESULT} = [{'diff': 3.251399999999738e-05}, {'diff': 3.3096999999999294e-05}, {'diff': 3.31250000000019e-05}, {'diff': 3.245900000000204e-05}, {'diff': 3.2541000000000514e-05}, {'diff': 3.2555000000000084e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:17.560" endtime="20201030 15:52:17.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.568" level="INFO">${ACCURACY} = {'diff': [3.251399999999738e-05, 3.3096999999999294e-05, 3.31250000000019e-05, 3.245900000000204e-05, 3.2541000000000514e-05, 3.2555000000000084e-05, 3.250000000000128e-05, 3.311200000000181e-05, 3.24...</msg>
<status status="PASS" starttime="20201030 15:52:17.564" endtime="20201030 15:52:17.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.573" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.572" endtime="20201030 15:52:17.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.576" level="INFO">VALUE: [3.251399999999738e-05, 3.3096999999999294e-05, 3.31250000000019e-05, 3.245900000000204e-05, 3.2541000000000514e-05, 3.2555000000000084e-05, 3.250000000000128e-05, 3.311200000000181e-05, 3.249999999999781e-05, 3.249999999999781e-05, 3.249999999999781e-05, 3.251399999999738e-05, 3.188900000000022e-05, 3.251399999999738e-05, 3.188900000000022e-05, 3.3082999999999724e-05, 3.2555000000000084e-05, 3.198599999999774e-05, 3.188900000000022e-05, 3.247200000000214e-05, 3.250000000000128e-05, 3.190200000000032e-05, 3.188900000000022e-05, 3.248600000000171e-05, 3.192999999999946e-05, 3.190200000000032e-05, 3.187499999999718e-05, 3.188900000000022e-05, 3.250000000000128e-05, 3.3110999999998864e-05, 3.190299999999979e-05, 3.190299999999979e-05, 3.19579999999986e-05, 3.254199999999999e-05, 3.254199999999999e-05, 3.251400000000085e-05, 3.249999999999781e-05, 3.311100000000233e-05, 3.311100000000233e-05, 3.3055000000000584e-05, 3.250000000000128e-05, 3.248599999999824e-05, 3.251400000000085e-05, 3.252799999999695e-05, 3.190299999999979e-05, 3.252800000000042e-05, 3.190200000000032e-05, 3.247299999999814e-05, 3.248599999999824e-05, 3.190299999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.574" endtime="20201030 15:52:17.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.569" endtime="20201030 15:52:17.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.581" endtime="20201030 15:52:17.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.579" endtime="20201030 15:52:17.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.578" endtime="20201030 15:52:17.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.221" endtime="20201030 15:52:17.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.220" endtime="20201030 15:52:17.601"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.610" endtime="20201030 15:52:17.627"></status>
</kw>
<msg timestamp="20201030 15:52:17.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.609" endtime="20201030 15:52:17.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.628" endtime="20201030 15:52:17.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.631" endtime="20201030 15:52:17.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.606" endtime="20201030 15:52:17.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.604" endtime="20201030 15:52:17.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.640" endtime="20201030 15:52:17.928"></status>
</kw>
<msg timestamp="20201030 15:52:17.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.639" endtime="20201030 15:52:17.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022331292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022368806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.932" endtime="20201030 15:52:17.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.940" endtime="20201030 15:52:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.636" endtime="20201030 15:52:17.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.634" endtime="20201030 15:52:17.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.947" level="INFO">${RESULT} = [{'diff': 3.751400000000238e-05}, {'diff': 3.786200000000309e-05}, {'diff': 3.777799999999873e-05}, {'diff': 3.820800000000138e-05}, {'diff': 3.7681000000001214e-05}, {'diff': 3.7290999999998325e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:17.944" endtime="20201030 15:52:17.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:17.951" level="INFO">${ACCURACY} = {'diff': [3.751400000000238e-05, 3.786200000000309e-05, 3.777799999999873e-05, 3.820800000000138e-05, 3.7681000000001214e-05, 3.7290999999998325e-05, 3.81659999999992e-05, 3.8138999999999534e-05, 3.72...</msg>
<status status="PASS" starttime="20201030 15:52:17.948" endtime="20201030 15:52:17.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.955" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:17.954" endtime="20201030 15:52:17.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.958" level="INFO">VALUE: [3.751400000000238e-05, 3.786200000000309e-05, 3.777799999999873e-05, 3.820800000000138e-05, 3.7681000000001214e-05, 3.7290999999998325e-05, 3.81659999999992e-05, 3.8138999999999534e-05, 3.726399999999866e-05, 3.79720000000007e-05, 3.807000000000116e-05, 3.751399999999891e-05, 3.7360999999999644e-05, 3.7610999999999895e-05, 3.74720000000002e-05, 3.782000000000091e-05, 3.752799999999848e-05, 3.7695000000000783e-05, 3.7610999999999895e-05, 3.7445000000000533e-05, 3.80980000000003e-05, 3.761199999999937e-05, 3.7445000000000533e-05, 3.72919999999978e-05, 3.769399999999784e-05, 3.770800000000088e-05, 3.820800000000138e-05, 3.7777000000002725e-05, 3.7888999999999284e-05, 3.8111000000000395e-05, 3.7624999999999464e-05, 3.794399999999809e-05, 3.793000000000199e-05, 3.776400000000263e-05, 3.730599999999737e-05, 3.77919999999983e-05, 3.780599999999787e-05, 3.8111000000000395e-05, 3.7610999999999895e-05, 3.7945000000001033e-05, 3.7944999999997564e-05, 3.7445000000000533e-05, 3.795799999999766e-05, 3.808400000000073e-05, 3.744400000000106e-05, 3.724999999999909e-05, 3.776399999999916e-05, 3.7624999999999464e-05, 3.773600000000002e-05, 3.7361000000003114e-05]</msg>
<status status="PASS" starttime="20201030 15:52:17.956" endtime="20201030 15:52:17.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.952" endtime="20201030 15:52:17.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.962" endtime="20201030 15:52:17.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.961" endtime="20201030 15:52:17.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.960" endtime="20201030 15:52:17.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.602" endtime="20201030 15:52:17.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.602" endtime="20201030 15:52:17.983"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.992" endtime="20201030 15:52:18.010"></status>
</kw>
<msg timestamp="20201030 15:52:18.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.990" endtime="20201030 15:52:18.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.011" endtime="20201030 15:52:18.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.014" endtime="20201030 15:52:18.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.988" endtime="20201030 15:52:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.986" endtime="20201030 15:52:18.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.023" endtime="20201030 15:52:18.307"></status>
</kw>
<msg timestamp="20201030 15:52:18.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.021" endtime="20201030 15:52:18.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022772125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.311" endtime="20201030 15:52:18.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.320" endtime="20201030 15:52:18.321"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.019" endtime="20201030 15:52:18.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.017" endtime="20201030 15:52:18.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.326" level="INFO">${RESULT} = [{'diff': 3.8361000000000645e-05}, {'diff': 3.8611000000000895e-05}, {'diff': 3.877799999999973e-05}, {'diff': 3.920799999999891e-05}, {'diff': 3.876400000000016e-05}, {'diff': 3.902799999999998e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:18.323" endtime="20201030 15:52:18.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.330" level="INFO">${ACCURACY} = {'diff': [3.8361000000000645e-05, 3.8611000000000895e-05, 3.877799999999973e-05, 3.920799999999891e-05, 3.876400000000016e-05, 3.902799999999998e-05, 3.852799999999948e-05, 3.9138999999997065e-05, 3.8...</msg>
<status status="PASS" starttime="20201030 15:52:18.327" endtime="20201030 15:52:18.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.335" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.334" endtime="20201030 15:52:18.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.337" level="INFO">VALUE: [3.8361000000000645e-05, 3.8611000000000895e-05, 3.877799999999973e-05, 3.920799999999891e-05, 3.876400000000016e-05, 3.902799999999998e-05, 3.852799999999948e-05, 3.9138999999997065e-05, 3.8944999999998564e-05, 3.877799999999973e-05, 3.902799999999998e-05, 3.836200000000012e-05, 3.861200000000037e-05, 3.825000000000009e-05, 3.898600000000127e-05, 3.856999999999819e-05, 3.917999999999977e-05, 3.872200000000145e-05, 3.902799999999998e-05, 3.901400000000041e-05, 3.904200000000302e-05, 3.901400000000041e-05, 3.855600000000209e-05, 3.848600000000077e-05, 3.904199999999955e-05, 3.8666999999999174e-05, 3.827799999999923e-05, 3.8375000000000214e-05, 3.8611000000000895e-05, 3.8944999999998564e-05, 3.823599999999705e-05, 3.9194999999998814e-05, 3.8930999999998994e-05, 3.873600000000102e-05, 3.8763000000000686e-05, 3.844399999999859e-05, 3.848600000000077e-05, 3.892999999999952e-05, 3.8360999999997175e-05, 3.881999999999844e-05, 3.867999999999927e-05, 3.823600000000052e-05, 3.854200000000252e-05, 3.8695000000001784e-05, 3.8625000000000465e-05, 3.872200000000145e-05, 3.8861000000001145e-05, 3.8597000000001325e-05, 3.8444999999998064e-05, 3.827799999999923e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.336" endtime="20201030 15:52:18.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.331" endtime="20201030 15:52:18.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.343" endtime="20201030 15:52:18.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.341" endtime="20201030 15:52:18.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.340" endtime="20201030 15:52:18.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.984" endtime="20201030 15:52:18.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.983" endtime="20201030 15:52:18.366"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.384" endtime="20201030 15:52:18.404"></status>
</kw>
<msg timestamp="20201030 15:52:18.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.381" endtime="20201030 15:52:18.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.407" endtime="20201030 15:52:18.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.412" endtime="20201030 15:52:18.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.376" endtime="20201030 15:52:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.371" endtime="20201030 15:52:18.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.431" endtime="20201030 15:52:18.722"></status>
</kw>
<msg timestamp="20201030 15:52:18.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0353175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035357181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:18.428" endtime="20201030 15:52:18.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0353175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035357181, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:18.726" endtime="20201030 15:52:18.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.734" endtime="20201030 15:52:18.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.423" endtime="20201030 15:52:18.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.419" endtime="20201030 15:52:18.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.741" level="INFO">${RESULT} = [{'diff': 3.9680999999999744e-05}, {'diff': 3.9597000000002325e-05}, {'diff': 3.922200000000542e-05}, {'diff': 3.9889000000001285e-05}, {'diff': 3.993000000000052e-05}, {'diff': 3.973599999999855e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:18.738" endtime="20201030 15:52:18.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:18.746" level="INFO">${ACCURACY} = {'diff': [3.9680999999999744e-05, 3.9597000000002325e-05, 3.922200000000542e-05, 3.9889000000001285e-05, 3.993000000000052e-05, 3.973599999999855e-05, 3.995799999999966e-05, 3.955599999999615e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 15:52:18.742" endtime="20201030 15:52:18.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.751" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:18.750" endtime="20201030 15:52:18.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.753" level="INFO">VALUE: [3.9680999999999744e-05, 3.9597000000002325e-05, 3.922200000000542e-05, 3.9889000000001285e-05, 3.993000000000052e-05, 3.973599999999855e-05, 3.995799999999966e-05, 3.955599999999615e-05, 4.004199999999708e-05, 4.001399999999794e-05, 4.002799999999751e-05, 4.0181000000000244e-05, 4.015200000000163e-05, 3.9403000000000354e-05, 3.9611000000001895e-05, 3.9917000000000424e-05, 3.95980000000018e-05, 3.9861000000002145e-05, 3.995799999999966e-05, 3.9263000000004655e-05, 4.020799999999991e-05, 3.9776999999997786e-05, 4.0040999999997606e-05, 3.99859999999988e-05, 4.019400000000034e-05, 3.944399999999959e-05, 3.97780000000042e-05, 3.969399999999984e-05, 3.97780000000042e-05, 3.954199999999658e-05, 4.002800000000445e-05, 4.0139000000001535e-05, 3.977799999999726e-05, 3.9667000000000174e-05, 3.9958999999999134e-05, 4.011200000000187e-05, 3.99859999999988e-05, 3.9416999999999924e-05, 3.943000000000002e-05, 3.9610999999994956e-05, 3.995799999999966e-05, 3.9611000000001895e-05, 3.993000000000052e-05, 3.9305000000003365e-05, 4.002799999999751e-05, 4.002800000000445e-05, 3.952799999999701e-05, 3.9861000000002145e-05, 3.999999999999837e-05, 4.0110999999995456e-05]</msg>
<status status="PASS" starttime="20201030 15:52:18.752" endtime="20201030 15:52:18.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.747" endtime="20201030 15:52:18.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.758" endtime="20201030 15:52:18.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.757" endtime="20201030 15:52:18.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.756" endtime="20201030 15:52:18.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.368" endtime="20201030 15:52:18.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.367" endtime="20201030 15:52:18.779"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.788" endtime="20201030 15:52:18.804"></status>
</kw>
<msg timestamp="20201030 15:52:18.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.786" endtime="20201030 15:52:18.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.806" endtime="20201030 15:52:18.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.808" endtime="20201030 15:52:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.784" endtime="20201030 15:52:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.781" endtime="20201030 15:52:18.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.817" endtime="20201030 15:52:19.104"></status>
</kw>
<msg timestamp="20201030 15:52:19.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.816" endtime="20201030 15:52:19.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.108" endtime="20201030 15:52:19.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.116" endtime="20201030 15:52:19.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.813" endtime="20201030 15:52:19.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.811" endtime="20201030 15:52:19.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.123" level="INFO">${RESULT} = [{'diff': 4.0860999999999675e-05}, {'diff': 4.058400000000323e-05}, {'diff': 4.0945000000000564e-05}, {'diff': 4.073599999999955e-05}, {'diff': 4.1195000000000814e-05}, {'diff': 4.0945000000000564e-05...</msg>
<status status="PASS" starttime="20201030 15:52:19.120" endtime="20201030 15:52:19.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.127" level="INFO">${ACCURACY} = {'diff': [4.0860999999999675e-05, 4.058400000000323e-05, 4.0945000000000564e-05, 4.073599999999955e-05, 4.1195000000000814e-05, 4.0945000000000564e-05, 4.0263000000002186e-05, 4.0431000000000494e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:19.124" endtime="20201030 15:52:19.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.131" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.130" endtime="20201030 15:52:19.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.134" level="INFO">VALUE: [4.0860999999999675e-05, 4.058400000000323e-05, 4.0945000000000564e-05, 4.073599999999955e-05, 4.1195000000000814e-05, 4.0945000000000564e-05, 4.0263000000002186e-05, 4.0431000000000494e-05, 4.0611000000002895e-05, 4.094400000000109e-05, 4.077800000000173e-05, 4.051399999999844e-05, 4.102799999999851e-05, 4.0860999999999675e-05, 4.094400000000109e-05, 4.077799999999826e-05, 4.102799999999851e-05, 4.1194999999997345e-05, 4.0610999999999425e-05, 4.1125000000002965e-05, 4.11799999999983e-05, 4.097200000000023e-05, 4.0596999999999855e-05, 4.077799999999826e-05, 4.0540999999998106e-05, 4.0526999999998536e-05, 4.0541000000001576e-05, 4.120800000000091e-05, 4.1124999999999495e-05, 4.1097000000000355e-05, 4.043000000000102e-05, 4.0624999999998995e-05, 4.1097000000000355e-05, 4.1110999999999925e-05, 4.074999999999912e-05, 4.102799999999851e-05, 4.1195000000000814e-05, 4.0624999999998995e-05, 4.027800000000123e-05, 4.0860999999999675e-05, 4.027799999999776e-05, 4.0695000000000314e-05, 4.108400000000026e-05, 4.0624999999998995e-05, 4.1097000000000355e-05, 4.0832999999997066e-05, 4.116599999999873e-05, 4.077800000000173e-05, 4.069400000000084e-05, 4.043000000000102e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.132" endtime="20201030 15:52:19.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.128" endtime="20201030 15:52:19.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.139" endtime="20201030 15:52:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.137" endtime="20201030 15:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.136" endtime="20201030 15:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.780" endtime="20201030 15:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.779" endtime="20201030 15:52:19.159"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.168" endtime="20201030 15:52:19.186"></status>
</kw>
<msg timestamp="20201030 15:52:19.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.167" endtime="20201030 15:52:19.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.187" endtime="20201030 15:52:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.190" endtime="20201030 15:52:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.164" endtime="20201030 15:52:19.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.162" endtime="20201030 15:52:19.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.199" endtime="20201030 15:52:19.484"></status>
</kw>
<msg timestamp="20201030 15:52:19.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.197" endtime="20201030 15:52:19.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022923528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.489" endtime="20201030 15:52:19.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.497" endtime="20201030 15:52:19.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.195" endtime="20201030 15:52:19.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.193" endtime="20201030 15:52:19.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.504" level="INFO">${RESULT} = [{'diff': 4.1694999999997845e-05}, {'diff': 4.2111000000000925e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.2195000000001814e-05}, {'diff': 4.194399999999862e-05}, {'diff': 4.1262999999999717e-05...</msg>
<status status="PASS" starttime="20201030 15:52:19.500" endtime="20201030 15:52:19.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.508" level="INFO">${ACCURACY} = {'diff': [4.1694999999997845e-05, 4.2111000000000925e-05, 4.177799999999926e-05, 4.2195000000001814e-05, 4.194399999999862e-05, 4.1262999999999717e-05, 4.1361000000000175e-05, 4.176399999999969e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:19.505" endtime="20201030 15:52:19.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.513" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.512" endtime="20201030 15:52:19.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.515" level="INFO">VALUE: [4.1694999999997845e-05, 4.2111000000000925e-05, 4.177799999999926e-05, 4.2195000000001814e-05, 4.194399999999862e-05, 4.1262999999999717e-05, 4.1361000000000175e-05, 4.176399999999969e-05, 4.2027000000000037e-05, 4.1402999999998885e-05, 4.1597000000000856e-05, 4.2083000000001786e-05, 4.1931000000001994e-05, 4.194400000000209e-05, 4.177799999999926e-05, 4.151399999999944e-05, 4.1709000000000884e-05, 4.1611000000000425e-05, 4.124999999999962e-05, 4.1861000000000675e-05, 4.129199999999833e-05, 4.134800000000008e-05, 4.205599999999865e-05, 4.1611000000000425e-05, 4.1611000000000425e-05, 4.2097000000001356e-05, 4.1276999999999286e-05, 4.200000000000037e-05, 4.169400000000184e-05, 4.193000000000252e-05, 4.1374999999999745e-05, 4.18059999999984e-05, 4.1652999999999135e-05, 4.176399999999969e-05, 4.1347000000000605e-05, 4.1930999999998525e-05, 4.1596999999997386e-05, 4.176399999999969e-05, 4.184800000000058e-05, 4.177799999999926e-05, 4.151399999999944e-05, 4.168000000000227e-05, 4.141600000000245e-05, 4.176300000000022e-05, 4.151399999999944e-05, 4.172200000000098e-05, 4.144400000000159e-05, 4.126400000000266e-05, 4.151400000000291e-05, 4.1819000000001966e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.514" endtime="20201030 15:52:19.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.509" endtime="20201030 15:52:19.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.521" endtime="20201030 15:52:19.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.520" endtime="20201030 15:52:19.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.518" endtime="20201030 15:52:19.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.160" endtime="20201030 15:52:19.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.160" endtime="20201030 15:52:19.542"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.551" endtime="20201030 15:52:19.568"></status>
</kw>
<msg timestamp="20201030 15:52:19.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.549" endtime="20201030 15:52:19.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.570" endtime="20201030 15:52:19.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.573" endtime="20201030 15:52:19.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.546" endtime="20201030 15:52:19.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.544" endtime="20201030 15:52:19.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.582" endtime="20201030 15:52:19.866"></status>
</kw>
<msg timestamp="20201030 15:52:19.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.580" endtime="20201030 15:52:19.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.871" endtime="20201030 15:52:19.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.879" endtime="20201030 15:52:19.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.577" endtime="20201030 15:52:19.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.576" endtime="20201030 15:52:19.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.888" level="INFO">${RESULT} = [{'diff': 4.302700000000104e-05}, {'diff': 4.2360999999997706e-05}, {'diff': 4.276399999999722e-05}, {'diff': 4.273599999999808e-05}, {'diff': 4.243000000000302e-05}, {'diff': 4.229199999999933e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:19.882" endtime="20201030 15:52:19.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:19.899" level="INFO">${ACCURACY} = {'diff': [4.302700000000104e-05, 4.2360999999997706e-05, 4.276399999999722e-05, 4.273599999999808e-05, 4.243000000000302e-05, 4.229199999999933e-05, 4.252800000000001e-05, 4.2709000000001884e-05, 4.30...</msg>
<status status="PASS" starttime="20201030 15:52:19.890" endtime="20201030 15:52:19.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.909" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:19.907" endtime="20201030 15:52:19.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.914" level="INFO">VALUE: [4.302700000000104e-05, 4.2360999999997706e-05, 4.276399999999722e-05, 4.273599999999808e-05, 4.243000000000302e-05, 4.229199999999933e-05, 4.252800000000001e-05, 4.2709000000001884e-05, 4.307000000000269e-05, 4.2458999999998165e-05, 4.2624999999997526e-05, 4.2944999999999095e-05, 4.227799999999976e-05, 4.3041000000000607e-05, 4.280600000000287e-05, 4.277700000000079e-05, 4.2347000000001606e-05, 4.226400000000019e-05, 4.3041000000000607e-05, 4.31800000000003e-05, 4.3125000000001495e-05, 4.277800000000026e-05, 4.269400000000284e-05, 4.2582999999998816e-05, 4.277800000000026e-05, 4.2347000000001606e-05, 4.226400000000019e-05, 4.2375000000000745e-05, 4.227799999999976e-05, 4.2541000000000107e-05, 4.254199999999958e-05, 4.286200000000115e-05, 4.2680999999999275e-05, 4.302699999999757e-05, 4.302700000000104e-05, 4.2833000000002536e-05, 4.2290999999999856e-05, 4.307000000000269e-05, 4.322199999999901e-05, 4.227799999999976e-05, 4.269399999999937e-05, 4.3124999999998026e-05, 4.294399999999962e-05, 4.227799999999976e-05, 4.251400000000044e-05, 4.3209000000002384e-05, 4.22920000000028e-05, 4.2375000000000745e-05, 4.265200000000066e-05, 4.2332999999998566e-05]</msg>
<status status="PASS" starttime="20201030 15:52:19.911" endtime="20201030 15:52:19.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.901" endtime="20201030 15:52:19.917"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.925" endtime="20201030 15:52:19.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.921" endtime="20201030 15:52:19.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.919" endtime="20201030 15:52:19.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.543" endtime="20201030 15:52:19.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.542" endtime="20201030 15:52:19.949"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.968" endtime="20201030 15:52:19.986"></status>
</kw>
<msg timestamp="20201030 15:52:19.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.964" endtime="20201030 15:52:19.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.988" endtime="20201030 15:52:19.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.990" endtime="20201030 15:52:19.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.959" endtime="20201030 15:52:19.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.954" endtime="20201030 15:52:19.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.999" endtime="20201030 15:52:20.286"></status>
</kw>
<msg timestamp="20201030 15:52:20.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036426583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.998" endtime="20201030 15:52:20.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036382722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036426583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.290" endtime="20201030 15:52:20.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.298" endtime="20201030 15:52:20.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.995" endtime="20201030 15:52:20.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.994" endtime="20201030 15:52:20.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.305" level="INFO">${RESULT} = [{'diff': 4.3860999999999206e-05}, {'diff': 4.3860999999999206e-05}, {'diff': 4.379099999999442e-05}, {'diff': 4.4124999999999026e-05}, {'diff': 4.394400000000409e-05}, {'diff': 4.3388999999997846e-05...</msg>
<status status="PASS" starttime="20201030 15:52:20.302" endtime="20201030 15:52:20.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.309" level="INFO">${ACCURACY} = {'diff': [4.3860999999999206e-05, 4.3860999999999206e-05, 4.379099999999442e-05, 4.4124999999999026e-05, 4.394400000000409e-05, 4.3388999999997846e-05, 4.379200000000083e-05, 4.3360999999998706e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:52:20.306" endtime="20201030 15:52:20.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.314" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.313" endtime="20201030 15:52:20.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.316" level="INFO">VALUE: [4.3860999999999206e-05, 4.3860999999999206e-05, 4.379099999999442e-05, 4.4124999999999026e-05, 4.394400000000409e-05, 4.3388999999997846e-05, 4.379200000000083e-05, 4.3360999999998706e-05, 4.377799999999432e-05, 4.3846999999999636e-05, 4.376400000000169e-05, 4.3860999999999206e-05, 4.327800000000076e-05, 4.384800000000605e-05, 4.329200000000033e-05, 4.3555000000000677e-05, 4.351400000000144e-05, 4.383399999999954e-05, 4.394400000000409e-05, 4.341600000000445e-05, 4.347200000000273e-05, 4.326400000000119e-05, 4.394399999999715e-05, 4.422200000000348e-05, 4.343000000000402e-05, 4.3846999999999636e-05, 4.3846999999999636e-05, 4.376400000000169e-05, 4.4194999999996876e-05, 4.3610999999998956e-05, 4.3444999999996126e-05, 4.3610999999998956e-05, 4.329200000000033e-05, 4.352800000000101e-05, 4.4194999999996876e-05, 4.3596999999999386e-05, 4.345799999999622e-05, 4.3388999999997846e-05, 4.3625000000005465e-05, 4.376400000000169e-05, 4.3860999999999206e-05, 4.344399999999665e-05, 4.4110999999999456e-05, 4.3430999999996556e-05, 4.327800000000076e-05, 4.3846999999999636e-05, 4.3973000000002704e-05, 4.379200000000083e-05, 4.402800000000151e-05, 4.352799999999407e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.315" endtime="20201030 15:52:20.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.310" endtime="20201030 15:52:20.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.322" endtime="20201030 15:52:20.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.320" endtime="20201030 15:52:20.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.319" endtime="20201030 15:52:20.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.951" endtime="20201030 15:52:20.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.950" endtime="20201030 15:52:20.343"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.351" endtime="20201030 15:52:20.372"></status>
</kw>
<msg timestamp="20201030 15:52:20.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.350" endtime="20201030 15:52:20.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.373" endtime="20201030 15:52:20.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.376" endtime="20201030 15:52:20.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.347" endtime="20201030 15:52:20.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.345" endtime="20201030 15:52:20.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.385" endtime="20201030 15:52:20.671"></status>
</kw>
<msg timestamp="20201030 15:52:20.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025534778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.383" endtime="20201030 15:52:20.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025489528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025534778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.675" endtime="20201030 15:52:20.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.684" endtime="20201030 15:52:20.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.381" endtime="20201030 15:52:20.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.379" endtime="20201030 15:52:20.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.690" level="INFO">${RESULT} = [{'diff': 4.525000000000015e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.429199999999786e-05}, {'diff': 4.517999999999883e-05}, {'diff': 4.425000000000262e-05}, {'diff': 4.4833000000001066e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:20.687" endtime="20201030 15:52:20.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:20.694" level="INFO">${ACCURACY} = {'diff': [4.525000000000015e-05, 4.4638999999999096e-05, 4.429199999999786e-05, 4.517999999999883e-05, 4.425000000000262e-05, 4.4833000000001066e-05, 4.4597000000000386e-05, 4.4445000000000595e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:52:20.691" endtime="20201030 15:52:20.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.699" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:20.698" endtime="20201030 15:52:20.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.701" level="INFO">VALUE: [4.525000000000015e-05, 4.4638999999999096e-05, 4.429199999999786e-05, 4.517999999999883e-05, 4.425000000000262e-05, 4.4833000000001066e-05, 4.4597000000000386e-05, 4.4445000000000595e-05, 4.476399999999922e-05, 4.440199999999894e-05, 4.5111000000000456e-05, 4.5138999999999596e-05, 4.447200000000026e-05, 4.4931000000001525e-05, 4.477700000000279e-05, 4.4916999999998486e-05, 4.5111000000000456e-05, 4.479100000000236e-05, 4.498600000000033e-05, 4.5181000000001775e-05, 4.444400000000112e-05, 4.5083000000001316e-05, 4.5097000000000886e-05, 4.477800000000226e-05, 4.502799999999904e-05, 4.4847000000000636e-05, 4.4958999999997196e-05, 4.5139000000003066e-05, 4.5152999999999166e-05, 4.459799999999986e-05, 4.477699999999932e-05, 4.504100000000261e-05, 4.45129999999995e-05, 4.5125000000000026e-05, 4.494400000000162e-05, 4.4652999999998666e-05, 4.443000000000155e-05, 4.4610999999999956e-05, 4.5125000000000026e-05, 4.477799999999879e-05, 4.498600000000033e-05, 4.4874999999999776e-05, 4.427800000000176e-05, 4.484800000000011e-05, 4.4930999999998056e-05, 4.4222999999999485e-05, 4.4861000000000206e-05, 4.427699999999882e-05, 4.452799999999854e-05, 4.467999999999833e-05]</msg>
<status status="PASS" starttime="20201030 15:52:20.700" endtime="20201030 15:52:20.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.695" endtime="20201030 15:52:20.704"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.707" endtime="20201030 15:52:20.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.706" endtime="20201030 15:52:20.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.705" endtime="20201030 15:52:20.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.343" endtime="20201030 15:52:20.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.343" endtime="20201030 15:52:20.728"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.736" endtime="20201030 15:52:20.753"></status>
</kw>
<msg timestamp="20201030 15:52:20.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.735" endtime="20201030 15:52:20.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.755" endtime="20201030 15:52:20.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.757" endtime="20201030 15:52:20.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.732" endtime="20201030 15:52:20.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.730" endtime="20201030 15:52:20.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.767" endtime="20201030 15:52:21.053"></status>
</kw>
<msg timestamp="20201030 15:52:21.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.766" endtime="20201030 15:52:21.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021921653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021967361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.057" endtime="20201030 15:52:21.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.065" endtime="20201030 15:52:21.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.763" endtime="20201030 15:52:21.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.761" endtime="20201030 15:52:21.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.071" level="INFO">${RESULT} = [{'diff': 4.570800000000194e-05}, {'diff': 4.611099999999799e-05}, {'diff': 4.577700000000032e-05}, {'diff': 4.61939999999994e-05}, {'diff': 4.611099999999799e-05}, {'diff': 4.544400000000212e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:21.068" endtime="20201030 15:52:21.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.077" level="INFO">${ACCURACY} = {'diff': [4.570800000000194e-05, 4.611099999999799e-05, 4.577700000000032e-05, 4.61939999999994e-05, 4.611099999999799e-05, 4.544400000000212e-05, 4.5597000000001386e-05, 4.5597000000001386e-05, 4.579...</msg>
<status status="PASS" starttime="20201030 15:52:21.072" endtime="20201030 15:52:21.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.081" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.080" endtime="20201030 15:52:21.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.084" level="INFO">VALUE: [4.570800000000194e-05, 4.611099999999799e-05, 4.577700000000032e-05, 4.61939999999994e-05, 4.611099999999799e-05, 4.544400000000212e-05, 4.5597000000001386e-05, 4.5597000000001386e-05, 4.579200000000283e-05, 4.5681000000002275e-05, 4.577799999999979e-05, 4.6166999999999736e-05, 4.5430999999998556e-05, 4.5431000000002025e-05, 4.527799999999929e-05, 4.583399999999807e-05, 4.576400000000022e-05, 4.552700000000007e-05, 4.5875000000000776e-05, 4.529099999999939e-05, 4.554099999999964e-05, 4.56939999999989e-05, 4.577799999999979e-05, 4.5861000000001206e-05, 4.527799999999929e-05, 4.536099999999724e-05, 4.6125000000001026e-05, 4.577799999999979e-05, 4.5667000000002705e-05, 4.5944999999998626e-05, 4.575000000000065e-05, 4.537499999999681e-05, 4.5375000000000276e-05, 4.527699999999982e-05, 4.551399999999997e-05, 4.548600000000083e-05, 4.61939999999994e-05, 4.612499999999756e-05, 4.529200000000233e-05, 4.623600000000158e-05, 4.5403000000002885e-05, 4.580599999999893e-05, 4.551399999999997e-05, 4.552799999999954e-05, 4.552800000000301e-05, 4.5833000000002067e-05, 4.526399999999972e-05, 4.548600000000083e-05, 4.5361000000000706e-05, 4.577799999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.082" endtime="20201030 15:52:21.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.077" endtime="20201030 15:52:21.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.088" endtime="20201030 15:52:21.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.087" endtime="20201030 15:52:21.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.086" endtime="20201030 15:52:21.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.729" endtime="20201030 15:52:21.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.728" endtime="20201030 15:52:21.109"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.118" endtime="20201030 15:52:21.135"></status>
</kw>
<msg timestamp="20201030 15:52:21.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.116" endtime="20201030 15:52:21.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.136" endtime="20201030 15:52:21.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.139" endtime="20201030 15:52:21.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.114" endtime="20201030 15:52:21.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.112" endtime="20201030 15:52:21.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.148" endtime="20201030 15:52:21.434"></status>
</kw>
<msg timestamp="20201030 15:52:21.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.146" endtime="20201030 15:52:21.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021980042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.439" endtime="20201030 15:52:21.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.447" endtime="20201030 15:52:21.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.144" endtime="20201030 15:52:21.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.142" endtime="20201030 15:52:21.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.454" level="INFO">${RESULT} = [{'diff': 4.70269999999981e-05}, {'diff': 4.6361000000001706e-05}, {'diff': 4.663899999999763e-05}, {'diff': 4.6625000000001526e-05}, {'diff': 4.647199999999879e-05}, {'diff': 4.626400000000072e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:21.450" endtime="20201030 15:52:21.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.458" level="INFO">${ACCURACY} = {'diff': [4.70269999999981e-05, 4.6361000000001706e-05, 4.663899999999763e-05, 4.6625000000001526e-05, 4.647199999999879e-05, 4.626400000000072e-05, 4.677699999999785e-05, 4.6625000000001526e-05, 4.71...</msg>
<status status="PASS" starttime="20201030 15:52:21.455" endtime="20201030 15:52:21.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.462" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.461" endtime="20201030 15:52:21.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.465" level="INFO">VALUE: [4.70269999999981e-05, 4.6361000000001706e-05, 4.663899999999763e-05, 4.6625000000001526e-05, 4.647199999999879e-05, 4.626400000000072e-05, 4.677699999999785e-05, 4.6625000000001526e-05, 4.711099999999899e-05, 4.676400000000122e-05, 4.658299999999935e-05, 4.649999999999793e-05, 4.7194999999999876e-05, 4.7125000000002026e-05, 4.7111000000002456e-05, 4.711200000000193e-05, 4.661200000000143e-05, 4.677700000000132e-05, 4.6375000000001276e-05, 4.7125000000002026e-05, 4.711099999999899e-05, 4.655499999999674e-05, 4.644399999999965e-05, 4.6625000000001526e-05, 4.709699999999942e-05, 4.6958999999999196e-05, 4.627799999999682e-05, 4.6694999999999376e-05, 4.6958999999999196e-05, 4.629199999999986e-05, 4.7181000000000306e-05, 4.6445000000002595e-05, 4.626400000000072e-05, 4.702800000000104e-05, 4.667999999999686e-05, 4.675000000000165e-05, 4.637499999999781e-05, 4.632000000000247e-05, 4.720799999999997e-05, 4.654200000000011e-05, 4.679200000000036e-05, 4.713899999999813e-05, 4.6416999999999986e-05, 4.627800000000029e-05, 4.702800000000104e-05, 4.6361000000001706e-05, 4.626400000000072e-05, 4.686199999999821e-05, 4.679100000000089e-05, 4.651400000000097e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.463" endtime="20201030 15:52:21.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.458" endtime="20201030 15:52:21.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.470" endtime="20201030 15:52:21.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.468" endtime="20201030 15:52:21.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.467" endtime="20201030 15:52:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.110" endtime="20201030 15:52:21.490"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.109" endtime="20201030 15:52:21.490"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.499" endtime="20201030 15:52:21.517"></status>
</kw>
<msg timestamp="20201030 15:52:21.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.497" endtime="20201030 15:52:21.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.519" endtime="20201030 15:52:21.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.521" endtime="20201030 15:52:21.523"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.495" endtime="20201030 15:52:21.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.493" endtime="20201030 15:52:21.524"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.530" endtime="20201030 15:52:21.816"></status>
</kw>
<msg timestamp="20201030 15:52:21.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.529" endtime="20201030 15:52:21.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022962931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023011125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.820" endtime="20201030 15:52:21.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.829" endtime="20201030 15:52:21.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.526" endtime="20201030 15:52:21.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.525" endtime="20201030 15:52:21.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.835" level="INFO">${RESULT} = [{'diff': 4.81940000000014e-05}, {'diff': 4.811099999999999e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.7708999999999946e-05}, {'diff': 4.804200000000161e-05}, {'diff': 4.799999999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:21.832" endtime="20201030 15:52:21.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:21.840" level="INFO">${ACCURACY} = {'diff': [4.81940000000014e-05, 4.811099999999999e-05, 4.75139999999985e-05, 4.7708999999999946e-05, 4.804200000000161e-05, 4.799999999999943e-05, 4.7681000000000806e-05, 4.761199999999896e-05, 4.7597...</msg>
<status status="PASS" starttime="20201030 15:52:21.836" endtime="20201030 15:52:21.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.844" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:52:21.843" endtime="20201030 15:52:21.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.846" level="INFO">VALUE: [4.81940000000014e-05, 4.811099999999999e-05, 4.75139999999985e-05, 4.7708999999999946e-05, 4.804200000000161e-05, 4.799999999999943e-05, 4.7681000000000806e-05, 4.761199999999896e-05, 4.759799999999939e-05, 4.761099999999949e-05, 4.742999999999761e-05, 4.727700000000182e-05, 4.791699999999802e-05, 4.812499999999956e-05, 4.776399999999875e-05, 4.81940000000014e-05, 4.806900000000128e-05, 4.759699999999992e-05, 4.7611000000002957e-05, 4.770800000000047e-05, 4.736099999999924e-05, 4.808400000000032e-05, 4.761199999999896e-05, 4.759799999999939e-05, 4.774999999999918e-05, 4.766600000000176e-05, 4.793000000000158e-05, 4.762499999999906e-05, 4.774999999999918e-05, 4.7375000000002276e-05, 4.809700000000042e-05, 4.727800000000129e-05, 4.81940000000014e-05, 4.809700000000042e-05, 4.7959000000000196e-05, 4.727800000000129e-05, 4.7695000000000376e-05, 4.7445000000000126e-05, 4.727800000000129e-05, 4.804199999999814e-05, 4.820800000000097e-05, 4.798599999999986e-05, 4.743000000000108e-05, 4.745800000000022e-05, 4.78200000000005e-05, 4.786099999999974e-05, 4.742999999999761e-05, 4.779200000000136e-05, 4.802799999999857e-05, 4.755599999999721e-05]</msg>
<status status="PASS" starttime="20201030 15:52:21.845" endtime="20201030 15:52:21.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.840" endtime="20201030 15:52:21.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.852" endtime="20201030 15:52:21.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.851" endtime="20201030 15:52:21.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.850" endtime="20201030 15:52:21.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.491" endtime="20201030 15:52:21.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.490" endtime="20201030 15:52:21.873"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.882" endtime="20201030 15:52:21.899"></status>
</kw>
<msg timestamp="20201030 15:52:21.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.880" endtime="20201030 15:52:21.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.901" endtime="20201030 15:52:21.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.903" endtime="20201030 15:52:21.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.878" endtime="20201030 15:52:21.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.876" endtime="20201030 15:52:21.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.912" endtime="20201030 15:52:22.198"></status>
</kw>
<msg timestamp="20201030 15:52:22.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.911" endtime="20201030 15:52:22.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022153611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.203" endtime="20201030 15:52:22.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.211" endtime="20201030 15:52:22.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.908" endtime="20201030 15:52:22.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.906" endtime="20201030 15:52:22.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.217" level="INFO">${RESULT} = [{'diff': 4.887500000000031e-05}, {'diff': 4.825000000000315e-05}, {'diff': 4.919399999999893e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.859699999999745e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:22.214" endtime="20201030 15:52:22.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.223" level="INFO">${ACCURACY} = {'diff': [4.887500000000031e-05, 4.825000000000315e-05, 4.919399999999893e-05, 4.845800000000122e-05, 4.845800000000122e-05, 4.859699999999745e-05, 4.826399999999925e-05, 4.9014e-05, 4.918099999999884...</msg>
<status status="PASS" starttime="20201030 15:52:22.218" endtime="20201030 15:52:22.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.227" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.226" endtime="20201030 15:52:22.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.230" level="INFO">VALUE: [4.887500000000031e-05, 4.825000000000315e-05, 4.919399999999893e-05, 4.845800000000122e-05, 4.845800000000122e-05, 4.859699999999745e-05, 4.826399999999925e-05, 4.9014e-05, 4.918099999999884e-05, 4.8945000000001626e-05, 4.827799999999882e-05, 4.834800000000014e-05, 4.830499999999849e-05, 4.849999999999993e-05, 4.917999999999936e-05, 4.911100000000099e-05, 4.842999999999861e-05, 4.861100000000049e-05, 4.855599999999821e-05, 4.909699999999795e-05, 4.862500000000006e-05, 4.845800000000122e-05, 4.859699999999745e-05, 4.912500000000056e-05, 4.877799999999932e-05, 4.884700000000117e-05, 4.827799999999882e-05, 4.834800000000014e-05, 4.911200000000046e-05, 4.845800000000122e-05, 4.861100000000049e-05, 4.879099999999942e-05, 4.904099999999967e-05, 4.836100000000024e-05, 4.824999999999968e-05, 4.919399999999893e-05, 4.81940000000014e-05, 4.86940000000019e-05, 4.887500000000031e-05, 4.861100000000049e-05, 4.912500000000056e-05, 4.831900000000153e-05, 4.8709000000000946e-05, 4.862500000000006e-05, 4.8223000000000016e-05, 4.85139999999995e-05, 4.867999999999886e-05, 4.859699999999745e-05, 4.911100000000099e-05, 4.843000000000208e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.228" endtime="20201030 15:52:22.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.223" endtime="20201030 15:52:22.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.235" endtime="20201030 15:52:22.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.233" endtime="20201030 15:52:22.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.232" endtime="20201030 15:52:22.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.874" endtime="20201030 15:52:22.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.873" endtime="20201030 15:52:22.255"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.264" endtime="20201030 15:52:22.281"></status>
</kw>
<msg timestamp="20201030 15:52:22.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.262" endtime="20201030 15:52:22.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.283" endtime="20201030 15:52:22.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.286" endtime="20201030 15:52:22.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.260" endtime="20201030 15:52:22.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.258" endtime="20201030 15:52:22.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.295" endtime="20201030 15:52:22.582"></status>
</kw>
<msg timestamp="20201030 15:52:22.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.293" endtime="20201030 15:52:22.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022263417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022313292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.586" endtime="20201030 15:52:22.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.594" endtime="20201030 15:52:22.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.290" endtime="20201030 15:52:22.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.289" endtime="20201030 15:52:22.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.601" level="INFO">${RESULT} = [{'diff': 4.987499999999784e-05}, {'diff': 4.9458999999998227e-05}, {'diff': 4.929199999999939e-05}, {'diff': 4.987499999999784e-05}, {'diff': 4.9931000000003056e-05}, {'diff': 4.947199999999832e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:22.598" endtime="20201030 15:52:22.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.605" level="INFO">${ACCURACY} = {'diff': [4.987499999999784e-05, 4.9458999999998227e-05, 4.929199999999939e-05, 4.987499999999784e-05, 4.9931000000003056e-05, 4.947199999999832e-05, 4.976300000000128e-05, 4.986099999999827e-05, 4.99...</msg>
<status status="PASS" starttime="20201030 15:52:22.602" endtime="20201030 15:52:22.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.609" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.608" endtime="20201030 15:52:22.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.612" level="INFO">VALUE: [4.987499999999784e-05, 4.9458999999998227e-05, 4.929199999999939e-05, 4.987499999999784e-05, 4.9931000000003056e-05, 4.947199999999832e-05, 4.976300000000128e-05, 4.986099999999827e-05, 4.997200000000229e-05, 5.011100000000199e-05, 4.944399999999918e-05, 5.016700000000027e-05, 4.961100000000149e-05, 4.9458999999998227e-05, 4.977800000000032e-05, 5.016700000000027e-05, 4.952800000000007e-05, 4.976399999999728e-05, 4.984799999999817e-05, 4.944499999999866e-05, 4.943099999999909e-05, 4.940200000000047e-05, 4.993000000000011e-05, 4.976399999999728e-05, 4.972199999999857e-05, 4.962499999999759e-05, 4.927799999999982e-05, 4.997199999999882e-05, 5.00279999999971e-05, 5.02079999999995e-05, 4.9945000000002626e-05, 4.929199999999939e-05, 4.968099999999934e-05, 4.977800000000032e-05, 4.9709000000001946e-05, 4.959699999999845e-05, 5.009800000000189e-05, 4.927700000000035e-05, 5.02079999999995e-05, 5.012500000000156e-05, 4.994400000000315e-05, 4.929200000000286e-05, 5.002800000000057e-05, 4.930499999999949e-05, 5.002699999999763e-05, 4.926400000000025e-05, 4.936100000000124e-05, 4.994499999999916e-05, 4.967999999999986e-05, 5.009799999999842e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.611" endtime="20201030 15:52:22.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.606" endtime="20201030 15:52:22.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:22.617" endtime="20201030 15:52:22.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.615" endtime="20201030 15:52:22.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.614" endtime="20201030 15:52:22.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.256" endtime="20201030 15:52:22.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.256" endtime="20201030 15:52:22.638"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.646" endtime="20201030 15:52:22.664"></status>
</kw>
<msg timestamp="20201030 15:52:22.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.645" endtime="20201030 15:52:22.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:22.666" endtime="20201030 15:52:22.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.668" endtime="20201030 15:52:22.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.642" endtime="20201030 15:52:22.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.640" endtime="20201030 15:52:22.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.677" endtime="20201030 15:52:22.964"></status>
</kw>
<msg timestamp="20201030 15:52:22.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.676" endtime="20201030 15:52:22.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022996014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023047042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:22.968" endtime="20201030 15:52:22.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:22.976" endtime="20201030 15:52:22.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.673" endtime="20201030 15:52:22.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.671" endtime="20201030 15:52:22.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:22.983" level="INFO">${RESULT} = [{'diff': 5.102800000000157e-05}, {'diff': 5.1207999999997034e-05}, {'diff': 5.061199999999849e-05}, {'diff': 5.094500000000016e-05}, {'diff': 5.109699999999995e-05}, {'diff': 5.074999999999871e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:22.979" endtime="20201030 15:52:22.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:22.987" level="INFO">${ACCURACY} = {'diff': [5.102800000000157e-05, 5.1207999999997034e-05, 5.061199999999849e-05, 5.094500000000016e-05, 5.109699999999995e-05, 5.074999999999871e-05, 5.102699999999863e-05, 5.101399999999853e-05, 5.101...</msg>
<status status="PASS" starttime="20201030 15:52:22.984" endtime="20201030 15:52:22.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.991" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:52:22.990" endtime="20201030 15:52:22.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:22.994" level="INFO">VALUE: [5.102800000000157e-05, 5.1207999999997034e-05, 5.061199999999849e-05, 5.094500000000016e-05, 5.109699999999995e-05, 5.074999999999871e-05, 5.102699999999863e-05, 5.101399999999853e-05, 5.101399999999853e-05, 5.12080000000005e-05, 5.111100000000299e-05, 5.061099999999902e-05, 5.109699999999995e-05, 5.061100000000249e-05, 5.059699999999945e-05, 5.029200000000039e-05, 5.086099999999927e-05, 5.044499999999966e-05, 5.059799999999892e-05, 5.079100000000142e-05, 5.10409999999982e-05, 5.118000000000136e-05, 5.094400000000068e-05, 5.093000000000111e-05, 5.026399999999778e-05, 5.080500000000099e-05, 5.095800000000025e-05, 5.111099999999952e-05, 5.087500000000231e-05, 5.113900000000213e-05, 5.025000000000168e-05, 5.126399999999878e-05, 5.076400000000175e-05, 5.037499999999834e-05, 5.031900000000006e-05, 5.119400000000093e-05, 5.044400000000018e-05, 5.061099999999902e-05, 5.061099999999902e-05, 5.027799999999735e-05, 5.086099999999927e-05, 5.076399999999828e-05, 5.051399999999803e-05, 5.122200000000007e-05, 5.111099999999952e-05, 5.029200000000039e-05, 5.066700000000077e-05, 5.030599999999996e-05, 5.1014000000002e-05, 5.108300000000038e-05]</msg>
<status status="PASS" starttime="20201030 15:52:22.992" endtime="20201030 15:52:22.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.988" endtime="20201030 15:52:22.996"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.000" endtime="20201030 15:52:23.019"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.998" endtime="20201030 15:52:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.997" endtime="20201030 15:52:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.639" endtime="20201030 15:52:23.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:22.638" endtime="20201030 15:52:23.020"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.029" endtime="20201030 15:52:23.047"></status>
</kw>
<msg timestamp="20201030 15:52:23.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.028" endtime="20201030 15:52:23.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.048" endtime="20201030 15:52:23.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.051" endtime="20201030 15:52:23.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.025" endtime="20201030 15:52:23.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.023" endtime="20201030 15:52:23.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.060" endtime="20201030 15:52:23.346"></status>
</kw>
<msg timestamp="20201030 15:52:23.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.058" endtime="20201030 15:52:23.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.350" endtime="20201030 15:52:23.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.358" endtime="20201030 15:52:23.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.056" endtime="20201030 15:52:23.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.054" endtime="20201030 15:52:23.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.365" level="INFO">${RESULT} = [{'diff': 5.181900000000156e-05}, {'diff': 5.163899999999916e-05}, {'diff': 5.126399999999878e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.211100000000052e-05}, {'diff': 5.143100000000109e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:23.362" endtime="20201030 15:52:23.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.370" level="INFO">${ACCURACY} = {'diff': [5.181900000000156e-05, 5.163899999999916e-05, 5.126399999999878e-05, 5.187499999999984e-05, 5.211100000000052e-05, 5.143100000000109e-05, 5.126399999999878e-05, 5.18470000000007e-05, 5.21250...</msg>
<status status="PASS" starttime="20201030 15:52:23.366" endtime="20201030 15:52:23.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.374" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.373" endtime="20201030 15:52:23.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.377" level="INFO">VALUE: [5.181900000000156e-05, 5.163899999999916e-05, 5.126399999999878e-05, 5.187499999999984e-05, 5.211100000000052e-05, 5.143100000000109e-05, 5.126399999999878e-05, 5.18470000000007e-05, 5.212500000000009e-05, 5.127800000000182e-05, 5.187499999999984e-05, 5.141699999999805e-05, 5.212500000000009e-05, 5.181900000000156e-05, 5.199999999999996e-05, 5.197200000000082e-05, 5.186100000000027e-05, 5.179199999999842e-05, 5.173600000000014e-05, 5.179199999999842e-05, 5.13470000000002e-05, 5.127800000000182e-05, 5.15279999999986e-05, 5.162500000000306e-05, 5.156999999999731e-05, 5.127800000000182e-05, 5.202800000000257e-05, 5.20279999999991e-05, 5.187499999999984e-05, 5.1916000000002543e-05, 5.176400000000275e-05, 5.169400000000143e-05, 5.198600000000039e-05, 5.1943999999998214e-05, 5.162499999999959e-05, 5.211099999999705e-05, 5.15279999999986e-05, 5.211100000000052e-05, 5.127800000000182e-05, 5.186100000000027e-05, 5.127800000000182e-05, 5.170900000000048e-05, 5.212500000000009e-05, 5.213899999999966e-05, 5.148599999999989e-05, 5.176299999999981e-05, 5.219400000000193e-05, 5.144400000000118e-05, 5.211100000000052e-05, 5.154200000000164e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.375" endtime="20201030 15:52:23.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.371" endtime="20201030 15:52:23.378"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.382" endtime="20201030 15:52:23.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.380" endtime="20201030 15:52:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.379" endtime="20201030 15:52:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.021" endtime="20201030 15:52:23.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.021" endtime="20201030 15:52:23.403"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.411" endtime="20201030 15:52:23.428"></status>
</kw>
<msg timestamp="20201030 15:52:23.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.410" endtime="20201030 15:52:23.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.430" endtime="20201030 15:52:23.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.432" endtime="20201030 15:52:23.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.407" endtime="20201030 15:52:23.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.405" endtime="20201030 15:52:23.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.441" endtime="20201030 15:52:23.728"></status>
</kw>
<msg timestamp="20201030 15:52:23.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.440" endtime="20201030 15:52:23.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.732" endtime="20201030 15:52:23.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.741" endtime="20201030 15:52:23.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.437" endtime="20201030 15:52:23.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.435" endtime="20201030 15:52:23.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:23.747" level="INFO">${RESULT} = [{'diff': 5.23609999999973e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.294499999999869e-05}, {'diff': 5.311100000000152e-05}, {'diff': 5.2957999999998784e-05}, {'diff': 5.276400000000028e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:23.744" endtime="20201030 15:52:23.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:23.751" level="INFO">${ACCURACY} = {'diff': [5.23609999999973e-05, 5.261100000000102e-05, 5.294499999999869e-05, 5.311100000000152e-05, 5.2957999999998784e-05, 5.276400000000028e-05, 5.3179999999999894e-05, 5.277700000000038e-05, 5.320...</msg>
<status status="PASS" starttime="20201030 15:52:23.748" endtime="20201030 15:52:23.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.756" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:52:23.755" endtime="20201030 15:52:23.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.758" level="INFO">VALUE: [5.23609999999973e-05, 5.261100000000102e-05, 5.294499999999869e-05, 5.311100000000152e-05, 5.2957999999998784e-05, 5.276400000000028e-05, 5.3179999999999894e-05, 5.277700000000038e-05, 5.3207999999999034e-05, 5.291699999999955e-05, 5.262500000000059e-05, 5.275000000000071e-05, 5.263900000000016e-05, 5.229199999999892e-05, 5.269500000000191e-05, 5.276400000000028e-05, 5.237500000000034e-05, 5.262500000000059e-05, 5.259800000000092e-05, 5.229099999999945e-05, 5.236100000000077e-05, 5.259699999999798e-05, 5.238900000000338e-05, 5.2249999999996743e-05, 5.28470000000017e-05, 5.315300000000023e-05, 5.309699999999848e-05, 5.309699999999848e-05, 5.261099999999755e-05, 5.227799999999935e-05, 5.236100000000077e-05, 5.277799999999985e-05, 5.28470000000017e-05, 5.3152000000000754e-05, 5.283299999999866e-05, 5.302699999999716e-05, 5.240299999999948e-05, 5.279099999999995e-05, 5.275000000000071e-05, 5.302699999999716e-05, 5.295800000000225e-05, 5.280599999999899e-05, 5.286100000000127e-05, 5.2749999999997244e-05, 5.30280000000001e-05, 5.320899999999851e-05, 5.261100000000102e-05, 5.250000000000046e-05, 5.229200000000239e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201030 15:52:23.757" endtime="20201030 15:52:23.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.752" endtime="20201030 15:52:23.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:23.763" endtime="20201030 15:52:23.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.762" endtime="20201030 15:52:23.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.761" endtime="20201030 15:52:23.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.403" endtime="20201030 15:52:23.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.403" endtime="20201030 15:52:23.784"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.793" endtime="20201030 15:52:23.814"></status>
</kw>
<msg timestamp="20201030 15:52:23.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.791" endtime="20201030 15:52:23.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:23.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:23.815" endtime="20201030 15:52:23.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.818" endtime="20201030 15:52:23.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.789" endtime="20201030 15:52:23.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.786" endtime="20201030 15:52:23.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:23.827" endtime="20201030 15:52:24.112"></status>
</kw>
<msg timestamp="20201030 15:52:24.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025450944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025504764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:23.825" endtime="20201030 15:52:24.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025450944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025504764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.116" endtime="20201030 15:52:24.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.124" endtime="20201030 15:52:24.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.823" endtime="20201030 15:52:24.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.821" endtime="20201030 15:52:24.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.131" level="INFO">${RESULT} = [{'diff': 5.381999999999956e-05}, {'diff': 5.411099999999905e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.361099999999855e-05}, {'diff': 5.345900000000223e-05}, {'diff': 5.3971999999999354e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:24.127" endtime="20201030 15:52:24.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.135" level="INFO">${ACCURACY} = {'diff': [5.381999999999956e-05, 5.411099999999905e-05, 5.412500000000209e-05, 5.361099999999855e-05, 5.345900000000223e-05, 5.3971999999999354e-05, 5.3443999999999714e-05, 5.3957999999999784e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 15:52:24.132" endtime="20201030 15:52:24.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.139" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.138" endtime="20201030 15:52:24.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.142" level="INFO">VALUE: [5.381999999999956e-05, 5.411099999999905e-05, 5.412500000000209e-05, 5.361099999999855e-05, 5.345900000000223e-05, 5.3971999999999354e-05, 5.3443999999999714e-05, 5.3957999999999784e-05, 5.3944000000000214e-05, 5.3430000000000144e-05, 5.377800000000085e-05, 5.404200000000067e-05, 5.4194000000000464e-05, 5.411099999999905e-05, 5.327800000000035e-05, 5.387499999999837e-05, 5.409699999999948e-05, 5.362500000000159e-05, 5.394499999999969e-05, 5.327800000000035e-05, 5.355599999999974e-05, 5.4027999999997633e-05, 5.405500000000077e-05, 5.352700000000113e-05, 5.40410000000012e-05, 5.4208000000000034e-05, 5.325000000000121e-05, 5.4194000000000464e-05, 5.344499999999919e-05, 5.394499999999969e-05, 5.412499999999862e-05, 5.361099999999855e-05, 5.326400000000078e-05, 5.369499999999944e-05, 5.393100000000012e-05, 5.326300000000131e-05, 5.368099999999987e-05, 5.3957999999999784e-05, 5.3930000000000644e-05, 5.329099999999698e-05, 5.404200000000067e-05, 5.35280000000006e-05, 5.343099999999962e-05, 5.3930000000000644e-05, 5.379200000000042e-05, 5.408299999999991e-05, 5.3749999999998244e-05, 5.383299999999966e-05, 5.384800000000217e-05, 5.345900000000223e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.140" endtime="20201030 15:52:24.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.136" endtime="20201030 15:52:24.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.148" endtime="20201030 15:52:24.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.146" endtime="20201030 15:52:24.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.145" endtime="20201030 15:52:24.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.785" endtime="20201030 15:52:24.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:23.784" endtime="20201030 15:52:24.168"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.177" endtime="20201030 15:52:24.194"></status>
</kw>
<msg timestamp="20201030 15:52:24.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.176" endtime="20201030 15:52:24.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.196" endtime="20201030 15:52:24.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.198" endtime="20201030 15:52:24.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.173" endtime="20201030 15:52:24.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.171" endtime="20201030 15:52:24.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.207" endtime="20201030 15:52:24.492"></status>
</kw>
<msg timestamp="20201030 15:52:24.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:24.206" endtime="20201030 15:52:24.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:24.496" endtime="20201030 15:52:24.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.504" endtime="20201030 15:52:24.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.203" endtime="20201030 15:52:24.507"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.201" endtime="20201030 15:52:24.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.511" level="INFO">${RESULT} = [{'diff': 5.45280000000016e-05}, {'diff': 5.484700000000023e-05}, {'diff': 5.429200000000092e-05}, {'diff': 5.438899999999844e-05}, {'diff': 5.475000000000271e-05}, {'diff': 5.454200000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:24.508" endtime="20201030 15:52:24.511"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.516" level="INFO">${ACCURACY} = {'diff': [5.45280000000016e-05, 5.484700000000023e-05, 5.429200000000092e-05, 5.438899999999844e-05, 5.475000000000271e-05, 5.454200000000117e-05, 5.430600000000049e-05, 5.511100000000005e-05, 5.45969...</msg>
<status status="PASS" starttime="20201030 15:52:24.512" endtime="20201030 15:52:24.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.520" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.519" endtime="20201030 15:52:24.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.523" level="INFO">VALUE: [5.45280000000016e-05, 5.484700000000023e-05, 5.429200000000092e-05, 5.438899999999844e-05, 5.475000000000271e-05, 5.454200000000117e-05, 5.430600000000049e-05, 5.511100000000005e-05, 5.459699999999998e-05, 5.459699999999998e-05, 5.4444000000000714e-05, 5.426400000000178e-05, 5.4527999999998134e-05, 5.5027999999998634e-05, 5.433300000000016e-05, 5.493100000000112e-05, 5.493099999999765e-05, 5.445900000000323e-05, 5.511100000000005e-05, 5.509700000000048e-05, 5.430600000000049e-05, 5.43479999999992e-05, 5.511100000000005e-05, 5.477700000000238e-05, 5.501299999999959e-05, 5.43609999999993e-05, 5.4444000000000714e-05, 5.511100000000005e-05, 5.4430000000001144e-05, 5.443100000000062e-05, 5.4958000000000784e-05, 5.494500000000069e-05, 5.427800000000135e-05, 5.4527999999998134e-05, 5.4722000000000104e-05, 5.429200000000092e-05, 5.455600000000074e-05, 5.519500000000094e-05, 5.429100000000145e-05, 5.48609999999998e-05, 5.477699999999891e-05, 5.480499999999805e-05, 5.4958000000000784e-05, 5.509700000000048e-05, 5.4263999999998314e-05, 5.463899999999869e-05, 5.493100000000112e-05, 5.511100000000005e-05, 5.4763999999998814e-05, 5.469500000000044e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.522" endtime="20201030 15:52:24.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.517" endtime="20201030 15:52:24.524"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.528" endtime="20201030 15:52:24.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.526" endtime="20201030 15:52:24.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.525" endtime="20201030 15:52:24.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.169" endtime="20201030 15:52:24.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.169" endtime="20201030 15:52:24.549"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.557" endtime="20201030 15:52:24.575"></status>
</kw>
<msg timestamp="20201030 15:52:24.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.556" endtime="20201030 15:52:24.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.577" endtime="20201030 15:52:24.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.579" endtime="20201030 15:52:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.553" endtime="20201030 15:52:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.551" endtime="20201030 15:52:24.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.588" endtime="20201030 15:52:24.876"></status>
</kw>
<msg timestamp="20201030 15:52:24.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.587" endtime="20201030 15:52:24.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.880" endtime="20201030 15:52:24.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.889" endtime="20201030 15:52:24.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.584" endtime="20201030 15:52:24.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.582" endtime="20201030 15:52:24.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.895" level="INFO">${RESULT} = [{'diff': 5.6027999999999634e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.569500000000144e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.570900000000101e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:24.892" endtime="20201030 15:52:24.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:24.899" level="INFO">${ACCURACY} = {'diff': [5.6027999999999634e-05, 5.568100000000187e-05, 5.5777999999999384e-05, 5.569500000000144e-05, 5.5263999999999314e-05, 5.570900000000101e-05, 5.559800000000045e-05, 5.577699999999991e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 15:52:24.896" endtime="20201030 15:52:24.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.904" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:52:24.903" endtime="20201030 15:52:24.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.906" level="INFO">VALUE: [5.6027999999999634e-05, 5.568100000000187e-05, 5.5777999999999384e-05, 5.569500000000144e-05, 5.5263999999999314e-05, 5.570900000000101e-05, 5.559800000000045e-05, 5.577699999999991e-05, 5.554099999999923e-05, 5.5513999999999564e-05, 5.552699999999966e-05, 5.537499999999987e-05, 5.5943999999998745e-05, 5.611099999999758e-05, 5.5263999999999314e-05, 5.58610000000008e-05, 5.6041999999999204e-05, 5.561100000000055e-05, 5.595900000000126e-05, 5.562500000000012e-05, 5.561099999999708e-05, 5.561099999999708e-05, 5.594500000000169e-05, 5.529100000000245e-05, 5.53610000000003e-05, 5.562500000000012e-05, 5.527700000000288e-05, 5.554099999999923e-05, 5.541699999999858e-05, 5.562500000000012e-05, 5.5777999999999384e-05, 5.559700000000098e-05, 5.5527999999999134e-05, 5.6027999999999634e-05, 5.6027999999999634e-05, 5.5915999999999605e-05, 5.543099999999815e-05, 5.559800000000045e-05, 5.5957999999998315e-05, 5.5415999999999105e-05, 5.5457999999997815e-05, 5.5929999999999175e-05, 5.5277999999998884e-05, 5.6250000000000744e-05, 5.612500000000062e-05, 5.5944000000002214e-05, 5.611100000000105e-05, 5.543099999999815e-05, 5.544499999999772e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201030 15:52:24.905" endtime="20201030 15:52:24.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.900" endtime="20201030 15:52:24.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:24.911" endtime="20201030 15:52:24.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.910" endtime="20201030 15:52:24.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.909" endtime="20201030 15:52:24.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.549" endtime="20201030 15:52:24.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.549" endtime="20201030 15:52:24.932"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.941" endtime="20201030 15:52:24.958"></status>
</kw>
<msg timestamp="20201030 15:52:24.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.939" endtime="20201030 15:52:24.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.960" endtime="20201030 15:52:24.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.962" endtime="20201030 15:52:24.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.937" endtime="20201030 15:52:24.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.935" endtime="20201030 15:52:24.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.971" endtime="20201030 15:52:25.257"></status>
</kw>
<msg timestamp="20201030 15:52:25.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:24.970" endtime="20201030 15:52:25.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022932806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02299, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:52:25.261" endtime="20201030 15:52:25.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.269" endtime="20201030 15:52:25.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.967" endtime="20201030 15:52:25.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.966" endtime="20201030 15:52:25.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.276" level="INFO">${RESULT} = [{'diff': 5.7193999999999995e-05}, {'diff': 5.661099999999808e-05}, {'diff': 5.6764000000000814e-05}, {'diff': 5.719499999999947e-05}, {'diff': 5.6264000000000314e-05}, {'diff': 5.68749999999979e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:25.272" endtime="20201030 15:52:25.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.280" level="INFO">${ACCURACY} = {'diff': [5.7193999999999995e-05, 5.661099999999808e-05, 5.6764000000000814e-05, 5.719499999999947e-05, 5.6264000000000314e-05, 5.68749999999979e-05, 5.711199999999805e-05, 5.6277999999999884e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 15:52:25.277" endtime="20201030 15:52:25.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.284" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.283" endtime="20201030 15:52:25.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.287" level="INFO">VALUE: [5.7193999999999995e-05, 5.661099999999808e-05, 5.6764000000000814e-05, 5.719499999999947e-05, 5.6264000000000314e-05, 5.68749999999979e-05, 5.711199999999805e-05, 5.6277999999999884e-05, 5.702699999999769e-05, 5.7151999999997816e-05, 5.6443999999999245e-05, 5.6764000000000814e-05, 5.7014000000001064e-05, 5.7028000000000634e-05, 5.634699999999826e-05, 5.644499999999872e-05, 5.6778000000000384e-05, 5.7000000000001494e-05, 5.668100000000287e-05, 5.6471999999998385e-05, 5.680500000000005e-05, 5.6528000000000134e-05, 5.68480000000017e-05, 5.6930000000000175e-05, 5.656899999999937e-05, 5.711099999999858e-05, 5.6930000000000175e-05, 5.6416000000000105e-05, 5.6735999999998205e-05, 5.684700000000223e-05, 5.6778000000000384e-05, 5.7055999999999774e-05, 5.6541999999999704e-05, 5.684700000000223e-05, 5.694499999999922e-05, 5.693099999999965e-05, 5.6778000000000384e-05, 5.7042000000000204e-05, 5.683300000000266e-05, 5.711099999999858e-05, 5.6429999999999675e-05, 5.6277999999999884e-05, 5.6679999999999925e-05, 5.662500000000112e-05, 5.688900000000094e-05, 5.661099999999808e-05, 5.695899999999879e-05, 5.6777999999996914e-05, 5.637500000000087e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.285" endtime="20201030 15:52:25.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.280" endtime="20201030 15:52:25.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.293" endtime="20201030 15:52:25.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.291" endtime="20201030 15:52:25.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.290" endtime="20201030 15:52:25.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.933" endtime="20201030 15:52:25.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.932" endtime="20201030 15:52:25.313"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.322" endtime="20201030 15:52:25.340"></status>
</kw>
<msg timestamp="20201030 15:52:25.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.320" endtime="20201030 15:52:25.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.341" endtime="20201030 15:52:25.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.344" endtime="20201030 15:52:25.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.318" endtime="20201030 15:52:25.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.316" endtime="20201030 15:52:25.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.353" endtime="20201030 15:52:25.640"></status>
</kw>
<msg timestamp="20201030 15:52:25.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.351" endtime="20201030 15:52:25.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.645" endtime="20201030 15:52:25.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.653" endtime="20201030 15:52:25.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.349" endtime="20201030 15:52:25.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.347" endtime="20201030 15:52:25.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:25.659" level="INFO">${RESULT} = [{'diff': 5.8208000000000565e-05}, {'diff': 5.777700000000191e-05}, {'diff': 5.738899999999797e-05}, {'diff': 5.7944000000000745e-05}, {'diff': 5.7444000000000245e-05}, {'diff': 5.7749999999998775e-05...</msg>
<status status="PASS" starttime="20201030 15:52:25.656" endtime="20201030 15:52:25.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:25.664" level="INFO">${ACCURACY} = {'diff': [5.8208000000000565e-05, 5.777700000000191e-05, 5.738899999999797e-05, 5.7944000000000745e-05, 5.7444000000000245e-05, 5.7749999999998775e-05, 5.7514000000001564e-05, 5.7694000000000495e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:25.660" endtime="20201030 15:52:25.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.669" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:52:25.668" endtime="20201030 15:52:25.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.671" level="INFO">VALUE: [5.8208000000000565e-05, 5.777700000000191e-05, 5.738899999999797e-05, 5.7944000000000745e-05, 5.7444000000000245e-05, 5.7749999999998775e-05, 5.7514000000001564e-05, 5.7694000000000495e-05, 5.7278000000000884e-05, 5.8249999999999275e-05, 5.8056000000000774e-05, 5.744499999999972e-05, 5.7292000000000454e-05, 5.816700000000133e-05, 5.7777999999997914e-05, 5.734700000000273e-05, 5.7429999999997206e-05, 5.812500000000262e-05, 5.761100000000255e-05, 5.7430000000000675e-05, 5.7444000000000245e-05, 5.736099999999883e-05, 5.7792000000000954e-05, 5.8041999999997734e-05, 5.734699999999926e-05, 5.812499999999915e-05, 5.743100000000015e-05, 5.762500000000212e-05, 5.812500000000262e-05, 5.791699999999761e-05, 5.726299999999837e-05, 5.7514000000001564e-05, 5.8000000000002494e-05, 5.73749999999984e-05, 5.7306000000000024e-05, 5.78749999999989e-05, 5.761099999999908e-05, 5.7278000000000884e-05, 5.769499999999997e-05, 5.762499999999865e-05, 5.7278000000000884e-05, 5.7833999999999663e-05, 5.729099999999751e-05, 5.7806000000000524e-05, 5.779099999999801e-05, 5.754099999999776e-05, 5.730500000000055e-05, 5.788900000000194e-05, 5.740299999999754e-05, 5.7958000000000315e-05]</msg>
<status status="PASS" starttime="20201030 15:52:25.670" endtime="20201030 15:52:25.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.665" endtime="20201030 15:52:25.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.685" endtime="20201030 15:52:25.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.684" endtime="20201030 15:52:25.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.682" endtime="20201030 15:52:25.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.314" endtime="20201030 15:52:25.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.314" endtime="20201030 15:52:25.706"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.715" endtime="20201030 15:52:25.731"></status>
</kw>
<msg timestamp="20201030 15:52:25.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.713" endtime="20201030 15:52:25.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.733" endtime="20201030 15:52:25.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.736" endtime="20201030 15:52:25.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.710" endtime="20201030 15:52:25.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.708" endtime="20201030 15:52:25.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.745" endtime="20201030 15:52:26.032"></status>
</kw>
<msg timestamp="20201030 15:52:26.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:25.743" endtime="20201030 15:52:26.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021877361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.036" endtime="20201030 15:52:26.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.045" endtime="20201030 15:52:26.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.740" endtime="20201030 15:52:26.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.739" endtime="20201030 15:52:26.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.051" level="INFO">${RESULT} = [{'diff': 5.8721999999997165e-05}, {'diff': 5.8430000000001675e-05}, {'diff': 5.909700000000101e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.8291999999997984e-05}, {'diff': 5.8528000000002134e-05...</msg>
<status status="PASS" starttime="20201030 15:52:26.048" endtime="20201030 15:52:26.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.055" level="INFO">${ACCURACY} = {'diff': [5.8721999999997165e-05, 5.8430000000001675e-05, 5.909700000000101e-05, 5.861100000000008e-05, 5.8291999999997984e-05, 5.8528000000002134e-05, 5.8513999999999095e-05, 5.901300000000012e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:52:26.052" endtime="20201030 15:52:26.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.060" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.059" endtime="20201030 15:52:26.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.062" level="INFO">VALUE: [5.8721999999997165e-05, 5.8430000000001675e-05, 5.909700000000101e-05, 5.861100000000008e-05, 5.8291999999997984e-05, 5.8528000000002134e-05, 5.8513999999999095e-05, 5.901300000000012e-05, 5.86810000000014e-05, 5.861100000000008e-05, 5.8597999999999983e-05, 5.893100000000165e-05, 5.8472000000000385e-05, 5.8763999999999345e-05, 5.91810000000019e-05, 5.861100000000008e-05, 5.866700000000183e-05, 5.911099999999711e-05, 5.8264000000002314e-05, 5.8542000000001704e-05, 5.836099999999983e-05, 5.8443999999997776e-05, 5.8278000000001884e-05, 5.886100000000033e-05, 5.838900000000244e-05, 5.8763999999999345e-05, 5.886100000000033e-05, 5.9098000000000483e-05, 5.893099999999818e-05, 5.908300000000144e-05, 5.909700000000101e-05, 5.861100000000008e-05, 5.8222000000000135e-05, 5.8680000000001925e-05, 5.8791999999998484e-05, 5.869500000000097e-05, 5.8957999999997845e-05, 5.861100000000008e-05, 5.8778000000002384e-05, 5.9027999999999164e-05, 5.886100000000033e-05, 5.9070000000001344e-05, 5.912500000000015e-05, 5.879099999999901e-05, 5.901300000000012e-05, 5.888899999999947e-05, 5.911100000000058e-05, 5.8929999999998706e-05, 5.8263999999998844e-05, 5.840300000000201e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.061" endtime="20201030 15:52:26.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.056" endtime="20201030 15:52:26.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.067" endtime="20201030 15:52:26.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.066" endtime="20201030 15:52:26.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.065" endtime="20201030 15:52:26.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.707" endtime="20201030 15:52:26.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.706" endtime="20201030 15:52:26.088"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.097" endtime="20201030 15:52:26.116"></status>
</kw>
<msg timestamp="20201030 15:52:26.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.095" endtime="20201030 15:52:26.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.117" endtime="20201030 15:52:26.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.120" endtime="20201030 15:52:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.093" endtime="20201030 15:52:26.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.090" endtime="20201030 15:52:26.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.129" endtime="20201030 15:52:26.415"></status>
</kw>
<msg timestamp="20201030 15:52:26.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.127" endtime="20201030 15:52:26.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023119431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.419" endtime="20201030 15:52:26.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.427" endtime="20201030 15:52:26.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.125" endtime="20201030 15:52:26.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.123" endtime="20201030 15:52:26.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.434" level="INFO">${RESULT} = [{'diff': 5.9541999999999234e-05}, {'diff': 5.9999999999997555e-05}, {'diff': 5.9362000000000303e-05}, {'diff': 5.981899999999915e-05}, {'diff': 6.0193999999999526e-05}, {'diff': 5.979100000000001e-05...</msg>
<status status="PASS" starttime="20201030 15:52:26.431" endtime="20201030 15:52:26.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.438" level="INFO">${ACCURACY} = {'diff': [5.9541999999999234e-05, 5.9999999999997555e-05, 5.9362000000000303e-05, 5.981899999999915e-05, 6.0193999999999526e-05, 5.979100000000001e-05, 5.9693999999999026e-05, 5.9277999999999414e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:26.435" endtime="20201030 15:52:26.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.443" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.442" endtime="20201030 15:52:26.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.445" level="INFO">VALUE: [5.9541999999999234e-05, 5.9999999999997555e-05, 5.9362000000000303e-05, 5.981899999999915e-05, 6.0193999999999526e-05, 5.979100000000001e-05, 5.9693999999999026e-05, 5.9277999999999414e-05, 6.0028000000000165e-05, 5.9693999999999026e-05, 5.993100000000265e-05, 5.9263999999999845e-05, 5.986100000000133e-05, 5.9750000000000775e-05, 5.9693999999999026e-05, 5.993099999999918e-05, 5.943100000000215e-05, 6.011100000000158e-05, 6.011100000000158e-05, 5.977700000000044e-05, 5.98750000000009e-05, 5.9457999999998346e-05, 5.9444000000002245e-05, 5.956900000000237e-05, 6.013900000000072e-05, 5.9792000000002954e-05, 6.0028000000000165e-05, 5.9527999999999665e-05, 6.0028000000000165e-05, 5.9651999999996846e-05, 5.9943999999999276e-05, 5.959699999999804e-05, 5.9943999999999276e-05, 6.011099999999811e-05, 5.9443999999998776e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 6.011100000000158e-05, 5.9277999999999414e-05, 6.0028000000000165e-05, 6.0028000000000165e-05, 5.9362000000000303e-05, 5.966699999999936e-05, 6.011100000000158e-05, 5.9929999999999706e-05, 5.9944000000002745e-05, 5.9972000000001885e-05, 5.9929999999999706e-05, 5.959700000000151e-05, 5.9943999999999276e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.444" endtime="20201030 15:52:26.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.439" endtime="20201030 15:52:26.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.451" endtime="20201030 15:52:26.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.450" endtime="20201030 15:52:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.448" endtime="20201030 15:52:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.089" endtime="20201030 15:52:26.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.088" endtime="20201030 15:52:26.472"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.480" endtime="20201030 15:52:26.498"></status>
</kw>
<msg timestamp="20201030 15:52:26.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.479" endtime="20201030 15:52:26.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.500" endtime="20201030 15:52:26.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.502" endtime="20201030 15:52:26.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.476" endtime="20201030 15:52:26.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.474" endtime="20201030 15:52:26.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.511" endtime="20201030 15:52:26.797"></status>
</kw>
<msg timestamp="20201030 15:52:26.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.510" endtime="20201030 15:52:26.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022138681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:26.801" endtime="20201030 15:52:26.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.809" endtime="20201030 15:52:26.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.507" endtime="20201030 15:52:26.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.505" endtime="20201030 15:52:26.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:26.816" level="INFO">${RESULT} = [{'diff': 6.0819999999999624e-05}, {'diff': 6.094499999999975e-05}, {'diff': 6.111099999999911e-05}, {'diff': 6.062499999999818e-05}, {'diff': 6.0443999999999776e-05}, {'diff': 6.0819999999999624e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:26.813" endtime="20201030 15:52:26.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:26.821" level="INFO">${ACCURACY} = {'diff': [6.0819999999999624e-05, 6.094499999999975e-05, 6.111099999999911e-05, 6.062499999999818e-05, 6.0443999999999776e-05, 6.0819999999999624e-05, 6.090299999999757e-05, 6.0430000000000206e-05, 6....</msg>
<status status="PASS" starttime="20201030 15:52:26.817" endtime="20201030 15:52:26.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.825" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:52:26.824" endtime="20201030 15:52:26.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.828" level="INFO">VALUE: [6.0819999999999624e-05, 6.094499999999975e-05, 6.111099999999911e-05, 6.062499999999818e-05, 6.0443999999999776e-05, 6.0819999999999624e-05, 6.090299999999757e-05, 6.0430000000000206e-05, 6.0291999999999984e-05, 6.108299999999997e-05, 6.06949999999995e-05, 6.061099999999861e-05, 6.0569999999999374e-05, 6.0278000000000415e-05, 6.0861999999998334e-05, 6.0278000000000415e-05, 6.119399999999706e-05, 6.0443999999999776e-05, 6.112500000000215e-05, 6.0930000000000706e-05, 6.109699999999954e-05, 6.051300000000162e-05, 6.111100000000258e-05, 6.059700000000251e-05, 6.1028000000001165e-05, 6.044500000000272e-05, 6.0278000000000415e-05, 6.06949999999995e-05, 6.041700000000011e-05, 6.113900000000172e-05, 6.077699999999797e-05, 6.12499999999988e-05, 6.061099999999861e-05, 6.0278000000000415e-05, 6.087499999999843e-05, 6.062500000000165e-05, 6.061099999999861e-05, 6.0278000000000415e-05, 6.104200000000073e-05, 6.0401999999997597e-05, 6.095899999999932e-05, 6.0792000000000485e-05, 6.06949999999995e-05, 6.0930000000000706e-05, 6.109699999999954e-05, 6.0430000000000206e-05, 6.0457999999999346e-05, 6.0443999999999776e-05, 6.0930000000000706e-05, 6.090299999999757e-05]</msg>
<status status="PASS" starttime="20201030 15:52:26.827" endtime="20201030 15:52:26.829"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.822" endtime="20201030 15:52:26.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:26.833" endtime="20201030 15:52:26.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.831" endtime="20201030 15:52:26.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.830" endtime="20201030 15:52:26.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.473" endtime="20201030 15:52:26.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.472" endtime="20201030 15:52:26.854"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.863" endtime="20201030 15:52:26.880"></status>
</kw>
<msg timestamp="20201030 15:52:26.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.862" endtime="20201030 15:52:26.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:26.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:26.882" endtime="20201030 15:52:26.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.885" endtime="20201030 15:52:26.886"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.859" endtime="20201030 15:52:26.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.857" endtime="20201030 15:52:26.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:26.894" endtime="20201030 15:52:27.180"></status>
</kw>
<msg timestamp="20201030 15:52:27.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02286525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:26.892" endtime="20201030 15:52:27.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02286525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022926931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:27.184" endtime="20201030 15:52:27.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.192" endtime="20201030 15:52:27.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.889" endtime="20201030 15:52:27.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.888" endtime="20201030 15:52:27.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.199" level="INFO">${RESULT} = [{'diff': 6.168100000000093e-05}, {'diff': 6.161099999999961e-05}, {'diff': 6.194400000000128e-05}, {'diff': 6.177800000000191e-05}, {'diff': 6.169399999999756e-05}, {'diff': 6.176399999999888e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:27.196" endtime="20201030 15:52:27.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.203" level="INFO">${ACCURACY} = {'diff': [6.168100000000093e-05, 6.161099999999961e-05, 6.194400000000128e-05, 6.177800000000191e-05, 6.169399999999756e-05, 6.176399999999888e-05, 6.136099999999936e-05, 6.19439999999978e-05, 6.15560...</msg>
<status status="PASS" starttime="20201030 15:52:27.200" endtime="20201030 15:52:27.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.207" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.206" endtime="20201030 15:52:27.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.210" level="INFO">VALUE: [6.168100000000093e-05, 6.161099999999961e-05, 6.194400000000128e-05, 6.177800000000191e-05, 6.169399999999756e-05, 6.176399999999888e-05, 6.136099999999936e-05, 6.19439999999978e-05, 6.15560000000008e-05, 6.144500000000025e-05, 6.133300000000022e-05, 6.223600000000024e-05, 6.161200000000255e-05, 6.161200000000255e-05, 6.186099999999986e-05, 6.220799999999763e-05, 6.12499999999988e-05, 6.169400000000103e-05, 6.191599999999867e-05, 6.129199999999752e-05, 6.134699999999979e-05, 6.126400000000184e-05, 6.198599999999999e-05, 6.204200000000173e-05, 6.20140000000026e-05, 6.13750000000024e-05, 6.161199999999908e-05, 6.159799999999951e-05, 6.130499999999761e-05, 6.222200000000067e-05, 6.176399999999888e-05, 6.15279999999982e-05, 6.154200000000123e-05, 6.13750000000024e-05, 6.183300000000072e-05, 6.186099999999986e-05, 6.213899999999925e-05, 6.209699999999707e-05, 6.144500000000025e-05, 6.195800000000085e-05, 6.194500000000075e-05, 6.194400000000128e-05, 6.194400000000128e-05, 6.144400000000078e-05, 6.144400000000078e-05, 6.129200000000098e-05, 6.201399999999913e-05, 6.219399999999806e-05, 6.194500000000075e-05, 6.143100000000068e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.209" endtime="20201030 15:52:27.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.204" endtime="20201030 15:52:27.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.215" endtime="20201030 15:52:27.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.213" endtime="20201030 15:52:27.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.212" endtime="20201030 15:52:27.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.855" endtime="20201030 15:52:27.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:26.854" endtime="20201030 15:52:27.236"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.244" endtime="20201030 15:52:27.266"></status>
</kw>
<msg timestamp="20201030 15:52:27.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.243" endtime="20201030 15:52:27.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.267" endtime="20201030 15:52:27.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.270" endtime="20201030 15:52:27.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.240" endtime="20201030 15:52:27.272"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.238" endtime="20201030 15:52:27.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.279" endtime="20201030 15:52:27.564"></status>
</kw>
<msg timestamp="20201030 15:52:27.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.277" endtime="20201030 15:52:27.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025242042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025305125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.569" endtime="20201030 15:52:27.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.577" endtime="20201030 15:52:27.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.275" endtime="20201030 15:52:27.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.273" endtime="20201030 15:52:27.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.583" level="INFO">${RESULT} = [{'diff': 6.308300000000197e-05}, {'diff': 6.270799999999813e-05}, {'diff': 6.223599999999677e-05}, {'diff': 6.270799999999813e-05}, {'diff': 6.279099999999954e-05}, {'diff': 6.312500000000068e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:27.580" endtime="20201030 15:52:27.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.588" level="INFO">${ACCURACY} = {'diff': [6.308300000000197e-05, 6.270799999999813e-05, 6.223599999999677e-05, 6.270799999999813e-05, 6.279099999999954e-05, 6.312500000000068e-05, 6.244400000000178e-05, 6.262500000000018e-05, 6.2791...</msg>
<status status="PASS" starttime="20201030 15:52:27.584" endtime="20201030 15:52:27.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.592" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.591" endtime="20201030 15:52:27.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.595" level="INFO">VALUE: [6.308300000000197e-05, 6.270799999999813e-05, 6.223599999999677e-05, 6.270799999999813e-05, 6.279099999999954e-05, 6.312500000000068e-05, 6.244400000000178e-05, 6.262500000000018e-05, 6.279199999999902e-05, 6.286100000000086e-05, 6.243099999999821e-05, 6.293099999999871e-05, 6.261100000000061e-05, 6.230599999999809e-05, 6.269499999999803e-05, 6.244400000000178e-05, 6.261100000000061e-05, 6.312500000000068e-05, 6.277799999999945e-05, 6.238900000000297e-05, 6.227799999999895e-05, 6.286100000000086e-05, 6.261100000000061e-05, 6.230599999999809e-05, 6.287500000000043e-05, 6.243099999999821e-05, 6.294500000000175e-05, 6.311200000000058e-05, 6.259800000000051e-05, 6.29439999999988e-05, 6.226400000000284e-05, 6.240300000000254e-05, 6.251399999999963e-05, 6.311100000000111e-05, 6.259699999999757e-05, 6.223600000000024e-05, 6.286100000000086e-05, 6.276399999999988e-05, 6.254199999999877e-05, 6.319499999999853e-05, 6.293100000000218e-05, 6.259800000000051e-05, 6.277699999999997e-05, 6.286100000000086e-05, 6.262500000000018e-05, 6.247199999999745e-05, 6.311100000000111e-05, 6.226399999999938e-05, 6.30279999999997e-05, 6.269499999999803e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.593" endtime="20201030 15:52:27.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.589" endtime="20201030 15:52:27.597"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.600" endtime="20201030 15:52:27.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.599" endtime="20201030 15:52:27.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.598" endtime="20201030 15:52:27.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.237" endtime="20201030 15:52:27.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.236" endtime="20201030 15:52:27.621"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.630" endtime="20201030 15:52:27.648"></status>
</kw>
<msg timestamp="20201030 15:52:27.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.628" endtime="20201030 15:52:27.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:27.649" endtime="20201030 15:52:27.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.652" endtime="20201030 15:52:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.626" endtime="20201030 15:52:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.624" endtime="20201030 15:52:27.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.661" endtime="20201030 15:52:27.947"></status>
</kw>
<msg timestamp="20201030 15:52:27.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.659" endtime="20201030 15:52:27.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022028486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:27.951" endtime="20201030 15:52:27.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:27.959" endtime="20201030 15:52:27.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.657" endtime="20201030 15:52:27.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.655" endtime="20201030 15:52:27.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:27.965" level="INFO">${RESULT} = [{'diff': 6.400000000000156e-05}, {'diff': 6.419400000000006e-05}, {'diff': 6.393099999999971e-05}, {'diff': 6.362499999999771e-05}, {'diff': 6.361100000000161e-05}, {'diff': 6.32500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:27.962" endtime="20201030 15:52:27.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:27.970" level="INFO">${ACCURACY} = {'diff': [6.400000000000156e-05, 6.419400000000006e-05, 6.393099999999971e-05, 6.362499999999771e-05, 6.361100000000161e-05, 6.32500000000008e-05, 6.369399999999956e-05, 6.394500000000275e-05, 6.39439...</msg>
<status status="PASS" starttime="20201030 15:52:27.966" endtime="20201030 15:52:27.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.975" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:52:27.974" endtime="20201030 15:52:27.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:27.977" level="INFO">VALUE: [6.400000000000156e-05, 6.419400000000006e-05, 6.393099999999971e-05, 6.362499999999771e-05, 6.361100000000161e-05, 6.32500000000008e-05, 6.369399999999956e-05, 6.394500000000275e-05, 6.39439999999998e-05, 6.37769999999975e-05, 6.404100000000079e-05, 6.40280000000007e-05, 6.384700000000229e-05, 6.411100000000211e-05, 6.409699999999907e-05, 6.343100000000268e-05, 6.409700000000254e-05, 6.361100000000161e-05, 6.376400000000088e-05, 6.387500000000143e-05, 6.345800000000235e-05, 6.376299999999793e-05, 6.401400000000113e-05, 6.369399999999956e-05, 6.362500000000118e-05, 6.409699999999907e-05, 6.39439999999998e-05, 6.393099999999971e-05, 6.411099999999864e-05, 6.405599999999984e-05, 6.326400000000038e-05, 6.419499999999953e-05, 6.344499999999878e-05, 6.377700000000097e-05, 6.336099999999789e-05, 6.409699999999907e-05, 6.39439999999998e-05, 6.345799999999888e-05, 6.411099999999864e-05, 6.393000000000024e-05, 6.359700000000204e-05, 6.363900000000075e-05, 6.330600000000255e-05, 6.368099999999946e-05, 6.343100000000268e-05, 6.377799999999698e-05, 6.398699999999799e-05, 6.336100000000136e-05, 6.361099999999814e-05, 6.345800000000235e-05]</msg>
<status status="PASS" starttime="20201030 15:52:27.976" endtime="20201030 15:52:27.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.971" endtime="20201030 15:52:27.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:27.982" endtime="20201030 15:52:28.002"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.981" endtime="20201030 15:52:28.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.980" endtime="20201030 15:52:28.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.622" endtime="20201030 15:52:28.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:27.621" endtime="20201030 15:52:28.003"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.012" endtime="20201030 15:52:28.030"></status>
</kw>
<msg timestamp="20201030 15:52:28.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.010" endtime="20201030 15:52:28.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.031" endtime="20201030 15:52:28.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.034" endtime="20201030 15:52:28.035"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.008" endtime="20201030 15:52:28.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.006" endtime="20201030 15:52:28.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.043" endtime="20201030 15:52:28.330"></status>
</kw>
<msg timestamp="20201030 15:52:28.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.041" endtime="20201030 15:52:28.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.334" endtime="20201030 15:52:28.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.342" endtime="20201030 15:52:28.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.039" endtime="20201030 15:52:28.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.037" endtime="20201030 15:52:28.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.349" level="INFO">${RESULT} = [{'diff': 6.519399999999759e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.469400000000056e-05}, {'diff': 6.494499999999681e-05}, {'diff': 6.479200000000102e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:28.346" endtime="20201030 15:52:28.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.353" level="INFO">${ACCURACY} = {'diff': [6.519399999999759e-05, 6.49440000000008e-05, 6.423599999999877e-05, 6.469400000000056e-05, 6.494499999999681e-05, 6.479200000000102e-05, 6.49159999999982e-05, 6.472300000000264e-05, 6.484799...</msg>
<status status="PASS" starttime="20201030 15:52:28.350" endtime="20201030 15:52:28.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.357" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.356" endtime="20201030 15:52:28.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.360" level="INFO">VALUE: [6.519399999999759e-05, 6.49440000000008e-05, 6.423599999999877e-05, 6.469400000000056e-05, 6.494499999999681e-05, 6.479200000000102e-05, 6.49159999999982e-05, 6.472300000000264e-05, 6.48479999999993e-05, 6.445799999999988e-05, 6.49440000000008e-05, 6.479100000000154e-05, 6.434699999999932e-05, 6.444399999999684e-05, 6.509700000000007e-05, 6.493000000000124e-05, 6.50830000000005e-05, 6.479200000000102e-05, 6.501400000000213e-05, 6.437499999999846e-05, 6.494500000000028e-05, 6.459799999999905e-05, 6.494500000000028e-05, 6.509700000000007e-05, 6.497199999999995e-05, 6.49020000000021e-05, 6.445799999999988e-05, 6.511099999999964e-05, 6.445799999999988e-05, 6.511099999999964e-05, 6.494500000000028e-05, 6.429200000000052e-05, 6.454200000000077e-05, 6.43479999999988e-05, 6.497199999999995e-05, 6.511199999999912e-05, 6.427700000000147e-05, 6.523599999999977e-05, 6.512499999999921e-05, 6.44440000000003e-05, 6.43890000000015e-05, 6.427800000000095e-05, 6.45280000000012e-05, 6.519500000000053e-05, 6.494499999999681e-05, 6.509700000000007e-05, 6.473700000000221e-05, 6.502799999999823e-05, 6.518100000000096e-05, 6.462499999999871e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.358" endtime="20201030 15:52:28.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.354" endtime="20201030 15:52:28.361"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.365" endtime="20201030 15:52:28.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.363" endtime="20201030 15:52:28.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.362" endtime="20201030 15:52:28.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.004" endtime="20201030 15:52:28.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.004" endtime="20201030 15:52:28.385"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.394" endtime="20201030 15:52:28.413"></status>
</kw>
<msg timestamp="20201030 15:52:28.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.393" endtime="20201030 15:52:28.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.415" endtime="20201030 15:52:28.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.417" endtime="20201030 15:52:28.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.390" endtime="20201030 15:52:28.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.388" endtime="20201030 15:52:28.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.426" endtime="20201030 15:52:28.712"></status>
</kw>
<msg timestamp="20201030 15:52:28.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.425" endtime="20201030 15:52:28.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023098375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023164236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.717" endtime="20201030 15:52:28.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.725" endtime="20201030 15:52:28.726"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.422" endtime="20201030 15:52:28.727"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.421" endtime="20201030 15:52:28.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.731" level="INFO">${RESULT} = [{'diff': 6.586100000000039e-05}, {'diff': 6.527799999999848e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.594500000000128e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:28.728" endtime="20201030 15:52:28.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:28.736" level="INFO">${ACCURACY} = {'diff': [6.586100000000039e-05, 6.527799999999848e-05, 6.537499999999946e-05, 6.523599999999977e-05, 6.536099999999989e-05, 6.594500000000128e-05, 6.609800000000055e-05, 6.611199999999665e-05, 6.5277...</msg>
<status status="PASS" starttime="20201030 15:52:28.732" endtime="20201030 15:52:28.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.740" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:52:28.739" endtime="20201030 15:52:28.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.743" level="INFO">VALUE: [6.586100000000039e-05, 6.527799999999848e-05, 6.537499999999946e-05, 6.523599999999977e-05, 6.536099999999989e-05, 6.594500000000128e-05, 6.609800000000055e-05, 6.611199999999665e-05, 6.527700000000247e-05, 6.569399999999809e-05, 6.529099999999857e-05, 6.55419999999983e-05, 6.620799999999816e-05, 6.57639999999994e-05, 6.561100000000014e-05, 6.568000000000199e-05, 6.612500000000021e-05, 6.612499999999674e-05, 6.558400000000048e-05, 6.527799999999848e-05, 6.583400000000073e-05, 6.59159999999992e-05, 6.592999999999877e-05, 6.594399999999834e-05, 6.563900000000275e-05, 6.529200000000152e-05, 6.552799999999873e-05, 6.615299999999935e-05, 6.529199999999805e-05, 6.602799999999923e-05, 6.536099999999989e-05, 6.544500000000078e-05, 6.581900000000168e-05, 6.570800000000113e-05, 6.59440000000018e-05, 6.611100000000064e-05, 6.612500000000021e-05, 6.579199999999855e-05, 6.619399999999859e-05, 6.591700000000214e-05, 6.559700000000057e-05, 6.611100000000064e-05, 6.544500000000078e-05, 6.600000000000009e-05, 6.594499999999781e-05, 6.612500000000021e-05, 6.59440000000018e-05, 6.60830000000015e-05, 6.595799999999791e-05, 6.579199999999855e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.741" endtime="20201030 15:52:28.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.736" endtime="20201030 15:52:28.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.748" endtime="20201030 15:52:28.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.747" endtime="20201030 15:52:28.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.746" endtime="20201030 15:52:28.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.386" endtime="20201030 15:52:28.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.386" endtime="20201030 15:52:28.769"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.778" endtime="20201030 15:52:28.796"></status>
</kw>
<msg timestamp="20201030 15:52:28.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.776" endtime="20201030 15:52:28.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.797" endtime="20201030 15:52:28.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.800" endtime="20201030 15:52:28.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.774" endtime="20201030 15:52:28.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.771" endtime="20201030 15:52:28.802"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.809" endtime="20201030 15:52:29.093"></status>
</kw>
<msg timestamp="20201030 15:52:29.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.807" endtime="20201030 15:52:29.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022178583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.098" endtime="20201030 15:52:29.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.106" endtime="20201030 15:52:29.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.805" endtime="20201030 15:52:29.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.803" endtime="20201030 15:52:29.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.112" level="INFO">${RESULT} = [{'diff': 6.701399999999719e-05}, {'diff': 6.686099999999792e-05}, {'diff': 6.677799999999998e-05}, {'diff': 6.652799999999973e-05}, {'diff': 6.720899999999863e-05}, {'diff': 6.677799999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.109" endtime="20201030 15:52:29.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.117" level="INFO">${ACCURACY} = {'diff': [6.701399999999719e-05, 6.686099999999792e-05, 6.677799999999998e-05, 6.652799999999973e-05, 6.720899999999863e-05, 6.677799999999998e-05, 6.72220000000022e-05, 6.65969999999981e-05, 6.695899...</msg>
<status status="PASS" starttime="20201030 15:52:29.113" endtime="20201030 15:52:29.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.122" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.121" endtime="20201030 15:52:29.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.124" level="INFO">VALUE: [6.701399999999719e-05, 6.686099999999792e-05, 6.677799999999998e-05, 6.652799999999973e-05, 6.720899999999863e-05, 6.677799999999998e-05, 6.72220000000022e-05, 6.65969999999981e-05, 6.695899999999838e-05, 6.627799999999948e-05, 6.669399999999909e-05, 6.694399999999934e-05, 6.67640000000004e-05, 6.686099999999792e-05, 6.63480000000008e-05, 6.702800000000023e-05, 6.668099999999899e-05, 6.662500000000071e-05, 6.715200000000088e-05, 6.69030000000001e-05, 6.70839999999985e-05, 6.625000000000034e-05, 6.704099999999685e-05, 6.641700000000264e-05, 6.701399999999719e-05, 6.630500000000261e-05, 6.634700000000132e-05, 6.645800000000188e-05, 6.663900000000028e-05, 6.711100000000164e-05, 6.677799999999998e-05, 6.715300000000035e-05, 6.713900000000078e-05, 6.663800000000081e-05, 6.711199999999765e-05, 6.694499999999881e-05, 6.711099999999817e-05, 6.661100000000114e-05, 6.67770000000005e-05, 6.667999999999952e-05, 6.65969999999981e-05, 6.67640000000004e-05, 6.715300000000035e-05, 6.711100000000164e-05, 6.695900000000185e-05, 6.661100000000114e-05, 6.623600000000077e-05, 6.652799999999973e-05, 6.686100000000139e-05, 6.659700000000157e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.123" endtime="20201030 15:52:29.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.118" endtime="20201030 15:52:29.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.129" endtime="20201030 15:52:29.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.128" endtime="20201030 15:52:29.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.127" endtime="20201030 15:52:29.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.770" endtime="20201030 15:52:29.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.769" endtime="20201030 15:52:29.150"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.159" endtime="20201030 15:52:29.177"></status>
</kw>
<msg timestamp="20201030 15:52:29.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.157" endtime="20201030 15:52:29.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.178" endtime="20201030 15:52:29.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.181" endtime="20201030 15:52:29.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.155" endtime="20201030 15:52:29.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.152" endtime="20201030 15:52:29.183"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.190" endtime="20201030 15:52:29.478"></status>
</kw>
<msg timestamp="20201030 15:52:29.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.188" endtime="20201030 15:52:29.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.482" endtime="20201030 15:52:29.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.491" endtime="20201030 15:52:29.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.186" endtime="20201030 15:52:29.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.184" endtime="20201030 15:52:29.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.497" level="INFO">${RESULT} = [{'diff': 6.769400000000009e-05}, {'diff': 6.812499999999874e-05}, {'diff': 6.744399999999984e-05}, {'diff': 6.775000000000184e-05}, {'diff': 6.734699999999885e-05}, {'diff': 6.745800000000288e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.494" endtime="20201030 15:52:29.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.501" level="INFO">${ACCURACY} = {'diff': [6.769400000000009e-05, 6.812499999999874e-05, 6.744399999999984e-05, 6.775000000000184e-05, 6.734699999999885e-05, 6.745800000000288e-05, 6.812500000000221e-05, 6.794499999999981e-05, 6.7250...</msg>
<status status="PASS" starttime="20201030 15:52:29.498" endtime="20201030 15:52:29.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.506" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.505" endtime="20201030 15:52:29.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.508" level="INFO">VALUE: [6.769400000000009e-05, 6.812499999999874e-05, 6.744399999999984e-05, 6.775000000000184e-05, 6.734699999999885e-05, 6.745800000000288e-05, 6.812500000000221e-05, 6.794499999999981e-05, 6.725000000000134e-05, 6.802800000000123e-05, 6.806900000000046e-05, 6.822199999999973e-05, 6.811099999999917e-05, 6.80969999999996e-05, 6.744399999999984e-05, 6.795799999999991e-05, 6.793000000000077e-05, 6.776399999999794e-05, 6.769400000000009e-05, 6.743099999999974e-05, 6.811099999999917e-05, 6.731899999999971e-05, 6.736100000000189e-05, 6.727800000000048e-05, 6.788899999999806e-05, 6.729100000000057e-05, 6.788899999999806e-05, 6.761100000000214e-05, 6.794400000000034e-05, 6.80969999999996e-05, 6.794400000000034e-05, 6.77640000000014e-05, 6.818100000000049e-05, 6.779200000000055e-05, 6.802800000000123e-05, 6.783399999999926e-05, 6.745800000000288e-05, 6.779100000000107e-05, 6.758299999999953e-05, 6.772199999999923e-05, 6.727799999999701e-05, 6.824999999999887e-05, 6.727800000000048e-05, 6.806999999999994e-05, 6.745799999999941e-05, 6.769500000000303e-05, 6.77640000000014e-05, 6.73480000000018e-05, 6.77640000000014e-05, 6.818000000000102e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.507" endtime="20201030 15:52:29.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.502" endtime="20201030 15:52:29.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.513" endtime="20201030 15:52:29.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.512" endtime="20201030 15:52:29.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.511" endtime="20201030 15:52:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.151" endtime="20201030 15:52:29.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.150" endtime="20201030 15:52:29.534"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.543" endtime="20201030 15:52:29.562"></status>
</kw>
<msg timestamp="20201030 15:52:29.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.541" endtime="20201030 15:52:29.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.564" endtime="20201030 15:52:29.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.566" endtime="20201030 15:52:29.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.539" endtime="20201030 15:52:29.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.536" endtime="20201030 15:52:29.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.575" endtime="20201030 15:52:29.861"></status>
</kw>
<msg timestamp="20201030 15:52:29.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.574" endtime="20201030 15:52:29.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.866" endtime="20201030 15:52:29.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.874" endtime="20201030 15:52:29.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.571" endtime="20201030 15:52:29.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.569" endtime="20201030 15:52:29.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:29.880" level="INFO">${RESULT} = [{'diff': 6.906900000000146e-05}, {'diff': 6.908299999999756e-05}, {'diff': 6.874999999999937e-05}, {'diff': 6.894400000000134e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.843000000000127e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:29.877" endtime="20201030 15:52:29.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:29.885" level="INFO">${ACCURACY} = {'diff': [6.906900000000146e-05, 6.908299999999756e-05, 6.874999999999937e-05, 6.894400000000134e-05, 6.858300000000053e-05, 6.843000000000127e-05, 6.877800000000198e-05, 6.901399999999919e-05, 6.8749...</msg>
<status status="PASS" starttime="20201030 15:52:29.881" endtime="20201030 15:52:29.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.889" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:52:29.888" endtime="20201030 15:52:29.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.892" level="INFO">VALUE: [6.906900000000146e-05, 6.908299999999756e-05, 6.874999999999937e-05, 6.894400000000134e-05, 6.858300000000053e-05, 6.843000000000127e-05, 6.877800000000198e-05, 6.901399999999919e-05, 6.874999999999937e-05, 6.893099999999777e-05, 6.894500000000081e-05, 6.849999999999912e-05, 6.859799999999958e-05, 6.909800000000008e-05, 6.881900000000121e-05, 6.870800000000066e-05, 6.844399999999737e-05, 6.895799999999744e-05, 6.830600000000062e-05, 6.881900000000121e-05, 6.90970000000006e-05, 6.879200000000155e-05, 6.870900000000013e-05, 6.877800000000198e-05, 6.884700000000035e-05, 6.862499999999924e-05, 6.827800000000148e-05, 6.919399999999812e-05, 6.894400000000134e-05, 6.844399999999737e-05, 6.908299999999756e-05, 6.85970000000001e-05, 6.844400000000084e-05, 6.899999999999962e-05, 6.862500000000271e-05, 6.912499999999974e-05, 6.844500000000031e-05, 6.877799999999851e-05, 6.906899999999799e-05, 6.872200000000023e-05, 6.890299999999863e-05, 6.90970000000006e-05, 6.863899999999881e-05, 6.861099999999967e-05, 6.894400000000134e-05, 6.844400000000084e-05, 6.894400000000134e-05, 6.825000000000234e-05, 6.836099999999942e-05, 6.827800000000148e-05]</msg>
<status status="PASS" starttime="20201030 15:52:29.891" endtime="20201030 15:52:29.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.885" endtime="20201030 15:52:29.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:29.899" endtime="20201030 15:52:29.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.897" endtime="20201030 15:52:29.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.896" endtime="20201030 15:52:29.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.535" endtime="20201030 15:52:29.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.534" endtime="20201030 15:52:29.920"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.928" endtime="20201030 15:52:29.947"></status>
</kw>
<msg timestamp="20201030 15:52:29.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.927" endtime="20201030 15:52:29.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:29.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:29.948" endtime="20201030 15:52:29.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.951" endtime="20201030 15:52:29.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.924" endtime="20201030 15:52:29.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.922" endtime="20201030 15:52:29.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:29.960" endtime="20201030 15:52:30.246"></status>
</kw>
<msg timestamp="20201030 15:52:30.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:29.958" endtime="20201030 15:52:30.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022121181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.250" endtime="20201030 15:52:30.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.258" endtime="20201030 15:52:30.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.956" endtime="20201030 15:52:30.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.954" endtime="20201030 15:52:30.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.265" level="INFO">${RESULT} = [{'diff': 7.002799999999976e-05}, {'diff': 6.970800000000166e-05}, {'diff': 6.962500000000024e-05}, {'diff': 6.943000000000227e-05}, {'diff': 6.927799999999901e-05}, {'diff': 6.954199999999883e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:30.261" endtime="20201030 15:52:30.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.270" level="INFO">${ACCURACY} = {'diff': [7.002799999999976e-05, 6.970800000000166e-05, 6.962500000000024e-05, 6.943000000000227e-05, 6.927799999999901e-05, 6.954199999999883e-05, 7.020800000000216e-05, 7.008300000000203e-05, 6.9638...</msg>
<status status="PASS" starttime="20201030 15:52:30.266" endtime="20201030 15:52:30.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.274" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.273" endtime="20201030 15:52:30.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.277" level="INFO">VALUE: [7.002799999999976e-05, 6.970800000000166e-05, 6.962500000000024e-05, 6.943000000000227e-05, 6.927799999999901e-05, 6.954199999999883e-05, 7.020800000000216e-05, 7.008300000000203e-05, 6.963899999999981e-05, 7.01109999999977e-05, 7.011100000000117e-05, 6.924999999999987e-05, 6.936100000000042e-05, 6.976399999999994e-05, 6.936100000000042e-05, 6.993000000000277e-05, 6.997200000000148e-05, 6.979199999999908e-05, 7.001399999999672e-05, 6.969399999999862e-05, 6.926399999999944e-05, 6.955600000000187e-05, 6.984699999999788e-05, 6.944500000000131e-05, 6.977799999999951e-05, 7.019499999999859e-05, 6.944399999999837e-05, 6.975000000000037e-05, 6.934700000000085e-05, 6.99030000000031e-05, 6.927799999999901e-05, 7.019400000000259e-05, 6.979199999999908e-05, 6.934700000000085e-05, 7.012500000000074e-05, 6.94169999999987e-05, 6.970900000000113e-05, 6.951399999999969e-05, 7.001300000000071e-05, 7.020800000000216e-05, 6.998599999999758e-05, 6.976399999999994e-05, 6.952799999999926e-05, 7.008300000000203e-05, 6.951399999999969e-05, 6.936100000000042e-05, 6.980599999999865e-05, 6.97230000000007e-05, 6.993099999999877e-05, 6.977700000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.275" endtime="20201030 15:52:30.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.270" endtime="20201030 15:52:30.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.281" endtime="20201030 15:52:30.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.280" endtime="20201030 15:52:30.301"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.279" endtime="20201030 15:52:30.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.920" endtime="20201030 15:52:30.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:29.920" endtime="20201030 15:52:30.302"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.311" endtime="20201030 15:52:30.330"></status>
</kw>
<msg timestamp="20201030 15:52:30.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.309" endtime="20201030 15:52:30.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.332" endtime="20201030 15:52:30.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.334" endtime="20201030 15:52:30.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.307" endtime="20201030 15:52:30.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.305" endtime="20201030 15:52:30.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.343" endtime="20201030 15:52:30.631"></status>
</kw>
<msg timestamp="20201030 15:52:30.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.342" endtime="20201030 15:52:30.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022364431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022435125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.635" endtime="20201030 15:52:30.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.644" endtime="20201030 15:52:30.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.339" endtime="20201030 15:52:30.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.337" endtime="20201030 15:52:30.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:30.650" level="INFO">${RESULT} = [{'diff': 7.069399999999962e-05}, {'diff': 7.05970000000021e-05}, {'diff': 7.093099999999977e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.043099999999927e-05}, {'diff': 7.111199999999818e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:30.647" endtime="20201030 15:52:30.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:30.654" level="INFO">${ACCURACY} = {'diff': [7.069399999999962e-05, 7.05970000000021e-05, 7.093099999999977e-05, 7.101400000000119e-05, 7.043099999999927e-05, 7.111199999999818e-05, 7.044500000000231e-05, 7.04299999999998e-05, 7.044399...</msg>
<status status="PASS" starttime="20201030 15:52:30.651" endtime="20201030 15:52:30.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.659" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:52:30.658" endtime="20201030 15:52:30.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.661" level="INFO">VALUE: [7.069399999999962e-05, 7.05970000000021e-05, 7.093099999999977e-05, 7.101400000000119e-05, 7.043099999999927e-05, 7.111199999999818e-05, 7.044500000000231e-05, 7.04299999999998e-05, 7.044399999999937e-05, 7.07910000000006e-05, 7.087499999999802e-05, 7.112499999999827e-05, 7.079200000000008e-05, 7.070899999999866e-05, 7.113900000000131e-05, 7.038900000000056e-05, 7.093100000000324e-05, 7.112500000000174e-05, 7.045799999999894e-05, 7.061100000000167e-05, 7.04299999999998e-05, 7.116700000000045e-05, 7.112499999999827e-05, 7.076400000000094e-05, 7.069399999999962e-05, 7.087499999999802e-05, 7.11109999999987e-05, 7.045799999999894e-05, 7.112500000000174e-05, 7.020900000000163e-05, 7.070799999999919e-05, 7.026400000000044e-05, 7.118000000000055e-05, 7.034700000000185e-05, 7.034700000000185e-05, 7.044399999999937e-05, 7.062500000000124e-05, 7.094399999999987e-05, 7.027800000000001e-05, 7.054199999999983e-05, 7.036099999999795e-05, 7.044499999999884e-05, 7.077800000000051e-05, 7.052800000000026e-05, 7.068000000000005e-05, 7.07910000000006e-05, 7.038900000000056e-05, 7.112500000000174e-05, 7.066699999999995e-05, 7.072199999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:52:30.660" endtime="20201030 15:52:30.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.655" endtime="20201030 15:52:30.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:30.666" endtime="20201030 15:52:30.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.665" endtime="20201030 15:52:30.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.663" endtime="20201030 15:52:30.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.303" endtime="20201030 15:52:30.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.302" endtime="20201030 15:52:30.687"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.696" endtime="20201030 15:52:30.718"></status>
</kw>
<msg timestamp="20201030 15:52:30.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.694" endtime="20201030 15:52:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:30.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:30.719" endtime="20201030 15:52:30.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.722" endtime="20201030 15:52:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.691" endtime="20201030 15:52:30.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.689" endtime="20201030 15:52:30.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:30.731" endtime="20201030 15:52:31.016"></status>
</kw>
<msg timestamp="20201030 15:52:31.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:30.729" endtime="20201030 15:52:31.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025623639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025695667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.020" endtime="20201030 15:52:31.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.028" endtime="20201030 15:52:31.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.727" endtime="20201030 15:52:31.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.725" endtime="20201030 15:52:31.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.035" level="INFO">${RESULT} = [{'diff': 7.202799999999829e-05}, {'diff': 7.13620000000019e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.14439999999969e-05}, {'diff': 7.16109999999992e-05}, {'diff': 7.194400000000087e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 15:52:31.032" endtime="20201030 15:52:31.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.039" level="INFO">${ACCURACY} = {'diff': [7.202799999999829e-05, 7.13620000000019e-05, 7.21109999999997e-05, 7.14439999999969e-05, 7.16109999999992e-05, 7.194400000000087e-05, 7.177799999999804e-05, 7.188900000000206e-05, 7.15969999...</msg>
<status status="PASS" starttime="20201030 15:52:31.036" endtime="20201030 15:52:31.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.044" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.043" endtime="20201030 15:52:31.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.046" level="INFO">VALUE: [7.202799999999829e-05, 7.13620000000019e-05, 7.21109999999997e-05, 7.14439999999969e-05, 7.16109999999992e-05, 7.194400000000087e-05, 7.177799999999804e-05, 7.188900000000206e-05, 7.159699999999963e-05, 7.194500000000034e-05, 7.127800000000101e-05, 7.187500000000249e-05, 7.163799999999887e-05, 7.144400000000037e-05, 7.172199999999976e-05, 7.204100000000185e-05, 7.204199999999786e-05, 7.170800000000019e-05, 7.123599999999883e-05, 7.169400000000062e-05, 7.208300000000056e-05, 7.212499999999927e-05, 7.212499999999927e-05, 7.127800000000101e-05, 7.202799999999829e-05, 7.215299999999841e-05, 7.127799999999754e-05, 7.202699999999881e-05, 7.152699999999831e-05, 7.158399999999954e-05, 7.15560000000004e-05, 7.202799999999829e-05, 7.184699999999988e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.193100000000077e-05, 7.21109999999997e-05, 7.127699999999806e-05, 7.219499999999712e-05, 7.197200000000001e-05, 7.2069000000001e-05, 7.191699999999773e-05, 7.140300000000113e-05, 7.145799999999994e-05, 7.15690000000005e-05, 7.198699999999905e-05, 7.144499999999984e-05, 7.144499999999984e-05, 7.213899999999884e-05, 7.17910000000016e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.045" endtime="20201030 15:52:31.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.040" endtime="20201030 15:52:31.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.052" endtime="20201030 15:52:31.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.051" endtime="20201030 15:52:31.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.049" endtime="20201030 15:52:31.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.688" endtime="20201030 15:52:31.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:30.687" endtime="20201030 15:52:31.073"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.081" endtime="20201030 15:52:31.099"></status>
</kw>
<msg timestamp="20201030 15:52:31.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.080" endtime="20201030 15:52:31.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.101" endtime="20201030 15:52:31.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.103" endtime="20201030 15:52:31.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.077" endtime="20201030 15:52:31.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.075" endtime="20201030 15:52:31.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.112" endtime="20201030 15:52:31.398"></status>
</kw>
<msg timestamp="20201030 15:52:31.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:31.111" endtime="20201030 15:52:31.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021981056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02205375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:31.402" endtime="20201030 15:52:31.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.410" endtime="20201030 15:52:31.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.108" endtime="20201030 15:52:31.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.106" endtime="20201030 15:52:31.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.417" level="INFO">${RESULT} = [{'diff': 7.269400000000162e-05}, {'diff': 7.254200000000183e-05}, {'diff': 7.229199999999811e-05}, {'diff': 7.304199999999886e-05}, {'diff': 7.252799999999879e-05}, {'diff': 7.283400000000079e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:31.413" endtime="20201030 15:52:31.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.422" level="INFO">${ACCURACY} = {'diff': [7.269400000000162e-05, 7.254200000000183e-05, 7.229199999999811e-05, 7.304199999999886e-05, 7.252799999999879e-05, 7.283400000000079e-05, 7.311200000000018e-05, 7.259700000000063e-05, 7.3110...</msg>
<status status="PASS" starttime="20201030 15:52:31.418" endtime="20201030 15:52:31.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.426" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.425" endtime="20201030 15:52:31.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.429" level="INFO">VALUE: [7.269400000000162e-05, 7.254200000000183e-05, 7.229199999999811e-05, 7.304199999999886e-05, 7.252799999999879e-05, 7.283400000000079e-05, 7.311200000000018e-05, 7.259700000000063e-05, 7.311099999999723e-05, 7.31110000000007e-05, 7.279199999999861e-05, 7.252799999999879e-05, 7.284700000000088e-05, 7.227799999999854e-05, 7.301399999999972e-05, 7.240199999999919e-05, 7.272300000000023e-05, 7.263799999999987e-05, 7.261099999999673e-05, 7.26110000000002e-05, 7.266699999999848e-05, 7.26110000000002e-05, 7.29439999999984e-05, 7.295800000000144e-05, 7.277799999999904e-05, 7.249999999999965e-05, 7.269499999999762e-05, 7.26110000000002e-05, 7.26110000000002e-05, 7.262499999999977e-05, 7.294499999999787e-05, 7.281900000000174e-05, 7.304200000000233e-05, 7.286100000000045e-05, 7.286199999999993e-05, 7.287500000000002e-05, 7.277800000000251e-05, 7.30829999999981e-05, 7.269500000000109e-05, 7.293100000000177e-05, 7.227800000000201e-05, 7.286199999999993e-05, 7.292999999999883e-05, 7.24439999999979e-05, 7.26110000000002e-05, 7.277799999999904e-05, 7.302799999999929e-05, 7.252799999999879e-05, 7.252800000000226e-05, 7.319499999999812e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.427" endtime="20201030 15:52:31.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.422" endtime="20201030 15:52:31.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.434" endtime="20201030 15:52:31.453"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.432" endtime="20201030 15:52:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.431" endtime="20201030 15:52:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.074" endtime="20201030 15:52:31.454"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.073" endtime="20201030 15:52:31.454"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.463" endtime="20201030 15:52:31.482"></status>
</kw>
<msg timestamp="20201030 15:52:31.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.461" endtime="20201030 15:52:31.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.483" endtime="20201030 15:52:31.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.486" endtime="20201030 15:52:31.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.459" endtime="20201030 15:52:31.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.457" endtime="20201030 15:52:31.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.495" endtime="20201030 15:52:31.781"></status>
</kw>
<msg timestamp="20201030 15:52:31.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.493" endtime="20201030 15:52:31.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.786" endtime="20201030 15:52:31.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.794" endtime="20201030 15:52:31.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.491" endtime="20201030 15:52:31.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.489" endtime="20201030 15:52:31.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:31.800" level="INFO">${RESULT} = [{'diff': 7.352799999999979e-05}, {'diff': 7.418099999999955e-05}, {'diff': 7.327799999999954e-05}, {'diff': 7.427800000000054e-05}, {'diff': 7.408400000000204e-05}, {'diff': 7.41110000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:31.797" endtime="20201030 15:52:31.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:31.805" level="INFO">${ACCURACY} = {'diff': [7.352799999999979e-05, 7.418099999999955e-05, 7.327799999999954e-05, 7.427800000000054e-05, 7.408400000000204e-05, 7.41110000000017e-05, 7.394500000000234e-05, 7.381899999999927e-05, 7.38470...</msg>
<status status="PASS" starttime="20201030 15:52:31.801" endtime="20201030 15:52:31.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.809" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:52:31.808" endtime="20201030 15:52:31.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.812" level="INFO">VALUE: [7.352799999999979e-05, 7.418099999999955e-05, 7.327799999999954e-05, 7.427800000000054e-05, 7.408400000000204e-05, 7.41110000000017e-05, 7.394500000000234e-05, 7.381899999999927e-05, 7.384700000000188e-05, 7.412500000000127e-05, 7.41249999999978e-05, 7.39439999999994e-05, 7.379199999999961e-05, 7.370799999999872e-05, 7.34309999999988e-05, 7.324999999999693e-05, 7.420900000000216e-05, 7.327799999999954e-05, 7.387500000000102e-05, 7.326399999999997e-05, 7.369399999999915e-05, 7.326399999999997e-05, 7.387500000000102e-05, 7.36110000000012e-05, 7.376400000000047e-05, 7.387500000000102e-05, 7.330599999999868e-05, 7.352799999999979e-05, 7.388799999999765e-05, 7.41249999999978e-05, 7.411200000000118e-05, 7.3763000000001e-05, 7.418000000000008e-05, 7.41249999999978e-05, 7.377799999999657e-05, 7.419399999999965e-05, 7.342999999999933e-05, 7.402700000000081e-05, 7.383299999999884e-05, 7.419499999999912e-05, 7.411099999999823e-05, 7.326399999999997e-05, 7.352799999999979e-05, 7.367999999999958e-05, 7.361099999999773e-05, 7.36249999999973e-05, 7.355499999999945e-05, 7.329199999999911e-05, 7.422199999999879e-05, 7.362500000000077e-05]</msg>
<status status="PASS" starttime="20201030 15:52:31.810" endtime="20201030 15:52:31.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.805" endtime="20201030 15:52:31.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:31.817" endtime="20201030 15:52:31.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.815" endtime="20201030 15:52:31.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.814" endtime="20201030 15:52:31.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.455" endtime="20201030 15:52:31.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.455" endtime="20201030 15:52:31.837"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.846" endtime="20201030 15:52:31.866"></status>
</kw>
<msg timestamp="20201030 15:52:31.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.844" endtime="20201030 15:52:31.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.867" endtime="20201030 15:52:31.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.870" endtime="20201030 15:52:31.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.842" endtime="20201030 15:52:31.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.840" endtime="20201030 15:52:31.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.879" endtime="20201030 15:52:32.165"></status>
</kw>
<msg timestamp="20201030 15:52:32.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.877" endtime="20201030 15:52:32.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023089986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.169" endtime="20201030 15:52:32.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.177" endtime="20201030 15:52:32.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.875" endtime="20201030 15:52:32.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.873" endtime="20201030 15:52:32.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.184" level="INFO">${RESULT} = [{'diff': 7.488899999999812e-05}, {'diff': 7.445799999999947e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.46110000000022e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.49440000000004e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:32.181" endtime="20201030 15:52:32.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.188" level="INFO">${ACCURACY} = {'diff': [7.488899999999812e-05, 7.445799999999947e-05, 7.44439999999999e-05, 7.46110000000022e-05, 7.459699999999916e-05, 7.49440000000004e-05, 7.49310000000003e-05, 7.445899999999894e-05, 7.48060000...</msg>
<status status="PASS" starttime="20201030 15:52:32.185" endtime="20201030 15:52:32.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.192" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.191" endtime="20201030 15:52:32.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.195" level="INFO">VALUE: [7.488899999999812e-05, 7.445799999999947e-05, 7.44439999999999e-05, 7.46110000000022e-05, 7.459699999999916e-05, 7.49440000000004e-05, 7.49310000000003e-05, 7.445899999999894e-05, 7.480600000000018e-05, 7.519500000000012e-05, 7.51249999999988e-05, 7.461099999999873e-05, 7.450000000000165e-05, 7.429100000000063e-05, 7.436099999999848e-05, 7.44439999999999e-05, 7.431999999999925e-05, 7.491699999999726e-05, 7.461099999999873e-05, 7.423600000000183e-05, 7.434800000000186e-05, 7.46110000000022e-05, 7.429100000000063e-05, 7.452700000000131e-05, 7.523599999999936e-05, 7.480600000000018e-05, 7.493099999999683e-05, 7.44439999999999e-05, 7.429200000000011e-05, 7.519500000000012e-05, 7.472199999999929e-05, 7.505600000000043e-05, 7.437500000000152e-05, 7.495799999999997e-05, 7.466700000000048e-05, 7.459700000000263e-05, 7.429100000000063e-05, 7.463900000000134e-05, 7.463900000000134e-05, 7.495799999999997e-05, 7.476400000000147e-05, 7.483399999999932e-05, 7.477799999999757e-05, 7.493000000000083e-05, 7.458399999999907e-05, 7.484699999999941e-05, 7.501299999999878e-05, 7.505500000000095e-05, 7.483299999999984e-05, 7.447199999999904e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.193" endtime="20201030 15:52:32.197"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.189" endtime="20201030 15:52:32.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.201" endtime="20201030 15:52:32.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.199" endtime="20201030 15:52:32.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.198" endtime="20201030 15:52:32.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.838" endtime="20201030 15:52:32.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.838" endtime="20201030 15:52:32.222"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.230" endtime="20201030 15:52:32.249"></status>
</kw>
<msg timestamp="20201030 15:52:32.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.229" endtime="20201030 15:52:32.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.250" endtime="20201030 15:52:32.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.253" endtime="20201030 15:52:32.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.226" endtime="20201030 15:52:32.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.224" endtime="20201030 15:52:32.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.262" endtime="20201030 15:52:32.547"></status>
</kw>
<msg timestamp="20201030 15:52:32.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.260" endtime="20201030 15:52:32.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022019569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.551" endtime="20201030 15:52:32.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.559" endtime="20201030 15:52:32.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.258" endtime="20201030 15:52:32.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.256" endtime="20201030 15:52:32.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.566" level="INFO">${RESULT} = [{'diff': 7.573699999999933e-05}, {'diff': 7.609700000000066e-05}, {'diff': 7.56249999999993e-05}, {'diff': 7.59310000000013e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.54310000000008e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:52:32.563" endtime="20201030 15:52:32.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.571" level="INFO">${ACCURACY} = {'diff': [7.573699999999933e-05, 7.609700000000066e-05, 7.56249999999993e-05, 7.59310000000013e-05, 7.561099999999973e-05, 7.54310000000008e-05, 7.562500000000277e-05, 7.529099999999816e-05, 7.5999999...</msg>
<status status="PASS" starttime="20201030 15:52:32.567" endtime="20201030 15:52:32.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.576" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.574" endtime="20201030 15:52:32.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.578" level="INFO">VALUE: [7.573699999999933e-05, 7.609700000000066e-05, 7.56249999999993e-05, 7.59310000000013e-05, 7.561099999999973e-05, 7.54310000000008e-05, 7.562500000000277e-05, 7.529099999999816e-05, 7.599999999999968e-05, 7.583300000000084e-05, 7.61249999999998e-05, 7.561099999999973e-05, 7.59310000000013e-05, 7.615299999999894e-05, 7.559700000000016e-05, 7.616599999999904e-05, 7.579200000000161e-05, 7.620799999999775e-05, 7.563899999999887e-05, 7.584799999999989e-05, 7.602800000000229e-05, 7.604200000000186e-05, 7.552799999999832e-05, 7.587499999999955e-05, 7.527799999999807e-05, 7.570900000000019e-05, 7.59310000000013e-05, 7.594500000000087e-05, 7.559799999999964e-05, 7.61249999999998e-05, 7.52769999999986e-05, 7.565199999999897e-05, 7.559700000000016e-05, 7.59440000000014e-05, 7.611100000000023e-05, 7.527799999999807e-05, 7.620900000000069e-05, 7.59310000000013e-05, 7.577799999999857e-05, 7.554199999999789e-05, 7.538899999999862e-05, 7.611100000000023e-05, 7.611100000000023e-05, 7.611100000000023e-05, 7.54440000000009e-05, 7.5763999999999e-05, 7.569399999999768e-05, 7.56249999999993e-05, 7.577799999999857e-05, 7.579199999999814e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.577" endtime="20201030 15:52:32.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.572" endtime="20201030 15:52:32.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.583" endtime="20201030 15:52:32.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.581" endtime="20201030 15:52:32.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.580" endtime="20201030 15:52:32.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.223" endtime="20201030 15:52:32.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.222" endtime="20201030 15:52:32.604"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.612" endtime="20201030 15:52:32.631"></status>
</kw>
<msg timestamp="20201030 15:52:32.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.611" endtime="20201030 15:52:32.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.633" endtime="20201030 15:52:32.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.635" endtime="20201030 15:52:32.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.608" endtime="20201030 15:52:32.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.606" endtime="20201030 15:52:32.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.644" endtime="20201030 15:52:32.931"></status>
</kw>
<msg timestamp="20201030 15:52:32.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:32.643" endtime="20201030 15:52:32.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022008708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02208525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:32.935" endtime="20201030 15:52:32.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.944" endtime="20201030 15:52:32.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.640" endtime="20201030 15:52:32.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.638" endtime="20201030 15:52:32.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.951" level="INFO">${RESULT} = [{'diff': 7.654200000000236e-05}, {'diff': 7.701400000000025e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.684700000000141e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.650000000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:32.948" endtime="20201030 15:52:32.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:32.955" level="INFO">${ACCURACY} = {'diff': [7.654200000000236e-05, 7.701400000000025e-05, 7.702799999999982e-05, 7.684700000000141e-05, 7.711099999999776e-05, 7.650000000000018e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.7166...</msg>
<status status="PASS" starttime="20201030 15:52:32.952" endtime="20201030 15:52:32.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.960" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:52:32.958" endtime="20201030 15:52:32.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.962" level="INFO">VALUE: [7.654200000000236e-05, 7.701400000000025e-05, 7.702799999999982e-05, 7.684700000000141e-05, 7.711099999999776e-05, 7.650000000000018e-05, 7.650000000000018e-05, 7.644399999999843e-05, 7.716699999999951e-05, 7.658299999999812e-05, 7.677799999999957e-05, 7.652799999999932e-05, 7.701400000000025e-05, 7.652799999999932e-05, 7.702799999999982e-05, 7.716699999999951e-05, 7.623600000000036e-05, 7.6764e-05, 7.708299999999862e-05, 7.62769999999996e-05, 7.667999999999911e-05, 7.69440000000024e-05, 7.62639999999995e-05, 7.702799999999982e-05, 7.669399999999868e-05, 7.679199999999914e-05, 7.669499999999815e-05, 7.64449999999979e-05, 7.694500000000187e-05, 7.62639999999995e-05, 7.719399999999918e-05, 7.665299999999944e-05, 7.677799999999957e-05, 7.652799999999932e-05, 7.686100000000098e-05, 7.6764e-05, 7.701400000000025e-05, 7.669499999999815e-05, 7.677799999999957e-05, 7.637500000000005e-05, 7.629099999999917e-05, 7.702700000000035e-05, 7.654099999999942e-05, 7.637500000000005e-05, 7.677799999999957e-05, 7.675000000000043e-05, 7.69579999999985e-05, 7.629199999999864e-05, 7.659700000000116e-05, 7.636100000000048e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.961" endtime="20201030 15:52:32.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.956" endtime="20201030 15:52:32.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.967" endtime="20201030 15:52:32.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.965" endtime="20201030 15:52:32.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.964" endtime="20201030 15:52:32.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.605" endtime="20201030 15:52:32.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.604" endtime="20201030 15:52:32.988"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.997" endtime="20201030 15:52:33.017"></status>
</kw>
<msg timestamp="20201030 15:52:33.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.995" endtime="20201030 15:52:33.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.018" endtime="20201030 15:52:33.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.021" endtime="20201030 15:52:33.022"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.992" endtime="20201030 15:52:33.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.990" endtime="20201030 15:52:33.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.030" endtime="20201030 15:52:33.316"></status>
</kw>
<msg timestamp="20201030 15:52:33.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023185153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.028" endtime="20201030 15:52:33.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023185153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023262847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.320" endtime="20201030 15:52:33.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.328" endtime="20201030 15:52:33.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.026" endtime="20201030 15:52:33.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.024" endtime="20201030 15:52:33.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.335" level="INFO">${RESULT} = [{'diff': 7.769399999999968e-05}, {'diff': 7.80969999999992e-05}, {'diff': 7.794399999999993e-05}, {'diff': 7.792999999999689e-05}, {'diff': 7.777800000000057e-05}, {'diff': 7.783399999999885e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:33.332" endtime="20201030 15:52:33.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.339" level="INFO">${ACCURACY} = {'diff': [7.769399999999968e-05, 7.80969999999992e-05, 7.794399999999993e-05, 7.792999999999689e-05, 7.777800000000057e-05, 7.783399999999885e-05, 7.74449999999989e-05, 7.811099999999876e-05, 7.809800...</msg>
<status status="PASS" starttime="20201030 15:52:33.336" endtime="20201030 15:52:33.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.344" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.343" endtime="20201030 15:52:33.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.346" level="INFO">VALUE: [7.769399999999968e-05, 7.80969999999992e-05, 7.794399999999993e-05, 7.792999999999689e-05, 7.777800000000057e-05, 7.783399999999885e-05, 7.74449999999989e-05, 7.811099999999876e-05, 7.809800000000214e-05, 7.779100000000067e-05, 7.820799999999975e-05, 7.719400000000265e-05, 7.770799999999925e-05, 7.794399999999993e-05, 7.745800000000247e-05, 7.811099999999876e-05, 7.811099999999876e-05, 7.762499999999783e-05, 7.743099999999933e-05, 7.730599999999921e-05, 7.738800000000115e-05, 7.761199999999774e-05, 7.762499999999783e-05, 7.794399999999993e-05, 7.730599999999921e-05, 7.730499999999974e-05, 7.811099999999876e-05, 7.777800000000057e-05, 7.802800000000082e-05, 7.754199999999989e-05, 7.819499999999965e-05, 7.745899999999847e-05, 7.759799999999817e-05, 7.812499999999833e-05, 7.727699999999713e-05, 7.752700000000085e-05, 7.784699999999894e-05, 7.79579999999995e-05, 7.80969999999992e-05, 7.780599999999971e-05, 7.804200000000039e-05, 7.7764000000001e-05, 7.727800000000007e-05, 7.802800000000082e-05, 7.818000000000061e-05, 7.763900000000087e-05, 7.766700000000001e-05, 7.727800000000007e-05, 7.769399999999968e-05, 7.72640000000005e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.345" endtime="20201030 15:52:33.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.340" endtime="20201030 15:52:33.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.352" endtime="20201030 15:52:33.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.351" endtime="20201030 15:52:33.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.349" endtime="20201030 15:52:33.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.989" endtime="20201030 15:52:33.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.988" endtime="20201030 15:52:33.373"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.381" endtime="20201030 15:52:33.399"></status>
</kw>
<msg timestamp="20201030 15:52:33.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.380" endtime="20201030 15:52:33.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.401" endtime="20201030 15:52:33.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.403" endtime="20201030 15:52:33.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.377" endtime="20201030 15:52:33.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.375" endtime="20201030 15:52:33.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.412" endtime="20201030 15:52:33.699"></status>
</kw>
<msg timestamp="20201030 15:52:33.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.411" endtime="20201030 15:52:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.703" endtime="20201030 15:52:33.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.711" endtime="20201030 15:52:33.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.408" endtime="20201030 15:52:33.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.407" endtime="20201030 15:52:33.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:33.717" level="INFO">${RESULT} = [{'diff': 7.873599999999939e-05}, {'diff': 7.879100000000167e-05}, {'diff': 7.918000000000161e-05}, {'diff': 7.82770000000016e-05}, {'diff': 7.837500000000205e-05}, {'diff': 7.893000000000136e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:33.714" endtime="20201030 15:52:33.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:33.722" level="INFO">${ACCURACY} = {'diff': [7.873599999999939e-05, 7.879100000000167e-05, 7.918000000000161e-05, 7.82770000000016e-05, 7.837500000000205e-05, 7.893000000000136e-05, 7.89169999999978e-05, 7.894400000000093e-05, 7.916599...</msg>
<status status="PASS" starttime="20201030 15:52:33.718" endtime="20201030 15:52:33.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.727" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:52:33.726" endtime="20201030 15:52:33.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.729" level="INFO">VALUE: [7.873599999999939e-05, 7.879100000000167e-05, 7.918000000000161e-05, 7.82770000000016e-05, 7.837500000000205e-05, 7.893000000000136e-05, 7.89169999999978e-05, 7.894400000000093e-05, 7.916599999999857e-05, 7.912499999999933e-05, 7.829200000000064e-05, 7.869500000000015e-05, 7.875000000000243e-05, 7.834699999999944e-05, 7.858300000000012e-05, 7.87909999999982e-05, 7.884699999999994e-05, 7.82779999999976e-05, 7.920800000000075e-05, 7.82779999999976e-05, 7.874999999999896e-05, 7.83190000000003e-05, 7.841700000000076e-05, 7.844400000000043e-05, 7.862499999999883e-05, 7.912499999999933e-05, 7.897200000000007e-05, 7.847199999999957e-05, 7.879200000000114e-05, 7.870800000000025e-05, 7.825000000000193e-05, 7.869500000000015e-05, 7.90970000000002e-05, 7.84449999999999e-05, 7.909799999999967e-05, 7.861199999999874e-05, 7.8458e-05, 7.838899999999815e-05, 7.830600000000021e-05, 7.834699999999944e-05, 7.877800000000157e-05, 7.829199999999717e-05, 7.829200000000064e-05, 7.919499999999718e-05, 7.909799999999967e-05, 7.89450000000004e-05, 7.909799999999967e-05, 7.85969999999997e-05, 7.879100000000167e-05, 7.836099999999901e-05]</msg>
<status status="PASS" starttime="20201030 15:52:33.728" endtime="20201030 15:52:33.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.723" endtime="20201030 15:52:33.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:33.734" endtime="20201030 15:52:33.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.733" endtime="20201030 15:52:33.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.731" endtime="20201030 15:52:33.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.374" endtime="20201030 15:52:33.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.373" endtime="20201030 15:52:33.755"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.764" endtime="20201030 15:52:33.783"></status>
</kw>
<msg timestamp="20201030 15:52:33.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.762" endtime="20201030 15:52:33.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:33.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:33.784" endtime="20201030 15:52:33.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.786" endtime="20201030 15:52:33.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.759" endtime="20201030 15:52:33.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.757" endtime="20201030 15:52:33.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:33.796" endtime="20201030 15:52:34.083"></status>
</kw>
<msg timestamp="20201030 15:52:34.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:33.794" endtime="20201030 15:52:34.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021943389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.087" endtime="20201030 15:52:34.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.095" endtime="20201030 15:52:34.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.791" endtime="20201030 15:52:34.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.790" endtime="20201030 15:52:34.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.102" level="INFO">${RESULT} = [{'diff': 7.937499999999958e-05}, {'diff': 7.974999999999996e-05}, {'diff': 8.019499999999818e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.936200000000296e-05}, {'diff': 7.994399999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:34.099" endtime="20201030 15:52:34.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.106" level="INFO">${ACCURACY} = {'diff': [7.937499999999958e-05, 7.974999999999996e-05, 8.019499999999818e-05, 7.929200000000164e-05, 7.936200000000296e-05, 7.994399999999846e-05, 7.991599999999932e-05, 7.969500000000115e-05, 7.9624...</msg>
<status status="PASS" starttime="20201030 15:52:34.103" endtime="20201030 15:52:34.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.111" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.110" endtime="20201030 15:52:34.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.113" level="INFO">VALUE: [7.937499999999958e-05, 7.974999999999996e-05, 8.019499999999818e-05, 7.929200000000164e-05, 7.936200000000296e-05, 7.994399999999846e-05, 7.991599999999932e-05, 7.969500000000115e-05, 7.962499999999983e-05, 8.006900000000206e-05, 7.995799999999803e-05, 8.012500000000033e-05, 7.929200000000164e-05, 7.982000000000128e-05, 7.98190000000018e-05, 8.019500000000165e-05, 7.92779999999986e-05, 8.019400000000218e-05, 7.945799999999753e-05, 7.922200000000032e-05, 7.987500000000008e-05, 7.929200000000164e-05, 7.968100000000158e-05, 7.940299999999872e-05, 7.93190000000013e-05, 7.936100000000001e-05, 7.97909999999992e-05, 8.019400000000218e-05, 8.012500000000033e-05, 7.973600000000039e-05, 7.997200000000107e-05, 8.004200000000239e-05, 7.934700000000044e-05, 7.961100000000026e-05, 7.976399999999953e-05, 7.933400000000035e-05, 7.927800000000207e-05, 7.987500000000008e-05, 7.988899999999965e-05, 7.942999999999839e-05, 8.008299999999816e-05, 7.92779999999986e-05, 7.936100000000001e-05, 7.947200000000057e-05, 7.961100000000026e-05, 7.99450000000014e-05, 7.97779999999991e-05, 7.987500000000008e-05, 7.97909999999992e-05, 7.987500000000008e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.112" endtime="20201030 15:52:34.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.107" endtime="20201030 15:52:34.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.118" endtime="20201030 15:52:34.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.117" endtime="20201030 15:52:34.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.115" endtime="20201030 15:52:34.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.756" endtime="20201030 15:52:34.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:33.755" endtime="20201030 15:52:34.139"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.147" endtime="20201030 15:52:34.169"></status>
</kw>
<msg timestamp="20201030 15:52:34.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.146" endtime="20201030 15:52:34.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.171" endtime="20201030 15:52:34.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.173" endtime="20201030 15:52:34.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.143" endtime="20201030 15:52:34.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.141" endtime="20201030 15:52:34.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.182" endtime="20201030 15:52:34.468"></status>
</kw>
<msg timestamp="20201030 15:52:34.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.181" endtime="20201030 15:52:34.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025472625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025553153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.473" endtime="20201030 15:52:34.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.481" endtime="20201030 15:52:34.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.178" endtime="20201030 15:52:34.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.176" endtime="20201030 15:52:34.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.487" level="INFO">${RESULT} = [{'diff': 8.052799999999985e-05}, {'diff': 8.084800000000142e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.02779999999996e-05}, {'diff': 8.047200000000157e-05}, {'diff': 8.052700000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:34.484" endtime="20201030 15:52:34.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.492" level="INFO">${ACCURACY} = {'diff': [8.052799999999985e-05, 8.084800000000142e-05, 8.105599999999949e-05, 8.02779999999996e-05, 8.047200000000157e-05, 8.052700000000038e-05, 8.090300000000022e-05, 8.07780000000001e-05, 8.105599...</msg>
<status status="PASS" starttime="20201030 15:52:34.488" endtime="20201030 15:52:34.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.496" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.495" endtime="20201030 15:52:34.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.499" level="INFO">VALUE: [8.052799999999985e-05, 8.084800000000142e-05, 8.105599999999949e-05, 8.02779999999996e-05, 8.047200000000157e-05, 8.052700000000038e-05, 8.090300000000022e-05, 8.07780000000001e-05, 8.105599999999949e-05, 8.120799999999928e-05, 8.022200000000132e-05, 8.086099999999805e-05, 8.029199999999917e-05, 8.120799999999928e-05, 8.07780000000001e-05, 8.09169999999998e-05, 8.045799999999853e-05, 8.061100000000126e-05, 8.099999999999774e-05, 8.09580000000025e-05, 8.02779999999996e-05, 8.034699999999798e-05, 8.112500000000133e-05, 8.02779999999996e-05, 8.088900000000065e-05, 8.080499999999977e-05, 8.054099999999995e-05, 8.10269999999974e-05, 8.102800000000035e-05, 8.034699999999798e-05, 8.079199999999967e-05, 8.086100000000151e-05, 8.112499999999787e-05, 8.07780000000001e-05, 8.101400000000078e-05, 8.054199999999942e-05, 8.086100000000151e-05, 8.05970000000017e-05, 8.092999999999989e-05, 8.044399999999896e-05, 8.069400000000268e-05, 8.080599999999924e-05, 8.059699999999823e-05, 8.02779999999996e-05, 8.118099999999961e-05, 8.11109999999983e-05, 8.020899999999775e-05, 8.086200000000099e-05, 8.091600000000032e-05, 8.051400000000028e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.497" endtime="20201030 15:52:34.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.492" endtime="20201030 15:52:34.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.505" endtime="20201030 15:52:34.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.503" endtime="20201030 15:52:34.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.502" endtime="20201030 15:52:34.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.140" endtime="20201030 15:52:34.525"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.139" endtime="20201030 15:52:34.525"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.534" endtime="20201030 15:52:34.553"></status>
</kw>
<msg timestamp="20201030 15:52:34.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.532" endtime="20201030 15:52:34.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.554" endtime="20201030 15:52:34.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.557" endtime="20201030 15:52:34.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.530" endtime="20201030 15:52:34.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.528" endtime="20201030 15:52:34.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.566" endtime="20201030 15:52:34.852"></status>
</kw>
<msg timestamp="20201030 15:52:34.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.564" endtime="20201030 15:52:34.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.856" endtime="20201030 15:52:34.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.864" endtime="20201030 15:52:34.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.562" endtime="20201030 15:52:34.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.560" endtime="20201030 15:52:34.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:34.871" level="INFO">${RESULT} = [{'diff': 8.202800000000135e-05}, {'diff': 8.186100000000252e-05}, {'diff': 8.162499999999837e-05}, {'diff': 8.161100000000227e-05}, {'diff': 8.19589999999995e-05}, {'diff': 8.193100000000036e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:34.868" endtime="20201030 15:52:34.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:34.876" level="INFO">${ACCURACY} = {'diff': [8.202800000000135e-05, 8.186100000000252e-05, 8.162499999999837e-05, 8.161100000000227e-05, 8.19589999999995e-05, 8.193100000000036e-05, 8.211199999999877e-05, 8.194400000000046e-05, 8.19299...</msg>
<status status="PASS" starttime="20201030 15:52:34.872" endtime="20201030 15:52:34.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.880" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:52:34.879" endtime="20201030 15:52:34.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.883" level="INFO">VALUE: [8.202800000000135e-05, 8.186100000000252e-05, 8.162499999999837e-05, 8.161100000000227e-05, 8.19589999999995e-05, 8.193100000000036e-05, 8.211199999999877e-05, 8.194400000000046e-05, 8.192999999999742e-05, 8.13049999999968e-05, 8.204200000000092e-05, 8.154200000000042e-05, 8.170799999999978e-05, 8.211100000000277e-05, 8.144499999999943e-05, 8.130500000000027e-05, 8.170899999999925e-05, 8.193100000000036e-05, 8.141600000000082e-05, 8.127699999999766e-05, 8.168000000000064e-05, 8.17780000000011e-05, 8.222199999999985e-05, 8.12780000000006e-05, 8.136100000000202e-05, 8.144499999999943e-05, 8.190299999999776e-05, 8.134700000000245e-05, 8.136200000000149e-05, 8.16109999999988e-05, 8.126400000000103e-05, 8.168000000000064e-05, 8.179200000000067e-05, 8.159800000000217e-05, 8.202799999999788e-05, 8.136100000000202e-05, 8.16390000000014e-05, 8.144499999999943e-05, 8.12780000000006e-05, 8.134800000000192e-05, 8.144399999999996e-05, 8.144399999999996e-05, 8.144399999999996e-05, 8.1458000000003e-05, 8.17780000000011e-05, 8.202799999999788e-05, 8.169499999999968e-05, 8.172199999999935e-05, 8.184799999999895e-05, 8.144499999999943e-05]</msg>
<status status="PASS" starttime="20201030 15:52:34.881" endtime="20201030 15:52:34.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.877" endtime="20201030 15:52:34.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:34.888" endtime="20201030 15:52:34.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.886" endtime="20201030 15:52:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.885" endtime="20201030 15:52:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.526" endtime="20201030 15:52:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.526" endtime="20201030 15:52:34.908"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.917" endtime="20201030 15:52:34.937"></status>
</kw>
<msg timestamp="20201030 15:52:34.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.916" endtime="20201030 15:52:34.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:34.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:34.939" endtime="20201030 15:52:34.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.941" endtime="20201030 15:52:34.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.913" endtime="20201030 15:52:34.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.911" endtime="20201030 15:52:34.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:34.950" endtime="20201030 15:52:35.237"></status>
</kw>
<msg timestamp="20201030 15:52:35.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:34.949" endtime="20201030 15:52:35.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022286903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022369431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.241" endtime="20201030 15:52:35.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.249" endtime="20201030 15:52:35.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.946" endtime="20201030 15:52:35.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.944" endtime="20201030 15:52:35.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.256" level="INFO">${RESULT} = [{'diff': 8.252799999999838e-05}, {'diff': 8.236099999999955e-05}, {'diff': 8.294399999999799e-05}, {'diff': 8.262499999999937e-05}, {'diff': 8.295799999999756e-05}, {'diff': 8.244400000000096e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:35.253" endtime="20201030 15:52:35.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.260" level="INFO">${ACCURACY} = {'diff': [8.252799999999838e-05, 8.236099999999955e-05, 8.294399999999799e-05, 8.262499999999937e-05, 8.295799999999756e-05, 8.244400000000096e-05, 8.229200000000117e-05, 8.270900000000025e-05, 8.2999...</msg>
<status status="PASS" starttime="20201030 15:52:35.257" endtime="20201030 15:52:35.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.264" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.263" endtime="20201030 15:52:35.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.267" level="INFO">VALUE: [8.252799999999838e-05, 8.236099999999955e-05, 8.294399999999799e-05, 8.262499999999937e-05, 8.295799999999756e-05, 8.244400000000096e-05, 8.229200000000117e-05, 8.270900000000025e-05, 8.299999999999974e-05, 8.312499999999987e-05, 8.244399999999749e-05, 8.262499999999937e-05, 8.26109999999998e-05, 8.27910000000022e-05, 8.317999999999867e-05, 8.245800000000053e-05, 8.274999999999949e-05, 8.236099999999955e-05, 8.244500000000043e-05, 8.243100000000086e-05, 8.31110000000003e-05, 8.25979999999997e-05, 8.229099999999823e-05, 8.306899999999812e-05, 8.304099999999898e-05, 8.319399999999824e-05, 8.244500000000043e-05, 8.259700000000023e-05, 8.312499999999987e-05, 8.27780000000021e-05, 8.270900000000025e-05, 8.244500000000043e-05, 8.265300000000197e-05, 8.294399999999799e-05, 8.277799999999863e-05, 8.320800000000128e-05, 8.26109999999998e-05, 8.277799999999863e-05, 8.284700000000048e-05, 8.280599999999777e-05, 8.238900000000215e-05, 8.309699999999726e-05, 8.291699999999833e-05, 8.261199999999927e-05, 8.277699999999916e-05, 8.320799999999781e-05, 8.309700000000073e-05, 8.245800000000053e-05, 8.26109999999998e-05, 8.276399999999906e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.266" endtime="20201030 15:52:35.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.261" endtime="20201030 15:52:35.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.272" endtime="20201030 15:52:35.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.270" endtime="20201030 15:52:35.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.269" endtime="20201030 15:52:35.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.909" endtime="20201030 15:52:35.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:34.909" endtime="20201030 15:52:35.293"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.301" endtime="20201030 15:52:35.322"></status>
</kw>
<msg timestamp="20201030 15:52:35.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.300" endtime="20201030 15:52:35.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.324" endtime="20201030 15:52:35.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.326" endtime="20201030 15:52:35.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.297" endtime="20201030 15:52:35.328"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.295" endtime="20201030 15:52:35.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.335" endtime="20201030 15:52:35.620"></status>
</kw>
<msg timestamp="20201030 15:52:35.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.334" endtime="20201030 15:52:35.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023536125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023620153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.624" endtime="20201030 15:52:35.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.632" endtime="20201030 15:52:35.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.331" endtime="20201030 15:52:35.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.329" endtime="20201030 15:52:35.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.639" level="INFO">${RESULT} = [{'diff': 8.402799999999988e-05}, {'diff': 8.355599999999852e-05}, {'diff': 8.427800000000013e-05}, {'diff': 8.41110000000013e-05}, {'diff': 8.411200000000077e-05}, {'diff': 8.394399999999899e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:35.636" endtime="20201030 15:52:35.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:35.643" level="INFO">${ACCURACY} = {'diff': [8.402799999999988e-05, 8.355599999999852e-05, 8.427800000000013e-05, 8.41110000000013e-05, 8.411200000000077e-05, 8.394399999999899e-05, 8.326399999999956e-05, 8.419399999999924e-05, 8.41250...</msg>
<status status="PASS" starttime="20201030 15:52:35.640" endtime="20201030 15:52:35.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.647" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:52:35.646" endtime="20201030 15:52:35.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.650" level="INFO">VALUE: [8.402799999999988e-05, 8.355599999999852e-05, 8.427800000000013e-05, 8.41110000000013e-05, 8.411200000000077e-05, 8.394399999999899e-05, 8.326399999999956e-05, 8.419399999999924e-05, 8.412500000000087e-05, 8.350000000000024e-05, 8.373600000000092e-05, 8.404200000000292e-05, 8.419499999999872e-05, 8.326399999999956e-05, 8.350000000000024e-05, 8.402799999999988e-05, 8.390299999999976e-05, 8.329099999999923e-05, 8.3846999999998e-05, 8.391699999999933e-05, 8.352799999999938e-05, 8.394399999999899e-05, 8.4153e-05, 8.415200000000053e-05, 8.34720000000011e-05, 8.363899999999994e-05, 8.326300000000009e-05, 8.351399999999981e-05, 8.354099999999948e-05, 8.354199999999895e-05, 8.386100000000105e-05, 8.32780000000026e-05, 8.336099999999708e-05, 8.411099999999783e-05, 8.35980000000007e-05, 8.406999999999859e-05, 8.395800000000203e-05, 8.36110000000008e-05, 8.409700000000173e-05, 8.391599999999985e-05, 8.359699999999776e-05, 8.412500000000087e-05, 8.36110000000008e-05, 8.36110000000008e-05, 8.327799999999913e-05, 8.370900000000125e-05, 8.40980000000012e-05, 8.327699999999966e-05, 8.355499999999905e-05, 8.336100000000055e-05]</msg>
<status status="PASS" starttime="20201030 15:52:35.649" endtime="20201030 15:52:35.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.644" endtime="20201030 15:52:35.652"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.656" endtime="20201030 15:52:35.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.654" endtime="20201030 15:52:35.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.653" endtime="20201030 15:52:35.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.294" endtime="20201030 15:52:35.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.293" endtime="20201030 15:52:35.677"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.685" endtime="20201030 15:52:35.704"></status>
</kw>
<msg timestamp="20201030 15:52:35.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.684" endtime="20201030 15:52:35.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.705" endtime="20201030 15:52:35.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.708" endtime="20201030 15:52:35.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.681" endtime="20201030 15:52:35.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.679" endtime="20201030 15:52:35.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.717" endtime="20201030 15:52:36.003"></status>
</kw>
<msg timestamp="20201030 15:52:36.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:35.715" endtime="20201030 15:52:36.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021931333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022015875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.007" endtime="20201030 15:52:36.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.015" endtime="20201030 15:52:36.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.713" endtime="20201030 15:52:36.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.711" endtime="20201030 15:52:36.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.022" level="INFO">${RESULT} = [{'diff': 8.454199999999995e-05}, {'diff': 8.518100000000015e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.459700000000223e-05}, {'diff': 8.495899999999904e-05}, {'diff': 8.49309999999999e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.018" endtime="20201030 15:52:36.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.027" level="INFO">${ACCURACY} = {'diff': [8.454199999999995e-05, 8.518100000000015e-05, 8.461099999999833e-05, 8.459700000000223e-05, 8.495899999999904e-05, 8.49309999999999e-05, 8.501400000000131e-05, 8.494399999999999e-05, 8.47770...</msg>
<status status="PASS" starttime="20201030 15:52:36.023" endtime="20201030 15:52:36.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.031" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.030" endtime="20201030 15:52:36.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.034" level="INFO">VALUE: [8.454199999999995e-05, 8.518100000000015e-05, 8.461099999999833e-05, 8.459700000000223e-05, 8.495899999999904e-05, 8.49309999999999e-05, 8.501400000000131e-05, 8.494399999999999e-05, 8.477700000000116e-05, 8.437500000000112e-05, 8.480599999999977e-05, 8.486100000000205e-05, 8.423600000000142e-05, 8.434700000000198e-05, 8.51110000000023e-05, 8.459799999999823e-05, 8.494499999999947e-05, 8.51249999999984e-05, 8.463900000000094e-05, 8.426400000000056e-05, 8.502799999999741e-05, 8.470799999999931e-05, 8.511099999999883e-05, 8.430600000000274e-05, 8.481999999999934e-05, 8.509699999999926e-05, 8.46110000000018e-05, 8.498600000000217e-05, 8.481900000000334e-05, 8.486100000000205e-05, 8.49859999999987e-05, 8.422200000000185e-05, 8.519400000000024e-05, 8.42919999999997e-05, 8.469499999999922e-05, 8.463900000000094e-05, 8.481899999999987e-05, 8.436200000000102e-05, 8.445800000000253e-05, 8.479100000000073e-05, 8.436099999999808e-05, 8.476400000000106e-05, 8.43469999999985e-05, 8.480599999999977e-05, 8.470799999999931e-05, 8.493000000000042e-05, 8.49590000000025e-05, 8.423599999999795e-05, 8.484800000000195e-05, 8.461099999999833e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.032" endtime="20201030 15:52:36.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.028" endtime="20201030 15:52:36.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.039" endtime="20201030 15:52:36.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.037" endtime="20201030 15:52:36.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.036" endtime="20201030 15:52:36.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.678" endtime="20201030 15:52:36.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.677" endtime="20201030 15:52:36.059"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.068" endtime="20201030 15:52:36.087"></status>
</kw>
<msg timestamp="20201030 15:52:36.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.066" endtime="20201030 15:52:36.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.088" endtime="20201030 15:52:36.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.091" endtime="20201030 15:52:36.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.064" endtime="20201030 15:52:36.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.062" endtime="20201030 15:52:36.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.100" endtime="20201030 15:52:36.388"></status>
</kw>
<msg timestamp="20201030 15:52:36.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.098" endtime="20201030 15:52:36.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021895306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.392" endtime="20201030 15:52:36.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.400" endtime="20201030 15:52:36.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.096" endtime="20201030 15:52:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.094" endtime="20201030 15:52:36.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.407" level="INFO">${RESULT} = [{'diff': 8.5847e-05}, {'diff': 8.526400000000156e-05}, {'diff': 8.615299999999854e-05}, {'diff': 8.561099999999933e-05}, {'diff': 8.563899999999847e-05}, {'diff': 8.527799999999766e-05}, {'diff': 8.6...</msg>
<status status="PASS" starttime="20201030 15:52:36.404" endtime="20201030 15:52:36.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.411" level="INFO">${ACCURACY} = {'diff': [8.5847e-05, 8.526400000000156e-05, 8.615299999999854e-05, 8.561099999999933e-05, 8.563899999999847e-05, 8.527799999999766e-05, 8.620799999999734e-05, 8.577799999999816e-05, 8.601400000000231...</msg>
<status status="PASS" starttime="20201030 15:52:36.408" endtime="20201030 15:52:36.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.416" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.415" endtime="20201030 15:52:36.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.418" level="INFO">VALUE: [8.5847e-05, 8.526400000000156e-05, 8.615299999999854e-05, 8.561099999999933e-05, 8.563899999999847e-05, 8.527799999999766e-05, 8.620799999999734e-05, 8.577799999999816e-05, 8.601400000000231e-05, 8.618100000000115e-05, 8.526400000000156e-05, 8.586099999999958e-05, 8.550000000000224e-05, 8.563899999999847e-05, 8.61249999999994e-05, 8.529100000000123e-05, 8.56669999999976e-05, 8.527800000000113e-05, 8.537499999999865e-05, 8.54310000000004e-05, 8.59310000000009e-05, 8.572299999999936e-05, 8.569500000000022e-05, 8.563899999999847e-05, 8.545800000000006e-05, 8.527699999999819e-05, 8.569400000000074e-05, 8.544400000000049e-05, 8.527799999999766e-05, 8.604200000000145e-05, 8.569500000000022e-05, 8.545899999999954e-05, 8.527799999999766e-05, 8.552700000000191e-05, 8.5847e-05, 8.577700000000216e-05, 8.586099999999958e-05, 8.52920000000007e-05, 8.536100000000255e-05, 8.576399999999859e-05, 8.602799999999841e-05, 8.536099999999908e-05, 8.54310000000004e-05, 8.527800000000113e-05, 8.56660000000016e-05, 8.545800000000006e-05, 8.580499999999783e-05, 8.586099999999958e-05, 8.57920000000012e-05, 8.552800000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.417" endtime="20201030 15:52:36.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.412" endtime="20201030 15:52:36.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.427" endtime="20201030 15:52:36.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.425" endtime="20201030 15:52:36.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.424" endtime="20201030 15:52:36.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.060" endtime="20201030 15:52:36.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.060" endtime="20201030 15:52:36.448"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.457" endtime="20201030 15:52:36.477"></status>
</kw>
<msg timestamp="20201030 15:52:36.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.455" endtime="20201030 15:52:36.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.478" endtime="20201030 15:52:36.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.481" endtime="20201030 15:52:36.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.452" endtime="20201030 15:52:36.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.450" endtime="20201030 15:52:36.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.490" endtime="20201030 15:52:36.775"></status>
</kw>
<msg timestamp="20201030 15:52:36.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023184514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.488" endtime="20201030 15:52:36.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023184514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.780" endtime="20201030 15:52:36.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.788" endtime="20201030 15:52:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.486" endtime="20201030 15:52:36.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.484" endtime="20201030 15:52:36.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:36.794" level="INFO">${RESULT} = [{'diff': 8.687500000000015e-05}, {'diff': 8.632000000000084e-05}, {'diff': 8.670900000000079e-05}, {'diff': 8.62920000000017e-05}, {'diff': 8.655500000000205e-05}, {'diff': 8.702799999999941e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:36.791" endtime="20201030 15:52:36.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:36.798" level="INFO">${ACCURACY} = {'diff': [8.687500000000015e-05, 8.632000000000084e-05, 8.670900000000079e-05, 8.62920000000017e-05, 8.655500000000205e-05, 8.702799999999941e-05, 8.669399999999827e-05, 8.677699999999969e-05, 8.63889...</msg>
<status status="PASS" starttime="20201030 15:52:36.795" endtime="20201030 15:52:36.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.803" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:52:36.802" endtime="20201030 15:52:36.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.807" level="INFO">VALUE: [8.687500000000015e-05, 8.632000000000084e-05, 8.670900000000079e-05, 8.62920000000017e-05, 8.655500000000205e-05, 8.702799999999941e-05, 8.669399999999827e-05, 8.677699999999969e-05, 8.638899999999922e-05, 8.63059999999978e-05, 8.705599999999855e-05, 8.670800000000131e-05, 8.627799999999866e-05, 8.683400000000091e-05, 8.695900000000104e-05, 8.627800000000213e-05, 8.652699999999944e-05, 8.636100000000008e-05, 8.629099999999876e-05, 8.652800000000238e-05, 8.701399999999984e-05, 8.720799999999834e-05, 8.708300000000169e-05, 8.644500000000097e-05, 8.626399999999909e-05, 8.687500000000015e-05, 8.625000000000299e-05, 8.636100000000008e-05, 8.692999999999895e-05, 8.676399999999959e-05, 8.654199999999848e-05, 8.654200000000195e-05, 8.654200000000195e-05, 8.633300000000094e-05, 8.626400000000256e-05, 8.652800000000238e-05, 8.652799999999891e-05, 8.686100000000058e-05, 8.694399999999852e-05, 8.695800000000156e-05, 8.661100000000033e-05, 8.705499999999908e-05, 8.644500000000097e-05, 8.64449999999975e-05, 8.695900000000104e-05, 8.62920000000017e-05, 8.687500000000015e-05, 8.677699999999969e-05, 8.702699999999994e-05, 8.673600000000045e-05]</msg>
<status status="PASS" starttime="20201030 15:52:36.805" endtime="20201030 15:52:36.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.799" endtime="20201030 15:52:36.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:36.814" endtime="20201030 15:52:36.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.812" endtime="20201030 15:52:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.811" endtime="20201030 15:52:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.449" endtime="20201030 15:52:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.448" endtime="20201030 15:52:36.835"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.843" endtime="20201030 15:52:36.862"></status>
</kw>
<msg timestamp="20201030 15:52:36.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.842" endtime="20201030 15:52:36.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:36.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:36.864" endtime="20201030 15:52:36.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.866" endtime="20201030 15:52:36.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.839" endtime="20201030 15:52:36.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.837" endtime="20201030 15:52:36.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:36.875" endtime="20201030 15:52:37.162"></status>
</kw>
<msg timestamp="20201030 15:52:37.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:36.874" endtime="20201030 15:52:37.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022288042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022375569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.166" endtime="20201030 15:52:37.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.174" endtime="20201030 15:52:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.871" endtime="20201030 15:52:37.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.869" endtime="20201030 15:52:37.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.181" level="INFO">${RESULT} = [{'diff': 8.752700000000044e-05}, {'diff': 8.787499999999768e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.809699999999879e-05}, {'diff': 8.794399999999952e-05}, {'diff': 8.761100000000133e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.177" endtime="20201030 15:52:37.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.186" level="INFO">${ACCURACY} = {'diff': [8.752700000000044e-05, 8.787499999999768e-05, 8.744399999999902e-05, 8.809699999999879e-05, 8.794399999999952e-05, 8.761100000000133e-05, 8.761099999999786e-05, 8.795900000000204e-05, 8.7957...</msg>
<status status="PASS" starttime="20201030 15:52:37.182" endtime="20201030 15:52:37.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.190" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.189" endtime="20201030 15:52:37.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.193" level="INFO">VALUE: [8.752700000000044e-05, 8.787499999999768e-05, 8.744399999999902e-05, 8.809699999999879e-05, 8.794399999999952e-05, 8.761100000000133e-05, 8.761099999999786e-05, 8.795900000000204e-05, 8.795799999999909e-05, 8.776400000000059e-05, 8.820900000000229e-05, 8.809699999999879e-05, 8.795799999999909e-05, 8.794399999999952e-05, 8.794399999999952e-05, 8.794399999999952e-05, 8.80129999999979e-05, 8.78059999999993e-05, 8.736099999999761e-05, 8.780499999999983e-05, 8.819499999999925e-05, 8.754199999999948e-05, 8.791599999999691e-05, 8.727699999999672e-05, 8.737499999999718e-05, 8.727799999999966e-05, 8.805599999999955e-05, 8.802800000000041e-05, 8.769499999999875e-05, 8.74449999999985e-05, 8.793099999999943e-05, 8.777800000000016e-05, 8.770800000000231e-05, 8.795799999999909e-05, 8.729099999999976e-05, 8.81800000000002e-05, 8.777800000000016e-05, 8.819399999999977e-05, 8.811099999999836e-05, 8.777800000000016e-05, 8.786100000000158e-05, 8.7944999999999e-05, 8.779100000000026e-05, 8.820800000000281e-05, 8.727700000000019e-05, 8.786100000000158e-05, 8.779199999999973e-05, 8.786100000000158e-05, 8.759699999999829e-05, 8.809700000000226e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.191" endtime="20201030 15:52:37.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.186" endtime="20201030 15:52:37.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.198" endtime="20201030 15:52:37.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.196" endtime="20201030 15:52:37.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.195" endtime="20201030 15:52:37.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.835" endtime="20201030 15:52:37.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:36.835" endtime="20201030 15:52:37.218"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.227" endtime="20201030 15:52:37.247"></status>
</kw>
<msg timestamp="20201030 15:52:37.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.226" endtime="20201030 15:52:37.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.248" endtime="20201030 15:52:37.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.251" endtime="20201030 15:52:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.223" endtime="20201030 15:52:37.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.221" endtime="20201030 15:52:37.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.260" endtime="20201030 15:52:37.547"></status>
</kw>
<msg timestamp="20201030 15:52:37.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:37.259" endtime="20201030 15:52:37.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02200025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:37.551" endtime="20201030 15:52:37.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.559" endtime="20201030 15:52:37.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.256" endtime="20201030 15:52:37.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.254" endtime="20201030 15:52:37.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.566" level="INFO">${RESULT} = [{'diff': 8.837500000000165e-05}, {'diff': 8.831999999999937e-05}, {'diff': 8.852800000000091e-05}, {'diff': 8.870900000000279e-05}, {'diff': 8.891700000000086e-05}, {'diff': 8.827700000000119e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.563" endtime="20201030 15:52:37.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.570" level="INFO">${ACCURACY} = {'diff': [8.837500000000165e-05, 8.831999999999937e-05, 8.852800000000091e-05, 8.870900000000279e-05, 8.891700000000086e-05, 8.827700000000119e-05, 8.904099999999804e-05, 8.904100000000151e-05, 8.8347...</msg>
<status status="PASS" starttime="20201030 15:52:37.567" endtime="20201030 15:52:37.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.574" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.573" endtime="20201030 15:52:37.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.577" level="INFO">VALUE: [8.837500000000165e-05, 8.831999999999937e-05, 8.852800000000091e-05, 8.870900000000279e-05, 8.891700000000086e-05, 8.827700000000119e-05, 8.904099999999804e-05, 8.904100000000151e-05, 8.834700000000251e-05, 8.826399999999762e-05, 8.902800000000141e-05, 8.886099999999911e-05, 8.861099999999886e-05, 8.8945e-05, 8.893100000000043e-05, 8.833299999999947e-05, 8.84860000000022e-05, 8.886099999999911e-05, 8.897200000000313e-05, 8.911100000000283e-05, 8.895800000000009e-05, 8.894400000000052e-05, 8.826399999999762e-05, 8.833399999999894e-05, 8.86250000000019e-05, 8.861099999999886e-05, 8.89860000000027e-05, 8.91389999999985e-05, 8.847200000000263e-05, 8.915299999999807e-05, 8.844400000000002e-05, 8.861099999999886e-05, 8.833299999999947e-05, 8.836100000000208e-05, 8.912499999999893e-05, 8.859800000000223e-05, 8.862499999999843e-05, 8.845799999999959e-05, 8.894400000000052e-05, 8.893000000000095e-05, 8.876399999999812e-05, 8.884699999999954e-05, 8.854200000000048e-05, 8.84310000000034e-05, 8.879100000000126e-05, 8.838799999999827e-05, 8.86120000000018e-05, 8.830500000000033e-05, 8.834699999999904e-05, 8.895800000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.575" endtime="20201030 15:52:37.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.571" endtime="20201030 15:52:37.578"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.582" endtime="20201030 15:52:37.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.580" endtime="20201030 15:52:37.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.579" endtime="20201030 15:52:37.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.219" endtime="20201030 15:52:37.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.219" endtime="20201030 15:52:37.602"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.611" endtime="20201030 15:52:37.634"></status>
</kw>
<msg timestamp="20201030 15:52:37.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.610" endtime="20201030 15:52:37.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.635" endtime="20201030 15:52:37.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.638" endtime="20201030 15:52:37.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.607" endtime="20201030 15:52:37.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.605" endtime="20201030 15:52:37.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.647" endtime="20201030 15:52:37.932"></status>
</kw>
<msg timestamp="20201030 15:52:37.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025495181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.645" endtime="20201030 15:52:37.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025495181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025584556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:37.936" endtime="20201030 15:52:37.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.944" endtime="20201030 15:52:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.643" endtime="20201030 15:52:37.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.641" endtime="20201030 15:52:37.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:37.951" level="INFO">${RESULT} = [{'diff': 8.937500000000265e-05}, {'diff': 8.929200000000123e-05}, {'diff': 8.952799999999844e-05}, {'diff': 8.986100000000011e-05}, {'diff': 8.919400000000077e-05}, {'diff': 8.987499999999968e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:37.948" endtime="20201030 15:52:37.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:37.955" level="INFO">${ACCURACY} = {'diff': [8.937500000000265e-05, 8.929200000000123e-05, 8.952799999999844e-05, 8.986100000000011e-05, 8.919400000000077e-05, 8.987499999999968e-05, 8.959699999999682e-05, 9.011100000000036e-05, 8.9570...</msg>
<status status="PASS" starttime="20201030 15:52:37.952" endtime="20201030 15:52:37.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.960" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:52:37.958" endtime="20201030 15:52:37.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:37.962" level="INFO">VALUE: [8.937500000000265e-05, 8.929200000000123e-05, 8.952799999999844e-05, 8.986100000000011e-05, 8.919400000000077e-05, 8.987499999999968e-05, 8.959699999999682e-05, 9.011100000000036e-05, 8.957000000000062e-05, 8.961099999999986e-05, 8.977800000000216e-05, 8.966699999999814e-05, 8.977800000000216e-05, 8.984700000000054e-05, 8.943000000000145e-05, 8.945800000000059e-05, 8.926400000000209e-05, 8.986100000000011e-05, 8.977799999999869e-05, 8.936099999999961e-05, 8.945900000000007e-05, 8.977799999999869e-05, 8.984800000000001e-05, 9.011100000000036e-05, 8.977700000000269e-05, 8.950000000000277e-05, 9.017999999999873e-05, 8.944400000000102e-05, 8.927800000000166e-05, 9.002799999999894e-05, 8.944400000000102e-05, 8.929200000000123e-05, 8.936200000000255e-05, 8.990199999999934e-05, 8.945800000000059e-05, 8.948599999999973e-05, 8.938899999999875e-05, 8.975000000000302e-05, 8.986100000000011e-05, 8.979200000000173e-05, 8.954200000000148e-05, 8.95129999999994e-05, 8.954099999999854e-05, 8.936099999999961e-05, 8.944400000000102e-05, 8.980599999999783e-05, 8.969400000000127e-05, 8.927799999999819e-05, 9.004199999999851e-05, 9.019500000000125e-05]</msg>
<status status="PASS" starttime="20201030 15:52:37.961" endtime="20201030 15:52:37.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.956" endtime="20201030 15:52:37.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:37.968" endtime="20201030 15:52:37.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.966" endtime="20201030 15:52:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.965" endtime="20201030 15:52:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.603" endtime="20201030 15:52:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.603" endtime="20201030 15:52:37.988"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:37.997" endtime="20201030 15:52:38.017"></status>
</kw>
<msg timestamp="20201030 15:52:38.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:37.996" endtime="20201030 15:52:38.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.018" endtime="20201030 15:52:38.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.021" endtime="20201030 15:52:38.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.993" endtime="20201030 15:52:38.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.991" endtime="20201030 15:52:38.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.030" endtime="20201030 15:52:38.316"></status>
</kw>
<msg timestamp="20201030 15:52:38.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.029" endtime="20201030 15:52:38.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021965042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.321" endtime="20201030 15:52:38.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.329" endtime="20201030 15:52:38.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.026" endtime="20201030 15:52:38.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.024" endtime="20201030 15:52:38.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.335" level="INFO">${RESULT} = [{'diff': 9.101400000000037e-05}, {'diff': 9.052799999999944e-05}, {'diff': 9.11659999999967e-05}, {'diff': 9.041599999999941e-05}, {'diff': 9.061100000000086e-05}, {'diff': 9.094400000000252e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:38.332" endtime="20201030 15:52:38.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.340" level="INFO">${ACCURACY} = {'diff': [9.101400000000037e-05, 9.052799999999944e-05, 9.11659999999967e-05, 9.041599999999941e-05, 9.061100000000086e-05, 9.094400000000252e-05, 9.061100000000086e-05, 9.111100000000136e-05, 9.11250...</msg>
<status status="PASS" starttime="20201030 15:52:38.336" endtime="20201030 15:52:38.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.345" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.344" endtime="20201030 15:52:38.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.347" level="INFO">VALUE: [9.101400000000037e-05, 9.052799999999944e-05, 9.11659999999967e-05, 9.041599999999941e-05, 9.061100000000086e-05, 9.094400000000252e-05, 9.061100000000086e-05, 9.111100000000136e-05, 9.112500000000093e-05, 9.045900000000107e-05, 9.076400000000012e-05, 9.119500000000225e-05, 9.077799999999969e-05, 9.098600000000123e-05, 9.11939999999993e-05, 9.042999999999898e-05, 9.076400000000012e-05, 9.088900000000025e-05, 9.109699999999832e-05, 9.080599999999883e-05, 9.102799999999994e-05, 9.069500000000175e-05, 9.0945000000002e-05, 9.073600000000098e-05, 9.088900000000025e-05, 9.112500000000093e-05, 9.044399999999855e-05, 9.08060000000023e-05, 9.036099999999714e-05, 9.094499999999853e-05, 9.076400000000012e-05, 9.119499999999878e-05, 9.027799999999919e-05, 9.102700000000047e-05, 9.052699999999997e-05, 9.104199999999951e-05, 9.055600000000205e-05, 9.102799999999994e-05, 9.088900000000025e-05, 9.11390000000005e-05, 9.077799999999969e-05, 9.04870000000002e-05, 9.054099999999954e-05, 9.117999999999973e-05, 9.027799999999919e-05, 9.107000000000212e-05, 9.052799999999944e-05, 9.11939999999993e-05, 9.111099999999789e-05, 9.079200000000273e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.346" endtime="20201030 15:52:38.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.341" endtime="20201030 15:52:38.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.352" endtime="20201030 15:52:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.351" endtime="20201030 15:52:38.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.350" endtime="20201030 15:52:38.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.989" endtime="20201030 15:52:38.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:37.989" endtime="20201030 15:52:38.373"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.382" endtime="20201030 15:52:38.401"></status>
</kw>
<msg timestamp="20201030 15:52:38.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.380" endtime="20201030 15:52:38.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.403" endtime="20201030 15:52:38.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.405" endtime="20201030 15:52:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.378" endtime="20201030 15:52:38.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.376" endtime="20201030 15:52:38.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.414" endtime="20201030 15:52:38.702"></status>
</kw>
<msg timestamp="20201030 15:52:38.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.413" endtime="20201030 15:52:38.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022514667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.706" endtime="20201030 15:52:38.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.715" endtime="20201030 15:52:38.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.410" endtime="20201030 15:52:38.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.408" endtime="20201030 15:52:38.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:38.721" level="INFO">${RESULT} = [{'diff': 9.136099999999814e-05}, {'diff': 9.179100000000079e-05}, {'diff': 9.20000000000018e-05}, {'diff': 9.202799999999747e-05}, {'diff': 9.137500000000118e-05}, {'diff': 9.159699999999882e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:38.718" endtime="20201030 15:52:38.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:38.725" level="INFO">${ACCURACY} = {'diff': [9.136099999999814e-05, 9.179100000000079e-05, 9.20000000000018e-05, 9.202799999999747e-05, 9.137500000000118e-05, 9.159699999999882e-05, 9.127800000000019e-05, 9.219499999999978e-05, 9.12780...</msg>
<status status="PASS" starttime="20201030 15:52:38.722" endtime="20201030 15:52:38.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.730" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:52:38.729" endtime="20201030 15:52:38.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.732" level="INFO">VALUE: [9.136099999999814e-05, 9.179100000000079e-05, 9.20000000000018e-05, 9.202799999999747e-05, 9.137500000000118e-05, 9.159699999999882e-05, 9.127800000000019e-05, 9.219499999999978e-05, 9.127800000000019e-05, 9.201400000000137e-05, 9.170799999999937e-05, 9.212500000000193e-05, 9.193000000000048e-05, 9.142999999999998e-05, 9.177800000000069e-05, 9.136100000000161e-05, 9.140300000000032e-05, 9.209699999999932e-05, 9.195900000000257e-05, 9.190300000000082e-05, 9.176400000000112e-05, 9.21940000000003e-05, 9.129100000000029e-05, 9.16939999999998e-05, 9.127800000000019e-05, 9.168000000000023e-05, 9.143099999999946e-05, 9.143099999999946e-05, 9.194499999999953e-05, 9.194499999999953e-05, 9.206999999999965e-05, 9.177699999999775e-05, 9.202700000000147e-05, 9.154100000000054e-05, 9.172199999999894e-05, 9.127800000000019e-05, 9.186099999999864e-05, 9.129199999999976e-05, 9.173599999999851e-05, 9.127800000000019e-05, 9.15000000000013e-05, 9.136099999999814e-05, 9.145799999999912e-05, 9.195799999999962e-05, 9.191700000000039e-05, 9.211100000000236e-05, 9.127800000000019e-05, 9.202800000000094e-05, 9.168099999999971e-05, 9.179200000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:52:38.731" endtime="20201030 15:52:38.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.726" endtime="20201030 15:52:38.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:38.737" endtime="20201030 15:52:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.736" endtime="20201030 15:52:38.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.734" endtime="20201030 15:52:38.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.374" endtime="20201030 15:52:38.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.374" endtime="20201030 15:52:38.758"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.767" endtime="20201030 15:52:38.787"></status>
</kw>
<msg timestamp="20201030 15:52:38.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.765" endtime="20201030 15:52:38.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.789" endtime="20201030 15:52:38.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.791" endtime="20201030 15:52:38.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.763" endtime="20201030 15:52:38.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.760" endtime="20201030 15:52:38.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.800" endtime="20201030 15:52:39.087"></status>
</kw>
<msg timestamp="20201030 15:52:39.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:38.799" endtime="20201030 15:52:39.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023129917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023222764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.091" endtime="20201030 15:52:39.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.100" endtime="20201030 15:52:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.796" endtime="20201030 15:52:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.795" endtime="20201030 15:52:39.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.106" level="INFO">${RESULT} = [{'diff': 9.284700000000007e-05}, {'diff': 9.226399999999815e-05}, {'diff': 9.316700000000164e-05}, {'diff': 9.313899999999903e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.24719999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:39.103" endtime="20201030 15:52:39.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.110" level="INFO">${ACCURACY} = {'diff': [9.284700000000007e-05, 9.226399999999815e-05, 9.316700000000164e-05, 9.313899999999903e-05, 9.295800000000062e-05, 9.24719999999997e-05, 9.248600000000273e-05, 9.311099999999989e-05, 9.27359...</msg>
<status status="PASS" starttime="20201030 15:52:39.107" endtime="20201030 15:52:39.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.115" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.114" endtime="20201030 15:52:39.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.117" level="INFO">VALUE: [9.284700000000007e-05, 9.226399999999815e-05, 9.316700000000164e-05, 9.313899999999903e-05, 9.295800000000062e-05, 9.24719999999997e-05, 9.248600000000273e-05, 9.311099999999989e-05, 9.273599999999951e-05, 9.286099999999964e-05, 9.262500000000243e-05, 9.227800000000119e-05, 9.283399999999997e-05, 9.277699999999875e-05, 9.290300000000182e-05, 9.259699999999982e-05, 9.28200000000004e-05, 9.26940000000008e-05, 9.28200000000004e-05, 9.272199999999994e-05, 9.311100000000336e-05, 9.261099999999939e-05, 9.261099999999939e-05, 9.244500000000003e-05, 9.227699999999825e-05, 9.317999999999826e-05, 9.262499999999896e-05, 9.233400000000294e-05, 9.302799999999847e-05, 9.286099999999964e-05, 9.293100000000096e-05, 9.28330000000005e-05, 9.322200000000044e-05, 9.277799999999822e-05, 9.240300000000132e-05, 9.311099999999989e-05, 9.313899999999903e-05, 9.311099999999989e-05, 9.276400000000212e-05, 9.273599999999951e-05, 9.315199999999912e-05, 9.281900000000093e-05, 9.270800000000037e-05, 9.279100000000179e-05, 9.236099999999914e-05, 9.311099999999989e-05, 9.25139999999984e-05, 9.261099999999939e-05, 9.252700000000197e-05, 9.293099999999749e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.116" endtime="20201030 15:52:39.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.111" endtime="20201030 15:52:39.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.123" endtime="20201030 15:52:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.122" endtime="20201030 15:52:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.121" endtime="20201030 15:52:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.759" endtime="20201030 15:52:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.758" endtime="20201030 15:52:39.144"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.153" endtime="20201030 15:52:39.173"></status>
</kw>
<msg timestamp="20201030 15:52:39.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.151" endtime="20201030 15:52:39.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.174" endtime="20201030 15:52:39.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.177" endtime="20201030 15:52:39.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.148" endtime="20201030 15:52:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.146" endtime="20201030 15:52:39.179"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.186" endtime="20201030 15:52:39.472"></status>
</kw>
<msg timestamp="20201030 15:52:39.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.184" endtime="20201030 15:52:39.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022424486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.476" endtime="20201030 15:52:39.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.484" endtime="20201030 15:52:39.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.182" endtime="20201030 15:52:39.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.180" endtime="20201030 15:52:39.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.491" level="INFO">${RESULT} = [{'diff': 9.386100000000064e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.376399999999965e-05}, {'diff': 9.336100000000014e-05}, {'diff': 9.361099999999692e-05}, {'diff': 9.409799999999732e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.488" endtime="20201030 15:52:39.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.496" level="INFO">${ACCURACY} = {'diff': [9.386100000000064e-05, 9.393099999999849e-05, 9.376399999999965e-05, 9.336100000000014e-05, 9.361099999999692e-05, 9.409799999999732e-05, 9.395799999999815e-05, 9.344399999999808e-05, 9.3305...</msg>
<status status="PASS" starttime="20201030 15:52:39.492" endtime="20201030 15:52:39.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.500" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.499" endtime="20201030 15:52:39.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.503" level="INFO">VALUE: [9.386100000000064e-05, 9.393099999999849e-05, 9.376399999999965e-05, 9.336100000000014e-05, 9.361099999999692e-05, 9.409799999999732e-05, 9.395799999999815e-05, 9.344399999999808e-05, 9.330500000000186e-05, 9.387500000000021e-05, 9.379199999999879e-05, 9.355599999999811e-05, 9.366700000000214e-05, 9.409699999999785e-05, 9.376399999999965e-05, 9.386200000000011e-05, 9.393000000000248e-05, 9.375000000000008e-05, 9.384700000000107e-05, 9.376399999999965e-05, 9.419499999999831e-05, 9.409700000000132e-05, 9.362499999999996e-05, 9.343100000000146e-05, 9.363800000000005e-05, 9.363899999999953e-05, 9.394400000000205e-05, 9.331899999999796e-05, 9.41940000000023e-05, 9.344399999999808e-05, 9.362499999999996e-05, 9.330599999999786e-05, 9.400000000000033e-05, 9.419500000000178e-05, 9.388899999999978e-05, 9.326299999999968e-05, 9.37079999999979e-05, 9.345800000000112e-05, 9.392999999999901e-05, 9.362499999999996e-05, 9.361100000000039e-05, 9.324999999999958e-05, 9.352799999999897e-05, 9.336099999999667e-05, 9.345799999999765e-05, 9.394400000000205e-05, 9.343000000000198e-05, 9.394400000000205e-05, 9.333400000000047e-05, 9.42079999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.502" endtime="20201030 15:52:39.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.497" endtime="20201030 15:52:39.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.508" endtime="20201030 15:52:39.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.506" endtime="20201030 15:52:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.505" endtime="20201030 15:52:39.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.145" endtime="20201030 15:52:39.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.144" endtime="20201030 15:52:39.530"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.543" endtime="20201030 15:52:39.563"></status>
</kw>
<msg timestamp="20201030 15:52:39.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.540" endtime="20201030 15:52:39.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.565" endtime="20201030 15:52:39.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.567" endtime="20201030 15:52:39.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.537" endtime="20201030 15:52:39.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.534" endtime="20201030 15:52:39.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.576" endtime="20201030 15:52:39.863"></status>
</kw>
<msg timestamp="20201030 15:52:39.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028153681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.575" endtime="20201030 15:52:39.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028153681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.867" endtime="20201030 15:52:39.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.876" endtime="20201030 15:52:39.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.572" endtime="20201030 15:52:39.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.570" endtime="20201030 15:52:39.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.882" level="INFO">${RESULT} = [{'diff': 9.431999999999843e-05}, {'diff': 9.491600000000044e-05}, {'diff': 9.495799999999915e-05}, {'diff': 9.447199999999822e-05}, {'diff': 9.44720000000017e-05}, {'diff': 9.479199999999979e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:39.879" endtime="20201030 15:52:39.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:39.886" level="INFO">${ACCURACY} = {'diff': [9.431999999999843e-05, 9.491600000000044e-05, 9.495799999999915e-05, 9.447199999999822e-05, 9.44720000000017e-05, 9.479199999999979e-05, 9.455599999999911e-05, 9.486100000000164e-05, 9.44589...</msg>
<status status="PASS" starttime="20201030 15:52:39.883" endtime="20201030 15:52:39.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.891" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:52:39.890" endtime="20201030 15:52:39.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.893" level="INFO">VALUE: [9.431999999999843e-05, 9.491600000000044e-05, 9.495799999999915e-05, 9.447199999999822e-05, 9.44720000000017e-05, 9.479199999999979e-05, 9.455599999999911e-05, 9.486100000000164e-05, 9.445899999999813e-05, 9.491699999999992e-05, 9.493099999999949e-05, 9.444499999999856e-05, 9.479100000000032e-05, 9.436100000000114e-05, 9.461099999999792e-05, 9.48200000000024e-05, 9.469399999999933e-05, 9.479199999999979e-05, 9.459699999999835e-05, 9.504200000000004e-05, 9.436100000000114e-05, 9.49859999999983e-05, 9.462500000000096e-05, 9.427700000000025e-05, 9.45140000000004e-05, 9.44720000000017e-05, 9.469500000000228e-05, 9.444499999999856e-05, 9.493100000000296e-05, 9.44859999999978e-05, 9.459800000000129e-05, 9.442999999999951e-05, 9.495799999999915e-05, 9.512499999999452e-05, 9.479200000000326e-05, 9.491699999999992e-05, 9.476399999999718e-05, 9.488900000000078e-05, 9.494499999999906e-05, 9.51660000000007e-05, 9.429099999999635e-05, 9.45409999999966e-05, 9.452700000000397e-05, 9.455600000000258e-05, 9.467999999999976e-05, 9.445900000000507e-05, 9.493099999999949e-05, 9.45000000000043e-05, 9.495899999999863e-05, 9.512500000000146e-05]</msg>
<status status="PASS" starttime="20201030 15:52:39.892" endtime="20201030 15:52:39.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.887" endtime="20201030 15:52:39.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.898" endtime="20201030 15:52:39.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.897" endtime="20201030 15:52:39.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.895" endtime="20201030 15:52:39.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.531" endtime="20201030 15:52:39.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.530" endtime="20201030 15:52:39.919"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.928" endtime="20201030 15:52:39.949"></status>
</kw>
<msg timestamp="20201030 15:52:39.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.926" endtime="20201030 15:52:39.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.951" endtime="20201030 15:52:39.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.953" endtime="20201030 15:52:39.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.924" endtime="20201030 15:52:39.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.921" endtime="20201030 15:52:39.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.963" endtime="20201030 15:52:40.249"></status>
</kw>
<msg timestamp="20201030 15:52:40.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023402833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.961" endtime="20201030 15:52:40.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023402833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023498153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.253" endtime="20201030 15:52:40.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.261" endtime="20201030 15:52:40.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.958" endtime="20201030 15:52:40.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.957" endtime="20201030 15:52:40.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.268" level="INFO">${RESULT} = [{'diff': 9.531999999999943e-05}, {'diff': 9.547300000000217e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.593099999999702e-05}, {'diff': 9.580499999999742e-05}, {'diff': 9.569400000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:40.265" endtime="20201030 15:52:40.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.272" level="INFO">${ACCURACY} = {'diff': [9.531999999999943e-05, 9.547300000000217e-05, 9.612499999999899e-05, 9.593099999999702e-05, 9.580499999999742e-05, 9.569400000000033e-05, 9.577800000000122e-05, 9.619400000000083e-05, 9.5610...</msg>
<status status="PASS" starttime="20201030 15:52:40.269" endtime="20201030 15:52:40.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.277" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.276" endtime="20201030 15:52:40.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.279" level="INFO">VALUE: [9.531999999999943e-05, 9.547300000000217e-05, 9.612499999999899e-05, 9.593099999999702e-05, 9.580499999999742e-05, 9.569400000000033e-05, 9.577800000000122e-05, 9.619400000000083e-05, 9.561099999999892e-05, 9.540299999999738e-05, 9.611100000000289e-05, 9.583300000000003e-05, 9.554100000000107e-05, 9.552699999999803e-05, 9.572199999999947e-05, 9.561099999999892e-05, 9.526400000000115e-05, 9.534700000000257e-05, 9.544400000000008e-05, 9.615200000000212e-05, 9.594500000000006e-05, 9.540300000000085e-05, 9.526399999999768e-05, 9.586100000000264e-05, 9.526400000000115e-05, 9.619400000000083e-05, 9.609699999999985e-05, 9.563900000000153e-05, 9.612499999999899e-05, 9.579199999999732e-05, 9.622299999999945e-05, 9.536100000000214e-05, 9.586200000000211e-05, 9.559699999999935e-05, 9.530599999999986e-05, 9.602800000000147e-05, 9.580500000000089e-05, 9.608300000000028e-05, 9.527800000000072e-05, 9.602800000000147e-05, 9.588799999999884e-05, 9.543099999999999e-05, 9.559700000000282e-05, 9.544400000000008e-05, 9.544400000000008e-05, 9.594399999999711e-05, 9.600000000000233e-05, 9.554200000000054e-05, 9.612499999999899e-05, 9.599999999999886e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.278" endtime="20201030 15:52:40.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.273" endtime="20201030 15:52:40.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.285" endtime="20201030 15:52:40.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.283" endtime="20201030 15:52:40.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.282" endtime="20201030 15:52:40.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.920" endtime="20201030 15:52:40.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.919" endtime="20201030 15:52:40.306"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.315" endtime="20201030 15:52:40.334"></status>
</kw>
<msg timestamp="20201030 15:52:40.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.313" endtime="20201030 15:52:40.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.336" endtime="20201030 15:52:40.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.338" endtime="20201030 15:52:40.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.310" endtime="20201030 15:52:40.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.308" endtime="20201030 15:52:40.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.348" endtime="20201030 15:52:40.633"></status>
</kw>
<msg timestamp="20201030 15:52:40.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.346" endtime="20201030 15:52:40.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022398292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.637" endtime="20201030 15:52:40.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.645" endtime="20201030 15:52:40.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.344" endtime="20201030 15:52:40.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.342" endtime="20201030 15:52:40.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:40.651" level="INFO">${RESULT} = [{'diff': 9.68470000000006e-05}, {'diff': 9.648600000000326e-05}, {'diff': 9.677800000000222e-05}, {'diff': 9.672200000000047e-05}, {'diff': 9.663899999999906e-05}, {'diff': 9.647199999999675e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:40.648" endtime="20201030 15:52:40.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:40.656" level="INFO">${ACCURACY} = {'diff': [9.68470000000006e-05, 9.648600000000326e-05, 9.677800000000222e-05, 9.672200000000047e-05, 9.663899999999906e-05, 9.647199999999675e-05, 9.694399999999812e-05, 9.661099999999992e-05, 9.69440...</msg>
<status status="PASS" starttime="20201030 15:52:40.652" endtime="20201030 15:52:40.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.661" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:52:40.660" endtime="20201030 15:52:40.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.664" level="INFO">VALUE: [9.68470000000006e-05, 9.648600000000326e-05, 9.677800000000222e-05, 9.672200000000047e-05, 9.663899999999906e-05, 9.647199999999675e-05, 9.694399999999812e-05, 9.661099999999992e-05, 9.694400000000158e-05, 9.662499999999949e-05, 9.645900000000013e-05, 9.645900000000013e-05, 9.661099999999992e-05, 9.693100000000149e-05, 9.694400000000158e-05, 9.712499999999999e-05, 9.71669999999987e-05, 9.679199999999832e-05, 9.715299999999913e-05, 9.630600000000086e-05, 9.704200000000204e-05, 9.7027999999999e-05, 9.688799999999984e-05, 9.661099999999992e-05, 9.630500000000139e-05, 9.638899999999881e-05, 9.659700000000035e-05, 9.711100000000042e-05, 9.626400000000215e-05, 9.652800000000197e-05, 9.719500000000131e-05, 9.661099999999992e-05, 9.661199999999939e-05, 9.645800000000065e-05, 9.694400000000158e-05, 9.661099999999992e-05, 9.694399999999812e-05, 9.711100000000042e-05, 9.694500000000106e-05, 9.626399999999868e-05, 9.699999999999986e-05, 9.637499999999924e-05, 9.659700000000035e-05, 9.661099999999992e-05, 9.647200000000022e-05, 9.695800000000115e-05, 9.644400000000108e-05, 9.677800000000222e-05, 9.637499999999924e-05, 9.711099999999695e-05]</msg>
<status status="PASS" starttime="20201030 15:52:40.662" endtime="20201030 15:52:40.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.657" endtime="20201030 15:52:40.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:40.669" endtime="20201030 15:52:40.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.667" endtime="20201030 15:52:40.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.666" endtime="20201030 15:52:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.307" endtime="20201030 15:52:40.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.306" endtime="20201030 15:52:40.689"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.698" endtime="20201030 15:52:40.718"></status>
</kw>
<msg timestamp="20201030 15:52:40.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.696" endtime="20201030 15:52:40.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:40.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:40.720" endtime="20201030 15:52:40.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.722" endtime="20201030 15:52:40.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.694" endtime="20201030 15:52:40.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.692" endtime="20201030 15:52:40.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:40.731" endtime="20201030 15:52:41.018"></status>
</kw>
<msg timestamp="20201030 15:52:41.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022005431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:40.729" endtime="20201030 15:52:41.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022005431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.022" endtime="20201030 15:52:41.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.031" endtime="20201030 15:52:41.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.727" endtime="20201030 15:52:41.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.725" endtime="20201030 15:52:41.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.037" level="INFO">${RESULT} = [{'diff': 9.819399999999937e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.787499999999727e-05}, {'diff': 9.813900000000056e-05}, {'diff': 9.745799999999818e-05}, {'diff': 9.747199999999775e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.034" endtime="20201030 15:52:41.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.041" level="INFO">${ACCURACY} = {'diff': [9.819399999999937e-05, 9.729199999999882e-05, 9.787499999999727e-05, 9.813900000000056e-05, 9.745799999999818e-05, 9.747199999999775e-05, 9.74860000000008e-05, 9.777700000000028e-05, 9.81799...</msg>
<status status="PASS" starttime="20201030 15:52:41.038" endtime="20201030 15:52:41.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.046" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.045" endtime="20201030 15:52:41.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.048" level="INFO">VALUE: [9.819399999999937e-05, 9.729199999999882e-05, 9.787499999999727e-05, 9.813900000000056e-05, 9.745799999999818e-05, 9.747199999999775e-05, 9.74860000000008e-05, 9.777700000000028e-05, 9.81799999999998e-05, 9.765299999999963e-05, 9.744400000000208e-05, 9.794499999999859e-05, 9.777799999999975e-05, 9.768100000000224e-05, 9.809800000000132e-05, 9.772200000000147e-05, 9.802700000000053e-05, 9.784699999999813e-05, 9.790299999999988e-05, 9.744399999999862e-05, 9.748700000000027e-05, 9.759699999999788e-05, 9.754200000000254e-05, 9.800000000000086e-05, 9.745799999999818e-05, 9.809699999999838e-05, 9.795800000000215e-05, 9.73059999999984e-05, 9.786100000000117e-05, 9.811100000000142e-05, 9.762500000000049e-05, 9.729199999999882e-05, 9.819499999999884e-05, 9.729099999999935e-05, 9.730499999999892e-05, 9.759700000000135e-05, 9.77920000000028e-05, 9.786100000000117e-05, 9.776400000000018e-05, 9.754199999999907e-05, 9.804199999999957e-05, 9.748599999999732e-05, 9.751399999999993e-05, 9.78609999999977e-05, 9.795800000000215e-05, 9.761100000000092e-05, 9.747200000000122e-05, 9.777800000000322e-05, 9.818100000000274e-05, 9.761100000000092e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.047" endtime="20201030 15:52:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.042" endtime="20201030 15:52:41.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.054" endtime="20201030 15:52:41.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.052" endtime="20201030 15:52:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.051" endtime="20201030 15:52:41.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.690" endtime="20201030 15:52:41.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:40.689" endtime="20201030 15:52:41.075"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.083" endtime="20201030 15:52:41.106"></status>
</kw>
<msg timestamp="20201030 15:52:41.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.082" endtime="20201030 15:52:41.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.107" endtime="20201030 15:52:41.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.110" endtime="20201030 15:52:41.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.079" endtime="20201030 15:52:41.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.077" endtime="20201030 15:52:41.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.119" endtime="20201030 15:52:41.404"></status>
</kw>
<msg timestamp="20201030 15:52:41.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025297208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:41.118" endtime="20201030 15:52:41.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025198, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025297208, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:52:41.408" endtime="20201030 15:52:41.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.416" endtime="20201030 15:52:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.115" endtime="20201030 15:52:41.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.113" endtime="20201030 15:52:41.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.423" level="INFO">${RESULT} = [{'diff': 9.920799999999994e-05}, {'diff': 9.895799999999969e-05}, {'diff': 9.893000000000055e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.918100000000027e-05}, {'diff': 9.876400000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:41.420" endtime="20201030 15:52:41.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.427" level="INFO">${ACCURACY} = {'diff': [9.920799999999994e-05, 9.895799999999969e-05, 9.893000000000055e-05, 9.879200000000032e-05, 9.918100000000027e-05, 9.876400000000118e-05, 9.855600000000311e-05, 9.888900000000131e-05, 9.8944...</msg>
<status status="PASS" starttime="20201030 15:52:41.424" endtime="20201030 15:52:41.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.431" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.430" endtime="20201030 15:52:41.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.434" level="INFO">VALUE: [9.920799999999994e-05, 9.895799999999969e-05, 9.893000000000055e-05, 9.879200000000032e-05, 9.918100000000027e-05, 9.876400000000118e-05, 9.855600000000311e-05, 9.888900000000131e-05, 9.894499999999959e-05, 9.844399999999962e-05, 9.876400000000118e-05, 9.884699999999913e-05, 9.894400000000012e-05, 9.851299999999799e-05, 9.909699999999938e-05, 9.827800000000025e-05, 9.84999999999979e-05, 9.852699999999756e-05, 9.873599999999857e-05, 9.876400000000118e-05, 9.870799999999944e-05, 9.911100000000242e-05, 9.875000000000161e-05, 9.88609999999987e-05, 9.869500000000281e-05, 9.918100000000027e-05, 9.829100000000035e-05, 9.927799999999778e-05, 9.863899999999759e-05, 9.909700000000285e-05, 9.845799999999919e-05, 9.861099999999845e-05, 9.897299999999873e-05, 9.912499999999852e-05, 9.845900000000213e-05, 9.912499999999852e-05, 9.894400000000012e-05, 9.912499999999852e-05, 9.861099999999845e-05, 9.877800000000075e-05, 9.83059999999994e-05, 9.893100000000002e-05, 9.909699999999938e-05, 9.8721999999999e-05, 9.918100000000027e-05, 9.826400000000068e-05, 9.902700000000153e-05, 9.83609999999982e-05, 9.840300000000038e-05, 9.861099999999845e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.432" endtime="20201030 15:52:41.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.428" endtime="20201030 15:52:41.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.446" endtime="20201030 15:52:41.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.444" endtime="20201030 15:52:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.443" endtime="20201030 15:52:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.076" endtime="20201030 15:52:41.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.075" endtime="20201030 15:52:41.467"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.475" endtime="20201030 15:52:41.495"></status>
</kw>
<msg timestamp="20201030 15:52:41.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.474" endtime="20201030 15:52:41.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.496" endtime="20201030 15:52:41.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.499" endtime="20201030 15:52:41.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.471" endtime="20201030 15:52:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.469" endtime="20201030 15:52:41.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.508" endtime="20201030 15:52:41.793"></status>
</kw>
<msg timestamp="20201030 15:52:41.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.506" endtime="20201030 15:52:41.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021973708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.797" endtime="20201030 15:52:41.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.805" endtime="20201030 15:52:41.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.504" endtime="20201030 15:52:41.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.502" endtime="20201030 15:52:41.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:41.811" level="INFO">${RESULT} = [{'diff': 0.00010019400000000137}, {'diff': 0.00010011099999999995}, {'diff': 9.944400000000062e-05}, {'diff': 9.973599999999957e-05}, {'diff': 0.00010020900000000041}, {'diff': 9.977800000000175e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:41.808" endtime="20201030 15:52:41.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:41.817" level="INFO">${ACCURACY} = {'diff': [0.00010019400000000137, 0.00010011099999999995, 9.944400000000062e-05, 9.973599999999957e-05, 0.00010020900000000041, 9.977800000000175e-05, 0.00010019500000000084, 9.929200000000082e-05, 9....</msg>
<status status="PASS" starttime="20201030 15:52:41.812" endtime="20201030 15:52:41.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.821" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:52:41.820" endtime="20201030 15:52:41.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.824" level="INFO">VALUE: [0.00010019400000000137, 0.00010011099999999995, 9.944400000000062e-05, 9.973599999999957e-05, 0.00010020900000000041, 9.977800000000175e-05, 0.00010019500000000084, 9.929200000000082e-05, 9.970800000000044e-05, 0.00010011099999999995, 9.977800000000175e-05, 9.998599999999983e-05, 9.93609999999992e-05, 9.995900000000016e-05, 0.00010015200000000266, 9.993100000000102e-05, 0.00010011199999999942, 9.961099999999945e-05, 9.926399999999821e-05, 9.969400000000087e-05, 9.977799999999828e-05, 9.93609999999992e-05, 9.979200000000132e-05, 9.956899999999727e-05, 9.936199999999867e-05, 9.994500000000059e-05, 0.00010011099999999995, 9.926400000000168e-05, 9.970800000000044e-05, 9.923599999999907e-05, 9.98609999999997e-05, 9.961099999999945e-05, 9.980500000000142e-05, 9.948599999999932e-05, 0.00010004200000000157, 9.96939999999974e-05, 9.997199999999679e-05, 9.980500000000142e-05, 9.987499999999927e-05, 0.00010013899999999909, 9.927800000000125e-05, 0.0001000419999999981, 9.972300000000295e-05, 9.931900000000049e-05, 0.00010020800000000094, 9.947199999999976e-05, 9.983300000000056e-05, 9.969400000000087e-05, 9.998599999999983e-05, 9.927799999999778e-05]</msg>
<status status="PASS" starttime="20201030 15:52:41.822" endtime="20201030 15:52:41.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.817" endtime="20201030 15:52:41.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:41.828" endtime="20201030 15:52:41.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.827" endtime="20201030 15:52:41.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.826" endtime="20201030 15:52:41.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.468" endtime="20201030 15:52:41.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.467" endtime="20201030 15:52:41.849"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.858" endtime="20201030 15:52:41.878"></status>
</kw>
<msg timestamp="20201030 15:52:41.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.856" endtime="20201030 15:52:41.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:41.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:41.879" endtime="20201030 15:52:41.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.882" endtime="20201030 15:52:41.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.854" endtime="20201030 15:52:41.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.852" endtime="20201030 15:52:41.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:41.891" endtime="20201030 15:52:42.178"></status>
</kw>
<msg timestamp="20201030 15:52:42.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:41.889" endtime="20201030 15:52:42.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022096472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.182" endtime="20201030 15:52:42.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.190" endtime="20201030 15:52:42.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.887" endtime="20201030 15:52:42.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.885" endtime="20201030 15:52:42.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.197" level="INFO">${RESULT} = [{'diff': 0.00010120799999999847}, {'diff': 0.00010024999999999964}, {'diff': 0.00010052799999999903}, {'diff': 0.0001005280000000025}, {'diff': 0.00010068100000000177}, {'diff': 0.0001011250000000005...</msg>
<status status="PASS" starttime="20201030 15:52:42.194" endtime="20201030 15:52:42.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.201" level="INFO">${ACCURACY} = {'diff': [0.00010120799999999847, 0.00010024999999999964, 0.00010052799999999903, 0.0001005280000000025, 0.00010068100000000177, 0.00010112500000000052, 0.00010026399999999921, 0.00010101399999999996,...</msg>
<status status="PASS" starttime="20201030 15:52:42.198" endtime="20201030 15:52:42.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.205" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.204" endtime="20201030 15:52:42.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.208" level="INFO">VALUE: [0.00010120799999999847, 0.00010024999999999964, 0.00010052799999999903, 0.0001005280000000025, 0.00010068100000000177, 0.00010112500000000052, 0.00010026399999999921, 0.00010101399999999996, 0.0001008610000000007, 0.00010109700000000138, 0.00010095800000000169, 0.00010063899999999959, 0.00010112500000000052, 0.00010115300000000313, 0.00010041700000000195, 0.00010095900000000116, 0.00010044500000000109, 0.00010045800000000119, 0.00010079099999999938, 0.00010104099999999963, 0.00010066699999999873, 0.00010079200000000232, 0.00010123600000000108, 0.00010032000000000096, 0.00010087500000000027, 0.00010029099999999888, 0.00010102799999999953, 0.0001011939999999989, 0.00010027700000000278, 0.00010081900000000199, 0.00010061100000000045, 0.00010111099999999748, 0.00010062500000000002, 0.00010027799999999878, 0.00010102799999999953, 0.00010070800000000144, 0.00010026299999999974, 0.00010036099999999673, 0.00010061099999999698, 0.00010027799999999878, 0.00010070800000000144, 0.00010109700000000138, 0.00010027800000000225, 0.0001005419999999986, 0.00010086200000000017, 0.00010059699999999741, 0.00010027700000000278, 0.00010102799999999953, 0.0001003610000000002, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201030 15:52:42.206" endtime="20201030 15:52:42.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.202" endtime="20201030 15:52:42.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.213" endtime="20201030 15:52:42.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.211" endtime="20201030 15:52:42.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.210" endtime="20201030 15:52:42.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.850" endtime="20201030 15:52:42.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:41.849" endtime="20201030 15:52:42.234"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.242" endtime="20201030 15:52:42.263"></status>
</kw>
<msg timestamp="20201030 15:52:42.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.241" endtime="20201030 15:52:42.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.264" endtime="20201030 15:52:42.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.267" endtime="20201030 15:52:42.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.238" endtime="20201030 15:52:42.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.236" endtime="20201030 15:52:42.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.276" endtime="20201030 15:52:42.562"></status>
</kw>
<msg timestamp="20201030 15:52:42.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.275" endtime="20201030 15:52:42.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023118181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023220042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.566" endtime="20201030 15:52:42.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.575" endtime="20201030 15:52:42.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.272" endtime="20201030 15:52:42.577"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.270" endtime="20201030 15:52:42.577"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.581" level="INFO">${RESULT} = [{'diff': 0.00010186099999999823}, {'diff': 0.00010213800000000162}, {'diff': 0.00010194399999999965}, {'diff': 0.00010144400000000262}, {'diff': 0.00010161100000000145}, {'diff': 0.000101457999999998...</msg>
<status status="PASS" starttime="20201030 15:52:42.578" endtime="20201030 15:52:42.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.585" level="INFO">${ACCURACY} = {'diff': [0.00010186099999999823, 0.00010213800000000162, 0.00010194399999999965, 0.00010144400000000262, 0.00010161100000000145, 0.00010145799999999872, 0.00010212499999999805, 0.00010126400000000021...</msg>
<status status="PASS" starttime="20201030 15:52:42.582" endtime="20201030 15:52:42.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.590" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.589" endtime="20201030 15:52:42.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.592" level="INFO">VALUE: [0.00010186099999999823, 0.00010213800000000162, 0.00010194399999999965, 0.00010144400000000262, 0.00010161100000000145, 0.00010145799999999872, 0.00010212499999999805, 0.00010126400000000021, 0.00010151400000000046, 0.00010187500000000127, 0.00010212500000000152, 0.00010126400000000021, 0.0001021939999999999, 0.00010212500000000152, 0.00010129200000000282, 0.0001021939999999999, 0.00010211100000000195, 0.00010209699999999891, 0.00010167999999999983, 0.00010209800000000185, 0.00010179100000000038, 0.00010202699999999759, 0.0001018610000000017, 0.00010145800000000219, 0.00010126400000000021, 0.00010170799999999897, 0.00010143099999999905, 0.00010159699999999841, 0.00010144499999999862, 0.00010209799999999838, 0.00010176299999999777, 0.0001018610000000017, 0.00010144399999999915, 0.00010188900000000084, 0.00010193099999999955, 0.00010176400000000071, 0.00010157000000000221, 0.0001020000000000014, 0.00010165300000000016, 0.00010194400000000312, 0.00010161100000000145, 0.00010159699999999841, 0.00010197199999999879, 0.00010190300000000041, 0.00010138900000000034, 0.00010179199999999985, 0.00010152800000000003, 0.00010137500000000077, 0.00010179100000000038, 0.00010220799999999947]</msg>
<status status="PASS" starttime="20201030 15:52:42.591" endtime="20201030 15:52:42.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.586" endtime="20201030 15:52:42.594"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.598" endtime="20201030 15:52:42.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.596" endtime="20201030 15:52:42.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.595" endtime="20201030 15:52:42.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.234" endtime="20201030 15:52:42.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.234" endtime="20201030 15:52:42.619"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.627" endtime="20201030 15:52:42.647"></status>
</kw>
<msg timestamp="20201030 15:52:42.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.626" endtime="20201030 15:52:42.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.648" endtime="20201030 15:52:42.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.651" endtime="20201030 15:52:42.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.623" endtime="20201030 15:52:42.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.621" endtime="20201030 15:52:42.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.660" endtime="20201030 15:52:42.945"></status>
</kw>
<msg timestamp="20201030 15:52:42.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.658" endtime="20201030 15:52:42.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021898861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022001569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.949" endtime="20201030 15:52:42.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.957" endtime="20201030 15:52:42.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.656" endtime="20201030 15:52:42.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.654" endtime="20201030 15:52:42.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:42.964" level="INFO">${RESULT} = [{'diff': 0.00010270799999999997}, {'diff': 0.00010279100000000138}, {'diff': 0.00010241700000000048}, {'diff': 0.00010230599999999992}, {'diff': 0.00010320800000000047}, {'diff': 0.000102846999999999...</msg>
<status status="PASS" starttime="20201030 15:52:42.961" endtime="20201030 15:52:42.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:42.969" level="INFO">${ACCURACY} = {'diff': [0.00010270799999999997, 0.00010279100000000138, 0.00010241700000000048, 0.00010230599999999992, 0.00010320800000000047, 0.00010284699999999966, 0.00010319500000000037, 0.00010262500000000202...</msg>
<status status="PASS" starttime="20201030 15:52:42.965" endtime="20201030 15:52:42.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.973" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:52:42.972" endtime="20201030 15:52:42.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.976" level="INFO">VALUE: [0.00010270799999999997, 0.00010279100000000138, 0.00010241700000000048, 0.00010230599999999992, 0.00010320800000000047, 0.00010284699999999966, 0.00010319500000000037, 0.00010262500000000202, 0.00010276399999999825, 0.00010287500000000227, 0.00010311099999999948, 0.00010227699999999784, 0.0001030139999999985, 0.0001028610000000027, 0.00010311099999999948, 0.00010293099999999708, 0.00010226399999999775, 0.00010237500000000177, 0.00010279099999999791, 0.00010297199999999979, 0.00010234699999999916, 0.00010309699999999991, 0.00010244400000000015, 0.00010245799999999972, 0.00010276400000000172, 0.00010243000000000058, 0.00010244500000000309, 0.00010288900000000184, 0.00010230500000000045, 0.00010252800000000103, 0.0001025420000000006, 0.00010251400000000147, 0.00010286099999999923, 0.00010274999999999868, 0.00010269499999999987, 0.00010294500000000012, 0.00010277800000000128, 0.0001026940000000004, 0.00010262499999999855, 0.00010297199999999979, 0.00010293000000000108, 0.00010229200000000035, 0.00010319500000000037, 0.00010306999999999678, 0.00010274999999999868, 0.00010304100000000163, 0.00010298599999999936, 0.0001026940000000004, 0.00010295800000000022, 0.00010311099999999948]</msg>
<status status="PASS" starttime="20201030 15:52:42.974" endtime="20201030 15:52:42.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.970" endtime="20201030 15:52:42.977"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:42.981" endtime="20201030 15:52:43.000"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.979" endtime="20201030 15:52:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.978" endtime="20201030 15:52:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.619" endtime="20201030 15:52:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.619" endtime="20201030 15:52:43.001"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.010" endtime="20201030 15:52:43.030"></status>
</kw>
<msg timestamp="20201030 15:52:43.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.009" endtime="20201030 15:52:43.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.032" endtime="20201030 15:52:43.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.034" endtime="20201030 15:52:43.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.006" endtime="20201030 15:52:43.036"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.004" endtime="20201030 15:52:43.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.043" endtime="20201030 15:52:43.331"></status>
</kw>
<msg timestamp="20201030 15:52:43.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.042" endtime="20201030 15:52:43.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021893806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021997167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.335" endtime="20201030 15:52:43.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.344" endtime="20201030 15:52:43.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.039" endtime="20201030 15:52:43.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.037" endtime="20201030 15:52:43.346"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.351" level="INFO">${RESULT} = [{'diff': 0.0001033610000000032}, {'diff': 0.00010331899999999755}, {'diff': 0.00010336099999999973}, {'diff': 0.00010379099999999891}, {'diff': 0.00010354199999999814}, {'diff': 0.0001038749999999998...</msg>
<status status="PASS" starttime="20201030 15:52:43.347" endtime="20201030 15:52:43.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.355" level="INFO">${ACCURACY} = {'diff': [0.0001033610000000032, 0.00010331899999999755, 0.00010336099999999973, 0.00010379099999999891, 0.00010354199999999814, 0.0001038749999999998, 0.00010343100000000105, 0.00010408400000000081, ...</msg>
<status status="PASS" starttime="20201030 15:52:43.352" endtime="20201030 15:52:43.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.360" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.359" endtime="20201030 15:52:43.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.362" level="INFO">VALUE: [0.0001033610000000032, 0.00010331899999999755, 0.00010336099999999973, 0.00010379099999999891, 0.00010354199999999814, 0.0001038749999999998, 0.00010343100000000105, 0.00010408400000000081, 0.0001032359999999996, 0.0001035420000000016, 0.00010404100000000263, 0.0001040420000000021, 0.00010420800000000147, 0.00010393000000000208, 0.00010359700000000041, 0.00010345800000000072, 0.00010345900000000019, 0.00010345900000000019, 0.00010347200000000029, 0.00010347200000000029, 0.00010397199999999732, 0.00010345799999999725, 0.00010342999999999811, 0.00010395800000000122, 0.00010397200000000079, 0.00010345900000000019, 0.00010397300000000026, 0.00010362499999999955, 0.00010347200000000029, 0.00010379100000000238, 0.00010404099999999916, 0.00010388899999999937, 0.00010329199999999789, 0.00010420800000000147, 0.00010377799999999882, 0.00010419500000000137, 0.00010329199999999789, 0.00010419399999999843, 0.00010412500000000005, 0.00010344399999999768, 0.00010343000000000158, 0.00010329199999999789, 0.00010336099999999973, 0.00010345900000000019, 0.00010408400000000081, 0.00010327799999999832, 0.0001037079999999975, 0.00010394399999999818, 0.00010345800000000072, 0.00010379200000000185]</msg>
<status status="PASS" starttime="20201030 15:52:43.361" endtime="20201030 15:52:43.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.356" endtime="20201030 15:52:43.363"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.367" endtime="20201030 15:52:43.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.366" endtime="20201030 15:52:43.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.364" endtime="20201030 15:52:43.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.002" endtime="20201030 15:52:43.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.002" endtime="20201030 15:52:43.388"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.397" endtime="20201030 15:52:43.418"></status>
</kw>
<msg timestamp="20201030 15:52:43.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.395" endtime="20201030 15:52:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.420" endtime="20201030 15:52:43.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.422" endtime="20201030 15:52:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.393" endtime="20201030 15:52:43.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.390" endtime="20201030 15:52:43.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.431" endtime="20201030 15:52:43.717"></status>
</kw>
<msg timestamp="20201030 15:52:43.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.430" endtime="20201030 15:52:43.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022928736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.721" endtime="20201030 15:52:43.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.729" endtime="20201030 15:52:43.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.427" endtime="20201030 15:52:43.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.425" endtime="20201030 15:52:43.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.736" level="INFO">${RESULT} = [{'diff': 0.00010502800000000007}, {'diff': 0.0001051949999999989}, {'diff': 0.00010475000000000068}, {'diff': 0.00010487499999999733}, {'diff': 0.00010447199999999782}, {'diff': 0.0001049579999999987...</msg>
<status status="PASS" starttime="20201030 15:52:43.733" endtime="20201030 15:52:43.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:43.740" level="INFO">${ACCURACY} = {'diff': [0.00010502800000000007, 0.0001051949999999989, 0.00010475000000000068, 0.00010487499999999733, 0.00010447199999999782, 0.00010495799999999875, 0.00010425000000000018, 0.0001043750000000003, ...</msg>
<status status="PASS" starttime="20201030 15:52:43.737" endtime="20201030 15:52:43.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.744" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:52:43.743" endtime="20201030 15:52:43.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.747" level="INFO">VALUE: [0.00010502800000000007, 0.0001051949999999989, 0.00010475000000000068, 0.00010487499999999733, 0.00010447199999999782, 0.00010495799999999875, 0.00010425000000000018, 0.0001043750000000003, 0.00010461100000000098, 0.00010509700000000191, 0.00010465200000000022, 0.00010513800000000115, 0.00010430500000000245, 0.00010438899999999987, 0.00010447200000000129, 0.00010511100000000148, 0.00010427799999999932, 0.00010444400000000215, 0.00010511099999999801, 0.00010479199999999939, 0.0001043750000000003, 0.00010477700000000034, 0.00010490299999999994, 0.00010430499999999898, 0.00010504199999999964, 0.00010454199999999914, 0.00010440300000000291, 0.00010470900000000144, 0.0001050140000000005, 0.0001048620000000007, 0.00010447200000000129, 0.00010430500000000245, 0.00010433299999999812, 0.00010458299999999837, 0.00010459700000000141, 0.00010479199999999939, 0.000104514, 0.00010480599999999896, 0.00010426399999999975, 0.00010486099999999776, 0.00010508299999999887, 0.00010511099999999801, 0.00010479199999999939, 0.00010502800000000007, 0.0001050140000000005, 0.00010486100000000123, 0.00010461100000000098, 0.00010487499999999733, 0.00010494399999999918, 0.00010444400000000215]</msg>
<status status="PASS" starttime="20201030 15:52:43.745" endtime="20201030 15:52:43.748"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.741" endtime="20201030 15:52:43.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.753" endtime="20201030 15:52:43.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.751" endtime="20201030 15:52:43.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.750" endtime="20201030 15:52:43.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.389" endtime="20201030 15:52:43.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.388" endtime="20201030 15:52:43.773"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.782" endtime="20201030 15:52:43.801"></status>
</kw>
<msg timestamp="20201030 15:52:43.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.780" endtime="20201030 15:52:43.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.803" endtime="20201030 15:52:43.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.805" endtime="20201030 15:52:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.778" endtime="20201030 15:52:43.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.776" endtime="20201030 15:52:43.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.814" endtime="20201030 15:52:44.101"></status>
</kw>
<msg timestamp="20201030 15:52:44.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.813" endtime="20201030 15:52:44.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021957833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.106" endtime="20201030 15:52:44.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.115" endtime="20201030 15:52:44.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.810" endtime="20201030 15:52:44.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.808" endtime="20201030 15:52:44.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.121" level="INFO">${RESULT} = [{'diff': 0.0001053750000000013}, {'diff': 0.00010616699999999729}, {'diff': 0.00010529199999999989}, {'diff': 0.00010536099999999826}, {'diff': 0.0001057499999999982}, {'diff': 0.0001061949999999999}...</msg>
<status status="PASS" starttime="20201030 15:52:44.118" endtime="20201030 15:52:44.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.126" level="INFO">${ACCURACY} = {'diff': [0.0001053750000000013, 0.00010616699999999729, 0.00010529199999999989, 0.00010536099999999826, 0.0001057499999999982, 0.0001061949999999999, 0.00010527800000000032, 0.0001058750000000018, 0....</msg>
<status status="PASS" starttime="20201030 15:52:44.122" endtime="20201030 15:52:44.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.131" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.130" endtime="20201030 15:52:44.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.133" level="INFO">VALUE: [0.0001053750000000013, 0.00010616699999999729, 0.00010529199999999989, 0.00010536099999999826, 0.0001057499999999982, 0.0001061949999999999, 0.00010527800000000032, 0.0001058750000000018, 0.00010577700000000134, 0.000106208, 0.00010545799999999925, 0.00010598599999999889, 0.00010545800000000272, 0.00010563900000000112, 0.00010594499999999965, 0.00010579200000000039, 0.0001061949999999999, 0.00010577700000000134, 0.00010602700000000159, 0.00010608400000000281, 0.00010536100000000173, 0.00010529199999999989, 0.00010602800000000107, 0.00010618100000000033, 0.00010530499999999998, 0.00010534800000000163, 0.00010598599999999889, 0.00010611100000000248, 0.00010562499999999808, 0.00010577800000000082, 0.00010569399999999993, 0.00010526400000000075, 0.00010536099999999826, 0.00010566600000000079, 0.00010543099999999958, 0.00010611099999999901, 0.00010594400000000018, 0.00010595799999999975, 0.0001053200000000025, 0.0001058889999999979, 0.00010545900000000219, 0.00010544499999999915, 0.00010566600000000079, 0.00010544500000000262, 0.00010561100000000198, 0.00010529100000000041, 0.0001058750000000018, 0.00010613899999999815, 0.00010612499999999858, 0.00010612500000000205]</msg>
<status status="PASS" starttime="20201030 15:52:44.132" endtime="20201030 15:52:44.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.127" endtime="20201030 15:52:44.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.138" endtime="20201030 15:52:44.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.137" endtime="20201030 15:52:44.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.135" endtime="20201030 15:52:44.158"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.774" endtime="20201030 15:52:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.774" endtime="20201030 15:52:44.159"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.168" endtime="20201030 15:52:44.188"></status>
</kw>
<msg timestamp="20201030 15:52:44.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.166" endtime="20201030 15:52:44.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.189" endtime="20201030 15:52:44.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.192" endtime="20201030 15:52:44.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.163" endtime="20201030 15:52:44.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.161" endtime="20201030 15:52:44.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.201" endtime="20201030 15:52:44.486"></status>
</kw>
<msg timestamp="20201030 15:52:44.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.199" endtime="20201030 15:52:44.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022481972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022589014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.491" endtime="20201030 15:52:44.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.499" endtime="20201030 15:52:44.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.197" endtime="20201030 15:52:44.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.195" endtime="20201030 15:52:44.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.505" level="INFO">${RESULT} = [{'diff': 0.00010704200000000164}, {'diff': 0.0001070279999999986}, {'diff': 0.0001065690000000008}, {'diff': 0.00010688799999999943}, {'diff': 0.00010627699999999837}, {'diff': 0.00010680500000000148...</msg>
<status status="PASS" starttime="20201030 15:52:44.502" endtime="20201030 15:52:44.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.509" level="INFO">${ACCURACY} = {'diff': [0.00010704200000000164, 0.0001070279999999986, 0.0001065690000000008, 0.00010688799999999943, 0.00010627699999999837, 0.00010680500000000148, 0.00010694400000000118, 0.00010629199999999742, ...</msg>
<status status="PASS" starttime="20201030 15:52:44.506" endtime="20201030 15:52:44.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.514" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.513" endtime="20201030 15:52:44.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.516" level="INFO">VALUE: [0.00010704200000000164, 0.0001070279999999986, 0.0001065690000000008, 0.00010688799999999943, 0.00010627699999999837, 0.00010680500000000148, 0.00010694400000000118, 0.00010629199999999742, 0.00010633300000000012, 0.00010627799999999785, 0.0001066950000000004, 0.00010708400000000035, 0.00010627799999999785, 0.00010636099999999926, 0.00010693000000000161, 0.00010694400000000118, 0.00010711100000000001, 0.00010712499999999958, 0.00010695900000000022, 0.00010709699999999697, 0.00010647199999999982, 0.0001068889999999989, 0.00010645800000000025, 0.0001062499999999987, 0.00010654199999999767, 0.00010704200000000164, 0.00010723600000000014, 0.00010679200000000139, 0.0001066950000000004, 0.00010694500000000065, 0.00010677700000000234, 0.00010643099999999711, 0.00010627800000000132, 0.00010687499999999933, 0.00010644400000000068, 0.00010688900000000237, 0.00010679200000000139, 0.0001070279999999986, 0.00010686199999999924, 0.00010625000000000218, 0.00010702699999999912, 0.00010652800000000157, 0.00010633300000000012, 0.00010644500000000015, 0.00010711100000000001, 0.00010676399999999878, 0.0001071950000000009, 0.00010631900000000055, 0.00010667999999999789, 0.00010692999999999814]</msg>
<status status="PASS" starttime="20201030 15:52:44.515" endtime="20201030 15:52:44.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.510" endtime="20201030 15:52:44.517"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.521" endtime="20201030 15:52:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.520" endtime="20201030 15:52:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.518" endtime="20201030 15:52:44.541"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.160" endtime="20201030 15:52:44.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.159" endtime="20201030 15:52:44.542"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.551" endtime="20201030 15:52:44.574"></status>
</kw>
<msg timestamp="20201030 15:52:44.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.549" endtime="20201030 15:52:44.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.576" endtime="20201030 15:52:44.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.578" endtime="20201030 15:52:44.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.547" endtime="20201030 15:52:44.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.544" endtime="20201030 15:52:44.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.587" endtime="20201030 15:52:44.873"></status>
</kw>
<msg timestamp="20201030 15:52:44.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025325472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025433125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.586" endtime="20201030 15:52:44.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025325472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025433125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:44.877" endtime="20201030 15:52:44.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.885" endtime="20201030 15:52:44.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.583" endtime="20201030 15:52:44.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.582" endtime="20201030 15:52:44.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:44.891" level="INFO">${RESULT} = [{'diff': 0.00010765299999999922}, {'diff': 0.00010786100000000076}, {'diff': 0.00010776399999999978}, {'diff': 0.00010768100000000183}, {'diff': 0.00010748600000000039}, {'diff': 0.000107277000000002...</msg>
<status status="PASS" starttime="20201030 15:52:44.888" endtime="20201030 15:52:44.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:44.895" level="INFO">${ACCURACY} = {'diff': [0.00010765299999999922, 0.00010786100000000076, 0.00010776399999999978, 0.00010768100000000183, 0.00010748600000000039, 0.00010727700000000284, 0.00010736100000000026, 0.00010795799999999828...</msg>
<status status="PASS" starttime="20201030 15:52:44.892" endtime="20201030 15:52:44.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.900" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:52:44.899" endtime="20201030 15:52:44.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.902" level="INFO">VALUE: [0.00010765299999999922, 0.00010786100000000076, 0.00010776399999999978, 0.00010768100000000183, 0.00010748600000000039, 0.00010727700000000284, 0.00010736100000000026, 0.00010795799999999828, 0.00010792999999999914, 0.00010783299999999815, 0.00010787500000000033, 0.00010729199999999842, 0.00010734800000000017, 0.00010745800000000125, 0.00010811100000000101, 0.00010794400000000218, 0.00010809700000000144, 0.00010794399999999871, 0.00010811100000000101, 0.00010777799999999935, 0.00010819499999999843, 0.00010813900000000015, 0.00010795799999999828, 0.00010795800000000175, 0.00010762500000000008, 0.00010812500000000058, 0.00010758300000000137, 0.00010744499999999768, 0.00010779199999999892, 0.00010736100000000026, 0.00010729099999999894, 0.0001077500000000002, 0.00010777699999999987, 0.0001078889999999999, 0.00010747200000000082, 0.00010727799999999885, 0.00010768099999999836, 0.00010757000000000128, 0.00010811100000000101, 0.00010733299999999765, 0.00010816599999999982, 0.00010729099999999894, 0.00010755599999999824, 0.0001080279999999996, 0.0001075560000000017, 0.00010822200000000157, 0.00010812500000000058, 0.00010795900000000122, 0.00010724999999999624, 0.00010740299999999897]</msg>
<status status="PASS" starttime="20201030 15:52:44.901" endtime="20201030 15:52:44.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.896" endtime="20201030 15:52:44.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.908" endtime="20201030 15:52:44.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.907" endtime="20201030 15:52:44.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.905" endtime="20201030 15:52:44.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.543" endtime="20201030 15:52:44.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.542" endtime="20201030 15:52:44.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.409" endtime="20201030 15:52:44.929"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:06.340" endtime="20201030 15:52:44.929" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:44.936" endtime="20201030 15:52:44.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.935" endtime="20201030 15:52:44.956"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.969" endtime="20201030 15:52:44.983"></status>
</kw>
<msg timestamp="20201030 15:52:44.983" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.967" endtime="20201030 15:52:44.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.986" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:44.985" endtime="20201030 15:52:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:44.989" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:44.987" endtime="20201030 15:52:44.989"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:44.965" endtime="20201030 15:52:44.990"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:44.963" endtime="20201030 15:52:44.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.961" endtime="20201030 15:52:44.991"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:44.994" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:44.994" endtime="20201030 15:52:44.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.991" endtime="20201030 15:52:44.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.960" endtime="20201030 15:52:44.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.960" endtime="20201030 15:52:44.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:44.996" endtime="20201030 15:52:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.958" endtime="20201030 15:52:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.957" endtime="20201030 15:52:44.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.933" endtime="20201030 15:52:44.999"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.009" endtime="20201030 15:52:45.025"></status>
</kw>
<msg timestamp="20201030 15:52:45.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.008" endtime="20201030 15:52:45.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.026" endtime="20201030 15:52:45.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.029" endtime="20201030 15:52:45.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.004" endtime="20201030 15:52:45.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.002" endtime="20201030 15:52:45.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.038" endtime="20201030 15:52:45.324"></status>
</kw>
<msg timestamp="20201030 15:52:45.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066426319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066435361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.037" endtime="20201030 15:52:45.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066426319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066435361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.328" endtime="20201030 15:52:45.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.337" endtime="20201030 15:52:45.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.034" endtime="20201030 15:52:45.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.032" endtime="20201030 15:52:45.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.343" level="INFO">${RESULT} = [{'diff': 9.042000000000772e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.611999999992182e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.665999999991515e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:45.340" endtime="20201030 15:52:45.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.347" level="INFO">${ACCURACY} = {'diff': [9.042000000000772e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.611999999992182e-06, 9.624999999999218e-06, 9.665999999991515e-06, 9.555000000008307e-06, 9.02800000000814e-06, 9.63800...</msg>
<status status="PASS" starttime="20201030 15:52:45.344" endtime="20201030 15:52:45.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.353" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.352" endtime="20201030 15:52:45.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.355" level="INFO">VALUE: [9.042000000000772e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.611999999992182e-06, 9.624999999999218e-06, 9.665999999991515e-06, 9.555000000008307e-06, 9.02800000000814e-06, 9.638000000006253e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.08400000000642e-06, 9.624999999999218e-06, 9.000000000009e-06, 9.583000000007447e-06, 9.027999999994263e-06, 9.610999999992709e-06, 9.013999999987754e-06, 9.02800000000814e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.680999999997497e-06, 9.611000000006586e-06, 9.680999999997497e-06, 9.02800000000814e-06, 9.638999999991849e-06, 9.638999999991849e-06, 9.624999999999218e-06, 9.02800000000814e-06, 9.637999999992375e-06, 9.014000000001632e-06, 9.000000000009e-06, 9.611000000006586e-06, 9.014000000001632e-06, 9.041000000001298e-06, 9.639000000005726e-06, 9.027999999994263e-06, 9.638999999991849e-06, 9.624999999999218e-06, 9.624999999999218e-06, 9.014000000001632e-06, 9.027999999994263e-06, 9.652999999998357e-06, 9.638999999991849e-06, 9.02800000000814e-06, 9.624999999999218e-06, 9.013000000002158e-06, 9.611000000006586e-06, 9.624999999999218e-06]</msg>
<status status="PASS" starttime="20201030 15:52:45.354" endtime="20201030 15:52:45.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.348" endtime="20201030 15:52:45.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.360" endtime="20201030 15:52:45.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.358" endtime="20201030 15:52:45.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.357" endtime="20201030 15:52:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.000" endtime="20201030 15:52:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.000" endtime="20201030 15:52:45.380"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.389" endtime="20201030 15:52:45.404"></status>
</kw>
<msg timestamp="20201030 15:52:45.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.387" endtime="20201030 15:52:45.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.405" endtime="20201030 15:52:45.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.408" endtime="20201030 15:52:45.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.385" endtime="20201030 15:52:45.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.383" endtime="20201030 15:52:45.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.417" endtime="20201030 15:52:45.702"></status>
</kw>
<msg timestamp="20201030 15:52:45.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.415" endtime="20201030 15:52:45.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022432403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022443208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.707" endtime="20201030 15:52:45.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.715" endtime="20201030 15:52:45.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.413" endtime="20201030 15:52:45.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.411" endtime="20201030 15:52:45.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:45.721" level="INFO">${RESULT} = [{'diff': 1.0804999999999149e-05}, {'diff': 1.0236000000000273e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0221999999997233e-05}, {'diff': 1.0235999999996803e-05}, {'diff': 1.0209000000000606e-...</msg>
<status status="PASS" starttime="20201030 15:52:45.718" endtime="20201030 15:52:45.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:45.727" level="INFO">${ACCURACY} = {'diff': [1.0804999999999149e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0209000000000606e-05, 1.0181000000001467e-05, 1.0249999999999843e-05...</msg>
<status status="PASS" starttime="20201030 15:52:45.722" endtime="20201030 15:52:45.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.731" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:52:45.730" endtime="20201030 15:52:45.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.734" level="INFO">VALUE: [1.0804999999999149e-05, 1.0236000000000273e-05, 1.0221999999997233e-05, 1.0221999999997233e-05, 1.0235999999996803e-05, 1.0209000000000606e-05, 1.0181000000001467e-05, 1.0249999999999843e-05, 1.0834000000001232e-05, 1.0222000000000703e-05, 1.0263999999999412e-05, 1.0263999999999412e-05, 9.708000000000633e-06, 1.0249999999999843e-05, 9.624999999999218e-06, 1.0207999999997663e-05, 9.651999999998884e-06, 9.624999999999218e-06, 1.0819999999998192e-05, 1.0223000000000176e-05, 9.666000000001923e-06, 1.0888000000000564e-05, 1.0846999999997858e-05, 1.0236999999999746e-05, 1.0208000000001133e-05, 1.0847000000001328e-05, 1.0194000000001563e-05, 1.0819999999998192e-05, 1.0249999999999843e-05, 1.0209000000000606e-05, 1.0833999999997762e-05, 1.0222000000000703e-05, 9.624999999999218e-06, 1.0832999999998288e-05, 1.0236000000000273e-05, 1.0818999999998719e-05, 1.0207999999997663e-05, 1.0208000000001133e-05, 1.0236000000000273e-05, 1.0236000000000273e-05, 1.0222000000000703e-05, 9.681000000000967e-06, 1.0223000000000176e-05, 1.0833000000001758e-05, 1.0847000000001328e-05, 1.0195000000001037e-05, 1.0819999999998192e-05, 1.0832999999998288e-05, 1.0195000000001037e-05, 1.0305999999998122e-05]</msg>
<status status="PASS" starttime="20201030 15:52:45.732" endtime="20201030 15:52:45.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.728" endtime="20201030 15:52:45.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:45.738" endtime="20201030 15:52:45.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.737" endtime="20201030 15:52:45.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.736" endtime="20201030 15:52:45.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.381" endtime="20201030 15:52:45.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.381" endtime="20201030 15:52:45.759"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.768" endtime="20201030 15:52:45.783"></status>
</kw>
<msg timestamp="20201030 15:52:45.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.766" endtime="20201030 15:52:45.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:45.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:45.784" endtime="20201030 15:52:45.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.787" endtime="20201030 15:52:45.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.764" endtime="20201030 15:52:45.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.761" endtime="20201030 15:52:45.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:45.796" endtime="20201030 15:52:46.083"></status>
</kw>
<msg timestamp="20201030 15:52:46.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:45.794" endtime="20201030 15:52:46.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022699986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022710764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.087" endtime="20201030 15:52:46.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.096" endtime="20201030 15:52:46.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.792" endtime="20201030 15:52:46.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.790" endtime="20201030 15:52:46.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.102" level="INFO">${RESULT} = [{'diff': 1.0778000000002952e-05}, {'diff': 1.1430999999999247e-05}, {'diff': 1.0832999999998288e-05}, {'diff': 1.2041000000000829e-05}, {'diff': 1.0847000000001328e-05}, {'diff': 1.1443999999999344e-...</msg>
<status status="PASS" starttime="20201030 15:52:46.099" endtime="20201030 15:52:46.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.106" level="INFO">${ACCURACY} = {'diff': [1.0778000000002952e-05, 1.1430999999999247e-05, 1.0832999999998288e-05, 1.2041000000000829e-05, 1.0847000000001328e-05, 1.1443999999999344e-05, 1.1416999999999677e-05, 1.1429999999999774e-05...</msg>
<status status="PASS" starttime="20201030 15:52:46.103" endtime="20201030 15:52:46.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.111" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.110" endtime="20201030 15:52:46.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.113" level="INFO">VALUE: [1.0778000000002952e-05, 1.1430999999999247e-05, 1.0832999999998288e-05, 1.2041000000000829e-05, 1.0847000000001328e-05, 1.1443999999999344e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.0833000000001758e-05, 1.1429999999999774e-05, 1.1443999999999344e-05, 1.1430999999999247e-05, 1.1416999999999677e-05, 1.0819999999998192e-05, 1.1389000000000538e-05, 1.1416999999999677e-05, 1.1443999999999344e-05, 1.1429999999999774e-05, 1.1431000000002717e-05, 1.2042000000000302e-05, 1.0832999999998288e-05, 1.2055999999999872e-05, 1.1430999999999247e-05, 1.1403000000000107e-05, 1.1430999999999247e-05, 1.2082999999999539e-05, 1.1443999999999344e-05, 1.1361000000001398e-05, 1.1430999999999247e-05, 1.1458000000002383e-05, 1.1429999999999774e-05, 1.1360999999997928e-05, 1.0832999999998288e-05, 1.1458000000002383e-05, 1.1443999999999344e-05, 1.0820000000001662e-05, 1.1429999999999774e-05, 1.2028000000000733e-05, 1.0819999999998192e-05, 1.1458000000002383e-05, 1.1443999999999344e-05, 1.1429999999999774e-05, 1.1429999999999774e-05, 1.1430999999999247e-05, 1.1430999999999247e-05, 1.2042000000000302e-05, 1.1443999999999344e-05, 1.1458000000002383e-05, 1.1443999999999344e-05, 1.0777000000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.112" endtime="20201030 15:52:46.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.107" endtime="20201030 15:52:46.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.118" endtime="20201030 15:52:46.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.116" endtime="20201030 15:52:46.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.115" endtime="20201030 15:52:46.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.760" endtime="20201030 15:52:46.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:45.759" endtime="20201030 15:52:46.139"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.149" endtime="20201030 15:52:46.164"></status>
</kw>
<msg timestamp="20201030 15:52:46.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.146" endtime="20201030 15:52:46.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.166" endtime="20201030 15:52:46.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.168" endtime="20201030 15:52:46.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.144" endtime="20201030 15:52:46.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.141" endtime="20201030 15:52:46.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.177" endtime="20201030 15:52:46.464"></status>
</kw>
<msg timestamp="20201030 15:52:46.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023590403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.176" endtime="20201030 15:52:46.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023590403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023603042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.469" endtime="20201030 15:52:46.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.478" endtime="20201030 15:52:46.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.173" endtime="20201030 15:52:46.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.171" endtime="20201030 15:52:46.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.484" level="INFO">${RESULT} = [{'diff': 1.2639000000001788e-05}, {'diff': 1.2695000000000067e-05}, {'diff': 1.2652999999997888e-05}, {'diff': 1.2695000000000067e-05}, {'diff': 1.2042000000000302e-05}, {'diff': 1.2041000000000829e-...</msg>
<status status="PASS" starttime="20201030 15:52:46.481" endtime="20201030 15:52:46.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.488" level="INFO">${ACCURACY} = {'diff': [1.2639000000001788e-05, 1.2695000000000067e-05, 1.2652999999997888e-05, 1.2695000000000067e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.2069999999999442e-05, 1.2042000000000302e-05...</msg>
<status status="PASS" starttime="20201030 15:52:46.485" endtime="20201030 15:52:46.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.493" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.492" endtime="20201030 15:52:46.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.495" level="INFO">VALUE: [1.2639000000001788e-05, 1.2695000000000067e-05, 1.2652999999997888e-05, 1.2695000000000067e-05, 1.2042000000000302e-05, 1.2041000000000829e-05, 1.2069999999999442e-05, 1.2042000000000302e-05, 1.2638999999998318e-05, 1.2096999999999108e-05, 1.2111000000002148e-05, 1.2055000000000399e-05, 1.204099999999736e-05, 1.2056000000003342e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2041000000000829e-05, 1.2653000000001358e-05, 1.2651999999998415e-05, 1.2110999999998678e-05, 1.2042000000000302e-05, 1.2042000000000302e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2042000000000302e-05, 1.2055000000000399e-05, 1.2639000000001788e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2082999999999539e-05, 1.2695000000000067e-05, 1.2666000000001454e-05, 1.2653000000001358e-05, 1.2639000000001788e-05, 1.2624999999998748e-05, 1.2055000000000399e-05, 1.2624999999998748e-05, 1.2652999999997888e-05, 1.2651999999998415e-05, 1.2556000000000372e-05, 1.2666999999997458e-05, 1.2638999999998318e-05, 1.2028000000000733e-05, 1.2068999999999969e-05, 1.2041000000000829e-05, 1.2667000000000928e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2651999999998415e-05, 1.2027000000001259e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.494" endtime="20201030 15:52:46.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.489" endtime="20201030 15:52:46.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.507" endtime="20201030 15:52:46.526"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.506" endtime="20201030 15:52:46.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.504" endtime="20201030 15:52:46.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.140" endtime="20201030 15:52:46.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.139" endtime="20201030 15:52:46.528"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.536" endtime="20201030 15:52:46.551"></status>
</kw>
<msg timestamp="20201030 15:52:46.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.535" endtime="20201030 15:52:46.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.553" endtime="20201030 15:52:46.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.556" endtime="20201030 15:52:46.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.532" endtime="20201030 15:52:46.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.530" endtime="20201030 15:52:46.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.566" endtime="20201030 15:52:46.873"></status>
</kw>
<msg timestamp="20201030 15:52:46.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.564" endtime="20201030 15:52:46.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.877" endtime="20201030 15:52:46.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.886" endtime="20201030 15:52:46.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.561" endtime="20201030 15:52:46.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.559" endtime="20201030 15:52:46.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:46.892" level="INFO">${RESULT} = [{'diff': 1.3235999999999803e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3263999999998943e-05}, {'diff': 1.3861000000000429e-05}, {'diff': 1.3847000000000859e-05}, {'diff': 1.3264000000002413e-...</msg>
<status status="PASS" starttime="20201030 15:52:46.889" endtime="20201030 15:52:46.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:46.897" level="INFO">${ACCURACY} = {'diff': [1.3235999999999803e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3264000000002413e-05, 1.3292000000001553e-05, 1.3264000000002413e-05...</msg>
<status status="PASS" starttime="20201030 15:52:46.893" endtime="20201030 15:52:46.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.902" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:52:46.901" endtime="20201030 15:52:46.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.905" level="INFO">VALUE: [1.3235999999999803e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3861000000000429e-05, 1.3847000000000859e-05, 1.3264000000002413e-05, 1.3292000000001553e-05, 1.3264000000002413e-05, 1.3860999999996959e-05, 1.3874999999999998e-05, 1.3874999999999998e-05, 1.3249999999999373e-05, 1.3847000000000859e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3222999999999707e-05, 1.3250000000002843e-05, 1.3249999999999373e-05, 1.3915999999999235e-05, 1.3263999999998943e-05, 1.3833000000001289e-05, 1.3236000000003273e-05, 1.2624999999998748e-05, 1.3847000000000859e-05, 1.3249999999999373e-05, 1.3249999999999373e-05, 1.3195000000000567e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.384699999999739e-05, 1.3264000000002413e-05, 1.2680000000001024e-05, 1.3847000000000859e-05, 1.2666000000001454e-05, 1.3249999999999373e-05, 1.3221999999996764e-05, 1.3847000000000859e-05, 1.2651999999998415e-05, 1.3848000000000332e-05, 1.3277999999998513e-05, 1.3291999999998083e-05, 1.3847000000000859e-05, 1.3874999999999998e-05, 1.3263999999998943e-05, 1.3249999999999373e-05, 1.3263999999998943e-05, 1.3250000000002843e-05]</msg>
<status status="PASS" starttime="20201030 15:52:46.903" endtime="20201030 15:52:46.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.898" endtime="20201030 15:52:46.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:46.913" endtime="20201030 15:52:46.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.911" endtime="20201030 15:52:46.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.909" endtime="20201030 15:52:46.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.529" endtime="20201030 15:52:46.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.528" endtime="20201030 15:52:46.935"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.944" endtime="20201030 15:52:46.959"></status>
</kw>
<msg timestamp="20201030 15:52:46.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.942" endtime="20201030 15:52:46.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.961" endtime="20201030 15:52:46.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.963" endtime="20201030 15:52:46.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.939" endtime="20201030 15:52:46.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.937" endtime="20201030 15:52:46.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.972" endtime="20201030 15:52:47.259"></status>
</kw>
<msg timestamp="20201030 15:52:47.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:46.971" endtime="20201030 15:52:47.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022705222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.263" endtime="20201030 15:52:47.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.271" endtime="20201030 15:52:47.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.968" endtime="20201030 15:52:47.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.966" endtime="20201030 15:52:47.274"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.278" level="INFO">${RESULT} = [{'diff': 1.4443999999998874e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.4471999999998014e-05}, {'diff': 1.4457999999998444e-05}, {'diff': 1.4473000000000957e-05}, {'diff': 1.3861000000000429e-...</msg>
<status status="PASS" starttime="20201030 15:52:47.274" endtime="20201030 15:52:47.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.282" level="INFO">${ACCURACY} = {'diff': [1.4443999999998874e-05, 1.4459000000001387e-05, 1.4471999999998014e-05, 1.4457999999998444e-05, 1.4473000000000957e-05, 1.3861000000000429e-05, 1.3834000000000762e-05, 1.4486000000001054e-05...</msg>
<status status="PASS" starttime="20201030 15:52:47.279" endtime="20201030 15:52:47.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.286" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.285" endtime="20201030 15:52:47.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.289" level="INFO">VALUE: [1.4443999999998874e-05, 1.4459000000001387e-05, 1.4471999999998014e-05, 1.4457999999998444e-05, 1.4473000000000957e-05, 1.3861000000000429e-05, 1.3834000000000762e-05, 1.4486000000001054e-05, 1.3902000000003134e-05, 1.3861000000000429e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.3847000000000859e-05, 1.505499999999993e-05, 1.4415999999999735e-05, 1.4458000000001914e-05, 1.5055999999999403e-05, 1.3861000000000429e-05, 1.4459000000001387e-05, 1.3874999999999998e-05, 1.4458000000001914e-05, 1.4459000000001387e-05, 1.5041999999999833e-05, 1.4472000000001484e-05, 1.4471999999998014e-05, 1.384699999999739e-05, 1.3861999999999902e-05, 1.4459000000001387e-05, 1.384699999999739e-05, 1.3861000000000429e-05, 1.4457999999998444e-05, 1.4472000000001484e-05, 1.3848000000000332e-05, 1.4457999999998444e-05, 1.4472999999997488e-05, 1.4375000000000498e-05, 1.3916999999998708e-05, 1.4445000000001817e-05, 1.3861000000000429e-05, 1.4527999999999763e-05, 1.4444000000002344e-05, 1.4457999999998444e-05, 1.3861000000000429e-05, 1.3861000000000429e-05, 1.4457999999998444e-05, 1.3847000000000859e-05, 1.4459000000001387e-05, 1.505499999999993e-05, 1.381899999999825e-05, 1.3833000000001289e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.287" endtime="20201030 15:52:47.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.283" endtime="20201030 15:52:47.290"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.294" endtime="20201030 15:52:47.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.292" endtime="20201030 15:52:47.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.291" endtime="20201030 15:52:47.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.936" endtime="20201030 15:52:47.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.935" endtime="20201030 15:52:47.316"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.328" endtime="20201030 15:52:47.345"></status>
</kw>
<msg timestamp="20201030 15:52:47.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.326" endtime="20201030 15:52:47.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.347" endtime="20201030 15:52:47.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.349" endtime="20201030 15:52:47.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.322" endtime="20201030 15:52:47.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.320" endtime="20201030 15:52:47.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.359" endtime="20201030 15:52:47.644"></status>
</kw>
<msg timestamp="20201030 15:52:47.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029233431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.357" endtime="20201030 15:52:47.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029233431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.648" endtime="20201030 15:52:47.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.657" endtime="20201030 15:52:47.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.354" endtime="20201030 15:52:47.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.353" endtime="20201030 15:52:47.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:47.663" level="INFO">${RESULT} = [{'diff': 1.5055999999999403e-05}, {'diff': 1.50689999999995e-05}, {'diff': 1.5651999999997945e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.565300000000089e-05}, {'diff': 1.5679999999997085e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:47.660" endtime="20201030 15:52:47.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:47.667" level="INFO">${ACCURACY} = {'diff': [1.5055999999999403e-05, 1.50689999999995e-05, 1.5651999999997945e-05, 1.505499999999993e-05, 1.565300000000089e-05, 1.5679999999997085e-05, 1.5138999999997349e-05, 1.5679999999997085e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:47.664" endtime="20201030 15:52:47.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.672" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:52:47.671" endtime="20201030 15:52:47.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.674" level="INFO">VALUE: [1.5055999999999403e-05, 1.50689999999995e-05, 1.5651999999997945e-05, 1.505499999999993e-05, 1.565300000000089e-05, 1.5679999999997085e-05, 1.5138999999997349e-05, 1.5679999999997085e-05, 1.563900000000132e-05, 1.505499999999993e-05, 1.5083000000002539e-05, 1.561099999999871e-05, 1.565300000000089e-05, 1.5679999999997085e-05, 1.563899999999785e-05, 1.5708999999999168e-05, 1.5070000000002443e-05, 1.5666000000000985e-05, 1.5681000000000028e-05, 1.50689999999995e-05, 1.505499999999993e-05, 1.5666000000000985e-05, 1.5666000000000985e-05, 1.5069999999998973e-05, 1.50689999999995e-05, 1.565300000000089e-05, 1.5651999999997945e-05, 1.5056000000002873e-05, 1.5721999999999264e-05, 1.566700000000046e-05, 1.5666000000000985e-05, 1.5084000000002012e-05, 1.5069999999998973e-05, 1.5666000000000985e-05, 1.5666000000000985e-05, 1.5070000000002443e-05, 1.5681000000000028e-05, 1.5125000000001249e-05, 1.5069000000002969e-05, 1.566700000000046e-05, 1.566700000000046e-05, 1.5721999999999264e-05, 1.50689999999995e-05, 1.566700000000046e-05, 1.504100000000036e-05, 1.5680000000000555e-05, 1.505499999999993e-05, 1.5070000000002443e-05, 1.5680000000000555e-05, 1.5750000000001874e-05]</msg>
<status status="PASS" starttime="20201030 15:52:47.673" endtime="20201030 15:52:47.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.668" endtime="20201030 15:52:47.677"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:47.680" endtime="20201030 15:52:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.679" endtime="20201030 15:52:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.678" endtime="20201030 15:52:47.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.317" endtime="20201030 15:52:47.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.316" endtime="20201030 15:52:47.701"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.710" endtime="20201030 15:52:47.726"></status>
</kw>
<msg timestamp="20201030 15:52:47.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.708" endtime="20201030 15:52:47.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:47.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:47.727" endtime="20201030 15:52:47.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.730" endtime="20201030 15:52:47.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.706" endtime="20201030 15:52:47.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.703" endtime="20201030 15:52:47.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:47.739" endtime="20201030 15:52:48.025"></status>
</kw>
<msg timestamp="20201030 15:52:48.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:47.737" endtime="20201030 15:52:48.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022450972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.029" endtime="20201030 15:52:48.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.037" endtime="20201030 15:52:48.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.735" endtime="20201030 15:52:48.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.733" endtime="20201030 15:52:48.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.044" level="INFO">${RESULT} = [{'diff': 1.6263999999998474e-05}, {'diff': 1.6250000000002374e-05}, {'diff': 1.629100000000161e-05}, {'diff': 1.627700000000204e-05}, {'diff': 1.6208000000000194e-05}, {'diff': 1.630500000000118e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:48.041" endtime="20201030 15:52:48.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.051" level="INFO">${ACCURACY} = {'diff': [1.6263999999998474e-05, 1.6250000000002374e-05, 1.629100000000161e-05, 1.627700000000204e-05, 1.6208000000000194e-05, 1.630500000000118e-05, 1.6263999999998474e-05, 1.68889999999991e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 15:52:48.045" endtime="20201030 15:52:48.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.056" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.055" endtime="20201030 15:52:48.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.058" level="INFO">VALUE: [1.6263999999998474e-05, 1.6250000000002374e-05, 1.629100000000161e-05, 1.627700000000204e-05, 1.6208000000000194e-05, 1.630500000000118e-05, 1.6263999999998474e-05, 1.68889999999991e-05, 1.566700000000046e-05, 1.687499999999953e-05, 1.627700000000204e-05, 1.630500000000118e-05, 1.6263999999998474e-05, 1.690300000000214e-05, 1.6264000000001944e-05, 1.6887999999999626e-05, 1.6235999999999334e-05, 1.627700000000204e-05, 1.6875000000003e-05, 1.6250000000002374e-05, 1.627700000000204e-05, 1.629099999999814e-05, 1.6249999999998904e-05, 1.6278000000001513e-05, 1.687499999999953e-05, 1.680499999999821e-05, 1.686099999999996e-05, 1.6250000000002374e-05, 1.6249999999998904e-05, 1.687499999999953e-05, 1.6277999999998044e-05, 1.6862000000002902e-05, 1.6263999999998474e-05, 1.6277999999998044e-05, 1.6249999999998904e-05, 1.6263999999998474e-05, 1.6292000000001083e-05, 1.6194000000000625e-05, 1.6278000000001513e-05, 1.630500000000118e-05, 1.631900000000075e-05, 1.687499999999953e-05, 1.629100000000161e-05, 1.6263999999998474e-05, 1.687499999999953e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.566700000000046e-05, 1.686099999999996e-05, 1.565300000000089e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.057" endtime="20201030 15:52:48.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.052" endtime="20201030 15:52:48.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.063" endtime="20201030 15:52:48.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.061" endtime="20201030 15:52:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.060" endtime="20201030 15:52:48.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.702" endtime="20201030 15:52:48.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:47.701" endtime="20201030 15:52:48.084"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.092" endtime="20201030 15:52:48.107"></status>
</kw>
<msg timestamp="20201030 15:52:48.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.091" endtime="20201030 15:52:48.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.109" endtime="20201030 15:52:48.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.111" endtime="20201030 15:52:48.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.088" endtime="20201030 15:52:48.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.086" endtime="20201030 15:52:48.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.120" endtime="20201030 15:52:48.407"></status>
</kw>
<msg timestamp="20201030 15:52:48.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.119" endtime="20201030 15:52:48.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.411" endtime="20201030 15:52:48.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.419" endtime="20201030 15:52:48.421"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.116" endtime="20201030 15:52:48.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.114" endtime="20201030 15:52:48.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.426" level="INFO">${RESULT} = [{'diff': 1.68889999999991e-05}, {'diff': 1.813900000000035e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.7486000000000584e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.688900000000257e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:48.423" endtime="20201030 15:52:48.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.430" level="INFO">${ACCURACY} = {'diff': [1.68889999999991e-05, 1.813900000000035e-05, 1.7472000000001014e-05, 1.7486000000000584e-05, 1.7472000000001014e-05, 1.688900000000257e-05, 1.7486000000000584e-05, 1.690299999999867e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 15:52:48.427" endtime="20201030 15:52:48.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.435" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.434" endtime="20201030 15:52:48.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.437" level="INFO">VALUE: [1.68889999999991e-05, 1.813900000000035e-05, 1.7472000000001014e-05, 1.7486000000000584e-05, 1.7472000000001014e-05, 1.688900000000257e-05, 1.7486000000000584e-05, 1.690299999999867e-05, 1.7457999999997975e-05, 1.686099999999996e-05, 1.7485999999997115e-05, 1.68889999999991e-05, 1.7487000000000058e-05, 1.687499999999953e-05, 1.7472000000001014e-05, 1.7458000000001445e-05, 1.7486000000000584e-05, 1.7473000000000488e-05, 1.7487000000000058e-05, 1.688900000000257e-05, 1.6887999999999626e-05, 1.7486000000000584e-05, 1.687499999999953e-05, 1.7472000000001014e-05, 1.7486000000000584e-05, 1.7486000000000584e-05, 1.7473000000000488e-05, 1.7486000000000584e-05, 1.687499999999953e-05, 1.7487000000000058e-05, 1.7486000000000584e-05, 1.686099999999996e-05, 1.7486000000000584e-05, 1.7472000000001014e-05, 1.7472000000001014e-05, 1.755499999999896e-05, 1.809700000000164e-05, 1.7486000000000584e-05, 1.687499999999953e-05, 1.7458000000001445e-05, 1.7486000000000584e-05, 1.743099999999831e-05, 1.68889999999991e-05, 1.687499999999953e-05, 1.7473000000000488e-05, 1.7471999999997545e-05, 1.7458000000001445e-05, 1.687499999999953e-05, 1.7486000000000584e-05, 1.7457999999997975e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.436" endtime="20201030 15:52:48.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.431" endtime="20201030 15:52:48.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.442" endtime="20201030 15:52:48.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.441" endtime="20201030 15:52:48.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.439" endtime="20201030 15:52:48.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.085" endtime="20201030 15:52:48.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.084" endtime="20201030 15:52:48.463"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.472" endtime="20201030 15:52:48.488"></status>
</kw>
<msg timestamp="20201030 15:52:48.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.470" endtime="20201030 15:52:48.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.489" endtime="20201030 15:52:48.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.492" endtime="20201030 15:52:48.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.467" endtime="20201030 15:52:48.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.465" endtime="20201030 15:52:48.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.501" endtime="20201030 15:52:48.788"></status>
</kw>
<msg timestamp="20201030 15:52:48.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.499" endtime="20201030 15:52:48.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023193889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023211972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.792" endtime="20201030 15:52:48.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.800" endtime="20201030 15:52:48.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.497" endtime="20201030 15:52:48.803"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.495" endtime="20201030 15:52:48.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:48.807" level="INFO">${RESULT} = [{'diff': 1.808300000000207e-05}, {'diff': 1.809699999999817e-05}, {'diff': 1.8083999999998074e-05}, {'diff': 1.8097999999997644e-05}, {'diff': 1.868099999999956e-05}, {'diff': 1.8749999999997935e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:48.804" endtime="20201030 15:52:48.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:48.811" level="INFO">${ACCURACY} = {'diff': [1.808300000000207e-05, 1.809699999999817e-05, 1.8083999999998074e-05, 1.8097999999997644e-05, 1.868099999999956e-05, 1.8749999999997935e-05, 1.80829999999986e-05, 1.806899999999903e-05, 1.80...</msg>
<status status="PASS" starttime="20201030 15:52:48.808" endtime="20201030 15:52:48.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.816" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:52:48.815" endtime="20201030 15:52:48.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.818" level="INFO">VALUE: [1.808300000000207e-05, 1.809699999999817e-05, 1.8083999999998074e-05, 1.8097999999997644e-05, 1.868099999999956e-05, 1.8749999999997935e-05, 1.80829999999986e-05, 1.806899999999903e-05, 1.808300000000207e-05, 1.8693999999999655e-05, 1.808300000000207e-05, 1.8000000000000654e-05, 1.8693999999999655e-05, 1.868099999999956e-05, 1.811099999999774e-05, 1.866699999999999e-05, 1.8693999999999655e-05, 1.80829999999986e-05, 1.87089999999987e-05, 1.8084000000001543e-05, 1.869499999999913e-05, 1.869499999999913e-05, 1.809699999999817e-05, 1.8055999999998934e-05, 1.8680000000000085e-05, 1.87089999999987e-05, 1.80829999999986e-05, 1.8749999999997935e-05, 1.8680000000000085e-05, 1.8721999999998795e-05, 1.8693999999999655e-05, 1.8084000000001543e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.8694000000003125e-05, 1.8666000000000516e-05, 1.808300000000207e-05, 1.8693999999999655e-05, 1.809700000000164e-05, 1.80829999999986e-05, 1.8027999999999794e-05, 1.80829999999986e-05, 1.811099999999774e-05, 1.87089999999987e-05, 1.87089999999987e-05, 1.868099999999956e-05, 1.8069999999998504e-05, 1.806899999999903e-05, 1.8084000000001543e-05, 1.8721999999998795e-05]</msg>
<status status="PASS" starttime="20201030 15:52:48.817" endtime="20201030 15:52:48.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.812" endtime="20201030 15:52:48.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:48.824" endtime="20201030 15:52:48.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.822" endtime="20201030 15:52:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.821" endtime="20201030 15:52:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.464" endtime="20201030 15:52:48.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.463" endtime="20201030 15:52:48.845"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.854" endtime="20201030 15:52:48.869"></status>
</kw>
<msg timestamp="20201030 15:52:48.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.852" endtime="20201030 15:52:48.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:48.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:48.870" endtime="20201030 15:52:48.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.873" endtime="20201030 15:52:48.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.849" endtime="20201030 15:52:48.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.847" endtime="20201030 15:52:48.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:48.882" endtime="20201030 15:52:49.173"></status>
</kw>
<msg timestamp="20201030 15:52:49.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:48.881" endtime="20201030 15:52:49.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022267444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.177" endtime="20201030 15:52:49.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.186" endtime="20201030 15:52:49.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.878" endtime="20201030 15:52:49.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.876" endtime="20201030 15:52:49.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.193" level="INFO">${RESULT} = [{'diff': 1.87089999999987e-05}, {'diff': 1.990300000000167e-05}, {'diff': 1.9972000000000045e-05}, {'diff': 1.987499999999906e-05}, {'diff': 1.9278000000001044e-05}, {'diff': 1.868099999999956e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:49.189" endtime="20201030 15:52:49.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.198" level="INFO">${ACCURACY} = {'diff': [1.87089999999987e-05, 1.990300000000167e-05, 1.9972000000000045e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.868099999999956e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.869...</msg>
<status status="PASS" starttime="20201030 15:52:49.194" endtime="20201030 15:52:49.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.202" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.201" endtime="20201030 15:52:49.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.205" level="INFO">VALUE: [1.87089999999987e-05, 1.990300000000167e-05, 1.9972000000000045e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.868099999999956e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.8693999999999655e-05, 1.9250000000001904e-05, 1.8721999999998795e-05, 1.987499999999906e-05, 1.9292000000000614e-05, 1.9291999999997145e-05, 1.927700000000157e-05, 1.927700000000157e-05, 1.9292000000000614e-05, 1.930499999999724e-05, 1.983300000000035e-05, 1.993100000000081e-05, 1.9320000000003223e-05, 1.9319999999999754e-05, 1.98890000000021e-05, 1.9292000000000614e-05, 1.930500000000071e-05, 1.8694000000003125e-05, 1.990300000000167e-05, 1.9292000000000614e-05, 1.9305999999996715e-05, 1.990300000000167e-05, 1.931900000000028e-05, 1.9278000000001044e-05, 1.9306000000000184e-05, 1.9306000000000184e-05, 1.9278000000001044e-05, 1.9221999999999295e-05, 1.868099999999956e-05, 1.930500000000071e-05, 1.990300000000167e-05, 1.9902000000002196e-05, 1.8693999999999655e-05, 1.9292000000000614e-05, 1.983300000000035e-05, 1.9236000000002335e-05, 1.984699999999992e-05, 1.9249999999998435e-05, 1.9292000000000614e-05, 1.9306000000000184e-05, 1.929100000000114e-05, 1.929100000000114e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.203" endtime="20201030 15:52:49.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.199" endtime="20201030 15:52:49.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.210" endtime="20201030 15:52:49.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.208" endtime="20201030 15:52:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.207" endtime="20201030 15:52:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.846" endtime="20201030 15:52:49.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:48.845" endtime="20201030 15:52:49.230"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.239" endtime="20201030 15:52:49.254"></status>
</kw>
<msg timestamp="20201030 15:52:49.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.238" endtime="20201030 15:52:49.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.256" endtime="20201030 15:52:49.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.258" endtime="20201030 15:52:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.235" endtime="20201030 15:52:49.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.233" endtime="20201030 15:52:49.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.267" endtime="20201030 15:52:49.555"></status>
</kw>
<msg timestamp="20201030 15:52:49.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.266" endtime="20201030 15:52:49.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022301181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022321694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.559" endtime="20201030 15:52:49.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.568" endtime="20201030 15:52:49.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.263" endtime="20201030 15:52:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.261" endtime="20201030 15:52:49.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.574" level="INFO">${RESULT} = [{'diff': 2.051299999999978e-05}, {'diff': 1.987499999999906e-05}, {'diff': 1.98890000000021e-05}, {'diff': 2.0499999999999685e-05}, {'diff': 2.111100000000074e-05}, {'diff': 2.0486000000000115e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:49.571" endtime="20201030 15:52:49.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.578" level="INFO">${ACCURACY} = {'diff': [2.051299999999978e-05, 1.987499999999906e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 2.111100000000074e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 15:52:49.575" endtime="20201030 15:52:49.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.583" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.582" endtime="20201030 15:52:49.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.585" level="INFO">VALUE: [2.051299999999978e-05, 1.987499999999906e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 2.111100000000074e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0555999999997965e-05, 2.0486000000000115e-05, 1.988899999999863e-05, 2.0486000000000115e-05, 1.983300000000035e-05, 2.0514000000002724e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 1.990300000000167e-05, 1.9901999999998726e-05, 1.987500000000253e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 1.99029999999982e-05, 1.990300000000167e-05, 2.0500000000003155e-05, 2.0514000000002724e-05, 2.0500000000003155e-05, 2.0485999999996646e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.0499999999999685e-05, 2.0500000000003155e-05, 2.0513999999999255e-05, 2.054100000000239e-05, 1.986099999999949e-05, 2.0513999999999255e-05, 1.9901999999998726e-05, 2.0513999999999255e-05, 2.0514000000002724e-05, 2.10830000000016e-05, 2.051300000000325e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 1.99029999999982e-05, 2.0514000000002724e-05, 1.9972000000000045e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.584" endtime="20201030 15:52:49.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.579" endtime="20201030 15:52:49.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.590" endtime="20201030 15:52:49.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.589" endtime="20201030 15:52:49.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.588" endtime="20201030 15:52:49.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.231" endtime="20201030 15:52:49.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.231" endtime="20201030 15:52:49.611"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.620" endtime="20201030 15:52:49.637"></status>
</kw>
<msg timestamp="20201030 15:52:49.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.618" endtime="20201030 15:52:49.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:49.638" endtime="20201030 15:52:49.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.641" endtime="20201030 15:52:49.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.616" endtime="20201030 15:52:49.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.614" endtime="20201030 15:52:49.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.650" endtime="20201030 15:52:49.938"></status>
</kw>
<msg timestamp="20201030 15:52:49.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.648" endtime="20201030 15:52:49.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023092222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:49.943" endtime="20201030 15:52:49.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:49.951" endtime="20201030 15:52:49.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.646" endtime="20201030 15:52:49.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.644" endtime="20201030 15:52:49.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:49.957" level="INFO">${RESULT} = [{'diff': 2.17090000000017e-05}, {'diff': 2.112500000000031e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.166699999999952e-05}, {'diff': 2.170899999999823e-05}, {'diff': 2.163900000000038e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:49.954" endtime="20201030 15:52:49.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:49.961" level="INFO">${ACCURACY} = {'diff': [2.17090000000017e-05, 2.112500000000031e-05, 2.1750000000000935e-05, 2.166699999999952e-05, 2.170899999999823e-05, 2.163900000000038e-05, 2.10969999999977e-05, 2.170899999999823e-05, 2.11669...</msg>
<status status="PASS" starttime="20201030 15:52:49.958" endtime="20201030 15:52:49.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.966" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:52:49.965" endtime="20201030 15:52:49.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:49.968" level="INFO">VALUE: [2.17090000000017e-05, 2.112500000000031e-05, 2.1750000000000935e-05, 2.166699999999952e-05, 2.170899999999823e-05, 2.163900000000038e-05, 2.10969999999977e-05, 2.170899999999823e-05, 2.116699999999902e-05, 2.10969999999977e-05, 2.1722000000001795e-05, 2.111100000000074e-05, 2.1750000000000935e-05, 2.169500000000213e-05, 2.1708000000002226e-05, 2.1693999999999186e-05, 2.112500000000031e-05, 2.1112000000000214e-05, 2.113899999999988e-05, 2.108299999999813e-05, 2.1722000000001795e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.112500000000031e-05, 2.112500000000031e-05, 2.1722000000001795e-05, 2.111100000000074e-05, 2.1098000000000644e-05, 2.169500000000213e-05, 2.10969999999977e-05, 2.109700000000117e-05, 2.111100000000074e-05, 2.1722000000001795e-05, 2.111100000000074e-05, 2.1652000000000476e-05, 2.1707999999998756e-05, 2.111099999999727e-05, 2.111099999999727e-05, 2.109700000000117e-05, 2.1735999999997896e-05, 2.112500000000031e-05, 2.1707999999998756e-05, 2.112500000000031e-05, 2.163900000000038e-05, 2.172300000000127e-05, 2.111099999999727e-05, 2.115299999999945e-05, 2.111100000000074e-05, 2.111100000000074e-05, 2.1722000000001795e-05]</msg>
<status status="PASS" starttime="20201030 15:52:49.967" endtime="20201030 15:52:49.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.962" endtime="20201030 15:52:49.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:49.974" endtime="20201030 15:52:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.973" endtime="20201030 15:52:49.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.972" endtime="20201030 15:52:49.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.612" endtime="20201030 15:52:49.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.611" endtime="20201030 15:52:49.995"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.004" endtime="20201030 15:52:50.019"></status>
</kw>
<msg timestamp="20201030 15:52:50.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.002" endtime="20201030 15:52:50.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.021" endtime="20201030 15:52:50.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.023" endtime="20201030 15:52:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.000" endtime="20201030 15:52:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.997" endtime="20201030 15:52:50.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.032" endtime="20201030 15:52:50.319"></status>
</kw>
<msg timestamp="20201030 15:52:50.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.031" endtime="20201030 15:52:50.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022187653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022210056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.323" endtime="20201030 15:52:50.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.331" endtime="20201030 15:52:50.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.028" endtime="20201030 15:52:50.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.026" endtime="20201030 15:52:50.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.338" level="INFO">${RESULT} = [{'diff': 2.240299999999723e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.168100000000256e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2901999999998257e-05}, {'diff': 2.231899999999981e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:50.334" endtime="20201030 15:52:50.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.343" level="INFO">${ACCURACY} = {'diff': [2.240299999999723e-05, 2.1750000000000935e-05, 2.168100000000256e-05, 2.231899999999981e-05, 2.2901999999998257e-05, 2.231899999999981e-05, 2.2319999999999285e-05, 2.29030000000012e-05, 2.23...</msg>
<status status="PASS" starttime="20201030 15:52:50.339" endtime="20201030 15:52:50.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.347" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.346" endtime="20201030 15:52:50.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.350" level="INFO">VALUE: [2.240299999999723e-05, 2.1750000000000935e-05, 2.168100000000256e-05, 2.231899999999981e-05, 2.2901999999998257e-05, 2.231899999999981e-05, 2.2319999999999285e-05, 2.29030000000012e-05, 2.230500000000024e-05, 2.2319999999999285e-05, 2.170899999999823e-05, 2.2319999999999285e-05, 2.231899999999981e-05, 2.233300000000285e-05, 2.2361999999997995e-05, 2.293100000000034e-05, 2.293100000000034e-05, 2.293100000000034e-05, 2.1722000000001795e-05, 2.230500000000024e-05, 2.2305999999999715e-05, 2.2916000000001296e-05, 2.172300000000127e-05, 2.288900000000163e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.236100000000199e-05, 2.231899999999981e-05, 2.1707999999998756e-05, 2.2319999999999285e-05, 2.170899999999823e-05, 2.233299999999938e-05, 2.231899999999981e-05, 2.291700000000077e-05, 2.2930000000000866e-05, 2.231899999999981e-05, 2.231899999999981e-05, 2.233299999999938e-05, 2.230500000000024e-05, 2.233299999999938e-05, 2.2319999999999285e-05, 2.233299999999938e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.236100000000199e-05, 2.291700000000077e-05, 2.2319999999999285e-05, 2.2333999999998855e-05, 2.2264000000001005e-05, 2.2930000000000866e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.348" endtime="20201030 15:52:50.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.344" endtime="20201030 15:52:50.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.355" endtime="20201030 15:52:50.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.353" endtime="20201030 15:52:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.352" endtime="20201030 15:52:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.996" endtime="20201030 15:52:50.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:49.995" endtime="20201030 15:52:50.376"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.385" endtime="20201030 15:52:50.401"></status>
</kw>
<msg timestamp="20201030 15:52:50.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.383" endtime="20201030 15:52:50.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.402" endtime="20201030 15:52:50.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.405" endtime="20201030 15:52:50.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.380" endtime="20201030 15:52:50.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.378" endtime="20201030 15:52:50.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.414" endtime="20201030 15:52:50.702"></status>
</kw>
<msg timestamp="20201030 15:52:50.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.412" endtime="20201030 15:52:50.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022315444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022338347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.707" endtime="20201030 15:52:50.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.717" endtime="20201030 15:52:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.409" endtime="20201030 15:52:50.719"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.408" endtime="20201030 15:52:50.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.724" level="INFO">${RESULT} = [{'diff': 2.29030000000012e-05}, {'diff': 2.413900000000288e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.35970000000002e-05}, {'diff': 2.3527999999998356e-05}, {'diff': 2.291700000000077e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:50.721" endtime="20201030 15:52:50.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:50.728" level="INFO">${ACCURACY} = {'diff': [2.29030000000012e-05, 2.413900000000288e-05, 2.3514000000002255e-05, 2.35970000000002e-05, 2.3527999999998356e-05, 2.291700000000077e-05, 2.3513999999998786e-05, 2.294499999999991e-05, 2.351...</msg>
<status status="PASS" starttime="20201030 15:52:50.725" endtime="20201030 15:52:50.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.733" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:52:50.731" endtime="20201030 15:52:50.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.735" level="INFO">VALUE: [2.29030000000012e-05, 2.413900000000288e-05, 2.3514000000002255e-05, 2.35970000000002e-05, 2.3527999999998356e-05, 2.291700000000077e-05, 2.3513999999998786e-05, 2.294499999999991e-05, 2.3513999999998786e-05, 2.2930000000000866e-05, 2.291700000000077e-05, 2.3514000000002255e-05, 2.3526999999998882e-05, 2.3513999999998786e-05, 2.2944000000000436e-05, 2.29030000000012e-05, 2.3582999999997162e-05, 2.3526999999998882e-05, 2.291700000000077e-05, 2.291700000000077e-05, 2.29030000000012e-05, 2.347299999999955e-05, 2.358300000000063e-05, 2.291700000000077e-05, 2.2916000000001296e-05, 2.3527999999998356e-05, 2.3472000000000076e-05, 2.29030000000012e-05, 2.3528000000001825e-05, 2.3499999999999216e-05, 2.3527999999998356e-05, 2.286099999999902e-05, 2.3512999999999312e-05, 2.3514000000002255e-05, 2.291700000000077e-05, 2.3513999999998786e-05, 2.293099999999687e-05, 2.2916000000001296e-05, 2.291700000000077e-05, 2.284699999999945e-05, 2.412499999999984e-05, 2.295899999999948e-05, 2.3556000000000965e-05, 2.3528000000001825e-05, 2.3541999999997926e-05, 2.3526999999998882e-05, 2.2916000000001296e-05, 2.3555999999997496e-05, 2.3527999999998356e-05, 2.3485999999999646e-05]</msg>
<status status="PASS" starttime="20201030 15:52:50.734" endtime="20201030 15:52:50.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.729" endtime="20201030 15:52:50.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.740" endtime="20201030 15:52:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.739" endtime="20201030 15:52:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.737" endtime="20201030 15:52:50.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.377" endtime="20201030 15:52:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.376" endtime="20201030 15:52:50.761"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.770" endtime="20201030 15:52:50.787"></status>
</kw>
<msg timestamp="20201030 15:52:50.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.768" endtime="20201030 15:52:50.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.789" endtime="20201030 15:52:50.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.791" endtime="20201030 15:52:50.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.766" endtime="20201030 15:52:50.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.763" endtime="20201030 15:52:50.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.800" endtime="20201030 15:52:51.087"></status>
</kw>
<msg timestamp="20201030 15:52:51.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.798" endtime="20201030 15:52:51.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023151639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023176361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.091" endtime="20201030 15:52:51.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.099" endtime="20201030 15:52:51.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.796" endtime="20201030 15:52:51.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.794" endtime="20201030 15:52:51.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.106" level="INFO">${RESULT} = [{'diff': 2.4721999999997857e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.416699999999855e-05}, {'diff': 2.4777999999999606e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.412499999999984e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:51.102" endtime="20201030 15:52:51.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.110" level="INFO">${ACCURACY} = {'diff': [2.4721999999997857e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.4777999999999606e-05, 2.4722000000001326e-05, 2.412499999999984e-05, 2.415300000000245e-05, 2.412499999999984e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 15:52:51.107" endtime="20201030 15:52:51.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.114" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.113" endtime="20201030 15:52:51.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.117" level="INFO">VALUE: [2.4721999999997857e-05, 2.411100000000027e-05, 2.416699999999855e-05, 2.4777999999999606e-05, 2.4722000000001326e-05, 2.412499999999984e-05, 2.415300000000245e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4750000000000466e-05, 2.4792000000002645e-05, 2.413900000000288e-05, 2.4735999999997427e-05, 2.4819999999998316e-05, 2.40970000000007e-05, 2.411100000000027e-05, 2.4735999999997427e-05, 2.4750000000000466e-05, 2.40970000000007e-05, 2.4764000000000036e-05, 2.4750000000000466e-05, 2.4721999999997857e-05, 2.4750000000000466e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.4179999999998647e-05, 2.4750000000000466e-05, 2.412499999999984e-05, 2.413899999999941e-05, 2.4708000000001756e-05, 2.4790999999999702e-05, 2.4750000000000466e-05, 2.4707999999998287e-05, 2.4736000000000896e-05, 2.412499999999984e-05, 2.4735999999997427e-05, 2.4749999999996997e-05, 2.41109999999968e-05, 2.4722000000001326e-05, 2.4735999999997427e-05, 2.412499999999984e-05, 2.413900000000288e-05, 2.4070000000001035e-05, 2.413899999999941e-05, 2.473700000000037e-05, 2.4735999999997427e-05, 2.4721999999997857e-05, 2.47230000000008e-05, 2.411100000000027e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.115" endtime="20201030 15:52:51.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.111" endtime="20201030 15:52:51.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.123" endtime="20201030 15:52:51.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.121" endtime="20201030 15:52:51.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.120" endtime="20201030 15:52:51.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.762" endtime="20201030 15:52:51.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.761" endtime="20201030 15:52:51.143"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.152" endtime="20201030 15:52:51.168"></status>
</kw>
<msg timestamp="20201030 15:52:51.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.150" endtime="20201030 15:52:51.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.169" endtime="20201030 15:52:51.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.171" endtime="20201030 15:52:51.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.148" endtime="20201030 15:52:51.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.146" endtime="20201030 15:52:51.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.180" endtime="20201030 15:52:51.467"></status>
</kw>
<msg timestamp="20201030 15:52:51.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.179" endtime="20201030 15:52:51.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022211778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022236514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.471" endtime="20201030 15:52:51.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.479" endtime="20201030 15:52:51.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.176" endtime="20201030 15:52:51.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.175" endtime="20201030 15:52:51.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.486" level="INFO">${RESULT} = [{'diff': 2.4735999999997427e-05}, {'diff': 2.5318999999999342e-05}, {'diff': 2.534700000000195e-05}, {'diff': 2.4722000000001326e-05}, {'diff': 2.5278000000000106e-05}, {'diff': 2.5346999999998482e-0...</msg>
<status status="PASS" starttime="20201030 15:52:51.482" endtime="20201030 15:52:51.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.493" level="INFO">${ACCURACY} = {'diff': [2.4735999999997427e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.4722000000001326e-05, 2.5278000000000106e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.4749999999996997e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:51.487" endtime="20201030 15:52:51.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.498" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.497" endtime="20201030 15:52:51.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.500" level="INFO">VALUE: [2.4735999999997427e-05, 2.5318999999999342e-05, 2.534700000000195e-05, 2.4722000000001326e-05, 2.5278000000000106e-05, 2.5346999999998482e-05, 2.5333999999998386e-05, 2.4749999999996997e-05, 2.534700000000195e-05, 2.5361999999997525e-05, 2.5332999999998912e-05, 2.533300000000238e-05, 2.536100000000152e-05, 2.5332999999998912e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.473700000000037e-05, 2.5332999999998912e-05, 2.5360999999998052e-05, 2.5332999999998912e-05, 2.4721999999997857e-05, 2.5320000000002285e-05, 2.590299999999726e-05, 2.533300000000238e-05, 2.5333999999998386e-05, 2.537500000000109e-05, 2.5320000000002285e-05, 2.5320000000002285e-05, 2.533300000000238e-05, 2.5985999999998677e-05, 2.4750000000000466e-05, 2.540300000000023e-05, 2.5318999999999342e-05, 2.5333999999998386e-05, 2.5277000000000632e-05, 2.5986000000002146e-05, 2.533300000000238e-05, 2.534700000000195e-05, 2.536100000000152e-05, 2.5334000000001855e-05, 2.5263000000001062e-05, 2.4736000000000896e-05, 2.5333999999998386e-05, 2.5916000000000827e-05, 2.5333999999998386e-05, 2.534700000000195e-05, 2.4735999999997427e-05, 2.4721999999997857e-05, 2.5346999999998482e-05, 2.4721999999997857e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.499" endtime="20201030 15:52:51.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.494" endtime="20201030 15:52:51.505"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.509" endtime="20201030 15:52:51.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.507" endtime="20201030 15:52:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.506" endtime="20201030 15:52:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.144" endtime="20201030 15:52:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.144" endtime="20201030 15:52:51.530"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.538" endtime="20201030 15:52:51.555"></status>
</kw>
<msg timestamp="20201030 15:52:51.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.537" endtime="20201030 15:52:51.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.556" endtime="20201030 15:52:51.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.559" endtime="20201030 15:52:51.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.534" endtime="20201030 15:52:51.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.532" endtime="20201030 15:52:51.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.568" endtime="20201030 15:52:51.855"></status>
</kw>
<msg timestamp="20201030 15:52:51.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.566" endtime="20201030 15:52:51.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022354472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.859" endtime="20201030 15:52:51.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.868" endtime="20201030 15:52:51.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.564" endtime="20201030 15:52:51.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.562" endtime="20201030 15:52:51.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.875" level="INFO">${RESULT} = [{'diff': 2.6569000000000592e-05}, {'diff': 2.6596999999999732e-05}, {'diff': 2.6569000000000592e-05}, {'diff': 2.6541000000001452e-05}, {'diff': 2.5957999999999537e-05}, {'diff': 2.6555000000001022e-...</msg>
<status status="PASS" starttime="20201030 15:52:51.871" endtime="20201030 15:52:51.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:51.879" level="INFO">${ACCURACY} = {'diff': [2.6569000000000592e-05, 2.6596999999999732e-05, 2.6569000000000592e-05, 2.6541000000001452e-05, 2.5957999999999537e-05, 2.6555000000001022e-05, 2.5943999999999967e-05, 2.7180000000001647e-05...</msg>
<status status="PASS" starttime="20201030 15:52:51.876" endtime="20201030 15:52:51.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.883" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:52:51.882" endtime="20201030 15:52:51.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.886" level="INFO">VALUE: [2.6569000000000592e-05, 2.6596999999999732e-05, 2.6569000000000592e-05, 2.6541000000001452e-05, 2.5957999999999537e-05, 2.6555000000001022e-05, 2.5943999999999967e-05, 2.7180000000001647e-05, 2.588899999999769e-05, 2.593099999999987e-05, 2.5943999999999967e-05, 2.6540999999997983e-05, 2.5943999999999967e-05, 2.6526999999998413e-05, 2.594499999999944e-05, 2.5930000000000397e-05, 2.6527999999997887e-05, 2.6513999999998317e-05, 2.6556000000000496e-05, 2.6541000000001452e-05, 2.6556000000000496e-05, 2.6541000000001452e-05, 2.6513999999998317e-05, 2.594499999999944e-05, 2.6542000000000926e-05, 2.59170000000003e-05, 2.6555999999997026e-05, 2.6541999999997457e-05, 2.6528000000001356e-05, 2.6555999999997026e-05, 2.6540999999997983e-05, 2.6513999999998317e-05, 2.6570000000000066e-05, 2.6555000000001022e-05, 2.6556000000000496e-05, 2.59170000000003e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6555000000001022e-05, 2.593099999999987e-05, 2.6527999999997887e-05, 2.6542000000000926e-05, 2.593099999999987e-05, 2.6528000000001356e-05, 2.6542000000000926e-05, 2.6541999999997457e-05, 2.6527999999997887e-05, 2.6555000000001022e-05, 2.594500000000291e-05, 2.586100000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.884" endtime="20201030 15:52:51.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.880" endtime="20201030 15:52:51.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.891" endtime="20201030 15:52:51.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.889" endtime="20201030 15:52:51.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.888" endtime="20201030 15:52:51.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.530" endtime="20201030 15:52:51.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.530" endtime="20201030 15:52:51.911"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.920" endtime="20201030 15:52:51.937"></status>
</kw>
<msg timestamp="20201030 15:52:51.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.919" endtime="20201030 15:52:51.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.938" endtime="20201030 15:52:51.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.941" endtime="20201030 15:52:51.942"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.916" endtime="20201030 15:52:51.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.914" endtime="20201030 15:52:51.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.950" endtime="20201030 15:52:52.236"></status>
</kw>
<msg timestamp="20201030 15:52:52.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.948" endtime="20201030 15:52:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023141944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.241" endtime="20201030 15:52:52.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.249" endtime="20201030 15:52:52.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.946" endtime="20201030 15:52:52.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.944" endtime="20201030 15:52:52.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.255" level="INFO">${RESULT} = [{'diff': 2.7152000000002507e-05}, {'diff': 2.715300000000198e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.7749999999999997e-05}, {'diff': 2.7777999999999137e-05}, {'diff': 2.7763999999999567e-05...</msg>
<status status="PASS" starttime="20201030 15:52:52.252" endtime="20201030 15:52:52.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.260" level="INFO">${ACCURACY} = {'diff': [2.7152000000002507e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.7124999999999372e-05, 2.770900000000076e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:52:52.256" endtime="20201030 15:52:52.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.264" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.263" endtime="20201030 15:52:52.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.266" level="INFO">VALUE: [2.7152000000002507e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7777999999999137e-05, 2.7763999999999567e-05, 2.7124999999999372e-05, 2.770900000000076e-05, 2.7138999999998942e-05, 2.7749999999999997e-05, 2.715299999999851e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7138999999998942e-05, 2.715299999999851e-05, 2.713900000000241e-05, 2.7138999999998942e-05, 2.7749999999999997e-05, 2.7138999999998942e-05, 2.7138999999998942e-05, 2.712500000000284e-05, 2.7749999999999997e-05, 2.7764000000003036e-05, 2.7777999999999137e-05, 2.7792000000002176e-05, 2.716699999999808e-05, 2.7736000000000427e-05, 2.715300000000198e-05, 2.718100000000112e-05, 2.7138999999998942e-05, 2.7138999999998942e-05, 2.7124999999999372e-05, 2.7776999999999663e-05, 2.7138999999998942e-05, 2.7110999999999802e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.7806000000001746e-05, 2.7222000000000357e-05, 2.7138999999998942e-05, 2.715300000000198e-05, 2.713900000000241e-05, 2.7124999999999372e-05, 2.716700000000155e-05, 2.7749999999999997e-05, 2.715299999999851e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.713900000000241e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.265" endtime="20201030 15:52:52.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.260" endtime="20201030 15:52:52.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.272" endtime="20201030 15:52:52.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.271" endtime="20201030 15:52:52.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.270" endtime="20201030 15:52:52.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.912" endtime="20201030 15:52:52.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.912" endtime="20201030 15:52:52.293"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.302" endtime="20201030 15:52:52.317"></status>
</kw>
<msg timestamp="20201030 15:52:52.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.300" endtime="20201030 15:52:52.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.319" endtime="20201030 15:52:52.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.321" endtime="20201030 15:52:52.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.298" endtime="20201030 15:52:52.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.296" endtime="20201030 15:52:52.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.330" endtime="20201030 15:52:52.617"></status>
</kw>
<msg timestamp="20201030 15:52:52.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.329" endtime="20201030 15:52:52.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022236333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022264625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.621" endtime="20201030 15:52:52.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.629" endtime="20201030 15:52:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.326" endtime="20201030 15:52:52.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.324" endtime="20201030 15:52:52.632"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.636" level="INFO">${RESULT} = [{'diff': 2.8291999999999207e-05}, {'diff': 2.8361000000001052e-05}, {'diff': 2.7680000000002147e-05}, {'diff': 2.8361000000001052e-05}, {'diff': 2.8360999999997583e-05}, {'diff': 2.8361000000001052e-...</msg>
<status status="PASS" starttime="20201030 15:52:52.633" endtime="20201030 15:52:52.636"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:52.641" level="INFO">${ACCURACY} = {'diff': [2.8291999999999207e-05, 2.8361000000001052e-05, 2.7680000000002147e-05, 2.8361000000001052e-05, 2.8360999999997583e-05, 2.8361000000001052e-05, 2.8346999999998013e-05, 2.841699999999933e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:52.637" endtime="20201030 15:52:52.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.646" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:52:52.645" endtime="20201030 15:52:52.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.648" level="INFO">VALUE: [2.8291999999999207e-05, 2.8361000000001052e-05, 2.7680000000002147e-05, 2.8361000000001052e-05, 2.8360999999997583e-05, 2.8361000000001052e-05, 2.8346999999998013e-05, 2.841699999999933e-05, 2.7749999999999997e-05, 2.8957999999999068e-05, 2.8333000000001912e-05, 2.8346999999998013e-05, 2.8360999999997583e-05, 2.8972000000002107e-05, 2.8333000000001912e-05, 2.8348000000000956e-05, 2.8957999999999068e-05, 2.8347000000001482e-05, 2.8361000000001052e-05, 2.895899999999854e-05, 2.7763999999999567e-05, 2.7749999999999997e-05, 2.8362000000000526e-05, 2.8374999999997152e-05, 2.840300000000323e-05, 2.8902000000000788e-05, 2.8375000000000622e-05, 2.8347000000001482e-05, 2.8957999999999068e-05, 2.894499999999897e-05, 2.8957999999999068e-05, 2.895899999999854e-05, 2.8346999999998013e-05, 2.8360999999997583e-05, 2.8318999999998873e-05, 2.8347000000001482e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.8361000000001052e-05, 2.8943999999999498e-05, 2.8957999999999068e-05, 2.8361000000001052e-05, 2.7749999999999997e-05, 2.8361000000001052e-05, 2.8903000000000262e-05, 2.8958000000002537e-05, 2.8943999999999498e-05, 2.8361000000001052e-05, 2.7735999999996958e-05, 2.8375000000000622e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.647" endtime="20201030 15:52:52.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.642" endtime="20201030 15:52:52.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.653" endtime="20201030 15:52:52.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.651" endtime="20201030 15:52:52.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.650" endtime="20201030 15:52:52.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.294" endtime="20201030 15:52:52.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.293" endtime="20201030 15:52:52.674"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.682" endtime="20201030 15:52:52.699"></status>
</kw>
<msg timestamp="20201030 15:52:52.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.681" endtime="20201030 15:52:52.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.701" endtime="20201030 15:52:52.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.703" endtime="20201030 15:52:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.678" endtime="20201030 15:52:52.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.676" endtime="20201030 15:52:52.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.712" endtime="20201030 15:52:52.999"></status>
</kw>
<msg timestamp="20201030 15:52:53.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:52.711" endtime="20201030 15:52:53.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0222215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022251083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:53.003" endtime="20201030 15:52:53.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.012" endtime="20201030 15:52:53.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.708" endtime="20201030 15:52:53.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.706" endtime="20201030 15:52:53.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.018" level="INFO">${RESULT} = [{'diff': 2.9582999999999693e-05}, {'diff': 2.9569000000000123e-05}, {'diff': 2.8971999999998638e-05}, {'diff': 2.9569000000000123e-05}, {'diff': 2.9582999999999693e-05}, {'diff': 2.9541000000000983e-...</msg>
<status status="PASS" starttime="20201030 15:52:53.015" endtime="20201030 15:52:53.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.022" level="INFO">${ACCURACY} = {'diff': [2.9582999999999693e-05, 2.9569000000000123e-05, 2.8971999999998638e-05, 2.9569000000000123e-05, 2.9582999999999693e-05, 2.9541000000000983e-05, 2.9556000000000027e-05, 2.9582999999999693e-05...</msg>
<status status="PASS" starttime="20201030 15:52:53.019" endtime="20201030 15:52:53.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.027" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.026" endtime="20201030 15:52:53.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.029" level="INFO">VALUE: [2.9582999999999693e-05, 2.9569000000000123e-05, 2.8971999999998638e-05, 2.9569000000000123e-05, 2.9582999999999693e-05, 2.9541000000000983e-05, 2.9556000000000027e-05, 2.9582999999999693e-05, 2.9582999999999693e-05, 2.9527999999997417e-05, 2.89309999999994e-05, 2.9582999999999693e-05, 2.895899999999854e-05, 2.8943999999999498e-05, 2.9541000000000983e-05, 2.9582999999999693e-05, 2.9569000000000123e-05, 2.9569000000000123e-05, 2.9556000000000027e-05, 2.9555000000000553e-05, 2.9569999999999597e-05, 2.8971999999998638e-05, 2.9554999999997084e-05, 2.9555000000000553e-05, 2.8971999999998638e-05, 2.9584000000002636e-05, 2.8971999999998638e-05, 2.8971999999998638e-05, 2.9596999999999263e-05, 2.9542000000000457e-05, 2.895900000000201e-05, 2.8888000000001218e-05, 2.9570000000003066e-05, 2.9569000000000123e-05, 2.8943999999999498e-05, 2.894500000000244e-05, 2.8957999999999068e-05, 2.8957999999999068e-05, 2.9555000000000553e-05, 2.9528000000000887e-05, 2.9569000000000123e-05, 2.9541000000000983e-05, 2.8957999999999068e-05, 2.9582999999999693e-05, 2.9596999999999263e-05, 2.9569000000000123e-05, 2.8957999999999068e-05, 2.8889000000000692e-05, 2.9555000000000553e-05, 2.9556000000000027e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.028" endtime="20201030 15:52:53.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.023" endtime="20201030 15:52:53.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.034" endtime="20201030 15:52:53.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.033" endtime="20201030 15:52:53.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.031" endtime="20201030 15:52:53.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.675" endtime="20201030 15:52:53.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.674" endtime="20201030 15:52:53.055"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.064" endtime="20201030 15:52:53.080"></status>
</kw>
<msg timestamp="20201030 15:52:53.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.062" endtime="20201030 15:52:53.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.082" endtime="20201030 15:52:53.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.084" endtime="20201030 15:52:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.059" endtime="20201030 15:52:53.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.057" endtime="20201030 15:52:53.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.093" endtime="20201030 15:52:53.380"></status>
</kw>
<msg timestamp="20201030 15:52:53.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.092" endtime="20201030 15:52:53.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.385" endtime="20201030 15:52:53.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.393" endtime="20201030 15:52:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.089" endtime="20201030 15:52:53.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.088" endtime="20201030 15:52:53.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.400" level="INFO">${RESULT} = [{'diff': 3.0153000000001512e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 3.0124999999998903e-05}, {'diff': 3.076400000000257e-05}, {'diff': 3.07639999999991e-05}, {'diff': 3.0166000000001608e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:53.396" endtime="20201030 15:52:53.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.404" level="INFO">${ACCURACY} = {'diff': [3.0153000000001512e-05, 3.0181000000000652e-05, 3.0124999999998903e-05, 3.076400000000257e-05, 3.07639999999991e-05, 3.0166000000001608e-05, 3.016599999999814e-05, 3.0096999999999763e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:52:53.401" endtime="20201030 15:52:53.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.409" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.408" endtime="20201030 15:52:53.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.411" level="INFO">VALUE: [3.0153000000001512e-05, 3.0181000000000652e-05, 3.0124999999998903e-05, 3.076400000000257e-05, 3.07639999999991e-05, 3.0166000000001608e-05, 3.016599999999814e-05, 3.0096999999999763e-05, 3.0167000000001082e-05, 3.0235999999999458e-05, 3.0166000000001608e-05, 3.017999999999771e-05, 3.079200000000171e-05, 3.0152000000002038e-05, 3.015199999999857e-05, 3.0152999999998042e-05, 3.0235999999999458e-05, 3.0180000000001178e-05, 3.017999999999771e-05, 3.0181000000000652e-05, 3.077800000000214e-05, 3.017999999999771e-05, 3.0750000000003e-05, 3.074999999999953e-05, 3.077800000000214e-05, 3.0153000000001512e-05, 3.0194000000000748e-05, 3.079200000000171e-05, 3.069500000000072e-05, 3.0166000000001608e-05, 3.019500000000022e-05, 3.0167000000001082e-05, 3.017999999999771e-05, 3.0167000000001082e-05, 3.0139000000001942e-05, 3.077799999999867e-05, 3.019500000000022e-05, 3.022299999999936e-05, 3.07639999999991e-05, 3.0167000000001082e-05, 3.07639999999991e-05, 3.077799999999867e-05, 3.0153000000001512e-05, 3.0166000000001608e-05, 3.0152999999998042e-05, 3.0139000000001942e-05, 3.0180999999997182e-05, 3.0181000000000652e-05, 3.07639999999991e-05, 3.0152999999998042e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.410" endtime="20201030 15:52:53.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.405" endtime="20201030 15:52:53.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.417" endtime="20201030 15:52:53.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.416" endtime="20201030 15:52:53.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.415" endtime="20201030 15:52:53.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.056" endtime="20201030 15:52:53.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.055" endtime="20201030 15:52:53.438"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.447" endtime="20201030 15:52:53.464"></status>
</kw>
<msg timestamp="20201030 15:52:53.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.445" endtime="20201030 15:52:53.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.465" endtime="20201030 15:52:53.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.468" endtime="20201030 15:52:53.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.443" endtime="20201030 15:52:53.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.441" endtime="20201030 15:52:53.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.477" endtime="20201030 15:52:53.764"></status>
</kw>
<msg timestamp="20201030 15:52:53.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.475" endtime="20201030 15:52:53.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023028514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023059889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.768" endtime="20201030 15:52:53.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.776" endtime="20201030 15:52:53.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.473" endtime="20201030 15:52:53.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.471" endtime="20201030 15:52:53.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.783" level="INFO">${RESULT} = [{'diff': 3.137500000000015e-05}, {'diff': 3.137499999999668e-05}, {'diff': 3.198600000000121e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.141600000000286e-05}, {'diff': 3.141700000000233e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:53.780" endtime="20201030 15:52:53.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:53.788" level="INFO">${ACCURACY} = {'diff': [3.137500000000015e-05, 3.137499999999668e-05, 3.198600000000121e-05, 3.197200000000164e-05, 3.141600000000286e-05, 3.141700000000233e-05, 3.198600000000121e-05, 3.200000000000078e-05, 3.1985...</msg>
<status status="PASS" starttime="20201030 15:52:53.784" endtime="20201030 15:52:53.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.793" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:52:53.792" endtime="20201030 15:52:53.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.796" level="INFO">VALUE: [3.137500000000015e-05, 3.137499999999668e-05, 3.198600000000121e-05, 3.197200000000164e-05, 3.141600000000286e-05, 3.141700000000233e-05, 3.198600000000121e-05, 3.200000000000078e-05, 3.198599999999774e-05, 3.137500000000015e-05, 3.0804999999998334e-05, 3.137499999999668e-05, 3.200000000000078e-05, 3.138800000000025e-05, 3.198600000000121e-05, 3.08050000000018e-05, 3.137500000000015e-05, 3.138900000000319e-05, 3.137500000000015e-05, 3.07639999999991e-05, 3.195800000000207e-05, 3.076400000000257e-05, 3.1362000000000056e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.141700000000233e-05, 3.137500000000015e-05, 3.079199999999824e-05, 3.138899999999972e-05, 3.07639999999991e-05, 3.076400000000257e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.138899999999972e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.137500000000015e-05, 3.138900000000319e-05, 3.195800000000207e-05, 3.074999999999953e-05, 3.138899999999972e-05, 3.0776999999999194e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.077799999999867e-05, 3.198700000000068e-05, 3.198600000000121e-05, 3.14310000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.794" endtime="20201030 15:52:53.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.789" endtime="20201030 15:52:53.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.801" endtime="20201030 15:52:53.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.799" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.798" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.439" endtime="20201030 15:52:53.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.438" endtime="20201030 15:52:53.821"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.830" endtime="20201030 15:52:53.846"></status>
</kw>
<msg timestamp="20201030 15:52:53.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.829" endtime="20201030 15:52:53.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.848" endtime="20201030 15:52:53.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.850" endtime="20201030 15:52:53.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.826" endtime="20201030 15:52:53.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.824" endtime="20201030 15:52:53.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.860" endtime="20201030 15:52:54.148"></status>
</kw>
<msg timestamp="20201030 15:52:54.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.858" endtime="20201030 15:52:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022572236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022604847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.152" endtime="20201030 15:52:54.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.161" endtime="20201030 15:52:54.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.855" endtime="20201030 15:52:54.163"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.853" endtime="20201030 15:52:54.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.168" level="INFO">${RESULT} = [{'diff': 3.261100000000183e-05}, {'diff': 3.259700000000226e-05}, {'diff': 3.197199999999817e-05}, {'diff': 3.202799999999992e-05}, {'diff': 3.258400000000217e-05}, {'diff': 3.2596999999998794e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:54.164" endtime="20201030 15:52:54.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.172" level="INFO">${ACCURACY} = {'diff': [3.261100000000183e-05, 3.259700000000226e-05, 3.197199999999817e-05, 3.202799999999992e-05, 3.258400000000217e-05, 3.2596999999998794e-05, 3.263900000000097e-05, 3.2568999999999654e-05, 3.25...</msg>
<status status="PASS" starttime="20201030 15:52:54.169" endtime="20201030 15:52:54.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.177" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.176" endtime="20201030 15:52:54.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.179" level="INFO">VALUE: [3.261100000000183e-05, 3.259700000000226e-05, 3.197199999999817e-05, 3.202799999999992e-05, 3.258400000000217e-05, 3.2596999999998794e-05, 3.263900000000097e-05, 3.2568999999999654e-05, 3.25839999999987e-05, 3.195800000000207e-05, 3.251400000000085e-05, 3.199999999999731e-05, 3.2610999999998364e-05, 3.2596999999998794e-05, 3.2568999999999654e-05, 3.198599999999774e-05, 3.265300000000054e-05, 3.201400000000035e-05, 3.198600000000121e-05, 3.2596999999998794e-05, 3.197199999999817e-05, 3.2596999999998794e-05, 3.197300000000111e-05, 3.198600000000121e-05, 3.200000000000078e-05, 3.259700000000226e-05, 3.198700000000068e-05, 3.2582999999999224e-05, 3.259799999999827e-05, 3.25839999999987e-05, 3.198599999999774e-05, 3.198600000000121e-05, 3.2582999999999224e-05, 3.2582999999999224e-05, 3.265300000000054e-05, 3.25839999999987e-05, 3.202799999999992e-05, 3.197299999999764e-05, 3.259800000000174e-05, 3.2582999999999224e-05, 3.2541000000000514e-05, 3.2013000000000874e-05, 3.198600000000121e-05, 3.197200000000164e-05, 3.200000000000078e-05, 3.2610999999998364e-05, 3.200000000000078e-05, 3.25839999999987e-05, 3.197300000000111e-05, 3.19449999999985e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.178" endtime="20201030 15:52:54.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.173" endtime="20201030 15:52:54.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.184" endtime="20201030 15:52:54.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.183" endtime="20201030 15:52:54.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.182" endtime="20201030 15:52:54.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.822" endtime="20201030 15:52:54.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.822" endtime="20201030 15:52:54.205"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.215" endtime="20201030 15:52:54.232"></status>
</kw>
<msg timestamp="20201030 15:52:54.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.213" endtime="20201030 15:52:54.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.233" endtime="20201030 15:52:54.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.236" endtime="20201030 15:52:54.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.210" endtime="20201030 15:52:54.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.208" endtime="20201030 15:52:54.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.246" endtime="20201030 15:52:54.532"></status>
</kw>
<msg timestamp="20201030 15:52:54.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.244" endtime="20201030 15:52:54.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023875792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023908986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.536" endtime="20201030 15:52:54.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.545" endtime="20201030 15:52:54.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.241" endtime="20201030 15:52:54.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.239" endtime="20201030 15:52:54.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.551" level="INFO">${RESULT} = [{'diff': 3.319400000000028e-05}, {'diff': 3.316600000000114e-05}, {'diff': 3.313799999999853e-05}, {'diff': 3.3790999999998295e-05}, {'diff': 3.3790999999998295e-05}, {'diff': 3.382000000000038e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:54.548" endtime="20201030 15:52:54.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.556" level="INFO">${ACCURACY} = {'diff': [3.319400000000028e-05, 3.316600000000114e-05, 3.313799999999853e-05, 3.3790999999998295e-05, 3.3790999999998295e-05, 3.382000000000038e-05, 3.380600000000081e-05, 3.3777000000002194e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 15:52:54.552" endtime="20201030 15:52:54.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.560" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.559" endtime="20201030 15:52:54.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.563" level="INFO">VALUE: [3.319400000000028e-05, 3.316600000000114e-05, 3.313799999999853e-05, 3.3790999999998295e-05, 3.3790999999998295e-05, 3.382000000000038e-05, 3.380600000000081e-05, 3.3777000000002194e-05, 3.377800000000167e-05, 3.323599999999899e-05, 3.316700000000061e-05, 3.309700000000276e-05, 3.319400000000028e-05, 3.320799999999985e-05, 3.2568999999999654e-05, 3.318100000000018e-05, 3.318100000000018e-05, 3.313900000000147e-05, 3.379200000000124e-05, 3.319499999999975e-05, 3.319400000000028e-05, 3.380600000000081e-05, 3.3804999999997865e-05, 3.319499999999975e-05, 3.319500000000322e-05, 3.319400000000028e-05, 3.3804999999997865e-05, 3.379199999999777e-05, 3.318000000000071e-05, 3.319400000000028e-05, 3.377800000000167e-05, 3.31250000000019e-05, 3.318099999999671e-05, 3.374999999999906e-05, 3.3791000000001764e-05, 3.254199999999999e-05, 3.319499999999975e-05, 3.379200000000124e-05, 3.316600000000114e-05, 3.379199999999777e-05, 3.379200000000124e-05, 3.377800000000167e-05, 3.382000000000038e-05, 3.3805000000001334e-05, 3.379200000000124e-05, 3.324999999999856e-05, 3.319400000000028e-05, 3.377800000000167e-05, 3.259800000000174e-05, 3.3819000000000904e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.561" endtime="20201030 15:52:54.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.556" endtime="20201030 15:52:54.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.569" endtime="20201030 15:52:54.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.567" endtime="20201030 15:52:54.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.566" endtime="20201030 15:52:54.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.206" endtime="20201030 15:52:54.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.206" endtime="20201030 15:52:54.589"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.599" endtime="20201030 15:52:54.615"></status>
</kw>
<msg timestamp="20201030 15:52:54.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.597" endtime="20201030 15:52:54.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.617" endtime="20201030 15:52:54.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.619" endtime="20201030 15:52:54.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.594" endtime="20201030 15:52:54.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.592" endtime="20201030 15:52:54.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.629" endtime="20201030 15:52:54.915"></status>
</kw>
<msg timestamp="20201030 15:52:54.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.627" endtime="20201030 15:52:54.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022565958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.919" endtime="20201030 15:52:54.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.928" endtime="20201030 15:52:54.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.624" endtime="20201030 15:52:54.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.622" endtime="20201030 15:52:54.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.934" level="INFO">${RESULT} = [{'diff': 3.440199999999935e-05}, {'diff': 3.376399999999863e-05}, {'diff': 3.4388999999999253e-05}, {'diff': 3.37779999999982e-05}, {'diff': 3.501399999999988e-05}, {'diff': 3.4388999999999253e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:54.931" endtime="20201030 15:52:54.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:54.942" level="INFO">${ACCURACY} = {'diff': [3.440199999999935e-05, 3.376399999999863e-05, 3.4388999999999253e-05, 3.37779999999982e-05, 3.501399999999988e-05, 3.4388999999999253e-05, 3.441599999999892e-05, 3.4388999999999253e-05, 3.44...</msg>
<status status="PASS" starttime="20201030 15:52:54.935" endtime="20201030 15:52:54.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.947" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:52:54.946" endtime="20201030 15:52:54.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.949" level="INFO">VALUE: [3.440199999999935e-05, 3.376399999999863e-05, 3.4388999999999253e-05, 3.37779999999982e-05, 3.501399999999988e-05, 3.4388999999999253e-05, 3.441599999999892e-05, 3.4388999999999253e-05, 3.448600000000024e-05, 3.501399999999988e-05, 3.4388999999999253e-05, 3.440300000000229e-05, 3.377800000000167e-05, 3.4388999999999253e-05, 3.374999999999906e-05, 3.443100000000143e-05, 3.4402999999998823e-05, 3.4361000000000114e-05, 3.379199999999777e-05, 3.441600000000239e-05, 3.380599999999734e-05, 3.438799999999978e-05, 3.4374999999999684e-05, 3.4402999999998823e-05, 3.441599999999892e-05, 3.441699999999839e-05, 3.4445000000001e-05, 3.379200000000124e-05, 3.384799999999952e-05, 3.4388999999999253e-05, 3.447200000000067e-05, 3.4402999999998823e-05, 3.4402999999998823e-05, 3.500000000000031e-05, 3.4388999999999253e-05, 3.440199999999935e-05, 3.4402999999998823e-05, 3.440300000000229e-05, 3.380599999999734e-05, 3.440300000000229e-05, 3.4402999999998823e-05, 3.380600000000081e-05, 3.441600000000239e-05, 3.4333000000000974e-05, 3.4402999999998823e-05, 3.4445000000001e-05, 3.441700000000186e-05, 3.498600000000074e-05, 3.4402999999998823e-05, 3.377800000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.948" endtime="20201030 15:52:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.943" endtime="20201030 15:52:54.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.955" endtime="20201030 15:52:54.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.953" endtime="20201030 15:52:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.952" endtime="20201030 15:52:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.590" endtime="20201030 15:52:54.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.590" endtime="20201030 15:52:54.975"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.984" endtime="20201030 15:52:55.001"></status>
</kw>
<msg timestamp="20201030 15:52:55.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.983" endtime="20201030 15:52:55.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.002" endtime="20201030 15:52:55.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.005" endtime="20201030 15:52:55.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.980" endtime="20201030 15:52:55.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.978" endtime="20201030 15:52:55.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.014" endtime="20201030 15:52:55.301"></status>
</kw>
<msg timestamp="20201030 15:52:55.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.013" endtime="20201030 15:52:55.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.306" endtime="20201030 15:52:55.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.314" endtime="20201030 15:52:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.010" endtime="20201030 15:52:55.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.008" endtime="20201030 15:52:55.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.321" level="INFO">${RESULT} = [{'diff': 3.5597000000001794e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.502799999999945e-05}, {'diff': 3.559800000000127e-05}, {'diff': 3.494499999999803e-05}, {'diff': 3.506999999999816e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:55.317" endtime="20201030 15:52:55.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.325" level="INFO">${ACCURACY} = {'diff': [3.5597000000001794e-05, 3.551400000000038e-05, 3.502799999999945e-05, 3.559800000000127e-05, 3.494499999999803e-05, 3.506999999999816e-05, 3.5610999999997894e-05, 3.501399999999988e-05, 3.55...</msg>
<status status="PASS" starttime="20201030 15:52:55.322" endtime="20201030 15:52:55.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.330" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.329" endtime="20201030 15:52:55.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.332" level="INFO">VALUE: [3.5597000000001794e-05, 3.551400000000038e-05, 3.502799999999945e-05, 3.559800000000127e-05, 3.494499999999803e-05, 3.506999999999816e-05, 3.5610999999997894e-05, 3.501399999999988e-05, 3.5596999999998324e-05, 3.5597000000001794e-05, 3.559800000000127e-05, 3.502799999999945e-05, 3.563800000000103e-05, 3.500000000000031e-05, 3.501399999999988e-05, 3.554199999999952e-05, 3.5625000000000934e-05, 3.5625000000000934e-05, 3.500000000000031e-05, 3.5597000000001794e-05, 3.501399999999988e-05, 3.498600000000074e-05, 3.5596999999998324e-05, 3.501399999999988e-05, 3.5596999999998324e-05, 3.501399999999988e-05, 3.5597000000001794e-05, 3.501399999999988e-05, 3.5611000000001364e-05, 3.5611000000001364e-05, 3.502799999999945e-05, 3.55979999999978e-05, 3.5625000000000934e-05, 3.5610999999997894e-05, 3.500000000000031e-05, 3.558399999999823e-05, 3.5040999999999545e-05, 3.5611000000001364e-05, 3.498599999999727e-05, 3.552799999999995e-05, 3.500000000000031e-05, 3.561200000000084e-05, 3.502799999999945e-05, 3.5625000000000934e-05, 3.5596999999998324e-05, 3.55979999999978e-05, 3.5596999999998324e-05, 3.5040999999999545e-05, 3.5611000000001364e-05, 3.5596999999998324e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.331" endtime="20201030 15:52:55.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.326" endtime="20201030 15:52:55.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.337" endtime="20201030 15:52:55.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.336" endtime="20201030 15:52:55.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.335" endtime="20201030 15:52:55.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.976" endtime="20201030 15:52:55.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.976" endtime="20201030 15:52:55.358"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.367" endtime="20201030 15:52:55.384"></status>
</kw>
<msg timestamp="20201030 15:52:55.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.365" endtime="20201030 15:52:55.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.386" endtime="20201030 15:52:55.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.388" endtime="20201030 15:52:55.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.363" endtime="20201030 15:52:55.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.361" endtime="20201030 15:52:55.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.398" endtime="20201030 15:52:55.683"></status>
</kw>
<msg timestamp="20201030 15:52:55.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023478764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.396" endtime="20201030 15:52:55.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023478764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.688" endtime="20201030 15:52:55.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.696" endtime="20201030 15:52:55.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.394" endtime="20201030 15:52:55.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.392" endtime="20201030 15:52:55.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.703" level="INFO">${RESULT} = [{'diff': 3.622200000000242e-05}, {'diff': 3.6819000000000435e-05}, {'diff': 3.6833000000000005e-05}, {'diff': 3.6819000000000435e-05}, {'diff': 3.622199999999895e-05}, {'diff': 3.623599999999852e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:55.700" endtime="20201030 15:52:55.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:55.707" level="INFO">${ACCURACY} = {'diff': [3.622200000000242e-05, 3.6819000000000435e-05, 3.6833000000000005e-05, 3.6819000000000435e-05, 3.622199999999895e-05, 3.623599999999852e-05, 3.620799999999938e-05, 3.622199999999895e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 15:52:55.704" endtime="20201030 15:52:55.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.712" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:52:55.711" endtime="20201030 15:52:55.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.714" level="INFO">VALUE: [3.622200000000242e-05, 3.6819000000000435e-05, 3.6833000000000005e-05, 3.6819000000000435e-05, 3.622199999999895e-05, 3.623599999999852e-05, 3.620799999999938e-05, 3.622199999999895e-05, 3.6819000000000435e-05, 3.622299999999842e-05, 3.681999999999991e-05, 3.6833000000000005e-05, 3.6819000000000435e-05, 3.680600000000034e-05, 3.6167000000000143e-05, 3.6833000000000005e-05, 3.619399999999981e-05, 3.622199999999895e-05, 3.6819000000000435e-05, 3.620799999999938e-05, 3.5596999999998324e-05, 3.620799999999938e-05, 3.620899999999885e-05, 3.6139000000001004e-05, 3.620899999999885e-05, 3.680600000000034e-05, 3.620799999999938e-05, 3.6833000000000005e-05, 3.622300000000189e-05, 3.620799999999938e-05, 3.681999999999991e-05, 3.623600000000199e-05, 3.673599999999902e-05, 3.619500000000275e-05, 3.681999999999991e-05, 3.620900000000232e-05, 3.620799999999938e-05, 3.624999999999809e-05, 3.620899999999885e-05, 3.622199999999895e-05, 3.618000000000024e-05, 3.620899999999885e-05, 3.6846999999999575e-05, 3.6819000000000435e-05, 3.681999999999991e-05, 3.67780000000012e-05, 3.619399999999981e-05, 3.680600000000034e-05, 3.622299999999842e-05, 3.620900000000232e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.713" endtime="20201030 15:52:55.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.708" endtime="20201030 15:52:55.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.720" endtime="20201030 15:52:55.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.719" endtime="20201030 15:52:55.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.718" endtime="20201030 15:52:55.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.359" endtime="20201030 15:52:55.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.358" endtime="20201030 15:52:55.741"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.750" endtime="20201030 15:52:55.767"></status>
</kw>
<msg timestamp="20201030 15:52:55.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.749" endtime="20201030 15:52:55.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.769" endtime="20201030 15:52:55.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.771" endtime="20201030 15:52:55.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.746" endtime="20201030 15:52:55.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.744" endtime="20201030 15:52:55.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.780" endtime="20201030 15:52:56.066"></status>
</kw>
<msg timestamp="20201030 15:52:56.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.779" endtime="20201030 15:52:56.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022703667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.070" endtime="20201030 15:52:56.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.078" endtime="20201030 15:52:56.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.776" endtime="20201030 15:52:56.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.774" endtime="20201030 15:52:56.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.085" level="INFO">${RESULT} = [{'diff': 3.740199999999888e-05}, {'diff': 3.801399999999941e-05}, {'diff': 3.741599999999845e-05}, {'diff': 3.743000000000149e-05}, {'diff': 3.7403000000001824e-05}, {'diff': 3.741599999999845e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.082" endtime="20201030 15:52:56.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.090" level="INFO">${ACCURACY} = {'diff': [3.740199999999888e-05, 3.801399999999941e-05, 3.741599999999845e-05, 3.743000000000149e-05, 3.7403000000001824e-05, 3.741599999999845e-05, 3.7416999999997924e-05, 3.6819000000000435e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 15:52:56.086" endtime="20201030 15:52:56.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.095" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.094" endtime="20201030 15:52:56.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.097" level="INFO">VALUE: [3.740199999999888e-05, 3.801399999999941e-05, 3.741599999999845e-05, 3.743000000000149e-05, 3.7403000000001824e-05, 3.741599999999845e-05, 3.7416999999997924e-05, 3.6819000000000435e-05, 3.742999999999802e-05, 3.681999999999991e-05, 3.7417000000001394e-05, 3.802799999999898e-05, 3.675000000000206e-05, 3.7402999999998354e-05, 3.74720000000002e-05, 3.7416999999997924e-05, 3.74590000000001e-05, 3.7417000000001394e-05, 3.681999999999991e-05, 3.8026999999999506e-05, 3.7403000000001824e-05, 3.7416999999997924e-05, 3.7445000000000533e-05, 3.801399999999941e-05, 3.743000000000149e-05, 3.741600000000192e-05, 3.741600000000192e-05, 3.677799999999773e-05, 3.744400000000106e-05, 3.680600000000034e-05, 3.683399999999948e-05, 3.7417000000001394e-05, 3.7403000000001824e-05, 3.741599999999845e-05, 3.742999999999802e-05, 3.7431000000000964e-05, 3.801399999999941e-05, 3.804199999999855e-05, 3.7417000000001394e-05, 3.741599999999845e-05, 3.6833000000000005e-05, 3.7431000000000964e-05, 3.7375000000002684e-05, 3.741599999999845e-05, 3.7431000000000964e-05, 3.8040999999999076e-05, 3.7402999999998354e-05, 3.741600000000192e-05, 3.79720000000007e-05, 3.741600000000192e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.096" endtime="20201030 15:52:56.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.091" endtime="20201030 15:52:56.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.103" endtime="20201030 15:52:56.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.101" endtime="20201030 15:52:56.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.100" endtime="20201030 15:52:56.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.742" endtime="20201030 15:52:56.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.741" endtime="20201030 15:52:56.123"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.133" endtime="20201030 15:52:56.150"></status>
</kw>
<msg timestamp="20201030 15:52:56.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.131" endtime="20201030 15:52:56.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.152" endtime="20201030 15:52:56.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.155" endtime="20201030 15:52:56.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.128" endtime="20201030 15:52:56.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.126" endtime="20201030 15:52:56.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.164" endtime="20201030 15:52:56.452"></status>
</kw>
<msg timestamp="20201030 15:52:56.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.163" endtime="20201030 15:52:56.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022909931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022966097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.457" endtime="20201030 15:52:56.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.465" endtime="20201030 15:52:56.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.160" endtime="20201030 15:52:56.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.158" endtime="20201030 15:52:56.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.472" level="INFO">${RESULT} = [{'diff': 5.6165999999999855e-05}, {'diff': 5.633299999999869e-05}, {'diff': 5.63610000000013e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.6500000000000994e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:56.469" endtime="20201030 15:52:56.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.476" level="INFO">${ACCURACY} = {'diff': [5.6165999999999855e-05, 5.633299999999869e-05, 5.63610000000013e-05, 5.612500000000062e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.66809999999994e-05, 5.662499999999765e-05, 5.651...</msg>
<status status="PASS" starttime="20201030 15:52:56.473" endtime="20201030 15:52:56.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.481" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.480" endtime="20201030 15:52:56.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.484" level="INFO">VALUE: [5.6165999999999855e-05, 5.633299999999869e-05, 5.63610000000013e-05, 5.612500000000062e-05, 5.6500000000000994e-05, 5.6500000000000994e-05, 5.66809999999994e-05, 5.662499999999765e-05, 5.6514000000000564e-05, 5.666699999999983e-05, 5.68480000000017e-05, 5.6291999999999454e-05, 5.633299999999869e-05, 5.6000000000000494e-05, 5.6179999999999425e-05, 5.6014000000000064e-05, 5.6165999999999855e-05, 5.633300000000216e-05, 5.616699999999933e-05, 5.6014000000000064e-05, 5.6500000000000994e-05, 5.669499999999897e-05, 5.633300000000216e-05, 5.616699999999933e-05, 5.6277999999999884e-05, 5.683399999999866e-05, 5.6014000000000064e-05, 5.684699999999876e-05, 5.601300000000059e-05, 5.684700000000223e-05, 5.6000000000000494e-05, 5.6500000000000994e-05, 5.633299999999869e-05, 5.684700000000223e-05, 5.616699999999933e-05, 5.6041999999999204e-05, 5.638900000000044e-05, 5.612499999999715e-05, 5.6222000000001604e-05, 5.6388000000000965e-05, 5.633400000000163e-05, 5.6500000000000994e-05, 5.616699999999933e-05, 5.6819999999999093e-05, 5.6471999999998385e-05, 5.6000000000000494e-05, 5.683299999999919e-05, 5.663899999999722e-05, 5.681899999999962e-05, 5.6500000000000994e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.482" endtime="20201030 15:52:56.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.477" endtime="20201030 15:52:56.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.489" endtime="20201030 15:52:56.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.487" endtime="20201030 15:52:56.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.486" endtime="20201030 15:52:56.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.124" endtime="20201030 15:52:56.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.124" endtime="20201030 15:52:56.509"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.518" endtime="20201030 15:52:56.538"></status>
</kw>
<msg timestamp="20201030 15:52:56.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.517" endtime="20201030 15:52:56.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.540" endtime="20201030 15:52:56.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.542" endtime="20201030 15:52:56.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.514" endtime="20201030 15:52:56.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.512" endtime="20201030 15:52:56.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.552" endtime="20201030 15:52:56.837"></status>
</kw>
<msg timestamp="20201030 15:52:56.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.550" endtime="20201030 15:52:56.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023541194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023598194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.841" endtime="20201030 15:52:56.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.850" endtime="20201030 15:52:56.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.548" endtime="20201030 15:52:56.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.546" endtime="20201030 15:52:56.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.856" level="INFO">${RESULT} = [{'diff': 5.6999999999998024e-05}, {'diff': 5.783300000000019e-05}, {'diff': 5.781899999999715e-05}, {'diff': 5.7014000000001064e-05}, {'diff': 5.7514000000001564e-05}, {'diff': 5.76810000000004e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:56.853" endtime="20201030 15:52:56.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:56.861" level="INFO">${ACCURACY} = {'diff': [5.6999999999998024e-05, 5.783300000000019e-05, 5.781899999999715e-05, 5.7014000000001064e-05, 5.7514000000001564e-05, 5.76810000000004e-05, 5.7499999999998525e-05, 5.7499999999998525e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:56.857" endtime="20201030 15:52:56.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.865" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:52:56.864" endtime="20201030 15:52:56.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.868" level="INFO">VALUE: [5.6999999999998024e-05, 5.783300000000019e-05, 5.781899999999715e-05, 5.7014000000001064e-05, 5.7514000000001564e-05, 5.76810000000004e-05, 5.7499999999998525e-05, 5.7499999999998525e-05, 5.719499999999947e-05, 5.6999999999998024e-05, 5.71809999999999e-05, 5.7000000000001494e-05, 5.7499999999998525e-05, 5.6999999999998024e-05, 5.7499999999998525e-05, 5.766700000000083e-05, 5.7569999999999844e-05, 5.7528000000001134e-05, 5.734699999999926e-05, 5.783300000000019e-05, 5.7165999999997386e-05, 5.76810000000004e-05, 5.712499999999815e-05, 5.733299999999969e-05, 5.783300000000019e-05, 5.763899999999822e-05, 5.76810000000004e-05, 5.716700000000033e-05, 5.7833999999999663e-05, 5.736099999999883e-05, 5.7833999999999663e-05, 5.701299999999812e-05, 5.784699999999976e-05, 5.763900000000169e-05, 5.783300000000019e-05, 5.734700000000273e-05, 5.784699999999976e-05, 5.7028000000000634e-05, 5.733299999999969e-05, 5.734699999999926e-05, 5.7014000000001064e-05, 5.766700000000083e-05, 5.719499999999947e-05, 5.784799999999923e-05, 5.76810000000004e-05, 5.7499999999998525e-05, 5.7680000000000925e-05, 5.786200000000227e-05, 5.7193999999999995e-05, 5.7151999999997816e-05]</msg>
<status status="PASS" starttime="20201030 15:52:56.866" endtime="20201030 15:52:56.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.861" endtime="20201030 15:52:56.941"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.945" endtime="20201030 15:52:56.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.944" endtime="20201030 15:52:56.965"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.942" endtime="20201030 15:52:56.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.510" endtime="20201030 15:52:56.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.510" endtime="20201030 15:52:56.966"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.975" endtime="20201030 15:52:56.992"></status>
</kw>
<msg timestamp="20201030 15:52:56.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.974" endtime="20201030 15:52:56.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.994" endtime="20201030 15:52:56.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.997" endtime="20201030 15:52:56.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.971" endtime="20201030 15:52:56.999"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.969" endtime="20201030 15:52:56.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.006" endtime="20201030 15:52:57.292"></status>
</kw>
<msg timestamp="20201030 15:52:57.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.004" endtime="20201030 15:52:57.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022509722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.296" endtime="20201030 15:52:57.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.305" endtime="20201030 15:52:57.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.002" endtime="20201030 15:52:57.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.000" endtime="20201030 15:52:57.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.312" level="INFO">${RESULT} = [{'diff': 5.8334000000000163e-05}, {'diff': 5.834700000000026e-05}, {'diff': 5.8651999999999316e-05}, {'diff': 5.8499999999999525e-05}, {'diff': 5.831899999999765e-05}, {'diff': 5.8542000000001704e-05...</msg>
<status status="PASS" starttime="20201030 15:52:57.308" endtime="20201030 15:52:57.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.317" level="INFO">${ACCURACY} = {'diff': [5.8334000000000163e-05, 5.834700000000026e-05, 5.8651999999999316e-05, 5.8499999999999525e-05, 5.831899999999765e-05, 5.8542000000001704e-05, 5.836099999999983e-05, 5.816699999999786e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:52:57.313" endtime="20201030 15:52:57.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.322" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.321" endtime="20201030 15:52:57.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.324" level="INFO">VALUE: [5.8334000000000163e-05, 5.834700000000026e-05, 5.8651999999999316e-05, 5.8499999999999525e-05, 5.831899999999765e-05, 5.8542000000001704e-05, 5.836099999999983e-05, 5.816699999999786e-05, 5.8179999999997956e-05, 5.83749999999994e-05, 5.816700000000133e-05, 5.812500000000262e-05, 5.7986000000002924e-05, 5.86810000000014e-05, 5.7999999999999025e-05, 5.813899999999872e-05, 5.812499999999915e-05, 5.866700000000183e-05, 5.8500000000002994e-05, 5.8222000000000135e-05, 5.8028000000001634e-05, 5.7999999999999025e-05, 5.8014000000002064e-05, 5.8165999999998386e-05, 5.8791999999998484e-05, 5.8513999999999095e-05, 5.818099999999743e-05, 5.884700000000076e-05, 5.866700000000183e-05, 5.884700000000076e-05, 5.816700000000133e-05, 5.8499999999999525e-05, 5.836099999999983e-05, 5.8665999999998886e-05, 5.8193999999997525e-05, 5.883300000000119e-05, 5.8499999999999525e-05, 5.8277999999998414e-05, 5.886100000000033e-05, 5.8180000000001425e-05, 5.880499999999858e-05, 5.813900000000219e-05, 5.881900000000162e-05, 5.868099999999793e-05, 5.870900000000054e-05, 5.836099999999983e-05, 5.8513999999999095e-05, 5.797299999999936e-05, 5.83480000000032e-05, 5.866700000000183e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.323" endtime="20201030 15:52:57.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.318" endtime="20201030 15:52:57.326"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.329" endtime="20201030 15:52:57.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.328" endtime="20201030 15:52:57.349"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.327" endtime="20201030 15:52:57.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.967" endtime="20201030 15:52:57.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.967" endtime="20201030 15:52:57.350"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.359" endtime="20201030 15:52:57.376"></status>
</kw>
<msg timestamp="20201030 15:52:57.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.358" endtime="20201030 15:52:57.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.378" endtime="20201030 15:52:57.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.380" endtime="20201030 15:52:57.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.355" endtime="20201030 15:52:57.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.353" endtime="20201030 15:52:57.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.390" endtime="20201030 15:52:57.676"></status>
</kw>
<msg timestamp="20201030 15:52:57.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.388" endtime="20201030 15:52:57.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022631931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022691778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.680" endtime="20201030 15:52:57.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.689" endtime="20201030 15:52:57.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.385" endtime="20201030 15:52:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.384" endtime="20201030 15:52:57.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.695" level="INFO">${RESULT} = [{'diff': 5.984699999999829e-05}, {'diff': 5.9679999999999456e-05}, {'diff': 5.9820000000002094e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.968099999999893e-05}, {'diff': 5.901300000000012e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:57.692" endtime="20201030 15:52:57.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:57.700" level="INFO">${ACCURACY} = {'diff': [5.984699999999829e-05, 5.9679999999999456e-05, 5.9820000000002094e-05, 5.916699999999886e-05, 5.968099999999893e-05, 5.901300000000012e-05, 5.97629999999974e-05, 5.9236000000000705e-05, 5.93...</msg>
<status status="PASS" starttime="20201030 15:52:57.696" endtime="20201030 15:52:57.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.704" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:52:57.703" endtime="20201030 15:52:57.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.707" level="INFO">VALUE: [5.984699999999829e-05, 5.9679999999999456e-05, 5.9820000000002094e-05, 5.916699999999886e-05, 5.968099999999893e-05, 5.901300000000012e-05, 5.97629999999974e-05, 5.9236000000000705e-05, 5.934700000000126e-05, 5.9665999999999886e-05, 5.9679999999999456e-05, 5.9000000000000025e-05, 5.951300000000062e-05, 5.972300000000111e-05, 5.943099999999868e-05, 5.984700000000176e-05, 5.943100000000215e-05, 5.96810000000024e-05, 5.943099999999868e-05, 5.8986000000000455e-05, 5.9194000000001995e-05, 5.934699999999779e-05, 5.9179999999998956e-05, 5.9652000000000316e-05, 5.983299999999872e-05, 5.9194000000001995e-05, 5.9165999999999386e-05, 5.9721999999998165e-05, 5.934700000000126e-05, 5.986100000000133e-05, 5.966700000000283e-05, 5.9013999999999595e-05, 5.9334000000001164e-05, 5.9514000000000095e-05, 5.916700000000233e-05, 5.918099999999843e-05, 5.988900000000047e-05, 5.986100000000133e-05, 5.9055999999998304e-05, 5.934700000000126e-05, 5.9665999999999886e-05, 5.934700000000126e-05, 5.931899999999865e-05, 5.990300000000004e-05, 5.91810000000019e-05, 5.9486000000000955e-05, 5.968099999999893e-05, 5.8986000000000455e-05, 5.9514000000000095e-05, 5.96810000000024e-05]</msg>
<status status="PASS" starttime="20201030 15:52:57.705" endtime="20201030 15:52:57.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.701" endtime="20201030 15:52:57.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.712" endtime="20201030 15:52:57.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.710" endtime="20201030 15:52:57.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.709" endtime="20201030 15:52:57.732"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.351" endtime="20201030 15:52:57.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.350" endtime="20201030 15:52:57.733"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.742" endtime="20201030 15:52:57.760"></status>
</kw>
<msg timestamp="20201030 15:52:57.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.740" endtime="20201030 15:52:57.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.762" endtime="20201030 15:52:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.764" endtime="20201030 15:52:57.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.738" endtime="20201030 15:52:57.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.735" endtime="20201030 15:52:57.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.774" endtime="20201030 15:52:58.060"></status>
</kw>
<msg timestamp="20201030 15:52:58.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023628264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023688653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.772" endtime="20201030 15:52:58.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023628264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023688653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.064" endtime="20201030 15:52:58.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.073" endtime="20201030 15:52:58.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.769" endtime="20201030 15:52:58.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.767" endtime="20201030 15:52:58.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.079" level="INFO">${RESULT} = [{'diff': 6.038900000000097e-05}, {'diff': 6.03750000000014e-05}, {'diff': 6.084699999999929e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.083299999999972e-05}, {'diff': 6.034699999999879e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:58.076" endtime="20201030 15:52:58.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.084" level="INFO">${ACCURACY} = {'diff': [6.038900000000097e-05, 6.03750000000014e-05, 6.084699999999929e-05, 6.016699999999986e-05, 6.083299999999972e-05, 6.034699999999879e-05, 6.033300000000269e-05, 6.0514000000001095e-05, 6.0499...</msg>
<status status="PASS" starttime="20201030 15:52:58.080" endtime="20201030 15:52:58.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.088" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.087" endtime="20201030 15:52:58.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.091" level="INFO">VALUE: [6.038900000000097e-05, 6.03750000000014e-05, 6.084699999999929e-05, 6.016699999999986e-05, 6.083299999999972e-05, 6.034699999999879e-05, 6.033300000000269e-05, 6.0514000000001095e-05, 6.0499999999998055e-05, 5.9999999999997555e-05, 6.0014000000000595e-05, 6.051300000000162e-05, 6.051299999999815e-05, 6.084699999999929e-05, 6.083299999999972e-05, 6.086099999999886e-05, 6.084700000000276e-05, 6.080500000000058e-05, 6.083299999999972e-05, 6.0500000000001525e-05, 6.084699999999929e-05, 6.0777999999997445e-05, 6.01810000000029e-05, 6.084699999999929e-05, 6.0014000000000595e-05, 6.0680000000000456e-05, 6.0513999999997625e-05, 6.033299999999922e-05, 6.084699999999929e-05, 6.034700000000226e-05, 6.0485999999998485e-05, 6.0680000000000456e-05, 6.033299999999922e-05, 6.018099999999943e-05, 6.0569999999999374e-05, 6.0514000000001095e-05, 5.993100000000265e-05, 6.016699999999986e-05, 6.00689999999994e-05, 6.0847999999998764e-05, 6.015300000000029e-05, 6.0334000000002164e-05, 6.0000000000001025e-05, 6.033299999999922e-05, 6.083299999999972e-05, 6.084699999999929e-05, 6.0000000000001025e-05, 6.0222000000002135e-05, 6.0013999999997125e-05, 6.0555999999999804e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.089" endtime="20201030 15:52:58.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.084" endtime="20201030 15:52:58.093"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.097" endtime="20201030 15:52:58.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.095" endtime="20201030 15:52:58.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.094" endtime="20201030 15:52:58.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.734" endtime="20201030 15:52:58.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.733" endtime="20201030 15:52:58.117"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.127" endtime="20201030 15:52:58.145"></status>
</kw>
<msg timestamp="20201030 15:52:58.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.125" endtime="20201030 15:52:58.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.146" endtime="20201030 15:52:58.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.149" endtime="20201030 15:52:58.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.122" endtime="20201030 15:52:58.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.120" endtime="20201030 15:52:58.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.158" endtime="20201030 15:52:58.445"></status>
</kw>
<msg timestamp="20201030 15:52:58.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.157" endtime="20201030 15:52:58.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022602292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022663375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.449" endtime="20201030 15:52:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.457" endtime="20201030 15:52:58.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.154" endtime="20201030 15:52:58.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.152" endtime="20201030 15:52:58.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.464" level="INFO">${RESULT} = [{'diff': 6.108299999999997e-05}, {'diff': 6.116700000000086e-05}, {'diff': 6.151299999999915e-05}, {'diff': 6.119399999999706e-05}, {'diff': 6.165200000000232e-05}, {'diff': 6.134699999999979e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:58.461" endtime="20201030 15:52:58.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.472" level="INFO">${ACCURACY} = {'diff': [6.108299999999997e-05, 6.116700000000086e-05, 6.151299999999915e-05, 6.119399999999706e-05, 6.165200000000232e-05, 6.134699999999979e-05, 6.111099999999911e-05, 6.12080000000001e-05, 6.10139...</msg>
<status status="PASS" starttime="20201030 15:52:58.465" endtime="20201030 15:52:58.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.476" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.475" endtime="20201030 15:52:58.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.479" level="INFO">VALUE: [6.108299999999997e-05, 6.116700000000086e-05, 6.151299999999915e-05, 6.119399999999706e-05, 6.165200000000232e-05, 6.134699999999979e-05, 6.111099999999911e-05, 6.12080000000001e-05, 6.1013999999998125e-05, 6.0999999999998555e-05, 6.134699999999979e-05, 6.163899999999875e-05, 6.168099999999746e-05, 6.18340000000002e-05, 6.13339999999997e-05, 6.184799999999976e-05, 6.105500000000083e-05, 6.136100000000283e-05, 6.187499999999943e-05, 6.134699999999979e-05, 6.116599999999792e-05, 6.148600000000295e-05, 6.118000000000096e-05, 6.0999999999998555e-05, 6.150000000000252e-05, 6.183300000000072e-05, 6.168100000000093e-05, 6.187499999999943e-05, 6.1000000000002025e-05, 6.149999999999906e-05, 6.134799999999926e-05, 6.116699999999739e-05, 6.0999999999998555e-05, 6.18340000000002e-05, 6.133300000000022e-05, 6.137499999999893e-05, 6.183300000000072e-05, 6.168000000000146e-05, 6.167999999999799e-05, 6.116700000000086e-05, 6.184700000000029e-05, 6.134699999999979e-05, 6.134699999999979e-05, 6.183300000000072e-05, 6.136099999999936e-05, 6.132000000000012e-05, 6.166699999999789e-05, 6.186199999999933e-05, 6.116699999999739e-05, 6.101299999999865e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.478" endtime="20201030 15:52:58.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.473" endtime="20201030 15:52:58.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.484" endtime="20201030 15:52:58.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.483" endtime="20201030 15:52:58.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.481" endtime="20201030 15:52:58.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.118" endtime="20201030 15:52:58.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.118" endtime="20201030 15:52:58.505"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.514" endtime="20201030 15:52:58.531"></status>
</kw>
<msg timestamp="20201030 15:52:58.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.512" endtime="20201030 15:52:58.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.533" endtime="20201030 15:52:58.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.536" endtime="20201030 15:52:58.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.510" endtime="20201030 15:52:58.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.507" endtime="20201030 15:52:58.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.545" endtime="20201030 15:52:58.877"></status>
</kw>
<msg timestamp="20201030 15:52:58.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.543" endtime="20201030 15:52:58.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022596111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.881" endtime="20201030 15:52:58.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.889" endtime="20201030 15:52:58.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.541" endtime="20201030 15:52:58.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.539" endtime="20201030 15:52:58.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.896" level="INFO">${RESULT} = [{'diff': 6.233300000000122e-05}, {'diff': 6.234700000000079e-05}, {'diff': 6.195800000000085e-05}, {'diff': 6.266700000000236e-05}, {'diff': 6.217999999999849e-05}, {'diff': 6.233300000000122e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:58.893" endtime="20201030 15:52:58.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:58.900" level="INFO">${ACCURACY} = {'diff': [6.233300000000122e-05, 6.234700000000079e-05, 6.195800000000085e-05, 6.266700000000236e-05, 6.217999999999849e-05, 6.233300000000122e-05, 6.25279999999992e-05, 6.280600000000205e-05, 6.23329...</msg>
<status status="PASS" starttime="20201030 15:52:58.897" endtime="20201030 15:52:58.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.905" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:52:58.904" endtime="20201030 15:52:58.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.908" level="INFO">VALUE: [6.233300000000122e-05, 6.234700000000079e-05, 6.195800000000085e-05, 6.266700000000236e-05, 6.217999999999849e-05, 6.233300000000122e-05, 6.25279999999992e-05, 6.280600000000205e-05, 6.233299999999775e-05, 6.222200000000067e-05, 6.265299999999932e-05, 6.286200000000033e-05, 6.218100000000143e-05, 6.23340000000007e-05, 6.234699999999732e-05, 6.251399999999963e-05, 6.283299999999825e-05, 6.250000000000006e-05, 6.266599999999942e-05, 6.251399999999963e-05, 6.204200000000173e-05, 6.234700000000079e-05, 6.213899999999925e-05, 6.283299999999825e-05, 6.287499999999696e-05, 6.234800000000026e-05, 6.25140000000031e-05, 6.199999999999956e-05, 6.201299999999965e-05, 6.269400000000203e-05, 6.266599999999942e-05, 6.254199999999877e-05, 6.201399999999913e-05, 6.191600000000214e-05, 6.286100000000086e-05, 6.218100000000143e-05, 6.268100000000193e-05, 6.279200000000248e-05, 6.266700000000236e-05, 6.266700000000236e-05, 6.233399999999722e-05, 6.198599999999999e-05, 6.197299999999989e-05, 6.23340000000007e-05, 6.251300000000015e-05, 6.233300000000122e-05, 6.216599999999892e-05, 6.250000000000006e-05, 6.201399999999913e-05, 6.201399999999913e-05]</msg>
<status status="PASS" starttime="20201030 15:52:58.906" endtime="20201030 15:52:58.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.901" endtime="20201030 15:52:58.909"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.914" endtime="20201030 15:52:58.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.912" endtime="20201030 15:52:58.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.910" endtime="20201030 15:52:58.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.506" endtime="20201030 15:52:58.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.505" endtime="20201030 15:52:58.935"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.946" endtime="20201030 15:52:58.966"></status>
</kw>
<msg timestamp="20201030 15:52:58.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.944" endtime="20201030 15:52:58.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.969" endtime="20201030 15:52:58.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.972" endtime="20201030 15:52:58.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.940" endtime="20201030 15:52:58.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.937" endtime="20201030 15:52:58.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.984" endtime="20201030 15:52:59.274"></status>
</kw>
<msg timestamp="20201030 15:52:59.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025109347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.980" endtime="20201030 15:52:59.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025045681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025109347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.279" endtime="20201030 15:52:59.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.287" endtime="20201030 15:52:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.977" endtime="20201030 15:52:59.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.975" endtime="20201030 15:52:59.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.294" level="INFO">${RESULT} = [{'diff': 6.366600000000042e-05}, {'diff': 6.298600000000099e-05}, {'diff': 6.318000000000296e-05}, {'diff': 6.349999999999759e-05}, {'diff': 6.336100000000136e-05}, {'diff': 6.380599999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:59.291" endtime="20201030 15:52:59.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.299" level="INFO">${ACCURACY} = {'diff': [6.366600000000042e-05, 6.298600000000099e-05, 6.318000000000296e-05, 6.349999999999759e-05, 6.336100000000136e-05, 6.380599999999959e-05, 6.336100000000136e-05, 6.300000000000056e-05, 6.3166...</msg>
<status status="PASS" starttime="20201030 15:52:59.295" endtime="20201030 15:52:59.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.304" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.303" endtime="20201030 15:52:59.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.306" level="INFO">VALUE: [6.366600000000042e-05, 6.298600000000099e-05, 6.318000000000296e-05, 6.349999999999759e-05, 6.336100000000136e-05, 6.380599999999959e-05, 6.336100000000136e-05, 6.300000000000056e-05, 6.316699999999939e-05, 6.370799999999913e-05, 6.300000000000056e-05, 6.315299999999982e-05, 6.347199999999845e-05, 6.381899999999968e-05, 6.381899999999968e-05, 6.370799999999913e-05, 6.351400000000063e-05, 6.319400000000253e-05, 6.386100000000186e-05, 6.381899999999968e-05, 6.3195000000002e-05, 6.316699999999939e-05, 6.386100000000186e-05, 6.33340000000017e-05, 6.318099999999896e-05, 6.345899999999835e-05, 6.334699999999832e-05, 6.315200000000035e-05, 6.316599999999992e-05, 6.317999999999949e-05, 6.300000000000056e-05, 6.301400000000013e-05, 6.369399999999956e-05, 6.350000000000106e-05, 6.331900000000265e-05, 6.349999999999759e-05, 6.384700000000229e-05, 6.300000000000056e-05, 6.315299999999982e-05, 6.366699999999989e-05, 6.350000000000106e-05, 6.323599999999777e-05, 6.351299999999768e-05, 6.366600000000042e-05, 6.366600000000042e-05, 6.354199999999977e-05, 6.333300000000222e-05, 6.35560000000028e-05, 6.366699999999989e-05, 6.384699999999882e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.305" endtime="20201030 15:52:59.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.300" endtime="20201030 15:52:59.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.312" endtime="20201030 15:52:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.310" endtime="20201030 15:52:59.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.309" endtime="20201030 15:52:59.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.936" endtime="20201030 15:52:59.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.935" endtime="20201030 15:52:59.333"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.342" endtime="20201030 15:52:59.360"></status>
</kw>
<msg timestamp="20201030 15:52:59.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.341" endtime="20201030 15:52:59.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.362" endtime="20201030 15:52:59.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.364" endtime="20201030 15:52:59.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.338" endtime="20201030 15:52:59.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.336" endtime="20201030 15:52:59.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.374" endtime="20201030 15:52:59.661"></status>
</kw>
<msg timestamp="20201030 15:52:59.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023080472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.372" endtime="20201030 15:52:59.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023016306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023080472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.665" endtime="20201030 15:52:59.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.674" endtime="20201030 15:52:59.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.369" endtime="20201030 15:52:59.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.368" endtime="20201030 15:52:59.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.680" level="INFO">${RESULT} = [{'diff': 6.416600000000092e-05}, {'diff': 6.468000000000099e-05}, {'diff': 6.423599999999877e-05}, {'diff': 6.483300000000025e-05}, {'diff': 6.466699999999742e-05}, {'diff': 6.468100000000046e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:59.677" endtime="20201030 15:52:59.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:52:59.685" level="INFO">${ACCURACY} = {'diff': [6.416600000000092e-05, 6.468000000000099e-05, 6.423599999999877e-05, 6.483300000000025e-05, 6.466699999999742e-05, 6.468100000000046e-05, 6.418099999999996e-05, 6.465300000000132e-05, 6.4861...</msg>
<status status="PASS" starttime="20201030 15:52:59.681" endtime="20201030 15:52:59.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.689" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:52:59.688" endtime="20201030 15:52:59.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.692" level="INFO">VALUE: [6.416600000000092e-05, 6.468000000000099e-05, 6.423599999999877e-05, 6.483300000000025e-05, 6.466699999999742e-05, 6.468100000000046e-05, 6.418099999999996e-05, 6.465300000000132e-05, 6.486199999999887e-05, 6.416699999999692e-05, 6.397299999999842e-05, 6.448699999999849e-05, 6.465200000000185e-05, 6.451399999999816e-05, 6.451400000000163e-05, 6.45280000000012e-05, 6.426400000000138e-05, 6.484699999999982e-05, 6.468099999999699e-05, 6.411099999999864e-05, 6.483300000000025e-05, 6.483300000000025e-05, 6.401399999999766e-05, 6.466700000000089e-05, 6.433399999999923e-05, 6.450000000000206e-05, 6.416599999999745e-05, 6.469400000000056e-05, 6.466600000000142e-05, 6.433299999999975e-05, 6.433300000000322e-05, 6.487499999999896e-05, 6.466699999999742e-05, 6.468100000000046e-05, 6.418099999999996e-05, 6.433299999999975e-05, 6.402799999999723e-05, 6.402700000000122e-05, 6.418099999999996e-05, 6.434800000000226e-05, 6.466700000000089e-05, 6.436099999999889e-05, 6.483300000000025e-05, 6.397200000000242e-05, 6.484699999999982e-05, 6.398599999999852e-05, 6.433299999999975e-05, 6.463899999999828e-05, 6.483300000000025e-05, 6.4195000000003e-05]</msg>
<status status="PASS" starttime="20201030 15:52:59.690" endtime="20201030 15:52:59.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.686" endtime="20201030 15:52:59.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.697" endtime="20201030 15:52:59.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.695" endtime="20201030 15:52:59.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.694" endtime="20201030 15:52:59.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.334" endtime="20201030 15:52:59.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.334" endtime="20201030 15:52:59.718"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.727" endtime="20201030 15:52:59.746"></status>
</kw>
<msg timestamp="20201030 15:52:59.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.725" endtime="20201030 15:52:59.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.747" endtime="20201030 15:52:59.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.750" endtime="20201030 15:52:59.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.723" endtime="20201030 15:52:59.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.720" endtime="20201030 15:52:59.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.759" endtime="20201030 15:53:00.046"></status>
</kw>
<msg timestamp="20201030 15:53:00.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.757" endtime="20201030 15:53:00.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023448431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.050" endtime="20201030 15:53:00.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.058" endtime="20201030 15:53:00.060"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.755" endtime="20201030 15:53:00.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.753" endtime="20201030 15:53:00.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.065" level="INFO">${RESULT} = [{'diff': 6.568000000000199e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.500000000000256e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.516700000000139e-05}, {'diff': 6.551399999999916e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:00.062" endtime="20201030 15:53:00.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.069" level="INFO">${ACCURACY} = {'diff': [6.568000000000199e-05, 6.566699999999842e-05, 6.500000000000256e-05, 6.587499999999996e-05, 6.516700000000139e-05, 6.551399999999916e-05, 6.549999999999959e-05, 6.565299999999885e-05, 6.5693...</msg>
<status status="PASS" starttime="20201030 15:53:00.066" endtime="20201030 15:53:00.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.074" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.073" endtime="20201030 15:53:00.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.077" level="INFO">VALUE: [6.568000000000199e-05, 6.566699999999842e-05, 6.500000000000256e-05, 6.587499999999996e-05, 6.516700000000139e-05, 6.551399999999916e-05, 6.549999999999959e-05, 6.565299999999885e-05, 6.569399999999809e-05, 6.502699999999875e-05, 6.512499999999921e-05, 6.567999999999852e-05, 6.516600000000192e-05, 6.501400000000213e-05, 6.516700000000139e-05, 6.583300000000125e-05, 6.544500000000078e-05, 6.516700000000139e-05, 6.506900000000093e-05, 6.584699999999735e-05, 6.516700000000139e-05, 6.58480000000003e-05, 6.512499999999921e-05, 6.566700000000189e-05, 6.569399999999809e-05, 6.5276999999999e-05, 6.533300000000075e-05, 6.513900000000225e-05, 6.566699999999842e-05, 6.519400000000106e-05, 6.591699999999867e-05, 6.584699999999735e-05, 6.522300000000314e-05, 6.5889000000003e-05, 6.533400000000023e-05, 6.569500000000103e-05, 6.555499999999839e-05, 6.586100000000039e-05, 6.533400000000023e-05, 6.515200000000235e-05, 6.568000000000199e-05, 6.516600000000192e-05, 6.534700000000032e-05, 6.516699999999792e-05, 6.533300000000075e-05, 6.573600000000027e-05, 6.531900000000118e-05, 6.583300000000125e-05, 6.516699999999792e-05, 6.582000000000116e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.075" endtime="20201030 15:53:00.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.070" endtime="20201030 15:53:00.079"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.082" endtime="20201030 15:53:00.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.081" endtime="20201030 15:53:00.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.080" endtime="20201030 15:53:00.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.719" endtime="20201030 15:53:00.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.718" endtime="20201030 15:53:00.103"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.112" endtime="20201030 15:53:00.131"></status>
</kw>
<msg timestamp="20201030 15:53:00.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.111" endtime="20201030 15:53:00.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.133" endtime="20201030 15:53:00.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.135" endtime="20201030 15:53:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.108" endtime="20201030 15:53:00.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.106" endtime="20201030 15:53:00.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.145" endtime="20201030 15:53:00.430"></status>
</kw>
<msg timestamp="20201030 15:53:00.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.143" endtime="20201030 15:53:00.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022979903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023046736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.435" endtime="20201030 15:53:00.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.443" endtime="20201030 15:53:00.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.140" endtime="20201030 15:53:00.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.138" endtime="20201030 15:53:00.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.450" level="INFO">${RESULT} = [{'diff': 6.683300000000225e-05}, {'diff': 6.618100000000196e-05}, {'diff': 6.633300000000175e-05}, {'diff': 6.650000000000059e-05}, {'diff': 6.650000000000059e-05}, {'diff': 6.631999999999819e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:00.447" endtime="20201030 15:53:00.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.455" level="INFO">${ACCURACY} = {'diff': [6.683300000000225e-05, 6.618100000000196e-05, 6.633300000000175e-05, 6.650000000000059e-05, 6.650000000000059e-05, 6.631999999999819e-05, 6.616700000000239e-05, 6.618099999999849e-05, 6.6666...</msg>
<status status="PASS" starttime="20201030 15:53:00.451" endtime="20201030 15:53:00.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.460" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.459" endtime="20201030 15:53:00.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.462" level="INFO">VALUE: [6.683300000000225e-05, 6.618100000000196e-05, 6.633300000000175e-05, 6.650000000000059e-05, 6.650000000000059e-05, 6.631999999999819e-05, 6.616700000000239e-05, 6.618099999999849e-05, 6.666699999999942e-05, 6.652700000000025e-05, 6.688900000000053e-05, 6.616599999999945e-05, 6.601399999999966e-05, 6.681899999999921e-05, 6.669400000000256e-05, 6.633299999999828e-05, 6.690199999999716e-05, 6.651400000000016e-05, 6.67640000000004e-05, 6.636200000000037e-05, 6.684799999999783e-05, 6.633399999999776e-05, 6.600000000000009e-05, 6.630499999999914e-05, 6.633300000000175e-05, 6.673600000000127e-05, 6.615199999999988e-05, 6.618000000000249e-05, 6.634700000000132e-05, 6.618099999999849e-05, 6.669500000000203e-05, 6.634699999999785e-05, 6.600000000000009e-05, 6.616700000000239e-05, 6.618100000000196e-05, 6.600000000000009e-05, 6.683399999999826e-05, 6.680499999999964e-05, 6.680499999999964e-05, 6.636099999999742e-05, 6.630499999999914e-05, 6.669399999999909e-05, 6.616599999999945e-05, 6.616699999999892e-05, 6.637500000000046e-05, 6.616700000000239e-05, 6.633399999999776e-05, 6.680599999999912e-05, 6.665299999999985e-05, 6.600000000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.461" endtime="20201030 15:53:00.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.456" endtime="20201030 15:53:00.464"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.468" endtime="20201030 15:53:00.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.466" endtime="20201030 15:53:00.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.465" endtime="20201030 15:53:00.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.104" endtime="20201030 15:53:00.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.104" endtime="20201030 15:53:00.488"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.497" endtime="20201030 15:53:00.515"></status>
</kw>
<msg timestamp="20201030 15:53:00.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.496" endtime="20201030 15:53:00.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.517" endtime="20201030 15:53:00.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.520" endtime="20201030 15:53:00.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.493" endtime="20201030 15:53:00.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.491" endtime="20201030 15:53:00.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.529" endtime="20201030 15:53:00.816"></status>
</kw>
<msg timestamp="20201030 15:53:00.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.527" endtime="20201030 15:53:00.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022661167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.820" endtime="20201030 15:53:00.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.828" endtime="20201030 15:53:00.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.525" endtime="20201030 15:53:00.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.523" endtime="20201030 15:53:00.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.835" level="INFO">${RESULT} = [{'diff': 6.718099999999949e-05}, {'diff': 6.733400000000223e-05}, {'diff': 6.718099999999949e-05}, {'diff': 6.783299999999978e-05}, {'diff': 6.700000000000109e-05}, {'diff': 6.719399999999959e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:00.832" endtime="20201030 15:53:00.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:00.839" level="INFO">${ACCURACY} = {'diff': [6.718099999999949e-05, 6.733400000000223e-05, 6.718099999999949e-05, 6.783299999999978e-05, 6.700000000000109e-05, 6.719399999999959e-05, 6.75420000000003e-05, 6.784699999999935e-05, 6.76670...</msg>
<status status="PASS" starttime="20201030 15:53:00.836" endtime="20201030 15:53:00.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.844" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:53:00.843" endtime="20201030 15:53:00.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.847" level="INFO">VALUE: [6.718099999999949e-05, 6.733400000000223e-05, 6.718099999999949e-05, 6.783299999999978e-05, 6.700000000000109e-05, 6.719399999999959e-05, 6.75420000000003e-05, 6.784699999999935e-05, 6.766700000000042e-05, 6.783299999999978e-05, 6.766700000000042e-05, 6.736100000000189e-05, 6.749999999999812e-05, 6.772199999999923e-05, 6.702800000000023e-05, 6.787500000000196e-05, 6.72640000000009e-05, 6.749999999999812e-05, 6.733299999999928e-05, 6.701400000000066e-05, 6.698600000000152e-05, 6.768000000000052e-05, 6.768099999999999e-05, 6.781900000000021e-05, 6.786100000000239e-05, 6.716699999999992e-05, 6.716699999999992e-05, 6.718099999999949e-05, 6.783399999999926e-05, 6.704100000000032e-05, 6.701400000000066e-05, 6.731999999999919e-05, 6.761099999999867e-05, 6.783299999999978e-05, 6.765200000000138e-05, 6.770799999999966e-05, 6.768000000000052e-05, 6.698599999999805e-05, 6.766700000000042e-05, 6.766700000000042e-05, 6.701400000000066e-05, 6.734700000000232e-05, 6.768099999999999e-05, 6.747200000000245e-05, 6.784799999999883e-05, 6.734700000000232e-05, 6.787500000000196e-05, 6.7277000000001e-05, 6.766600000000095e-05, 6.748599999999855e-05]</msg>
<status status="PASS" starttime="20201030 15:53:00.845" endtime="20201030 15:53:00.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.840" endtime="20201030 15:53:00.849"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.854" endtime="20201030 15:53:00.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.852" endtime="20201030 15:53:00.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.851" endtime="20201030 15:53:00.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.489" endtime="20201030 15:53:00.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.489" endtime="20201030 15:53:00.875"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.884" endtime="20201030 15:53:00.903"></status>
</kw>
<msg timestamp="20201030 15:53:00.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.882" endtime="20201030 15:53:00.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.904" endtime="20201030 15:53:00.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.907" endtime="20201030 15:53:00.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.880" endtime="20201030 15:53:00.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.877" endtime="20201030 15:53:00.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.916" endtime="20201030 15:53:01.203"></status>
</kw>
<msg timestamp="20201030 15:53:01.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.915" endtime="20201030 15:53:01.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023549917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023617917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.208" endtime="20201030 15:53:01.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.216" endtime="20201030 15:53:01.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.912" endtime="20201030 15:53:01.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.910" endtime="20201030 15:53:01.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.222" level="INFO">${RESULT} = [{'diff': 6.799999999999862e-05}, {'diff': 6.802700000000175e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.834699999999985e-05}, {'diff': 6.851400000000216e-05}, {'diff': 6.815199999999841e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:01.219" endtime="20201030 15:53:01.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.226" level="INFO">${ACCURACY} = {'diff': [6.799999999999862e-05, 6.802700000000175e-05, 6.858300000000053e-05, 6.834699999999985e-05, 6.851400000000216e-05, 6.815199999999841e-05, 6.799999999999862e-05, 6.868000000000152e-05, 6.8014...</msg>
<status status="PASS" starttime="20201030 15:53:01.223" endtime="20201030 15:53:01.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.231" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.230" endtime="20201030 15:53:01.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.234" level="INFO">VALUE: [6.799999999999862e-05, 6.802700000000175e-05, 6.858300000000053e-05, 6.834699999999985e-05, 6.851400000000216e-05, 6.815199999999841e-05, 6.799999999999862e-05, 6.868000000000152e-05, 6.801400000000166e-05, 6.884700000000035e-05, 6.82229999999992e-05, 6.890299999999863e-05, 6.872200000000023e-05, 6.798599999999905e-05, 6.845899999999988e-05, 6.854099999999835e-05, 6.866700000000142e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.851400000000216e-05, 6.802800000000123e-05, 6.849999999999912e-05, 6.799999999999862e-05, 6.831900000000071e-05, 6.866699999999795e-05, 6.816700000000092e-05, 6.834699999999985e-05, 6.848599999999955e-05, 6.865300000000185e-05, 6.815299999999788e-05, 6.799999999999862e-05, 6.799999999999862e-05, 6.817999999999755e-05, 6.833300000000028e-05, 6.834699999999985e-05, 6.801399999999819e-05, 6.883299999999731e-05, 6.884700000000035e-05, 6.831900000000071e-05, 6.851399999999869e-05, 6.85420000000013e-05, 6.863899999999881e-05, 6.832000000000019e-05, 6.869400000000109e-05, 6.866599999999848e-05, 6.800000000000209e-05, 6.855600000000087e-05, 6.80969999999996e-05, 6.836099999999942e-05, 6.884699999999688e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.232" endtime="20201030 15:53:01.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.227" endtime="20201030 15:53:01.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.239" endtime="20201030 15:53:01.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.237" endtime="20201030 15:53:01.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.236" endtime="20201030 15:53:01.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.876" endtime="20201030 15:53:01.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.875" endtime="20201030 15:53:01.260"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.268" endtime="20201030 15:53:01.286"></status>
</kw>
<msg timestamp="20201030 15:53:01.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.267" endtime="20201030 15:53:01.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.287" endtime="20201030 15:53:01.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.290" endtime="20201030 15:53:01.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.264" endtime="20201030 15:53:01.292"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.262" endtime="20201030 15:53:01.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.299" endtime="20201030 15:53:01.584"></status>
</kw>
<msg timestamp="20201030 15:53:01.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.297" endtime="20201030 15:53:01.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022319944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022388944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.588" endtime="20201030 15:53:01.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.597" endtime="20201030 15:53:01.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.295" endtime="20201030 15:53:01.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.293" endtime="20201030 15:53:01.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.603" level="INFO">${RESULT} = [{'diff': 6.899999999999962e-05}, {'diff': 6.966600000000295e-05}, {'diff': 6.933299999999781e-05}, {'diff': 6.934699999999738e-05}, {'diff': 6.986100000000092e-05}, {'diff': 6.966700000000242e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:01.600" endtime="20201030 15:53:01.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:01.608" level="INFO">${ACCURACY} = {'diff': [6.899999999999962e-05, 6.966600000000295e-05, 6.933299999999781e-05, 6.934699999999738e-05, 6.986100000000092e-05, 6.966700000000242e-05, 6.918100000000149e-05, 6.968099999999852e-05, 6.9013...</msg>
<status status="PASS" starttime="20201030 15:53:01.604" endtime="20201030 15:53:01.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.613" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:53:01.612" endtime="20201030 15:53:01.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.615" level="INFO">VALUE: [6.899999999999962e-05, 6.966600000000295e-05, 6.933299999999781e-05, 6.934699999999738e-05, 6.986100000000092e-05, 6.966700000000242e-05, 6.918100000000149e-05, 6.968099999999852e-05, 6.901399999999919e-05, 6.951399999999969e-05, 6.918100000000149e-05, 6.950000000000012e-05, 6.919400000000159e-05, 6.958300000000153e-05, 6.967999999999905e-05, 6.967999999999905e-05, 6.986100000000092e-05, 6.901399999999919e-05, 6.968000000000252e-05, 6.902799999999876e-05, 6.936100000000042e-05, 6.980599999999865e-05, 6.93619999999999e-05, 6.983400000000126e-05, 6.970799999999819e-05, 6.951399999999969e-05, 6.966699999999895e-05, 6.981899999999874e-05, 6.969399999999862e-05, 6.891599999999873e-05, 6.934700000000085e-05, 6.950000000000012e-05, 6.948599999999708e-05, 6.951399999999969e-05, 6.934699999999738e-05, 6.951399999999969e-05, 6.933400000000076e-05, 6.933400000000076e-05, 6.902699999999928e-05, 6.937499999999999e-05, 6.966699999999895e-05, 6.916599999999898e-05, 6.967999999999905e-05, 6.947200000000098e-05, 6.950000000000012e-05, 6.934699999999738e-05, 6.934699999999738e-05, 6.981899999999874e-05, 6.987499999999702e-05, 6.968099999999852e-05]</msg>
<status status="PASS" starttime="20201030 15:53:01.614" endtime="20201030 15:53:01.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.609" endtime="20201030 15:53:01.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.620" endtime="20201030 15:53:01.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.619" endtime="20201030 15:53:01.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.617" endtime="20201030 15:53:01.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.261" endtime="20201030 15:53:01.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.260" endtime="20201030 15:53:01.641"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.649" endtime="20201030 15:53:01.669"></status>
</kw>
<msg timestamp="20201030 15:53:01.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.648" endtime="20201030 15:53:01.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.672" endtime="20201030 15:53:01.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.678" endtime="20201030 15:53:01.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.645" endtime="20201030 15:53:01.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.643" endtime="20201030 15:53:01.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.697" endtime="20201030 15:53:01.994"></status>
</kw>
<msg timestamp="20201030 15:53:01.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.693" endtime="20201030 15:53:01.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022128542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.998" endtime="20201030 15:53:02.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.006" endtime="20201030 15:53:02.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.688" endtime="20201030 15:53:02.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.684" endtime="20201030 15:53:02.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.013" level="INFO">${RESULT} = [{'diff': 7.052699999999731e-05}, {'diff': 7.051300000000121e-05}, {'diff': 7.066600000000048e-05}, {'diff': 7.002799999999976e-05}, {'diff': 7.050000000000112e-05}, {'diff': 7.015299999999988e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.010" endtime="20201030 15:53:02.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.017" level="INFO">${ACCURACY} = {'diff': [7.052699999999731e-05, 7.051300000000121e-05, 7.066600000000048e-05, 7.002799999999976e-05, 7.050000000000112e-05, 7.015299999999988e-05, 7.048599999999808e-05, 7.084699999999888e-05, 7.0499...</msg>
<status status="PASS" starttime="20201030 15:53:02.014" endtime="20201030 15:53:02.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.021" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.020" endtime="20201030 15:53:02.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.024" level="INFO">VALUE: [7.052699999999731e-05, 7.051300000000121e-05, 7.066600000000048e-05, 7.002799999999976e-05, 7.050000000000112e-05, 7.015299999999988e-05, 7.048599999999808e-05, 7.084699999999888e-05, 7.049999999999765e-05, 6.998599999999758e-05, 7.019500000000206e-05, 7.082000000000269e-05, 7.037500000000099e-05, 7.083399999999879e-05, 7.017999999999955e-05, 7.051400000000069e-05, 7.066600000000048e-05, 7.034699999999838e-05, 7.048600000000155e-05, 7.050000000000112e-05, 7.000000000000062e-05, 7.016699999999945e-05, 7.012500000000074e-05, 7.068100000000299e-05, 7.065299999999691e-05, 7.002799999999976e-05, 7.034700000000185e-05, 7.030500000000314e-05, 7.030499999999967e-05, 7.083299999999931e-05, 7.031899999999924e-05, 7.015299999999988e-05, 7.084699999999888e-05, 7.086099999999845e-05, 6.995800000000191e-05, 7.001400000000019e-05, 7.001400000000019e-05, 7.051400000000069e-05, 7.016699999999945e-05, 7.018099999999902e-05, 7.034799999999786e-05, 7.048600000000155e-05, 7.051399999999722e-05, 7.084699999999888e-05, 7.051400000000069e-05, 7.065300000000038e-05, 7.050000000000112e-05, 7.027800000000001e-05, 7.049999999999765e-05, 7.002799999999976e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.023" endtime="20201030 15:53:02.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.018" endtime="20201030 15:53:02.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.036" endtime="20201030 15:53:02.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.034" endtime="20201030 15:53:02.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.033" endtime="20201030 15:53:02.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.642" endtime="20201030 15:53:02.057"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.641" endtime="20201030 15:53:02.057"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.065" endtime="20201030 15:53:02.086"></status>
</kw>
<msg timestamp="20201030 15:53:02.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.064" endtime="20201030 15:53:02.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.087" endtime="20201030 15:53:02.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.090" endtime="20201030 15:53:02.091"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.061" endtime="20201030 15:53:02.092"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.059" endtime="20201030 15:53:02.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.099" endtime="20201030 15:53:02.385"></status>
</kw>
<msg timestamp="20201030 15:53:02.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.097" endtime="20201030 15:53:02.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025003222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025074236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.390" endtime="20201030 15:53:02.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.398" endtime="20201030 15:53:02.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.095" endtime="20201030 15:53:02.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.093" endtime="20201030 15:53:02.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.405" level="INFO">${RESULT} = [{'diff': 7.101400000000119e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.134699999999938e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.182000000000022e-05}, {'diff': 7.152799999999779e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.401" endtime="20201030 15:53:02.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.409" level="INFO">${ACCURACY} = {'diff': [7.101400000000119e-05, 7.134699999999938e-05, 7.134699999999938e-05, 7.133299999999981e-05, 7.182000000000022e-05, 7.152799999999779e-05, 7.152800000000126e-05, 7.144499999999984e-05, 7.1846...</msg>
<status status="PASS" starttime="20201030 15:53:02.406" endtime="20201030 15:53:02.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.413" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.412" endtime="20201030 15:53:02.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.416" level="INFO">VALUE: [7.101400000000119e-05, 7.134699999999938e-05, 7.134699999999938e-05, 7.133299999999981e-05, 7.182000000000022e-05, 7.152799999999779e-05, 7.152800000000126e-05, 7.144499999999984e-05, 7.184699999999988e-05, 7.118000000000055e-05, 7.133299999999981e-05, 7.172199999999976e-05, 7.184699999999988e-05, 7.129099999999763e-05, 7.184699999999988e-05, 7.152800000000126e-05, 7.149999999999865e-05, 7.101400000000119e-05, 7.118100000000002e-05, 7.184799999999936e-05, 7.133399999999929e-05, 7.184699999999988e-05, 7.166699999999748e-05, 7.150000000000212e-05, 7.170800000000019e-05, 7.149999999999865e-05, 7.098600000000205e-05, 7.151400000000169e-05, 7.101400000000119e-05, 7.151400000000169e-05, 7.163899999999834e-05, 7.133299999999981e-05, 7.151399999999822e-05, 7.100000000000162e-05, 7.168099999999705e-05, 7.134700000000285e-05, 7.184699999999988e-05, 7.133299999999981e-05, 7.166600000000148e-05, 7.190299999999816e-05, 7.099999999999815e-05, 7.149999999999865e-05, 7.101400000000119e-05, 7.149999999999865e-05, 7.168100000000052e-05, 7.168100000000052e-05, 7.182000000000022e-05, 7.166700000000095e-05, 7.168100000000052e-05, 7.145899999999941e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.414" endtime="20201030 15:53:02.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.409" endtime="20201030 15:53:02.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.421" endtime="20201030 15:53:02.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.420" endtime="20201030 15:53:02.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.419" endtime="20201030 15:53:02.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.058" endtime="20201030 15:53:02.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.057" endtime="20201030 15:53:02.442"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.451" endtime="20201030 15:53:02.469"></status>
</kw>
<msg timestamp="20201030 15:53:02.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.449" endtime="20201030 15:53:02.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.470" endtime="20201030 15:53:02.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.473" endtime="20201030 15:53:02.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.447" endtime="20201030 15:53:02.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.445" endtime="20201030 15:53:02.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.482" endtime="20201030 15:53:02.766"></status>
</kw>
<msg timestamp="20201030 15:53:02.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.480" endtime="20201030 15:53:02.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022135806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.770" endtime="20201030 15:53:02.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.778" endtime="20201030 15:53:02.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.478" endtime="20201030 15:53:02.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.476" endtime="20201030 15:53:02.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.785" level="INFO">${RESULT} = [{'diff': 7.251299999999974e-05}, {'diff': 7.284700000000088e-05}, {'diff': 7.225000000000287e-05}, {'diff': 7.231899999999777e-05}, {'diff': 7.262499999999977e-05}, {'diff': 7.238899999999909e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.782" endtime="20201030 15:53:02.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:02.790" level="INFO">${ACCURACY} = {'diff': [7.251299999999974e-05, 7.284700000000088e-05, 7.225000000000287e-05, 7.231899999999777e-05, 7.262499999999977e-05, 7.238899999999909e-05, 7.266700000000195e-05, 7.268099999999805e-05, 7.2195...</msg>
<status status="PASS" starttime="20201030 15:53:02.786" endtime="20201030 15:53:02.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.794" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:53:02.793" endtime="20201030 15:53:02.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.797" level="INFO">VALUE: [7.251299999999974e-05, 7.284700000000088e-05, 7.225000000000287e-05, 7.231899999999777e-05, 7.262499999999977e-05, 7.238899999999909e-05, 7.266700000000195e-05, 7.268099999999805e-05, 7.219500000000059e-05, 7.292999999999883e-05, 7.201400000000219e-05, 7.282000000000122e-05, 7.232000000000072e-05, 7.219400000000112e-05, 7.233299999999734e-05, 7.200000000000262e-05, 7.268000000000205e-05, 7.233300000000081e-05, 7.234700000000038e-05, 7.251399999999922e-05, 7.266700000000195e-05, 7.215299999999841e-05, 7.251399999999922e-05, 7.283300000000131e-05, 7.266699999999848e-05, 7.216699999999798e-05, 7.201300000000271e-05, 7.198599999999958e-05, 7.251299999999974e-05, 7.201400000000219e-05, 7.249999999999965e-05, 7.234700000000038e-05, 7.247199999999704e-05, 7.286100000000045e-05, 7.249999999999965e-05, 7.268100000000152e-05, 7.265299999999891e-05, 7.279200000000208e-05, 7.204100000000185e-05, 7.232000000000072e-05, 7.219399999999765e-05, 7.284700000000088e-05, 7.283300000000131e-05, 7.28049999999987e-05, 7.252800000000226e-05, 7.198600000000305e-05, 7.27369999999998e-05, 7.262499999999977e-05, 7.265300000000238e-05, 7.198599999999958e-05]</msg>
<status status="PASS" starttime="20201030 15:53:02.795" endtime="20201030 15:53:02.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.791" endtime="20201030 15:53:02.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.802" endtime="20201030 15:53:02.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.800" endtime="20201030 15:53:02.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.799" endtime="20201030 15:53:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.443" endtime="20201030 15:53:02.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.442" endtime="20201030 15:53:02.822"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.831" endtime="20201030 15:53:02.849"></status>
</kw>
<msg timestamp="20201030 15:53:02.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.829" endtime="20201030 15:53:02.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.850" endtime="20201030 15:53:02.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.853" endtime="20201030 15:53:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.827" endtime="20201030 15:53:02.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.825" endtime="20201030 15:53:02.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.862" endtime="20201030 15:53:03.149"></status>
</kw>
<msg timestamp="20201030 15:53:03.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.861" endtime="20201030 15:53:03.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.153" endtime="20201030 15:53:03.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.162" endtime="20201030 15:53:03.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.858" endtime="20201030 15:53:03.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.856" endtime="20201030 15:53:03.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.168" level="INFO">${RESULT} = [{'diff': 7.386100000000145e-05}, {'diff': 7.351400000000022e-05}, {'diff': 7.383399999999832e-05}, {'diff': 7.300000000000015e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.383399999999832e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.165" endtime="20201030 15:53:03.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.173" level="INFO">${ACCURACY} = {'diff': [7.386100000000145e-05, 7.351400000000022e-05, 7.383399999999832e-05, 7.300000000000015e-05, 7.316699999999898e-05, 7.383399999999832e-05, 7.301399999999972e-05, 7.318000000000255e-05, 7.3708...</msg>
<status status="PASS" starttime="20201030 15:53:03.169" endtime="20201030 15:53:03.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.177" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.176" endtime="20201030 15:53:03.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.180" level="INFO">VALUE: [7.386100000000145e-05, 7.351400000000022e-05, 7.383399999999832e-05, 7.300000000000015e-05, 7.316699999999898e-05, 7.383399999999832e-05, 7.301399999999972e-05, 7.318000000000255e-05, 7.370800000000219e-05, 7.348600000000108e-05, 7.384700000000188e-05, 7.334699999999791e-05, 7.348600000000108e-05, 7.318099999999855e-05, 7.384700000000188e-05, 7.365299999999991e-05, 7.334800000000086e-05, 7.333400000000129e-05, 7.347299999999751e-05, 7.301300000000024e-05, 7.333299999999834e-05, 7.316599999999951e-05, 7.383300000000231e-05, 7.334700000000138e-05, 7.366699999999948e-05, 7.331899999999877e-05, 7.369499999999862e-05, 7.319500000000159e-05, 7.383400000000179e-05, 7.318100000000202e-05, 7.336100000000095e-05, 7.33049999999992e-05, 7.384699999999841e-05, 7.334700000000138e-05, 7.37500000000009e-05, 7.386100000000145e-05, 7.300000000000015e-05, 7.370900000000166e-05, 7.333300000000181e-05, 7.384699999999841e-05, 7.390300000000016e-05, 7.384800000000136e-05, 7.318099999999855e-05, 7.383399999999832e-05, 7.351300000000074e-05, 7.367999999999958e-05, 7.386099999999798e-05, 7.349999999999718e-05, 7.381899999999927e-05, 7.319400000000212e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.178" endtime="20201030 15:53:03.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.173" endtime="20201030 15:53:03.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.185" endtime="20201030 15:53:03.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.183" endtime="20201030 15:53:03.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.182" endtime="20201030 15:53:03.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.823" endtime="20201030 15:53:03.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.823" endtime="20201030 15:53:03.206"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.214" endtime="20201030 15:53:03.233"></status>
</kw>
<msg timestamp="20201030 15:53:03.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.213" endtime="20201030 15:53:03.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.235" endtime="20201030 15:53:03.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.237" endtime="20201030 15:53:03.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.210" endtime="20201030 15:53:03.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.208" endtime="20201030 15:53:03.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.246" endtime="20201030 15:53:03.532"></status>
</kw>
<msg timestamp="20201030 15:53:03.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.245" endtime="20201030 15:53:03.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023053111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023127458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.536" endtime="20201030 15:53:03.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.545" endtime="20201030 15:53:03.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.242" endtime="20201030 15:53:03.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.240" endtime="20201030 15:53:03.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.551" level="INFO">${RESULT} = [{'diff': 7.434699999999891e-05}, {'diff': 7.468000000000058e-05}, {'diff': 7.466599999999754e-05}, {'diff': 7.448600000000208e-05}, {'diff': 7.451400000000122e-05}, {'diff': 7.401400000000072e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.548" endtime="20201030 15:53:03.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.555" level="INFO">${ACCURACY} = {'diff': [7.434699999999891e-05, 7.468000000000058e-05, 7.466599999999754e-05, 7.448600000000208e-05, 7.451400000000122e-05, 7.401400000000072e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.3971...</msg>
<status status="PASS" starttime="20201030 15:53:03.552" endtime="20201030 15:53:03.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.560" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.559" endtime="20201030 15:53:03.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.562" level="INFO">VALUE: [7.434699999999891e-05, 7.468000000000058e-05, 7.466599999999754e-05, 7.448600000000208e-05, 7.451400000000122e-05, 7.401400000000072e-05, 7.436099999999848e-05, 7.434700000000238e-05, 7.397199999999854e-05, 7.466700000000048e-05, 7.466700000000048e-05, 7.451400000000122e-05, 7.400000000000115e-05, 7.433299999999934e-05, 7.401400000000072e-05, 7.401400000000072e-05, 7.448599999999861e-05, 7.433299999999934e-05, 7.401400000000072e-05, 7.465300000000091e-05, 7.416699999999998e-05, 7.488900000000159e-05, 7.484800000000236e-05, 7.451399999999775e-05, 7.418099999999955e-05, 7.468100000000005e-05, 7.400000000000115e-05, 7.469400000000015e-05, 7.401400000000072e-05, 7.451400000000122e-05, 7.484699999999941e-05, 7.483299999999984e-05, 7.436100000000195e-05, 7.455500000000045e-05, 7.434700000000238e-05, 7.486100000000245e-05, 7.401400000000072e-05, 7.401400000000072e-05, 7.484799999999889e-05, 7.399999999999768e-05, 7.40829999999991e-05, 7.416600000000051e-05, 7.451400000000122e-05, 7.398600000000158e-05, 7.416699999999998e-05, 7.434699999999891e-05, 7.413900000000084e-05, 7.422299999999826e-05, 7.416699999999998e-05, 7.466700000000048e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.561" endtime="20201030 15:53:03.564"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.556" endtime="20201030 15:53:03.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.568" endtime="20201030 15:53:03.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.567" endtime="20201030 15:53:03.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.566" endtime="20201030 15:53:03.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.207" endtime="20201030 15:53:03.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.206" endtime="20201030 15:53:03.589"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.598" endtime="20201030 15:53:03.616"></status>
</kw>
<msg timestamp="20201030 15:53:03.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.596" endtime="20201030 15:53:03.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.617" endtime="20201030 15:53:03.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.620" endtime="20201030 15:53:03.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.593" endtime="20201030 15:53:03.622"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.591" endtime="20201030 15:53:03.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.629" endtime="20201030 15:53:03.916"></status>
</kw>
<msg timestamp="20201030 15:53:03.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.627" endtime="20201030 15:53:03.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022103194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.920" endtime="20201030 15:53:03.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.928" endtime="20201030 15:53:03.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.625" endtime="20201030 15:53:03.930"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.623" endtime="20201030 15:53:03.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.935" level="INFO">${RESULT} = [{'diff': 7.516599999999804e-05}, {'diff': 7.569399999999768e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.501400000000172e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:03.932" endtime="20201030 15:53:03.935"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:03.940" level="INFO">${ACCURACY} = {'diff': [7.516599999999804e-05, 7.569399999999768e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.536099999999948e-05, 7.501400000000172e-05, 7.584700000000041e-05, 7.547200000000004e-05, 7.5695...</msg>
<status status="PASS" starttime="20201030 15:53:03.936" endtime="20201030 15:53:03.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.944" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:03.943" endtime="20201030 15:53:03.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.947" level="INFO">VALUE: [7.516599999999804e-05, 7.569399999999768e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.536099999999948e-05, 7.501400000000172e-05, 7.584700000000041e-05, 7.547200000000004e-05, 7.569500000000062e-05, 7.500000000000215e-05, 7.566699999999801e-05, 7.533299999999687e-05, 7.583400000000032e-05, 7.495799999999997e-05, 7.584700000000041e-05, 7.584700000000041e-05, 7.584700000000041e-05, 7.534699999999991e-05, 7.536099999999948e-05, 7.536100000000295e-05, 7.533300000000034e-05, 7.518099999999708e-05, 7.552799999999832e-05, 7.499999999999868e-05, 7.568100000000105e-05, 7.566599999999854e-05, 7.531900000000077e-05, 7.516599999999804e-05, 7.567999999999811e-05, 7.534699999999991e-05, 7.584700000000041e-05, 7.586099999999998e-05, 7.519500000000012e-05, 7.569499999999715e-05, 7.584700000000041e-05, 7.568100000000105e-05, 7.500000000000215e-05, 7.516599999999804e-05, 7.568000000000158e-05, 7.541600000000176e-05, 7.565200000000244e-05, 7.576400000000247e-05, 7.516700000000098e-05, 7.565300000000191e-05, 7.518100000000055e-05, 7.516699999999751e-05, 7.549999999999918e-05, 7.569400000000115e-05, 7.551399999999875e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 15:53:03.945" endtime="20201030 15:53:03.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.941" endtime="20201030 15:53:03.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.952" endtime="20201030 15:53:03.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.950" endtime="20201030 15:53:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.949" endtime="20201030 15:53:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.590" endtime="20201030 15:53:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.589" endtime="20201030 15:53:03.973"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.981" endtime="20201030 15:53:04.001"></status>
</kw>
<msg timestamp="20201030 15:53:04.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.980" endtime="20201030 15:53:04.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.004" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.002" endtime="20201030 15:53:04.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.005" endtime="20201030 15:53:04.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.977" endtime="20201030 15:53:04.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.975" endtime="20201030 15:53:04.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.014" endtime="20201030 15:53:04.301"></status>
</kw>
<msg timestamp="20201030 15:53:04.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.013" endtime="20201030 15:53:04.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022164472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022240486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.305" endtime="20201030 15:53:04.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.314" endtime="20201030 15:53:04.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.010" endtime="20201030 15:53:04.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.008" endtime="20201030 15:53:04.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.320" level="INFO">${RESULT} = [{'diff': 7.601399999999925e-05}, {'diff': 7.669500000000162e-05}, {'diff': 7.665299999999944e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.595900000000044e-05}, {'diff': 7.636199999999996e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:04.317" endtime="20201030 15:53:04.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.325" level="INFO">${ACCURACY} = {'diff': [7.601399999999925e-05, 7.669500000000162e-05, 7.665299999999944e-05, 7.598600000000011e-05, 7.595900000000044e-05, 7.636199999999996e-05, 7.686100000000098e-05, 7.687500000000055e-05, 7.6540...</msg>
<status status="PASS" starttime="20201030 15:53:04.321" endtime="20201030 15:53:04.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.329" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.328" endtime="20201030 15:53:04.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.331" level="INFO">VALUE: [7.601399999999925e-05, 7.669500000000162e-05, 7.665299999999944e-05, 7.598600000000011e-05, 7.595900000000044e-05, 7.636199999999996e-05, 7.686100000000098e-05, 7.687500000000055e-05, 7.654099999999942e-05, 7.616599999999904e-05, 7.651399999999975e-05, 7.644399999999843e-05, 7.602800000000229e-05, 7.598600000000011e-05, 7.634699999999744e-05, 7.648600000000061e-05, 7.633299999999787e-05, 7.602800000000229e-05, 7.61249999999998e-05, 7.599999999999968e-05, 7.666699999999901e-05, 7.666599999999954e-05, 7.652799999999932e-05, 7.666599999999954e-05, 7.619400000000165e-05, 7.686099999999751e-05, 7.599999999999968e-05, 7.650000000000018e-05, 7.686100000000098e-05, 7.683399999999785e-05, 7.616700000000198e-05, 7.683400000000132e-05, 7.668099999999858e-05, 7.686100000000098e-05, 7.683300000000184e-05, 7.634699999999744e-05, 7.688900000000012e-05, 7.666599999999954e-05, 7.633299999999787e-05, 7.620900000000069e-05, 7.684700000000141e-05, 7.668099999999858e-05, 7.618100000000155e-05, 7.602799999999882e-05, 7.616700000000198e-05, 7.605500000000195e-05, 7.687500000000055e-05, 7.684700000000141e-05, 7.665199999999997e-05, 7.631900000000177e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.330" endtime="20201030 15:53:04.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.325" endtime="20201030 15:53:04.333"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.336" endtime="20201030 15:53:04.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.335" endtime="20201030 15:53:04.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.334" endtime="20201030 15:53:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.973" endtime="20201030 15:53:04.357"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.973" endtime="20201030 15:53:04.357"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.366" endtime="20201030 15:53:04.386"></status>
</kw>
<msg timestamp="20201030 15:53:04.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.364" endtime="20201030 15:53:04.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.387" endtime="20201030 15:53:04.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.390" endtime="20201030 15:53:04.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.362" endtime="20201030 15:53:04.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.360" endtime="20201030 15:53:04.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.400" endtime="20201030 15:53:04.686"></status>
</kw>
<msg timestamp="20201030 15:53:04.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023322736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.398" endtime="20201030 15:53:04.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023245403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023322736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.690" endtime="20201030 15:53:04.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.698" endtime="20201030 15:53:04.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.395" endtime="20201030 15:53:04.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.393" endtime="20201030 15:53:04.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.705" level="INFO">${RESULT} = [{'diff': 7.733299999999887e-05}, {'diff': 7.718099999999908e-05}, {'diff': 7.702799999999982e-05}, {'diff': 7.768000000000011e-05}, {'diff': 7.718100000000255e-05}, {'diff': 7.712499999999733e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:04.702" endtime="20201030 15:53:04.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:04.709" level="INFO">${ACCURACY} = {'diff': [7.733299999999887e-05, 7.718099999999908e-05, 7.702799999999982e-05, 7.768000000000011e-05, 7.718100000000255e-05, 7.712499999999733e-05, 7.701400000000025e-05, 7.69579999999985e-05, 7.76939...</msg>
<status status="PASS" starttime="20201030 15:53:04.706" endtime="20201030 15:53:04.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.714" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:04.713" endtime="20201030 15:53:04.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.716" level="INFO">VALUE: [7.733299999999887e-05, 7.718099999999908e-05, 7.702799999999982e-05, 7.768000000000011e-05, 7.718100000000255e-05, 7.712499999999733e-05, 7.701400000000025e-05, 7.69579999999985e-05, 7.769399999999968e-05, 7.786099999999851e-05, 7.752800000000032e-05, 7.784700000000241e-05, 7.734699999999844e-05, 7.772300000000176e-05, 7.78189999999998e-05, 7.768099999999958e-05, 7.766700000000001e-05, 7.766700000000001e-05, 7.748600000000161e-05, 7.719399999999918e-05, 7.733299999999887e-05, 7.736100000000148e-05, 7.751400000000075e-05, 7.784699999999894e-05, 7.705599999999896e-05, 7.766700000000001e-05, 7.720900000000169e-05, 7.750000000000118e-05, 7.751400000000075e-05, 7.700000000000068e-05, 7.736099999999801e-05, 7.736100000000148e-05, 7.733400000000182e-05, 7.702700000000035e-05, 7.702799999999982e-05, 7.766599999999707e-05, 7.731900000000277e-05, 7.783299999999937e-05, 7.701399999999678e-05, 7.750000000000118e-05, 7.733299999999887e-05, 7.734699999999844e-05, 7.754099999999695e-05, 7.701400000000025e-05, 7.715299999999994e-05, 7.751399999999728e-05, 7.715200000000047e-05, 7.750000000000118e-05, 7.749999999999771e-05, 7.737500000000105e-05]</msg>
<status status="PASS" starttime="20201030 15:53:04.715" endtime="20201030 15:53:04.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.710" endtime="20201030 15:53:04.718"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.722" endtime="20201030 15:53:04.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.721" endtime="20201030 15:53:04.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.719" endtime="20201030 15:53:04.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.358" endtime="20201030 15:53:04.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.357" endtime="20201030 15:53:04.743"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.751" endtime="20201030 15:53:04.770"></status>
</kw>
<msg timestamp="20201030 15:53:04.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.750" endtime="20201030 15:53:04.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.771" endtime="20201030 15:53:04.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.774" endtime="20201030 15:53:04.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.747" endtime="20201030 15:53:04.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.745" endtime="20201030 15:53:04.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.783" endtime="20201030 15:53:05.068"></status>
</kw>
<msg timestamp="20201030 15:53:05.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.781" endtime="20201030 15:53:05.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.072" endtime="20201030 15:53:05.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.081" endtime="20201030 15:53:05.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.779" endtime="20201030 15:53:05.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.777" endtime="20201030 15:53:05.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.089" level="INFO">${RESULT} = [{'diff': 7.836099999999901e-05}, {'diff': 7.836200000000196e-05}, {'diff': 7.816700000000051e-05}, {'diff': 7.820799999999975e-05}, {'diff': 7.851399999999828e-05}, {'diff': 7.833299999999987e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.084" endtime="20201030 15:53:05.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.097" level="INFO">${ACCURACY} = {'diff': [7.836099999999901e-05, 7.836200000000196e-05, 7.816700000000051e-05, 7.820799999999975e-05, 7.851399999999828e-05, 7.833299999999987e-05, 7.867999999999764e-05, 7.867999999999764e-05, 7.8667...</msg>
<status status="PASS" starttime="20201030 15:53:05.091" endtime="20201030 15:53:05.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.105" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.103" endtime="20201030 15:53:05.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.109" level="INFO">VALUE: [7.836099999999901e-05, 7.836200000000196e-05, 7.816700000000051e-05, 7.820799999999975e-05, 7.851399999999828e-05, 7.833299999999987e-05, 7.867999999999764e-05, 7.867999999999764e-05, 7.866700000000101e-05, 7.848600000000261e-05, 7.834699999999944e-05, 7.849999999999871e-05, 7.868100000000058e-05, 7.847299999999904e-05, 7.820799999999975e-05, 7.801400000000125e-05, 7.834700000000291e-05, 7.8458e-05, 7.886099999999951e-05, 7.834699999999944e-05, 7.88190000000008e-05, 7.851399999999828e-05, 7.818100000000008e-05, 7.800000000000168e-05, 7.854200000000089e-05, 7.801399999999778e-05, 7.884800000000289e-05, 7.884699999999994e-05, 7.833399999999935e-05, 7.852700000000185e-05, 7.83190000000003e-05, 7.815200000000147e-05, 7.886099999999951e-05, 7.849999999999871e-05, 7.833299999999987e-05, 7.816700000000051e-05, 7.884699999999994e-05, 7.884699999999994e-05, 7.849999999999871e-05, 7.870800000000025e-05, 7.858300000000012e-05, 7.886099999999951e-05, 7.8151999999998e-05, 7.833299999999987e-05, 7.818000000000061e-05, 7.850000000000218e-05, 7.8458e-05, 7.819499999999965e-05, 7.883300000000037e-05, 7.851400000000175e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.107" endtime="20201030 15:53:05.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.098" endtime="20201030 15:53:05.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.117" endtime="20201030 15:53:05.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.114" endtime="20201030 15:53:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.112" endtime="20201030 15:53:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.744" endtime="20201030 15:53:05.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.743" endtime="20201030 15:53:05.138"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.147" endtime="20201030 15:53:05.165"></status>
</kw>
<msg timestamp="20201030 15:53:05.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.145" endtime="20201030 15:53:05.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.167" endtime="20201030 15:53:05.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.169" endtime="20201030 15:53:05.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.142" endtime="20201030 15:53:05.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.140" endtime="20201030 15:53:05.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.178" endtime="20201030 15:53:05.466"></status>
</kw>
<msg timestamp="20201030 15:53:05.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.177" endtime="20201030 15:53:05.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022228528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022307708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.470" endtime="20201030 15:53:05.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.479" endtime="20201030 15:53:05.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.174" endtime="20201030 15:53:05.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.172" endtime="20201030 15:53:05.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.485" level="INFO">${RESULT} = [{'diff': 7.917999999999814e-05}, {'diff': 7.951399999999928e-05}, {'diff': 7.966699999999854e-05}, {'diff': 7.933300000000088e-05}, {'diff': 7.970900000000072e-05}, {'diff': 7.966699999999854e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.482" endtime="20201030 15:53:05.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.489" level="INFO">${ACCURACY} = {'diff': [7.917999999999814e-05, 7.951399999999928e-05, 7.966699999999854e-05, 7.933300000000088e-05, 7.970900000000072e-05, 7.966699999999854e-05, 7.898599999999964e-05, 7.916700000000151e-05, 7.9666...</msg>
<status status="PASS" starttime="20201030 15:53:05.486" endtime="20201030 15:53:05.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.494" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.493" endtime="20201030 15:53:05.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.496" level="INFO">VALUE: [7.917999999999814e-05, 7.951399999999928e-05, 7.966699999999854e-05, 7.933300000000088e-05, 7.970900000000072e-05, 7.966699999999854e-05, 7.898599999999964e-05, 7.916700000000151e-05, 7.966699999999854e-05, 7.92779999999986e-05, 7.990299999999922e-05, 7.967999999999864e-05, 7.918000000000161e-05, 7.967999999999864e-05, 7.93329999999974e-05, 7.986100000000051e-05, 7.933300000000088e-05, 7.949999999999971e-05, 7.983300000000138e-05, 7.895899999999997e-05, 7.986199999999999e-05, 7.966699999999854e-05, 7.934799999999992e-05, 7.966599999999907e-05, 7.966599999999907e-05, 7.984699999999748e-05, 7.984700000000094e-05, 7.951399999999928e-05, 7.929199999999817e-05, 7.949999999999971e-05, 7.901399999999878e-05, 7.919500000000065e-05, 7.966699999999854e-05, 7.948600000000014e-05, 7.937500000000305e-05, 7.967999999999864e-05, 7.899999999999921e-05, 7.933300000000088e-05, 7.969400000000168e-05, 7.901399999999878e-05, 7.915300000000194e-05, 7.934700000000044e-05, 7.951399999999928e-05, 7.901399999999878e-05, 7.932000000000078e-05, 7.933400000000035e-05, 7.951400000000275e-05, 7.95129999999998e-05, 7.899999999999921e-05, 7.92770000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.495" endtime="20201030 15:53:05.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.490" endtime="20201030 15:53:05.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.501" endtime="20201030 15:53:05.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.500" endtime="20201030 15:53:05.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.498" endtime="20201030 15:53:05.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.139" endtime="20201030 15:53:05.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.138" endtime="20201030 15:53:05.522"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.531" endtime="20201030 15:53:05.552"></status>
</kw>
<msg timestamp="20201030 15:53:05.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.529" endtime="20201030 15:53:05.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.554" endtime="20201030 15:53:05.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.557" endtime="20201030 15:53:05.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.526" endtime="20201030 15:53:05.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.524" endtime="20201030 15:53:05.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.566" endtime="20201030 15:53:05.851"></status>
</kw>
<msg timestamp="20201030 15:53:05.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025230083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.564" endtime="20201030 15:53:05.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025230083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025310431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.856" endtime="20201030 15:53:05.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.864" endtime="20201030 15:53:05.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.562" endtime="20201030 15:53:05.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.560" endtime="20201030 15:53:05.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.870" level="INFO">${RESULT} = [{'diff': 8.034800000000092e-05}, {'diff': 8.033400000000135e-05}, {'diff': 8.050000000000071e-05}, {'diff': 8.086100000000151e-05}, {'diff': 8.051400000000028e-05}, {'diff': 8.016599999999957e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:05.867" endtime="20201030 15:53:05.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:05.875" level="INFO">${ACCURACY} = {'diff': [8.034800000000092e-05, 8.033400000000135e-05, 8.050000000000071e-05, 8.086100000000151e-05, 8.051400000000028e-05, 8.016599999999957e-05, 8.018100000000208e-05, 8.068100000000258e-05, 8.0195...</msg>
<status status="PASS" starttime="20201030 15:53:05.871" endtime="20201030 15:53:05.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.879" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:05.878" endtime="20201030 15:53:05.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.881" level="INFO">VALUE: [8.034800000000092e-05, 8.033400000000135e-05, 8.050000000000071e-05, 8.086100000000151e-05, 8.051400000000028e-05, 8.016599999999957e-05, 8.018100000000208e-05, 8.068100000000258e-05, 8.019500000000165e-05, 8.015299999999947e-05, 8.048600000000114e-05, 8.036200000000049e-05, 8.034800000000092e-05, 8.050000000000071e-05, 8.004200000000239e-05, 8.087500000000108e-05, 8.019400000000218e-05, 8.038900000000015e-05, 8.066700000000301e-05, 8.070899999999825e-05, 8.034699999999798e-05, 8.034700000000145e-05, 8.084800000000142e-05, 8.001399999999978e-05, 8.000000000000021e-05, 8.065299999999997e-05, 8.000000000000021e-05, 8.019400000000218e-05, 8.051400000000028e-05, 8.083300000000238e-05, 8.084699999999848e-05, 8.086099999999805e-05, 8.040200000000025e-05, 8.087500000000108e-05, 8.033400000000135e-05, 8.066699999999954e-05, 8.080599999999924e-05, 8.020800000000175e-05, 8.052700000000038e-05, 8.018000000000261e-05, 8.086099999999805e-05, 8.02909999999997e-05, 8.017999999999914e-05, 8.068099999999911e-05, 8.052799999999985e-05, 8.083399999999838e-05, 8.047200000000157e-05, 8.052799999999985e-05, 8.034700000000145e-05, 8.033400000000135e-05]</msg>
<status status="PASS" starttime="20201030 15:53:05.880" endtime="20201030 15:53:05.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.875" endtime="20201030 15:53:05.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.887" endtime="20201030 15:53:05.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.886" endtime="20201030 15:53:05.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.885" endtime="20201030 15:53:05.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.523" endtime="20201030 15:53:05.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.522" endtime="20201030 15:53:05.908"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.917" endtime="20201030 15:53:05.935"></status>
</kw>
<msg timestamp="20201030 15:53:05.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.915" endtime="20201030 15:53:05.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.937" endtime="20201030 15:53:05.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.939" endtime="20201030 15:53:05.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.913" endtime="20201030 15:53:05.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.910" endtime="20201030 15:53:05.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.948" endtime="20201030 15:53:06.235"></status>
</kw>
<msg timestamp="20201030 15:53:06.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.947" endtime="20201030 15:53:06.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022243347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022325111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.239" endtime="20201030 15:53:06.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.247" endtime="20201030 15:53:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.944" endtime="20201030 15:53:06.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.943" endtime="20201030 15:53:06.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.254" level="INFO">${RESULT} = [{'diff': 8.176400000000153e-05}, {'diff': 8.101399999999731e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.10840000000021e-05}, {'diff': 8.186099999999905e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.250" endtime="20201030 15:53:06.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.259" level="INFO">${ACCURACY} = {'diff': [8.176400000000153e-05, 8.101399999999731e-05, 8.131999999999931e-05, 8.184699999999948e-05, 8.10840000000021e-05, 8.186099999999905e-05, 8.098599999999817e-05, 8.183399999999938e-05, 8.14860...</msg>
<status status="PASS" starttime="20201030 15:53:06.255" endtime="20201030 15:53:06.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.263" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.262" endtime="20201030 15:53:06.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.266" level="INFO">VALUE: [8.176400000000153e-05, 8.101399999999731e-05, 8.131999999999931e-05, 8.184699999999948e-05, 8.10840000000021e-05, 8.186099999999905e-05, 8.098599999999817e-05, 8.183399999999938e-05, 8.148600000000214e-05, 8.134699999999898e-05, 8.136100000000202e-05, 8.166600000000107e-05, 8.169499999999968e-05, 8.149999999999824e-05, 8.168100000000011e-05, 8.184699999999948e-05, 8.151399999999781e-05, 8.173599999999892e-05, 8.118099999999961e-05, 8.118000000000014e-05, 8.150000000000171e-05, 8.159699999999923e-05, 8.116700000000004e-05, 8.18329999999999e-05, 8.149999999999824e-05, 8.148599999999867e-05, 8.118099999999961e-05, 8.169499999999968e-05, 8.175000000000196e-05, 8.17910000000012e-05, 8.134800000000192e-05, 8.101400000000078e-05, 8.165199999999803e-05, 8.151399999999781e-05, 8.134699999999898e-05, 8.134699999999898e-05, 8.120899999999875e-05, 8.149999999999824e-05, 8.101400000000078e-05, 8.133399999999888e-05, 8.136099999999855e-05, 8.1458999999999e-05, 8.167999999999717e-05, 8.148599999999867e-05, 8.151400000000128e-05, 8.156999999999956e-05, 8.152800000000085e-05, 8.169400000000021e-05, 8.136099999999855e-05, 8.148600000000214e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.264" endtime="20201030 15:53:06.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.260" endtime="20201030 15:53:06.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.271" endtime="20201030 15:53:06.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.269" endtime="20201030 15:53:06.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.268" endtime="20201030 15:53:06.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.909" endtime="20201030 15:53:06.291"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.908" endtime="20201030 15:53:06.291"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.300" endtime="20201030 15:53:06.319"></status>
</kw>
<msg timestamp="20201030 15:53:06.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.298" endtime="20201030 15:53:06.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.321" endtime="20201030 15:53:06.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.324" endtime="20201030 15:53:06.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.296" endtime="20201030 15:53:06.327"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.294" endtime="20201030 15:53:06.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.335" endtime="20201030 15:53:06.622"></status>
</kw>
<msg timestamp="20201030 15:53:06.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.333" endtime="20201030 15:53:06.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022036556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.626" endtime="20201030 15:53:06.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.635" endtime="20201030 15:53:06.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.330" endtime="20201030 15:53:06.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.328" endtime="20201030 15:53:06.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.641" level="INFO">${RESULT} = [{'diff': 8.216600000000157e-05}, {'diff': 8.234699999999998e-05}, {'diff': 8.28330000000009e-05}, {'diff': 8.200000000000221e-05}, {'diff': 8.232000000000031e-05}, {'diff': 8.284799999999995e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.638" endtime="20201030 15:53:06.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:06.645" level="INFO">${ACCURACY} = {'diff': [8.216600000000157e-05, 8.234699999999998e-05, 8.28330000000009e-05, 8.200000000000221e-05, 8.232000000000031e-05, 8.284799999999995e-05, 8.234799999999945e-05, 8.26529999999985e-05, 8.282000...</msg>
<status status="PASS" starttime="20201030 15:53:06.642" endtime="20201030 15:53:06.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.650" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:06.649" endtime="20201030 15:53:06.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.652" level="INFO">VALUE: [8.216600000000157e-05, 8.234699999999998e-05, 8.28330000000009e-05, 8.200000000000221e-05, 8.232000000000031e-05, 8.284799999999995e-05, 8.234799999999945e-05, 8.26529999999985e-05, 8.282000000000081e-05, 8.216600000000157e-05, 8.268000000000164e-05, 8.284700000000048e-05, 8.249999999999924e-05, 8.232000000000031e-05, 8.286100000000005e-05, 8.234699999999998e-05, 8.248599999999967e-05, 8.204100000000145e-05, 8.205499999999755e-05, 8.284799999999995e-05, 8.248699999999914e-05, 8.202799999999788e-05, 8.26659999999986e-05, 8.230500000000127e-05, 8.26109999999998e-05, 8.198600000000264e-05, 8.266700000000154e-05, 8.201400000000178e-05, 8.24720000000001e-05, 8.249999999999924e-05, 8.288899999999919e-05, 8.26529999999985e-05, 8.200000000000221e-05, 8.265199999999903e-05, 8.219400000000071e-05, 8.202799999999788e-05, 8.267999999999817e-05, 8.252799999999838e-05, 8.268099999999765e-05, 8.283400000000038e-05, 8.218000000000114e-05, 8.233399999999988e-05, 8.236200000000249e-05, 8.198699999999864e-05, 8.267999999999817e-05, 8.272200000000035e-05, 8.200000000000221e-05, 8.250000000000271e-05, 8.284700000000048e-05, 8.216700000000104e-05]</msg>
<status status="PASS" starttime="20201030 15:53:06.651" endtime="20201030 15:53:06.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.646" endtime="20201030 15:53:06.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.657" endtime="20201030 15:53:06.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.656" endtime="20201030 15:53:06.677"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.655" endtime="20201030 15:53:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.292" endtime="20201030 15:53:06.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.292" endtime="20201030 15:53:06.678"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.687" endtime="20201030 15:53:06.707"></status>
</kw>
<msg timestamp="20201030 15:53:06.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.685" endtime="20201030 15:53:06.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.708" endtime="20201030 15:53:06.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.711" endtime="20201030 15:53:06.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.683" endtime="20201030 15:53:06.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.680" endtime="20201030 15:53:06.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.720" endtime="20201030 15:53:07.006"></status>
</kw>
<msg timestamp="20201030 15:53:07.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02306025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:06.718" endtime="20201030 15:53:07.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02306025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023143403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:07.010" endtime="20201030 15:53:07.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.018" endtime="20201030 15:53:07.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.716" endtime="20201030 15:53:07.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.714" endtime="20201030 15:53:07.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.025" level="INFO">${RESULT} = [{'diff': 8.3152999999999e-05}, {'diff': 8.333400000000088e-05}, {'diff': 8.348600000000067e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.351399999999981e-05}, {'diff': 8.301399999999931e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.022" endtime="20201030 15:53:07.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.029" level="INFO">${ACCURACY} = {'diff': [8.3152999999999e-05, 8.333400000000088e-05, 8.348600000000067e-05, 8.351399999999981e-05, 8.351399999999981e-05, 8.301399999999931e-05, 8.312499999999987e-05, 8.380600000000224e-05, 8.319399...</msg>
<status status="PASS" starttime="20201030 15:53:07.026" endtime="20201030 15:53:07.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.034" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.032" endtime="20201030 15:53:07.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.036" level="INFO">VALUE: [8.3152999999999e-05, 8.333400000000088e-05, 8.348600000000067e-05, 8.351399999999981e-05, 8.351399999999981e-05, 8.301399999999931e-05, 8.312499999999987e-05, 8.380600000000224e-05, 8.319399999999824e-05, 8.316699999999858e-05, 8.363899999999994e-05, 8.302799999999888e-05, 8.336100000000055e-05, 8.350000000000024e-05, 8.316700000000204e-05, 8.301399999999931e-05, 8.301299999999984e-05, 8.320799999999781e-05, 8.351399999999981e-05, 8.367999999999917e-05, 8.368100000000211e-05, 8.368100000000211e-05, 8.384800000000095e-05, 8.366699999999908e-05, 8.351399999999981e-05, 8.316700000000204e-05, 8.348600000000067e-05, 8.369400000000221e-05, 8.387500000000062e-05, 8.334700000000098e-05, 8.369399999999874e-05, 8.315300000000247e-05, 8.367999999999917e-05, 8.318100000000161e-05, 8.368100000000211e-05, 8.318100000000161e-05, 8.386199999999705e-05, 8.336200000000002e-05, 8.324999999999999e-05, 8.31659999999991e-05, 8.384700000000148e-05, 8.302799999999888e-05, 8.367999999999917e-05, 8.330600000000174e-05, 8.388900000000019e-05, 8.333299999999794e-05, 8.387499999999715e-05, 8.336099999999708e-05, 8.319399999999824e-05, 8.316700000000204e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.035" endtime="20201030 15:53:07.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.030" endtime="20201030 15:53:07.042"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.046" endtime="20201030 15:53:07.065"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.045" endtime="20201030 15:53:07.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.043" endtime="20201030 15:53:07.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.679" endtime="20201030 15:53:07.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.678" endtime="20201030 15:53:07.067"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.075" endtime="20201030 15:53:07.094"></status>
</kw>
<msg timestamp="20201030 15:53:07.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.074" endtime="20201030 15:53:07.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.096" endtime="20201030 15:53:07.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.098" endtime="20201030 15:53:07.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.071" endtime="20201030 15:53:07.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.069" endtime="20201030 15:53:07.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.107" endtime="20201030 15:53:07.393"></status>
</kw>
<msg timestamp="20201030 15:53:07.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.106" endtime="20201030 15:53:07.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022145778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.397" endtime="20201030 15:53:07.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.405" endtime="20201030 15:53:07.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.103" endtime="20201030 15:53:07.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.101" endtime="20201030 15:53:07.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.412" level="INFO">${RESULT} = [{'diff': 8.4846999999999e-05}, {'diff': 8.418099999999915e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.484700000000248e-05}, {'diff': 8.487500000000162e-05}, {'diff': 8.433400000000188e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:07.409" endtime="20201030 15:53:07.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.417" level="INFO">${ACCURACY} = {'diff': [8.4846999999999e-05, 8.418099999999915e-05, 8.402799999999988e-05, 8.484700000000248e-05, 8.487500000000162e-05, 8.433400000000188e-05, 8.4846999999999e-05, 8.401300000000084e-05, 8.41660000...</msg>
<status status="PASS" starttime="20201030 15:53:07.413" endtime="20201030 15:53:07.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.422" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.421" endtime="20201030 15:53:07.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.424" level="INFO">VALUE: [8.4846999999999e-05, 8.418099999999915e-05, 8.402799999999988e-05, 8.484700000000248e-05, 8.487500000000162e-05, 8.433400000000188e-05, 8.4846999999999e-05, 8.401300000000084e-05, 8.41660000000001e-05, 8.468000000000017e-05, 8.438899999999722e-05, 8.448600000000167e-05, 8.44859999999982e-05, 8.400000000000074e-05, 8.427799999999666e-05, 8.483400000000238e-05, 8.434799999999798e-05, 8.418099999999915e-05, 8.48050000000003e-05, 8.483299999999944e-05, 8.434700000000198e-05, 8.484700000000248e-05, 8.486099999999858e-05, 8.450000000000124e-05, 8.416699999999958e-05, 8.466700000000008e-05, 8.451400000000081e-05, 8.470799999999931e-05, 8.450000000000124e-05, 8.490299999999729e-05, 8.468000000000017e-05, 8.434700000000198e-05, 8.417999999999967e-05, 8.486100000000205e-05, 8.461099999999833e-05, 8.434700000000198e-05, 8.431899999999937e-05, 8.450000000000124e-05, 8.44309999999994e-05, 8.436199999999755e-05, 8.39590000000015e-05, 8.450000000000124e-05, 8.445800000000253e-05, 8.483299999999944e-05, 8.417999999999967e-05, 8.433299999999894e-05, 8.418099999999915e-05, 8.402799999999988e-05, 8.416699999999958e-05, 8.451400000000081e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.423" endtime="20201030 15:53:07.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.418" endtime="20201030 15:53:07.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.429" endtime="20201030 15:53:07.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.428" endtime="20201030 15:53:07.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.426" endtime="20201030 15:53:07.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.068" endtime="20201030 15:53:07.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.067" endtime="20201030 15:53:07.450"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.459" endtime="20201030 15:53:07.478"></status>
</kw>
<msg timestamp="20201030 15:53:07.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.457" endtime="20201030 15:53:07.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.479" endtime="20201030 15:53:07.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.482" endtime="20201030 15:53:07.483"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.455" endtime="20201030 15:53:07.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.452" endtime="20201030 15:53:07.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.491" endtime="20201030 15:53:07.777"></status>
</kw>
<msg timestamp="20201030 15:53:07.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.489" endtime="20201030 15:53:07.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022709111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.781" endtime="20201030 15:53:07.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.789" endtime="20201030 15:53:07.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.487" endtime="20201030 15:53:07.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.485" endtime="20201030 15:53:07.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.796" level="INFO">${RESULT} = [{'diff': 8.502800000000088e-05}, {'diff': 8.5847e-05}, {'diff': 8.536099999999908e-05}, {'diff': 8.534799999999898e-05}, {'diff': 8.584799999999948e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.5...</msg>
<status status="PASS" starttime="20201030 15:53:07.793" endtime="20201030 15:53:07.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:07.800" level="INFO">${ACCURACY} = {'diff': [8.502800000000088e-05, 8.5847e-05, 8.536099999999908e-05, 8.534799999999898e-05, 8.584799999999948e-05, 8.501400000000131e-05, 8.551300000000234e-05, 8.583300000000044e-05, 8.563900000000194...</msg>
<status status="PASS" starttime="20201030 15:53:07.797" endtime="20201030 15:53:07.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.805" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:07.803" endtime="20201030 15:53:07.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.807" level="INFO">VALUE: [8.502800000000088e-05, 8.5847e-05, 8.536099999999908e-05, 8.534799999999898e-05, 8.584799999999948e-05, 8.501400000000131e-05, 8.551300000000234e-05, 8.583300000000044e-05, 8.563900000000194e-05, 8.551400000000181e-05, 8.554199999999748e-05, 8.516700000000058e-05, 8.587499999999915e-05, 8.518100000000015e-05, 8.518100000000015e-05, 8.533399999999941e-05, 8.537500000000212e-05, 8.548700000000214e-05, 8.519400000000024e-05, 8.56799999999977e-05, 8.501400000000131e-05, 8.51660000000011e-05, 8.568100000000065e-05, 8.568100000000065e-05, 8.568100000000065e-05, 8.582000000000034e-05, 8.5153000000001e-05, 8.516700000000058e-05, 8.568100000000065e-05, 8.501299999999837e-05, 8.518000000000067e-05, 8.51660000000011e-05, 8.534700000000298e-05, 8.518000000000067e-05, 8.5847e-05, 8.581900000000087e-05, 8.568100000000065e-05, 8.568100000000065e-05, 8.549999999999877e-05, 8.568100000000065e-05, 8.51669999999971e-05, 8.500000000000174e-05, 8.551400000000181e-05, 8.519400000000024e-05, 8.551399999999834e-05, 8.5847e-05, 8.538899999999822e-05, 8.568099999999718e-05, 8.551399999999834e-05, 8.501399999999784e-05]</msg>
<status status="PASS" starttime="20201030 15:53:07.806" endtime="20201030 15:53:07.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.801" endtime="20201030 15:53:07.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.812" endtime="20201030 15:53:07.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.810" endtime="20201030 15:53:07.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.809" endtime="20201030 15:53:07.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.451" endtime="20201030 15:53:07.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.450" endtime="20201030 15:53:07.833"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.841" endtime="20201030 15:53:07.861"></status>
</kw>
<msg timestamp="20201030 15:53:07.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.840" endtime="20201030 15:53:07.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.863" endtime="20201030 15:53:07.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.865" endtime="20201030 15:53:07.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.837" endtime="20201030 15:53:07.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.835" endtime="20201030 15:53:07.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.874" endtime="20201030 15:53:08.160"></status>
</kw>
<msg timestamp="20201030 15:53:08.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.873" endtime="20201030 15:53:08.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023088736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023174903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.165" endtime="20201030 15:53:08.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.173" endtime="20201030 15:53:08.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.870" endtime="20201030 15:53:08.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.868" endtime="20201030 15:53:08.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.180" level="INFO">${RESULT} = [{'diff': 8.616700000000158e-05}, {'diff': 8.633400000000041e-05}, {'diff': 8.655500000000205e-05}, {'diff': 8.66660000000026e-05}, {'diff': 8.655599999999805e-05}, {'diff': 8.633300000000094e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:08.176" endtime="20201030 15:53:08.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.184" level="INFO">${ACCURACY} = {'diff': [8.616700000000158e-05, 8.633400000000041e-05, 8.655500000000205e-05, 8.66660000000026e-05, 8.655599999999805e-05, 8.633300000000094e-05, 8.652799999999891e-05, 8.66799999999987e-05, 8.688899...</msg>
<status status="PASS" starttime="20201030 15:53:08.180" endtime="20201030 15:53:08.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.188" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.187" endtime="20201030 15:53:08.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.191" level="INFO">VALUE: [8.616700000000158e-05, 8.633400000000041e-05, 8.655500000000205e-05, 8.66660000000026e-05, 8.655599999999805e-05, 8.633300000000094e-05, 8.652799999999891e-05, 8.66799999999987e-05, 8.688899999999972e-05, 8.61669999999981e-05, 8.601399999999884e-05, 8.684800000000048e-05, 8.619500000000072e-05, 8.599999999999927e-05, 8.66669999999986e-05, 8.616599999999863e-05, 8.66799999999987e-05, 8.636100000000008e-05, 8.636100000000008e-05, 8.683300000000144e-05, 8.668099999999818e-05, 8.670900000000079e-05, 8.651399999999934e-05, 8.636199999999955e-05, 8.649999999999977e-05, 8.599999999999927e-05, 8.636100000000008e-05, 8.599999999999927e-05, 8.665199999999956e-05, 8.63189999999979e-05, 8.63189999999979e-05, 8.602800000000188e-05, 8.663899999999947e-05, 8.61669999999981e-05, 8.634799999999998e-05, 8.649999999999977e-05, 8.599999999999927e-05, 8.669400000000174e-05, 8.601399999999884e-05, 8.684699999999754e-05, 8.686100000000058e-05, 8.619400000000124e-05, 8.651399999999934e-05, 8.61669999999981e-05, 8.683300000000144e-05, 8.672200000000088e-05, 8.684799999999701e-05, 8.636100000000008e-05, 8.666700000000208e-05, 8.601400000000231e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.189" endtime="20201030 15:53:08.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.185" endtime="20201030 15:53:08.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.196" endtime="20201030 15:53:08.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.195" endtime="20201030 15:53:08.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.194" endtime="20201030 15:53:08.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.834" endtime="20201030 15:53:08.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.833" endtime="20201030 15:53:08.217"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.226" endtime="20201030 15:53:08.245"></status>
</kw>
<msg timestamp="20201030 15:53:08.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.224" endtime="20201030 15:53:08.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.247" endtime="20201030 15:53:08.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.249" endtime="20201030 15:53:08.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.222" endtime="20201030 15:53:08.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.220" endtime="20201030 15:53:08.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.258" endtime="20201030 15:53:08.544"></status>
</kw>
<msg timestamp="20201030 15:53:08.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.257" endtime="20201030 15:53:08.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022651583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.548" endtime="20201030 15:53:08.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.556" endtime="20201030 15:53:08.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.254" endtime="20201030 15:53:08.558"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.253" endtime="20201030 15:53:08.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.563" level="INFO">${RESULT} = [{'diff': 8.765200000000056e-05}, {'diff': 8.751400000000034e-05}, {'diff': 8.719399999999877e-05}, {'diff': 8.69860000000007e-05}, {'diff': 8.76669999999996e-05}, {'diff': 8.733299999999847e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:08.560" endtime="20201030 15:53:08.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.568" level="INFO">${ACCURACY} = {'diff': [8.765200000000056e-05, 8.751400000000034e-05, 8.719399999999877e-05, 8.69860000000007e-05, 8.76669999999996e-05, 8.733299999999847e-05, 8.766700000000308e-05, 8.715299999999954e-05, 8.733299...</msg>
<status status="PASS" starttime="20201030 15:53:08.564" endtime="20201030 15:53:08.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.573" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.571" endtime="20201030 15:53:08.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.575" level="INFO">VALUE: [8.765200000000056e-05, 8.751400000000034e-05, 8.719399999999877e-05, 8.69860000000007e-05, 8.76669999999996e-05, 8.733299999999847e-05, 8.766700000000308e-05, 8.715299999999954e-05, 8.733299999999847e-05, 8.732000000000184e-05, 8.766600000000013e-05, 8.784699999999854e-05, 8.740299999999979e-05, 8.71669999999991e-05, 8.765300000000004e-05, 8.71669999999991e-05, 8.71669999999991e-05, 8.71669999999991e-05, 8.756899999999915e-05, 8.701300000000037e-05, 8.740299999999979e-05, 8.733300000000194e-05, 8.702799999999941e-05, 8.76799999999997e-05, 8.733300000000194e-05, 8.76669999999996e-05, 8.777800000000016e-05, 8.701399999999984e-05, 8.73470000000015e-05, 8.74999999999973e-05, 8.71669999999991e-05, 8.718099999999868e-05, 8.766600000000013e-05, 8.701399999999984e-05, 8.700000000000027e-05, 8.718100000000215e-05, 8.751399999999687e-05, 8.76669999999996e-05, 8.715299999999954e-05, 8.76669999999996e-05, 8.71669999999991e-05, 8.733400000000141e-05, 8.722200000000138e-05, 8.786099999999811e-05, 8.766600000000013e-05, 8.786100000000158e-05, 8.751400000000034e-05, 8.763900000000047e-05, 8.786100000000158e-05, 8.751400000000034e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.574" endtime="20201030 15:53:08.576"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.569" endtime="20201030 15:53:08.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.580" endtime="20201030 15:53:08.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.578" endtime="20201030 15:53:08.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.577" endtime="20201030 15:53:08.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.218" endtime="20201030 15:53:08.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.217" endtime="20201030 15:53:08.601"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.609" endtime="20201030 15:53:08.628"></status>
</kw>
<msg timestamp="20201030 15:53:08.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.608" endtime="20201030 15:53:08.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.630" endtime="20201030 15:53:08.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.632" endtime="20201030 15:53:08.634"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.605" endtime="20201030 15:53:08.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.603" endtime="20201030 15:53:08.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.641" endtime="20201030 15:53:08.928"></status>
</kw>
<msg timestamp="20201030 15:53:08.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.640" endtime="20201030 15:53:08.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022202694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.932" endtime="20201030 15:53:08.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.941" endtime="20201030 15:53:08.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.637" endtime="20201030 15:53:08.943"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.636" endtime="20201030 15:53:08.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.947" level="INFO">${RESULT} = [{'diff': 8.801400000000084e-05}, {'diff': 8.834700000000251e-05}, {'diff': 8.883299999999997e-05}, {'diff': 8.84999999999983e-05}, {'diff': 8.884699999999954e-05}, {'diff': 8.86670000000006e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:08.944" endtime="20201030 15:53:08.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:08.952" level="INFO">${ACCURACY} = {'diff': [8.801400000000084e-05, 8.834700000000251e-05, 8.883299999999997e-05, 8.84999999999983e-05, 8.884699999999954e-05, 8.86670000000006e-05, 8.815300000000054e-05, 8.869499999999975e-05, 8.816700...</msg>
<status status="PASS" starttime="20201030 15:53:08.948" endtime="20201030 15:53:08.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.956" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:08.955" endtime="20201030 15:53:08.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.959" level="INFO">VALUE: [8.801400000000084e-05, 8.834700000000251e-05, 8.883299999999997e-05, 8.84999999999983e-05, 8.884699999999954e-05, 8.86670000000006e-05, 8.815300000000054e-05, 8.869499999999975e-05, 8.81670000000001e-05, 8.877800000000116e-05, 8.884700000000301e-05, 8.884699999999954e-05, 8.834699999999904e-05, 8.801400000000084e-05, 8.868100000000018e-05, 8.818099999999968e-05, 8.825000000000152e-05, 8.868100000000018e-05, 8.806899999999965e-05, 8.861099999999886e-05, 8.868100000000018e-05, 8.847199999999916e-05, 8.86800000000007e-05, 8.844400000000002e-05, 8.884699999999954e-05, 8.834699999999904e-05, 8.818099999999968e-05, 8.818099999999968e-05, 8.851399999999787e-05, 8.883399999999944e-05, 8.800000000000127e-05, 8.818099999999968e-05, 8.801300000000137e-05, 8.866600000000113e-05, 8.866599999999766e-05, 8.851399999999787e-05, 8.833299999999947e-05, 8.836099999999861e-05, 8.834699999999904e-05, 8.801400000000084e-05, 8.802800000000041e-05, 8.801399999999737e-05, 8.868100000000018e-05, 8.834699999999904e-05, 8.887500000000215e-05, 8.891699999999739e-05, 8.802800000000041e-05, 8.887499999999868e-05, 8.801399999999737e-05, 8.863900000000147e-05]</msg>
<status status="PASS" starttime="20201030 15:53:08.957" endtime="20201030 15:53:08.959"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.952" endtime="20201030 15:53:08.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.964" endtime="20201030 15:53:08.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.962" endtime="20201030 15:53:08.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.961" endtime="20201030 15:53:08.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.601" endtime="20201030 15:53:08.986"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.601" endtime="20201030 15:53:08.986"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.999" endtime="20201030 15:53:09.023"></status>
</kw>
<msg timestamp="20201030 15:53:09.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.996" endtime="20201030 15:53:09.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.024" endtime="20201030 15:53:09.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.027" endtime="20201030 15:53:09.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.993" endtime="20201030 15:53:09.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.990" endtime="20201030 15:53:09.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.036" endtime="20201030 15:53:09.321"></status>
</kw>
<msg timestamp="20201030 15:53:09.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032669236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032759083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.034" endtime="20201030 15:53:09.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032669236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032759083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.325" endtime="20201030 15:53:09.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.334" endtime="20201030 15:53:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.031" endtime="20201030 15:53:09.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.030" endtime="20201030 15:53:09.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.340" level="INFO">${RESULT} = [{'diff': 8.984700000000401e-05}, {'diff': 8.915200000000206e-05}, {'diff': 8.91670000000011e-05}, {'diff': 8.91800000000012e-05}, {'diff': 8.918100000000068e-05}, {'diff': 8.983300000000444e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:09.337" endtime="20201030 15:53:09.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.344" level="INFO">${ACCURACY} = {'diff': [8.984700000000401e-05, 8.915200000000206e-05, 8.91670000000011e-05, 8.91800000000012e-05, 8.918100000000068e-05, 8.983300000000444e-05, 8.987499999999621e-05, 8.912499999999546e-05, 8.934799...</msg>
<status status="PASS" starttime="20201030 15:53:09.341" endtime="20201030 15:53:09.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.348" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.347" endtime="20201030 15:53:09.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.351" level="INFO">VALUE: [8.984700000000401e-05, 8.915200000000206e-05, 8.91670000000011e-05, 8.91800000000012e-05, 8.918100000000068e-05, 8.983300000000444e-05, 8.987499999999621e-05, 8.912499999999546e-05, 8.934799999999604e-05, 8.951399999999887e-05, 8.919399999999383e-05, 8.965199999999562e-05, 8.901399999999837e-05, 8.91800000000012e-05, 8.96670000000016e-05, 8.952800000000538e-05, 8.918099999999374e-05, 8.911100000000283e-05, 8.96670000000016e-05, 8.895899999999957e-05, 8.986200000000305e-05, 8.984700000000401e-05, 8.901399999999837e-05, 8.965200000000256e-05, 8.947200000000016e-05, 8.901399999999837e-05, 8.934700000000351e-05, 8.920899999999982e-05, 8.932000000000384e-05, 8.96670000000016e-05, 8.895899999999957e-05, 8.9332999999997e-05, 8.984699999999707e-05, 8.984699999999707e-05, 8.936099999999614e-05, 8.89999999999988e-05, 8.970900000000032e-05, 8.919500000000025e-05, 8.937500000000265e-05, 8.977800000000563e-05, 8.983399999999697e-05, 8.970800000000084e-05, 8.94999999999993e-05, 8.919400000000077e-05, 8.919400000000077e-05, 8.954199999999801e-05, 8.91800000000012e-05, 8.89999999999988e-05, 8.9332999999997e-05, 8.943000000000145e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.349" endtime="20201030 15:53:09.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.345" endtime="20201030 15:53:09.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.357" endtime="20201030 15:53:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.355" endtime="20201030 15:53:09.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.354" endtime="20201030 15:53:09.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.988" endtime="20201030 15:53:09.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.987" endtime="20201030 15:53:09.377"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.386" endtime="20201030 15:53:09.404"></status>
</kw>
<msg timestamp="20201030 15:53:09.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.384" endtime="20201030 15:53:09.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.406" endtime="20201030 15:53:09.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.408" endtime="20201030 15:53:09.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.382" endtime="20201030 15:53:09.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.380" endtime="20201030 15:53:09.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.417" endtime="20201030 15:53:09.715"></status>
</kw>
<msg timestamp="20201030 15:53:09.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.415" endtime="20201030 15:53:09.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021960792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.719" endtime="20201030 15:53:09.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.727" endtime="20201030 15:53:09.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.413" endtime="20201030 15:53:09.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.411" endtime="20201030 15:53:09.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.734" level="INFO">${RESULT} = [{'diff': 9.011100000000036e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.054100000000301e-05}, {'diff': 9.051299999999693e-05}, {'diff': 9.037500000000018e-05}, {'diff': 8.99999999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:09.731" endtime="20201030 15:53:09.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:09.739" level="INFO">${ACCURACY} = {'diff': [9.011100000000036e-05, 9.090299999999982e-05, 9.054100000000301e-05, 9.051299999999693e-05, 9.037500000000018e-05, 8.99999999999998e-05, 9.067999999999923e-05, 9.052799999999944e-05, 9.05279...</msg>
<status status="PASS" starttime="20201030 15:53:09.735" endtime="20201030 15:53:09.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.743" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:09.742" endtime="20201030 15:53:09.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.746" level="INFO">VALUE: [9.011100000000036e-05, 9.090299999999982e-05, 9.054100000000301e-05, 9.051299999999693e-05, 9.037500000000018e-05, 8.99999999999998e-05, 9.067999999999923e-05, 9.052799999999944e-05, 9.052799999999944e-05, 9.080599999999883e-05, 9.048600000000073e-05, 9.03199999999979e-05, 9.033400000000094e-05, 9.086100000000111e-05, 9.034699999999757e-05, 9.079099999999979e-05, 9.084699999999807e-05, 9.066599999999966e-05, 9.019400000000177e-05, 9.020900000000082e-05, 8.99999999999998e-05, 9.018100000000168e-05, 9.051399999999987e-05, 9.088900000000025e-05, 9.056899999999868e-05, 9.081899999999893e-05, 9.062500000000043e-05, 8.99999999999998e-05, 9.052799999999944e-05, 9.034700000000104e-05, 9.019500000000125e-05, 9.056899999999868e-05, 9.069500000000175e-05, 8.99999999999998e-05, 9.034800000000051e-05, 9.052699999999997e-05, 9.052699999999997e-05, 9.048600000000073e-05, 9.066599999999966e-05, 9.019400000000177e-05, 9.018099999999821e-05, 8.99999999999998e-05, 9.018099999999821e-05, 9.027799999999919e-05, 9.087500000000068e-05, 9.033399999999747e-05, 9.034699999999757e-05, 9.01939999999983e-05, 9.0332999999998e-05, 9.001399999999937e-05]</msg>
<status status="PASS" starttime="20201030 15:53:09.744" endtime="20201030 15:53:09.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.740" endtime="20201030 15:53:09.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.750" endtime="20201030 15:53:09.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.749" endtime="20201030 15:53:09.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.748" endtime="20201030 15:53:09.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.378" endtime="20201030 15:53:09.771"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.378" endtime="20201030 15:53:09.771"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.780" endtime="20201030 15:53:09.799"></status>
</kw>
<msg timestamp="20201030 15:53:09.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.778" endtime="20201030 15:53:09.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.801" endtime="20201030 15:53:09.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.803" endtime="20201030 15:53:09.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.776" endtime="20201030 15:53:09.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.774" endtime="20201030 15:53:09.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.812" endtime="20201030 15:53:10.098"></status>
</kw>
<msg timestamp="20201030 15:53:10.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:09.810" endtime="20201030 15:53:10.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022111736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02220325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:10.102" endtime="20201030 15:53:10.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.111" endtime="20201030 15:53:10.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.808" endtime="20201030 15:53:10.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.806" endtime="20201030 15:53:10.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.117" level="INFO">${RESULT} = [{'diff': 9.151400000000087e-05}, {'diff': 9.116699999999964e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.104100000000004e-05}, {'diff': 9.134800000000151e-05}, {'diff': 9.168099999999971e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:10.114" endtime="20201030 15:53:10.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.121" level="INFO">${ACCURACY} = {'diff': [9.151400000000087e-05, 9.116699999999964e-05, 9.168099999999971e-05, 9.104100000000004e-05, 9.134800000000151e-05, 9.168099999999971e-05, 9.115300000000007e-05, 9.16939999999998e-05, 9.15140...</msg>
<status status="PASS" starttime="20201030 15:53:10.118" endtime="20201030 15:53:10.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.126" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.125" endtime="20201030 15:53:10.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.128" level="INFO">VALUE: [9.151400000000087e-05, 9.116699999999964e-05, 9.168099999999971e-05, 9.104100000000004e-05, 9.134800000000151e-05, 9.168099999999971e-05, 9.115300000000007e-05, 9.16939999999998e-05, 9.151400000000087e-05, 9.136099999999814e-05, 9.149999999999783e-05, 9.118099999999921e-05, 9.131899999999943e-05, 9.18329999999995e-05, 9.118100000000268e-05, 9.134800000000151e-05, 9.126400000000062e-05, 9.16939999999998e-05, 9.166600000000066e-05, 9.183300000000297e-05, 9.165300000000057e-05, 9.133300000000247e-05, 9.099999999999733e-05, 9.101400000000037e-05, 9.187500000000168e-05, 9.184799999999854e-05, 9.124999999999758e-05, 9.120800000000234e-05, 9.184699999999907e-05, 9.136099999999814e-05, 9.136100000000161e-05, 9.166600000000066e-05, 9.166700000000014e-05, 9.152800000000044e-05, 9.116699999999964e-05, 9.154200000000001e-05, 9.134800000000151e-05, 9.101400000000037e-05, 9.09870000000007e-05, 9.149999999999783e-05, 9.116600000000016e-05, 9.117999999999973e-05, 9.117999999999973e-05, 9.119499999999878e-05, 9.168099999999971e-05, 9.123600000000148e-05, 9.134799999999804e-05, 9.1639000000001e-05, 9.115300000000007e-05, 9.151400000000087e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.127" endtime="20201030 15:53:10.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.122" endtime="20201030 15:53:10.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.133" endtime="20201030 15:53:10.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.132" endtime="20201030 15:53:10.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.130" endtime="20201030 15:53:10.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.772" endtime="20201030 15:53:10.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.771" endtime="20201030 15:53:10.154"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.162" endtime="20201030 15:53:10.183"></status>
</kw>
<msg timestamp="20201030 15:53:10.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.161" endtime="20201030 15:53:10.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.184" endtime="20201030 15:53:10.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.187" endtime="20201030 15:53:10.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.158" endtime="20201030 15:53:10.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.156" endtime="20201030 15:53:10.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.196" endtime="20201030 15:53:10.481"></status>
</kw>
<msg timestamp="20201030 15:53:10.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.194" endtime="20201030 15:53:10.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023357972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023450167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.485" endtime="20201030 15:53:10.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.494" endtime="20201030 15:53:10.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.191" endtime="20201030 15:53:10.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.190" endtime="20201030 15:53:10.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.500" level="INFO">${RESULT} = [{'diff': 9.219499999999978e-05}, {'diff': 9.283399999999997e-05}, {'diff': 9.219399999999683e-05}, {'diff': 9.202700000000147e-05}, {'diff': 9.2333e-05}, {'diff': 9.234699999999957e-05}, {'diff': 9.2...</msg>
<status status="PASS" starttime="20201030 15:53:10.497" endtime="20201030 15:53:10.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.504" level="INFO">${ACCURACY} = {'diff': [9.219499999999978e-05, 9.283399999999997e-05, 9.219399999999683e-05, 9.202700000000147e-05, 9.2333e-05, 9.234699999999957e-05, 9.26940000000008e-05, 9.25000000000023e-05, 9.248599999999926e-...</msg>
<status status="PASS" starttime="20201030 15:53:10.501" endtime="20201030 15:53:10.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.509" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.508" endtime="20201030 15:53:10.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.511" level="INFO">VALUE: [9.219499999999978e-05, 9.283399999999997e-05, 9.219399999999683e-05, 9.202700000000147e-05, 9.2333e-05, 9.234699999999957e-05, 9.26940000000008e-05, 9.25000000000023e-05, 9.248599999999926e-05, 9.252800000000144e-05, 9.227800000000119e-05, 9.216700000000064e-05, 9.256900000000068e-05, 9.236099999999914e-05, 9.209699999999932e-05, 9.251400000000187e-05, 9.199999999999833e-05, 9.21659999999977e-05, 9.268000000000123e-05, 9.266700000000114e-05, 9.218100000000021e-05, 9.234799999999904e-05, 9.283399999999997e-05, 9.240300000000132e-05, 9.268100000000071e-05, 9.26940000000008e-05, 9.249999999999883e-05, 9.234699999999957e-05, 9.26659999999982e-05, 9.218100000000021e-05, 9.255600000000058e-05, 9.266700000000114e-05, 9.266700000000114e-05, 9.283399999999997e-05, 9.284799999999954e-05, 9.283399999999997e-05, 9.281900000000093e-05, 9.268000000000123e-05, 9.234699999999957e-05, 9.288899999999878e-05, 9.268099999999724e-05, 9.258300000000025e-05, 9.287500000000268e-05, 9.236199999999861e-05, 9.283399999999997e-05, 9.286099999999964e-05, 9.199999999999833e-05, 9.287499999999921e-05, 9.266600000000166e-05, 9.268000000000123e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.510" endtime="20201030 15:53:10.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.505" endtime="20201030 15:53:10.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.517" endtime="20201030 15:53:10.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.516" endtime="20201030 15:53:10.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.514" endtime="20201030 15:53:10.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.155" endtime="20201030 15:53:10.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.154" endtime="20201030 15:53:10.538"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.546" endtime="20201030 15:53:10.566"></status>
</kw>
<msg timestamp="20201030 15:53:10.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.545" endtime="20201030 15:53:10.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.567" endtime="20201030 15:53:10.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.570" endtime="20201030 15:53:10.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.542" endtime="20201030 15:53:10.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.540" endtime="20201030 15:53:10.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.579" endtime="20201030 15:53:10.865"></status>
</kw>
<msg timestamp="20201030 15:53:10.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.577" endtime="20201030 15:53:10.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.869" endtime="20201030 15:53:10.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.877" endtime="20201030 15:53:10.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.575" endtime="20201030 15:53:10.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.573" endtime="20201030 15:53:10.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.884" level="INFO">${RESULT} = [{'diff': 9.30130000000029e-05}, {'diff': 9.393099999999849e-05}, {'diff': 9.352800000000244e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.33469999999971e-05}, {'diff': 9.366699999999867e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:10.880" endtime="20201030 15:53:10.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:10.889" level="INFO">${ACCURACY} = {'diff': [9.30130000000029e-05, 9.393099999999849e-05, 9.352800000000244e-05, 9.386100000000064e-05, 9.33469999999971e-05, 9.366699999999867e-05, 9.295800000000062e-05, 9.35139999999994e-05, 9.3014000...</msg>
<status status="PASS" starttime="20201030 15:53:10.885" endtime="20201030 15:53:10.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.893" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:10.892" endtime="20201030 15:53:10.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.895" level="INFO">VALUE: [9.30130000000029e-05, 9.393099999999849e-05, 9.352800000000244e-05, 9.386100000000064e-05, 9.33469999999971e-05, 9.366699999999867e-05, 9.295800000000062e-05, 9.35139999999994e-05, 9.301400000000237e-05, 9.334800000000004e-05, 9.334800000000004e-05, 9.315199999999912e-05, 9.349999999999983e-05, 9.38330000000015e-05, 9.318000000000173e-05, 9.336100000000014e-05, 9.319499999999731e-05, 9.368100000000171e-05, 9.299999999999933e-05, 9.334800000000004e-05, 9.333400000000047e-05, 9.348699999999974e-05, 9.334700000000057e-05, 9.352799999999897e-05, 9.372199999999747e-05, 9.30139999999989e-05, 9.383299999999803e-05, 9.36529999999991e-05, 9.381999999999793e-05, 9.299999999999933e-05, 9.318100000000121e-05, 9.386100000000064e-05, 9.301299999999943e-05, 9.35139999999994e-05, 9.349999999999983e-05, 9.34720000000007e-05, 9.356999999999768e-05, 9.368099999999824e-05, 9.351400000000287e-05, 9.336100000000014e-05, 9.352799999999897e-05, 9.316699999999817e-05, 9.319399999999783e-05, 9.334700000000057e-05, 9.334700000000057e-05, 9.31940000000013e-05, 9.366700000000214e-05, 9.30139999999989e-05, 9.316700000000164e-05, 9.363899999999953e-05]</msg>
<status status="PASS" starttime="20201030 15:53:10.894" endtime="20201030 15:53:10.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.889" endtime="20201030 15:53:10.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.900" endtime="20201030 15:53:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.899" endtime="20201030 15:53:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.898" endtime="20201030 15:53:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.539" endtime="20201030 15:53:10.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.538" endtime="20201030 15:53:10.921"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.929" endtime="20201030 15:53:10.949"></status>
</kw>
<msg timestamp="20201030 15:53:10.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.928" endtime="20201030 15:53:10.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.950" endtime="20201030 15:53:10.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.953" endtime="20201030 15:53:10.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.925" endtime="20201030 15:53:10.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.923" endtime="20201030 15:53:10.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.962" endtime="20201030 15:53:11.249"></status>
</kw>
<msg timestamp="20201030 15:53:11.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:10.960" endtime="20201030 15:53:11.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022358278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.253" endtime="20201030 15:53:11.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.261" endtime="20201030 15:53:11.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.958" endtime="20201030 15:53:11.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.956" endtime="20201030 15:53:11.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.268" level="INFO">${RESULT} = [{'diff': 9.450000000000083e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.41529999999996e-05}, {'diff': 9.45270000000005e-05}, {'diff': 9.41659999999997e-05}, {'diff': 9.437500000000071e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:53:11.265" endtime="20201030 15:53:11.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.272" level="INFO">${ACCURACY} = {'diff': [9.450000000000083e-05, 9.398600000000076e-05, 9.41529999999996e-05, 9.45270000000005e-05, 9.41659999999997e-05, 9.437500000000071e-05, 9.402799999999947e-05, 9.456999999999868e-05, 9.4180999...</msg>
<status status="PASS" starttime="20201030 15:53:11.269" endtime="20201030 15:53:11.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.276" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.275" endtime="20201030 15:53:11.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.279" level="INFO">VALUE: [9.450000000000083e-05, 9.398600000000076e-05, 9.41529999999996e-05, 9.45270000000005e-05, 9.41659999999997e-05, 9.437500000000071e-05, 9.402799999999947e-05, 9.456999999999868e-05, 9.418099999999874e-05, 9.438899999999681e-05, 9.418099999999874e-05, 9.416699999999917e-05, 9.452799999999997e-05, 9.46940000000028e-05, 9.417999999999926e-05, 9.445799999999865e-05, 9.450000000000083e-05, 9.475000000000108e-05, 9.418000000000273e-05, 9.418099999999874e-05, 9.486100000000164e-05, 9.434799999999757e-05, 9.40139999999999e-05, 9.476400000000065e-05, 9.467999999999976e-05, 9.470800000000237e-05, 9.46660000000002e-05, 9.434700000000157e-05, 9.402799999999947e-05, 9.398600000000076e-05, 9.398600000000076e-05, 9.448600000000126e-05, 9.394499999999806e-05, 9.433400000000147e-05, 9.418099999999874e-05, 9.43469999999981e-05, 9.45140000000004e-05, 9.47079999999989e-05, 9.402799999999947e-05, 9.467999999999976e-05, 9.416699999999917e-05, 9.418100000000221e-05, 9.480599999999936e-05, 9.423599999999754e-05, 9.48339999999985e-05, 9.436099999999767e-05, 9.465200000000062e-05, 9.42079999999984e-05, 9.467999999999976e-05, 9.45140000000004e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.277" endtime="20201030 15:53:11.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.273" endtime="20201030 15:53:11.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.284" endtime="20201030 15:53:11.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.282" endtime="20201030 15:53:11.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.281" endtime="20201030 15:53:11.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.922" endtime="20201030 15:53:11.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.921" endtime="20201030 15:53:11.304"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.313" endtime="20201030 15:53:11.333"></status>
</kw>
<msg timestamp="20201030 15:53:11.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.311" endtime="20201030 15:53:11.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.334" endtime="20201030 15:53:11.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.337" endtime="20201030 15:53:11.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.309" endtime="20201030 15:53:11.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.307" endtime="20201030 15:53:11.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.346" endtime="20201030 15:53:11.632"></status>
</kw>
<msg timestamp="20201030 15:53:11.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.344" endtime="20201030 15:53:11.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023121819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023217153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:11.636" endtime="20201030 15:53:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.644" endtime="20201030 15:53:11.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.342" endtime="20201030 15:53:11.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.340" endtime="20201030 15:53:11.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:11.651" level="INFO">${RESULT} = [{'diff': 9.533400000000247e-05}, {'diff': 9.533400000000247e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.501299999999796e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.51799999999968e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:11.647" endtime="20201030 15:53:11.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:11.655" level="INFO">${ACCURACY} = {'diff': [9.533400000000247e-05, 9.533400000000247e-05, 9.58469999999996e-05, 9.501299999999796e-05, 9.586099999999917e-05, 9.51799999999968e-05, 9.519399999999983e-05, 9.55279999999975e-05, 9.5514000...</msg>
<status status="PASS" starttime="20201030 15:53:11.652" endtime="20201030 15:53:11.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.659" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:11.658" endtime="20201030 15:53:11.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.661" level="INFO">VALUE: [9.533400000000247e-05, 9.533400000000247e-05, 9.58469999999996e-05, 9.501299999999796e-05, 9.586099999999917e-05, 9.51799999999968e-05, 9.519399999999983e-05, 9.55279999999975e-05, 9.55140000000014e-05, 9.519499999999931e-05, 9.516700000000017e-05, 9.516700000000017e-05, 9.518099999999974e-05, 9.584799999999907e-05, 9.501300000000143e-05, 9.569399999999686e-05, 9.58469999999996e-05, 9.519399999999983e-05, 9.500000000000133e-05, 9.549999999999836e-05, 9.55140000000014e-05, 9.534700000000257e-05, 9.566700000000067e-05, 9.551399999999793e-05, 9.568000000000076e-05, 9.502800000000047e-05, 9.500000000000133e-05, 9.518000000000026e-05, 9.569400000000033e-05, 9.501399999999743e-05, 9.51530000000006e-05, 9.518099999999974e-05, 9.58339999999995e-05, 9.554100000000107e-05, 9.56530000000011e-05, 9.533299999999953e-05, 9.533299999999953e-05, 9.518000000000026e-05, 9.50140000000009e-05, 9.504200000000004e-05, 9.55140000000014e-05, 9.562500000000196e-05, 9.549999999999836e-05, 9.566700000000067e-05, 9.574999999999861e-05, 9.536100000000214e-05, 9.500000000000133e-05, 9.568000000000076e-05, 9.586099999999917e-05, 9.55140000000014e-05]</msg>
<status status="PASS" starttime="20201030 15:53:11.660" endtime="20201030 15:53:11.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.656" endtime="20201030 15:53:11.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:11.667" endtime="20201030 15:53:11.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.666" endtime="20201030 15:53:11.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.665" endtime="20201030 15:53:11.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.305" endtime="20201030 15:53:11.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.305" endtime="20201030 15:53:11.688"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.697" endtime="20201030 15:53:11.716"></status>
</kw>
<msg timestamp="20201030 15:53:11.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.695" endtime="20201030 15:53:11.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:11.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:11.717" endtime="20201030 15:53:11.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.720" endtime="20201030 15:53:11.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.693" endtime="20201030 15:53:11.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.690" endtime="20201030 15:53:11.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:11.729" endtime="20201030 15:53:12.014"></status>
</kw>
<msg timestamp="20201030 15:53:12.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221415, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:11.727" endtime="20201030 15:53:12.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0220455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0221415, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:12.018" endtime="20201030 15:53:12.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.026" endtime="20201030 15:53:12.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.725" endtime="20201030 15:53:12.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.723" endtime="20201030 15:53:12.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.033" level="INFO">${RESULT} = [{'diff': 9.600000000000233e-05}, {'diff': 9.64019999999989e-05}, {'diff': 9.6334e-05}, {'diff': 9.618100000000074e-05}, {'diff': 9.6334e-05}, {'diff': 9.63470000000001e-05}, {'diff': 9.68329999999975...</msg>
<status status="PASS" starttime="20201030 15:53:12.030" endtime="20201030 15:53:12.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.038" level="INFO">${ACCURACY} = {'diff': [9.600000000000233e-05, 9.64019999999989e-05, 9.6334e-05, 9.618100000000074e-05, 9.6334e-05, 9.63470000000001e-05, 9.683299999999756e-05, 9.630500000000139e-05, 9.663899999999906e-05, 9.60279...</msg>
<status status="PASS" starttime="20201030 15:53:12.034" endtime="20201030 15:53:12.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.042" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.041" endtime="20201030 15:53:12.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.045" level="INFO">VALUE: [9.600000000000233e-05, 9.64019999999989e-05, 9.6334e-05, 9.618100000000074e-05, 9.6334e-05, 9.63470000000001e-05, 9.683299999999756e-05, 9.630500000000139e-05, 9.663899999999906e-05, 9.6027999999998e-05, 9.683300000000103e-05, 9.609699999999985e-05, 9.651399999999893e-05, 9.68340000000005e-05, 9.61530000000016e-05, 9.648699999999927e-05, 9.690300000000235e-05, 9.654199999999807e-05, 9.619399999999736e-05, 9.63470000000001e-05, 9.618100000000074e-05, 9.599999999999886e-05, 9.669500000000081e-05, 9.6334e-05, 9.616700000000117e-05, 9.686100000000017e-05, 9.601299999999896e-05, 9.649999999999936e-05, 9.669400000000133e-05, 9.636099999999967e-05, 9.648600000000326e-05, 9.616700000000117e-05, 9.618099999999727e-05, 9.619500000000031e-05, 9.669500000000081e-05, 9.616700000000117e-05, 9.636099999999967e-05, 9.633300000000053e-05, 9.633300000000053e-05, 9.59859999999993e-05, 9.668100000000124e-05, 9.60140000000019e-05, 9.65279999999985e-05, 9.65279999999985e-05, 9.68340000000005e-05, 9.649999999999936e-05, 9.663799999999959e-05, 9.616599999999823e-05, 9.64859999999998e-05, 9.60140000000019e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.043" endtime="20201030 15:53:12.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.039" endtime="20201030 15:53:12.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.056" endtime="20201030 15:53:12.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.054" endtime="20201030 15:53:12.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.053" endtime="20201030 15:53:12.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.689" endtime="20201030 15:53:12.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:11.688" endtime="20201030 15:53:12.076"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.085" endtime="20201030 15:53:12.105"></status>
</kw>
<msg timestamp="20201030 15:53:12.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.084" endtime="20201030 15:53:12.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.106" endtime="20201030 15:53:12.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.108" endtime="20201030 15:53:12.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.081" endtime="20201030 15:53:12.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.079" endtime="20201030 15:53:12.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.117" endtime="20201030 15:53:12.404"></status>
</kw>
<msg timestamp="20201030 15:53:12.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.116" endtime="20201030 15:53:12.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022020236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022117431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.408" endtime="20201030 15:53:12.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.416" endtime="20201030 15:53:12.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.113" endtime="20201030 15:53:12.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.112" endtime="20201030 15:53:12.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.423" level="INFO">${RESULT} = [{'diff': 9.719500000000131e-05}, {'diff': 9.78479999999976e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.705600000000161e-05}, {'diff': 9.757000000000168e-05}, {'diff': 9.73470000000011e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:12.420" endtime="20201030 15:53:12.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.427" level="INFO">${ACCURACY} = {'diff': [9.719500000000131e-05, 9.78479999999976e-05, 9.762500000000049e-05, 9.705600000000161e-05, 9.757000000000168e-05, 9.73470000000011e-05, 9.76669999999992e-05, 9.699999999999986e-05, 9.7820000...</msg>
<status status="PASS" starttime="20201030 15:53:12.424" endtime="20201030 15:53:12.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.431" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.430" endtime="20201030 15:53:12.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.434" level="INFO">VALUE: [9.719500000000131e-05, 9.78479999999976e-05, 9.762500000000049e-05, 9.705600000000161e-05, 9.757000000000168e-05, 9.73470000000011e-05, 9.76669999999992e-05, 9.699999999999986e-05, 9.782000000000193e-05, 9.7334000000001e-05, 9.784800000000107e-05, 9.736100000000067e-05, 9.78470000000016e-05, 9.752800000000297e-05, 9.718099999999827e-05, 9.769399999999887e-05, 9.731900000000196e-05, 9.71669999999987e-05, 9.7027999999999e-05, 9.751399999999993e-05, 9.701399999999943e-05, 9.769399999999887e-05, 9.716599999999923e-05, 9.71799999999988e-05, 9.750000000000036e-05, 9.781900000000246e-05, 9.719399999999837e-05, 9.700000000000333e-05, 9.720900000000088e-05, 9.71530000000026e-05, 9.701399999999943e-05, 9.750000000000036e-05, 9.751299999999699e-05, 9.737500000000024e-05, 9.762500000000049e-05, 9.76660000000032e-05, 9.701399999999943e-05, 9.75279999999995e-05, 9.75279999999995e-05, 9.769499999999834e-05, 9.783399999999803e-05, 9.699999999999986e-05, 9.765299999999963e-05, 9.751399999999993e-05, 9.751399999999993e-05, 9.730499999999892e-05, 9.73470000000011e-05, 9.751399999999993e-05, 9.768099999999877e-05, 9.751399999999993e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.433" endtime="20201030 15:53:12.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.428" endtime="20201030 15:53:12.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.439" endtime="20201030 15:53:12.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.437" endtime="20201030 15:53:12.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.436" endtime="20201030 15:53:12.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.077" endtime="20201030 15:53:12.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.077" endtime="20201030 15:53:12.459"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.468" endtime="20201030 15:53:12.490"></status>
</kw>
<msg timestamp="20201030 15:53:12.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.467" endtime="20201030 15:53:12.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.492" endtime="20201030 15:53:12.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.495" endtime="20201030 15:53:12.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.464" endtime="20201030 15:53:12.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.462" endtime="20201030 15:53:12.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.504" endtime="20201030 15:53:12.790"></status>
</kw>
<msg timestamp="20201030 15:53:12.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02525125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:12.502" endtime="20201030 15:53:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025152917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02525125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:12.794" endtime="20201030 15:53:12.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.802" endtime="20201030 15:53:12.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.499" endtime="20201030 15:53:12.804"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.498" endtime="20201030 15:53:12.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:12.809" level="INFO">${RESULT} = [{'diff': 9.833299999999906e-05}, {'diff': 9.833300000000253e-05}, {'diff': 9.88340000000025e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.851400000000093e-05}, {'diff': 9.834699999999863e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:12.805" endtime="20201030 15:53:12.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:12.813" level="INFO">${ACCURACY} = {'diff': [9.833299999999906e-05, 9.833300000000253e-05, 9.88340000000025e-05, 9.888899999999784e-05, 9.851400000000093e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.800000000000086e-05, 9.81669...</msg>
<status status="PASS" starttime="20201030 15:53:12.810" endtime="20201030 15:53:12.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.817" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:12.816" endtime="20201030 15:53:12.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.819" level="INFO">VALUE: [9.833299999999906e-05, 9.833300000000253e-05, 9.88340000000025e-05, 9.888899999999784e-05, 9.851400000000093e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.800000000000086e-05, 9.81669999999997e-05, 9.834699999999863e-05, 9.884699999999913e-05, 9.883299999999956e-05, 9.883399999999903e-05, 9.836200000000114e-05, 9.884800000000207e-05, 9.84999999999979e-05, 9.86800000000003e-05, 9.86670000000002e-05, 9.830499999999992e-05, 9.858300000000278e-05, 9.801399999999696e-05, 9.836100000000167e-05, 9.850000000000136e-05, 9.84860000000018e-05, 9.851400000000093e-05, 9.81799999999998e-05, 9.86800000000003e-05, 9.851399999999746e-05, 9.838899999999734e-05, 9.801400000000043e-05, 9.85280000000005e-05, 9.865300000000063e-05, 9.834800000000157e-05, 9.840300000000038e-05, 9.86800000000003e-05, 9.867999999999683e-05, 9.883299999999956e-05, 9.834699999999863e-05, 9.79999999999974e-05, 9.861100000000192e-05, 9.815300000000013e-05, 9.859699999999888e-05, 9.881999999999946e-05, 9.79730000000012e-05, 9.795799999999869e-05, 9.884699999999913e-05, 9.800000000000086e-05, 9.81799999999998e-05, 9.81799999999998e-05, 9.836100000000167e-05]</msg>
<status status="PASS" starttime="20201030 15:53:12.818" endtime="20201030 15:53:12.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.814" endtime="20201030 15:53:12.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:12.825" endtime="20201030 15:53:12.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.824" endtime="20201030 15:53:12.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.823" endtime="20201030 15:53:12.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.460" endtime="20201030 15:53:12.846"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.460" endtime="20201030 15:53:12.846"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.855" endtime="20201030 15:53:12.875"></status>
</kw>
<msg timestamp="20201030 15:53:12.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.853" endtime="20201030 15:53:12.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:12.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:12.876" endtime="20201030 15:53:12.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.879" endtime="20201030 15:53:12.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.850" endtime="20201030 15:53:12.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.848" endtime="20201030 15:53:12.881"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:12.888" endtime="20201030 15:53:13.182"></status>
</kw>
<msg timestamp="20201030 15:53:13.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:12.886" endtime="20201030 15:53:13.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022339333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.191" endtime="20201030 15:53:13.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.210" endtime="20201030 15:53:13.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.883" endtime="20201030 15:53:13.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.882" endtime="20201030 15:53:13.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.223" level="INFO">${RESULT} = [{'diff': 9.976399999999871e-05}, {'diff': 9.937499999999877e-05}, {'diff': 9.91800000000008e-05}, {'diff': 9.95280000000015e-05}, {'diff': 9.969500000000034e-05}, {'diff': 9.901400000000143e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:13.217" endtime="20201030 15:53:13.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.234" level="INFO">${ACCURACY} = {'diff': [9.976399999999871e-05, 9.937499999999877e-05, 9.91800000000008e-05, 9.95280000000015e-05, 9.969500000000034e-05, 9.901400000000143e-05, 9.89869999999983e-05, 9.901299999999849e-05, 9.9512999...</msg>
<status status="PASS" starttime="20201030 15:53:13.226" endtime="20201030 15:53:13.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.244" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.241" endtime="20201030 15:53:13.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.249" level="INFO">VALUE: [9.976399999999871e-05, 9.937499999999877e-05, 9.91800000000008e-05, 9.95280000000015e-05, 9.969500000000034e-05, 9.901400000000143e-05, 9.89869999999983e-05, 9.901299999999849e-05, 9.951299999999899e-05, 9.966599999999826e-05, 9.933300000000006e-05, 9.983300000000056e-05, 9.933300000000006e-05, 9.951400000000193e-05, 9.897199999999926e-05, 9.919499999999984e-05, 9.98479999999996e-05, 9.98609999999997e-05, 9.934699999999963e-05, 9.984699999999666e-05, 9.901399999999796e-05, 9.89999999999984e-05, 9.94999999999989e-05, 9.96670000000012e-05, 9.948599999999932e-05, 9.9028000000001e-05, 9.919400000000037e-05, 9.987499999999927e-05, 9.934699999999963e-05, 9.89860000000023e-05, 9.966600000000173e-05, 9.957000000000021e-05, 9.94999999999989e-05, 9.968100000000077e-05, 9.983300000000056e-05, 9.94999999999989e-05, 9.95280000000015e-05, 9.933399999999953e-05, 9.967999999999783e-05, 9.96800000000013e-05, 9.951399999999846e-05, 9.951399999999846e-05, 9.917999999999733e-05, 9.951399999999846e-05, 9.933300000000006e-05, 9.96809999999973e-05, 9.98479999999996e-05, 9.934699999999963e-05, 9.96800000000013e-05, 9.984700000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:53:13.246" endtime="20201030 15:53:13.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.236" endtime="20201030 15:53:13.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.256" endtime="20201030 15:53:13.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.255" endtime="20201030 15:53:13.276"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.254" endtime="20201030 15:53:13.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.847" endtime="20201030 15:53:13.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:12.846" endtime="20201030 15:53:13.277"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.286" endtime="20201030 15:53:13.306"></status>
</kw>
<msg timestamp="20201030 15:53:13.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.284" endtime="20201030 15:53:13.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.307" endtime="20201030 15:53:13.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.310" endtime="20201030 15:53:13.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.281" endtime="20201030 15:53:13.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.279" endtime="20201030 15:53:13.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.319" endtime="20201030 15:53:13.606"></status>
</kw>
<msg timestamp="20201030 15:53:13.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.317" endtime="20201030 15:53:13.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.610" endtime="20201030 15:53:13.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.618" endtime="20201030 15:53:13.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.315" endtime="20201030 15:53:13.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.313" endtime="20201030 15:53:13.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:13.625" level="INFO">${RESULT} = [{'diff': 0.00010002699999999906}, {'diff': 0.00010045800000000119}, {'diff': 0.00010067999999999883}, {'diff': 0.00010069400000000187}, {'diff': 0.00010084700000000113}, {'diff': 0.000100625000000000...</msg>
<status status="PASS" starttime="20201030 15:53:13.621" endtime="20201030 15:53:13.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:13.629" level="INFO">${ACCURACY} = {'diff': [0.00010002699999999906, 0.00010045800000000119, 0.00010067999999999883, 0.00010069400000000187, 0.00010084700000000113, 0.00010062500000000002, 0.00010082000000000146, 0.00010018100000000127...</msg>
<status status="PASS" starttime="20201030 15:53:13.626" endtime="20201030 15:53:13.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.633" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:13.632" endtime="20201030 15:53:13.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.636" level="INFO">VALUE: [0.00010002699999999906, 0.00010045800000000119, 0.00010067999999999883, 0.00010069400000000187, 0.00010084700000000113, 0.00010062500000000002, 0.00010082000000000146, 0.00010018100000000127, 0.0001008480000000006, 0.0001003610000000002, 0.00010052699999999956, 0.0001001800000000018, 0.00010055600000000164, 0.00010038899999999934, 0.00010015300000000213, 0.00010001399999999896, 0.00010090199999999994, 0.00010061100000000045, 0.00010051399999999946, 0.0001001800000000018, 0.00010034700000000063, 0.00010001400000000243, 0.00010048600000000033, 9.99999999999994e-05, 0.0001006809999999983, 0.00010081899999999852, 0.00010033300000000106, 0.00010013899999999909, 0.00010030500000000192, 9.99999999999994e-05, 0.00010077699999999981, 0.0001006800000000023, 0.00010002799999999853, 0.00010002799999999853, 0.00010087500000000027, 0.00010048600000000033, 0.00010033300000000106, 0.00010066699999999873, 0.00010051399999999946, 0.00010084700000000113, 0.00010034700000000063, 0.0001008610000000007, 0.00010017999999999833, 0.00010051399999999946, 0.00010013900000000256, 0.00010018100000000127, 0.00010066699999999873, 0.00010033400000000053, 0.00010051399999999946, 0.00010016699999999823]</msg>
<status status="PASS" starttime="20201030 15:53:13.634" endtime="20201030 15:53:13.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.630" endtime="20201030 15:53:13.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:13.641" endtime="20201030 15:53:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.639" endtime="20201030 15:53:13.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.638" endtime="20201030 15:53:13.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.278" endtime="20201030 15:53:13.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.277" endtime="20201030 15:53:13.661"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.670" endtime="20201030 15:53:13.690"></status>
</kw>
<msg timestamp="20201030 15:53:13.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.668" endtime="20201030 15:53:13.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:13.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:13.692" endtime="20201030 15:53:13.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.696" endtime="20201030 15:53:13.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.666" endtime="20201030 15:53:13.700"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.664" endtime="20201030 15:53:13.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:13.709" endtime="20201030 15:53:13.996"></status>
</kw>
<msg timestamp="20201030 15:53:13.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:13.708" endtime="20201030 15:53:13.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022924111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.000" endtime="20201030 15:53:14.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.008" endtime="20201030 15:53:14.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.704" endtime="20201030 15:53:14.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.701" endtime="20201030 15:53:14.010"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.014" level="INFO">${RESULT} = [{'diff': 0.00010102799999999953}, {'diff': 0.0001013199999999985}, {'diff': 0.00010134700000000163}, {'diff': 0.00010168100000000277}, {'diff': 0.00010166699999999973}, {'diff': 0.0001013340000000015...</msg>
<status status="PASS" starttime="20201030 15:53:14.011" endtime="20201030 15:53:14.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.018" level="INFO">${ACCURACY} = {'diff': [0.00010102799999999953, 0.0001013199999999985, 0.00010134700000000163, 0.00010168100000000277, 0.00010166699999999973, 0.00010133400000000153, 0.00010097199999999779, 0.00010167999999999983,...</msg>
<status status="PASS" starttime="20201030 15:53:14.015" endtime="20201030 15:53:14.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.023" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.022" endtime="20201030 15:53:14.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.025" level="INFO">VALUE: [0.00010102799999999953, 0.0001013199999999985, 0.00010134700000000163, 0.00010168100000000277, 0.00010166699999999973, 0.00010133400000000153, 0.00010097199999999779, 0.00010167999999999983, 0.00010148600000000133, 0.0001018610000000017, 0.00010184700000000213, 0.00010183299999999909, 0.00010184700000000213, 0.00010101399999999996, 0.0001018610000000017, 0.000101819999999999, 0.00010180499999999995, 0.00010133300000000206, 0.00010133299999999859, 0.00010169400000000287, 0.000101028000000003, 0.00010102799999999953, 0.00010166699999999973, 0.0001015000000000009, 0.00010101399999999996, 0.00010102799999999953, 0.00010117999999999933, 0.00010133300000000206, 0.00010183299999999909, 0.00010157000000000221, 0.00010136099999999773, 0.0001011809999999988, 0.0001015000000000009, 0.00010169499999999887, 0.0001010000000000004, 0.00010149999999999743, 0.00010184699999999866, 0.0001010000000000004, 0.00010133299999999859, 0.00010166699999999973, 0.00010119500000000184, 0.00010126400000000021, 0.00010101399999999996, 0.0001018480000000016, 0.0001018610000000017, 0.0001015000000000009, 0.00010101399999999996, 0.00010151400000000046, 0.00010136099999999773, 0.00010133300000000206]</msg>
<status status="PASS" starttime="20201030 15:53:14.024" endtime="20201030 15:53:14.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.019" endtime="20201030 15:53:14.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.031" endtime="20201030 15:53:14.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.030" endtime="20201030 15:53:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.028" endtime="20201030 15:53:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.662" endtime="20201030 15:53:14.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:13.662" endtime="20201030 15:53:14.052"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.060" endtime="20201030 15:53:14.080"></status>
</kw>
<msg timestamp="20201030 15:53:14.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.059" endtime="20201030 15:53:14.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.082" endtime="20201030 15:53:14.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.084" endtime="20201030 15:53:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.056" endtime="20201030 15:53:14.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.054" endtime="20201030 15:53:14.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.093" endtime="20201030 15:53:14.379"></status>
</kw>
<msg timestamp="20201030 15:53:14.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.092" endtime="20201030 15:53:14.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022271653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022373819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.383" endtime="20201030 15:53:14.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.391" endtime="20201030 15:53:14.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.089" endtime="20201030 15:53:14.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.087" endtime="20201030 15:53:14.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.397" level="INFO">${RESULT} = [{'diff': 0.00010216600000000076}, {'diff': 0.00010218000000000033}, {'diff': 0.00010206999999999924}, {'diff': 0.00010213900000000109}, {'diff': 0.00010234699999999916}, {'diff': 0.000102499999999998...</msg>
<status status="PASS" starttime="20201030 15:53:14.394" endtime="20201030 15:53:14.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.402" level="INFO">${ACCURACY} = {'diff': [0.00010216600000000076, 0.00010218000000000033, 0.00010206999999999924, 0.00010213900000000109, 0.00010234699999999916, 0.00010249999999999843, 0.00010197199999999879, 0.00010247199999999929...</msg>
<status status="PASS" starttime="20201030 15:53:14.398" endtime="20201030 15:53:14.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.407" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.406" endtime="20201030 15:53:14.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.409" level="INFO">VALUE: [0.00010216600000000076, 0.00010218000000000033, 0.00010206999999999924, 0.00010213900000000109, 0.00010234699999999916, 0.00010249999999999843, 0.00010197199999999879, 0.00010247199999999929, 0.00010218100000000327, 0.000102513999999998, 0.0001021939999999999, 0.00010233299999999959, 0.00010236099999999873, 0.00010233299999999959, 0.00010220900000000241, 0.00010251400000000147, 0.0001026810000000003, 0.0001026810000000003, 0.00010215300000000066, 0.00010201400000000097, 0.00010284699999999966, 0.00010268000000000083, 0.00010216600000000076, 0.00010201400000000097, 0.00010202800000000053, 0.00010290200000000194, 0.0001020139999999975, 0.0001023480000000021, 0.00010201400000000097, 0.00010233399999999906, 0.00010268000000000083, 0.00010266599999999779, 0.00010270899999999944, 0.00010283300000000009, 0.0001021809999999998, 0.00010268099999999683, 0.00010269499999999987, 0.00010252799999999757, 0.0001026940000000004, 0.00010234700000000263, 0.00010254199999999714, 0.00010230599999999992, 0.00010252800000000103, 0.00010283300000000009, 0.00010233299999999959, 0.0001021809999999998, 0.00010248600000000233, 0.0001020139999999975, 0.00010236099999999873, 0.00010267999999999736]</msg>
<status status="PASS" starttime="20201030 15:53:14.408" endtime="20201030 15:53:14.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.403" endtime="20201030 15:53:14.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.414" endtime="20201030 15:53:14.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.413" endtime="20201030 15:53:14.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.412" endtime="20201030 15:53:14.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.053" endtime="20201030 15:53:14.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.052" endtime="20201030 15:53:14.435"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.444" endtime="20201030 15:53:14.463"></status>
</kw>
<msg timestamp="20201030 15:53:14.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.442" endtime="20201030 15:53:14.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.465" endtime="20201030 15:53:14.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.467" endtime="20201030 15:53:14.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.439" endtime="20201030 15:53:14.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.437" endtime="20201030 15:53:14.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.476" endtime="20201030 15:53:14.764"></status>
</kw>
<msg timestamp="20201030 15:53:14.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.475" endtime="20201030 15:53:14.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022283611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.768" endtime="20201030 15:53:14.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.776" endtime="20201030 15:53:14.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.472" endtime="20201030 15:53:14.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.471" endtime="20201030 15:53:14.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:14.783" level="INFO">${RESULT} = [{'diff': 0.00010299999999999893}, {'diff': 0.00010322299999999951}, {'diff': 0.00010316699999999776}, {'diff': 0.000103513999999999}, {'diff': 0.00010302800000000154}, {'diff': 0.00010299999999999893...</msg>
<status status="PASS" starttime="20201030 15:53:14.780" endtime="20201030 15:53:14.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:14.787" level="INFO">${ACCURACY} = {'diff': [0.00010299999999999893, 0.00010322299999999951, 0.00010316699999999776, 0.000103513999999999, 0.00010302800000000154, 0.00010299999999999893, 0.0001033480000000031, 0.00010367999999999836, 0...</msg>
<status status="PASS" starttime="20201030 15:53:14.784" endtime="20201030 15:53:14.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.791" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:14.790" endtime="20201030 15:53:14.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.794" level="INFO">VALUE: [0.00010299999999999893, 0.00010322299999999951, 0.00010316699999999776, 0.000103513999999999, 0.00010302800000000154, 0.00010299999999999893, 0.0001033480000000031, 0.00010367999999999836, 0.00010349999999999943, 0.0001030139999999985, 0.00010318000000000133, 0.00010352799999999857, 0.00010352800000000204, 0.0001030139999999985, 0.0001035550000000017, 0.0001031810000000008, 0.00010386100000000023, 0.00010366599999999879, 0.000103513999999999, 0.00010333299999999712, 0.00010351400000000247, 0.00010302799999999807, 0.00010351299999999952, 0.00010348599999999986, 0.00010352800000000204, 0.0001038619999999997, 0.00010333400000000006, 0.00010333300000000059, 0.00010352799999999857, 0.00010383300000000109, 0.00010320800000000047, 0.000103513999999999, 0.00010313899999999862, 0.0001036810000000013, 0.00010340300000000191, 0.00010384800000000013, 0.0001030000000000024, 0.00010316599999999829, 0.00010295800000000022, 0.00010299999999999893, 0.000103513999999999, 0.0001037360000000001, 0.00010302800000000154, 0.0001035000000000029, 0.00010369500000000087, 0.0001030139999999985, 0.00010301299999999902, 0.0001035420000000016, 0.00010366599999999879, 0.00010317999999999786]</msg>
<status status="PASS" starttime="20201030 15:53:14.793" endtime="20201030 15:53:14.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.788" endtime="20201030 15:53:14.795"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.799" endtime="20201030 15:53:14.818"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.797" endtime="20201030 15:53:14.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.796" endtime="20201030 15:53:14.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.436" endtime="20201030 15:53:14.819"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.435" endtime="20201030 15:53:14.820"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.828" endtime="20201030 15:53:14.849"></status>
</kw>
<msg timestamp="20201030 15:53:14.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.827" endtime="20201030 15:53:14.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.850" endtime="20201030 15:53:14.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.853" endtime="20201030 15:53:14.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.824" endtime="20201030 15:53:14.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.822" endtime="20201030 15:53:14.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.862" endtime="20201030 15:53:15.148"></status>
</kw>
<msg timestamp="20201030 15:53:15.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:14.860" endtime="20201030 15:53:15.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023163958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023268264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.152" endtime="20201030 15:53:15.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.160" endtime="20201030 15:53:15.161"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.858" endtime="20201030 15:53:15.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.856" endtime="20201030 15:53:15.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.166" level="INFO">${RESULT} = [{'diff': 0.00010430600000000192}, {'diff': 0.0001046949999999984}, {'diff': 0.00010433400000000106}, {'diff': 0.00010408300000000134}, {'diff': 0.00010417999999999886}, {'diff': 0.0001040279999999990...</msg>
<status status="PASS" starttime="20201030 15:53:15.163" endtime="20201030 15:53:15.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.170" level="INFO">${ACCURACY} = {'diff': [0.00010430600000000192, 0.0001046949999999984, 0.00010433400000000106, 0.00010408300000000134, 0.00010417999999999886, 0.00010402799999999907, 0.0001046940000000024, 0.00010418000000000233, ...</msg>
<status status="PASS" starttime="20201030 15:53:15.167" endtime="20201030 15:53:15.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.175" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.174" endtime="20201030 15:53:15.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.177" level="INFO">VALUE: [0.00010430600000000192, 0.0001046949999999984, 0.00010433400000000106, 0.00010408300000000134, 0.00010417999999999886, 0.00010402799999999907, 0.0001046940000000024, 0.00010418000000000233, 0.00010418099999999833, 0.00010402799999999907, 0.00010443100000000205, 0.00010416699999999876, 0.00010415299999999919, 0.00010484699999999819, 0.00010484700000000166, 0.00010433299999999812, 0.0001040139999999995, 0.00010468099999999883, 0.0001046810000000023, 0.00010450000000000043, 0.000104514, 0.00010399999999999993, 0.00010416700000000223, 0.00010452700000000009, 0.0001041940000000019, 0.00010434700000000116, 0.0001040139999999995, 0.00010450000000000043, 0.00010450000000000043, 0.0001041810000000018, 0.00010451300000000052, 0.00010486100000000123, 0.00010401300000000002, 0.0001043750000000003, 0.00010463900000000012, 0.00010450000000000043, 0.00010420900000000094, 0.00010416700000000223, 0.00010398600000000036, 0.00010452799999999957, 0.0001041810000000018, 0.000104514, 0.00010486099999999776, 0.00010454199999999914, 0.00010452799999999957, 0.00010458399999999785, 0.0001041949999999979, 0.0001041949999999979, 0.0001043880000000004, 0.00010418099999999833]</msg>
<status status="PASS" starttime="20201030 15:53:15.176" endtime="20201030 15:53:15.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.171" endtime="20201030 15:53:15.179"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.183" endtime="20201030 15:53:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.182" endtime="20201030 15:53:15.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.180" endtime="20201030 15:53:15.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.820" endtime="20201030 15:53:15.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.820" endtime="20201030 15:53:15.204"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.213" endtime="20201030 15:53:15.233"></status>
</kw>
<msg timestamp="20201030 15:53:15.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.211" endtime="20201030 15:53:15.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.234" endtime="20201030 15:53:15.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.237" endtime="20201030 15:53:15.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.209" endtime="20201030 15:53:15.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.206" endtime="20201030 15:53:15.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.246" endtime="20201030 15:53:15.532"></status>
</kw>
<msg timestamp="20201030 15:53:15.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.244" endtime="20201030 15:53:15.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022109056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022214194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.536" endtime="20201030 15:53:15.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.544" endtime="20201030 15:53:15.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.241" endtime="20201030 15:53:15.547"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.240" endtime="20201030 15:53:15.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.551" level="INFO">${RESULT} = [{'diff': 0.00010513800000000115}, {'diff': 0.00010568000000000036}, {'diff': 0.00010590299999999747}, {'diff': 0.00010517999999999986}, {'diff': 0.0001050140000000005}, {'diff': 0.0001058609999999987...</msg>
<status status="PASS" starttime="20201030 15:53:15.548" endtime="20201030 15:53:15.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.556" level="INFO">${ACCURACY} = {'diff': [0.00010513800000000115, 0.00010568000000000036, 0.00010590299999999747, 0.00010517999999999986, 0.0001050140000000005, 0.00010586099999999876, 0.00010581999999999953, 0.0001058750000000018, ...</msg>
<status status="PASS" starttime="20201030 15:53:15.552" endtime="20201030 15:53:15.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.561" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.560" endtime="20201030 15:53:15.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.564" level="INFO">VALUE: [0.00010513800000000115, 0.00010568000000000036, 0.00010590299999999747, 0.00010517999999999986, 0.0001050140000000005, 0.00010586099999999876, 0.00010581999999999953, 0.0001058750000000018, 0.0001050140000000005, 0.00010520800000000247, 0.00010581900000000005, 0.00010519399999999943, 0.00010584699999999919, 0.00010586099999999876, 0.00010545799999999925, 0.0001051810000000028, 0.00010500000000000093, 0.00010502700000000059, 0.00010502700000000059, 0.00010517999999999986, 0.00010500000000000093, 0.00010566700000000026, 0.0001057499999999982, 0.00010565300000000069, 0.00010536100000000173, 0.0001058620000000017, 0.00010534799999999817, 0.000105514000000001, 0.00010500000000000093, 0.00010517999999999986, 0.00010549999999999796, 0.0001050140000000005, 0.00010501399999999703, 0.0001056810000000033, 0.0001050140000000005, 0.00010590300000000094, 0.00010534800000000163, 0.00010581900000000005, 0.00010583299999999962, 0.00010550000000000143, 0.00010533299999999912, 0.00010566700000000026, 0.00010583299999999962, 0.00010533299999999912, 0.0001053339999999986, 0.00010581999999999953, 0.00010536099999999826, 0.00010536099999999826, 0.00010584700000000266, 0.0001055279999999971]</msg>
<status status="PASS" starttime="20201030 15:53:15.562" endtime="20201030 15:53:15.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.557" endtime="20201030 15:53:15.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.569" endtime="20201030 15:53:15.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.567" endtime="20201030 15:53:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.566" endtime="20201030 15:53:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.205" endtime="20201030 15:53:15.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.204" endtime="20201030 15:53:15.589"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.598" endtime="20201030 15:53:15.619"></status>
</kw>
<msg timestamp="20201030 15:53:15.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.597" endtime="20201030 15:53:15.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.621" endtime="20201030 15:53:15.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.623" endtime="20201030 15:53:15.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.594" endtime="20201030 15:53:15.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.592" endtime="20201030 15:53:15.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.632" endtime="20201030 15:53:15.920"></status>
</kw>
<msg timestamp="20201030 15:53:15.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.631" endtime="20201030 15:53:15.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022225597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022332292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:15.924" endtime="20201030 15:53:15.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.932" endtime="20201030 15:53:15.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.628" endtime="20201030 15:53:15.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.626" endtime="20201030 15:53:15.935"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:15.939" level="INFO">${RESULT} = [{'diff': 0.0001066950000000004}, {'diff': 0.00010651399999999853}, {'diff': 0.00010598700000000183}, {'diff': 0.00010629100000000141}, {'diff': 0.00010684700000000019}, {'diff': 0.0001068609999999997...</msg>
<status status="PASS" starttime="20201030 15:53:15.936" endtime="20201030 15:53:15.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:15.943" level="INFO">${ACCURACY} = {'diff': [0.0001066950000000004, 0.00010651399999999853, 0.00010598700000000183, 0.00010629100000000141, 0.00010684700000000019, 0.00010686099999999976, 0.0001063889999999984, 0.0001060140000000015, 0...</msg>
<status status="PASS" starttime="20201030 15:53:15.940" endtime="20201030 15:53:15.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.947" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:15.946" endtime="20201030 15:53:15.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:15.949" level="INFO">VALUE: [0.0001066950000000004, 0.00010651399999999853, 0.00010598700000000183, 0.00010629100000000141, 0.00010684700000000019, 0.00010686099999999976, 0.0001063889999999984, 0.0001060140000000015, 0.00010665299999999822, 0.00010683300000000062, 0.00010633400000000306, 0.000106514000000002, 0.00010679200000000139, 0.00010684700000000019, 0.00010595799999999975, 0.00010683300000000062, 0.00010668000000000136, 0.00010652800000000157, 0.00010668099999999736, 0.000106514000000002, 0.00010602800000000107, 0.00010618100000000033, 0.00010600000000000193, 0.00010598599999999889, 0.00010633300000000012, 0.00010645800000000025, 0.00010651399999999853, 0.00010683300000000062, 0.00010668100000000083, 0.00010684799999999967, 0.00010666699999999779, 0.00010649999999999896, 0.00010601399999999803, 0.00010616600000000129, 0.00010684700000000019, 0.0001065560000000007, 0.00010618100000000033, 0.00010616700000000076, 0.00010618100000000033, 0.00010663899999999865, 0.00010673599999999964, 0.00010666599999999832, 0.00010648599999999939, 0.00010686099999999976, 0.00010651399999999853, 0.00010648599999999939, 0.00010684799999999967, 0.00010637499999999883, 0.0001066950000000004, 0.00010627700000000184]</msg>
<status status="PASS" starttime="20201030 15:53:15.948" endtime="20201030 15:53:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.944" endtime="20201030 15:53:15.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:15.955" endtime="20201030 15:53:15.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.953" endtime="20201030 15:53:15.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.952" endtime="20201030 15:53:15.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.590" endtime="20201030 15:53:15.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.590" endtime="20201030 15:53:15.975"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:15.984" endtime="20201030 15:53:16.007"></status>
</kw>
<msg timestamp="20201030 15:53:16.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:15.983" endtime="20201030 15:53:16.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.009" endtime="20201030 15:53:16.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.011" endtime="20201030 15:53:16.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.980" endtime="20201030 15:53:16.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.978" endtime="20201030 15:53:16.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.020" endtime="20201030 15:53:16.306"></status>
</kw>
<msg timestamp="20201030 15:53:16.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025402861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025510083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.019" endtime="20201030 15:53:16.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025402861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025510083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.310" endtime="20201030 15:53:16.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.318" endtime="20201030 15:53:16.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.016" endtime="20201030 15:53:16.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.014" endtime="20201030 15:53:16.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.325" level="INFO">${RESULT} = [{'diff': 0.00010722200000000057}, {'diff': 0.00010747300000000029}, {'diff': 0.00010786099999999729}, {'diff': 0.00010716599999999882}, {'diff': 0.00010733299999999765}, {'diff': 0.000107679999999998...</msg>
<status status="PASS" starttime="20201030 15:53:16.321" endtime="20201030 15:53:16.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.329" level="INFO">${ACCURACY} = {'diff': [0.00010722200000000057, 0.00010747300000000029, 0.00010786099999999729, 0.00010716599999999882, 0.00010733299999999765, 0.00010767999999999889, 0.00010734700000000069, 0.00010766700000000226...</msg>
<status status="PASS" starttime="20201030 15:53:16.326" endtime="20201030 15:53:16.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.333" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.332" endtime="20201030 15:53:16.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.336" level="INFO">VALUE: [0.00010722200000000057, 0.00010747300000000029, 0.00010786099999999729, 0.00010716599999999882, 0.00010733299999999765, 0.00010767999999999889, 0.00010734700000000069, 0.00010766700000000226, 0.00010709700000000044, 0.00010768100000000183, 0.0001078479999999972, 0.00010784700000000119, 0.00010734700000000069, 0.00010718100000000133, 0.0001077080000000015, 0.0001070699999999973, 0.00010784700000000119, 0.00010768100000000183, 0.0001078479999999972, 0.00010701399999999903, 0.00010699999999999946, 0.0001073889999999994, 0.00010747200000000082, 0.00010781899999999858, 0.00010749999999999996, 0.00010784700000000119, 0.00010783300000000162, 0.00010716700000000176, 0.00010737499999999983, 0.00010749999999999996, 0.00010784700000000119, 0.00010770799999999803, 0.00010718000000000186, 0.00010768100000000183, 0.00010716699999999829, 0.00010737499999999983, 0.00010751399999999953, 0.00010702800000000207, 0.00010695900000000022, 0.00010781899999999858, 0.00010783299999999815, 0.00010707000000000078, 0.00010701399999999903, 0.00010727800000000232, 0.00010718100000000133, 0.00010768100000000183, 0.00010747200000000082, 0.00010700000000000293, 0.00010733399999999713, 0.00010759699999999747]</msg>
<status status="PASS" starttime="20201030 15:53:16.334" endtime="20201030 15:53:16.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.329" endtime="20201030 15:53:16.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.341" endtime="20201030 15:53:16.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.340" endtime="20201030 15:53:16.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.339" endtime="20201030 15:53:16.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.976" endtime="20201030 15:53:16.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:15.976" endtime="20201030 15:53:16.362"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.371" endtime="20201030 15:53:16.391"></status>
</kw>
<msg timestamp="20201030 15:53:16.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.369" endtime="20201030 15:53:16.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.392" endtime="20201030 15:53:16.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.395" endtime="20201030 15:53:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.366" endtime="20201030 15:53:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.364" endtime="20201030 15:53:16.397"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.404" endtime="20201030 15:53:16.690"></status>
</kw>
<msg timestamp="20201030 15:53:16.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.402" endtime="20201030 15:53:16.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022426306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.694" endtime="20201030 15:53:16.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.702" endtime="20201030 15:53:16.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.400" endtime="20201030 15:53:16.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.398" endtime="20201030 15:53:16.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:16.708" level="INFO">${RESULT} = [{'diff': 0.00010866600000000032}, {'diff': 0.00010831900000000255}, {'diff': 0.00010816699999999929}, {'diff': 0.00010883300000000262}, {'diff': 0.00010854199999999967}, {'diff': 0.000108000000000000...</msg>
<status status="PASS" starttime="20201030 15:53:16.705" endtime="20201030 15:53:16.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:16.713" level="INFO">${ACCURACY} = {'diff': [0.00010866600000000032, 0.00010831900000000255, 0.00010816699999999929, 0.00010883300000000262, 0.00010854199999999967, 0.00010800000000000046, 0.00010850000000000096, 0.00010866700000000326...</msg>
<status status="PASS" starttime="20201030 15:53:16.709" endtime="20201030 15:53:16.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.718" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:16.717" endtime="20201030 15:53:16.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.720" level="INFO">VALUE: [0.00010866600000000032, 0.00010831900000000255, 0.00010816699999999929, 0.00010883300000000262, 0.00010854199999999967, 0.00010800000000000046, 0.00010850000000000096, 0.00010866700000000326, 0.00010886100000000176, 0.00010834700000000169, 0.00010873600000000164, 0.00010801400000000003, 0.00010850000000000096, 0.00010818099999999886, 0.00010811100000000101, 0.00010813900000000015, 0.00010816599999999982, 0.00010834699999999822, 0.00010801400000000003, 0.00010851400000000053, 0.0001085280000000001, 0.00010886100000000176, 0.00010836100000000126, 0.00010818099999999886, 0.00010804099999999969, 0.00010883300000000262, 0.0001085280000000001, 0.00010848600000000139, 0.00010883299999999915, 0.00010801400000000003, 0.00010801400000000003, 0.00010815299999999972, 0.00010851400000000053, 0.00010812500000000058, 0.00010815200000000025, 0.00010866600000000032, 0.00010797199999999785, 0.00010884700000000219, 0.00010868099999999936, 0.000108208999999998, 0.00010801400000000003, 0.00010884800000000167, 0.00010851400000000053, 0.00010802700000000012, 0.00010883299999999915, 0.00010884699999999872, 0.00010851400000000053, 0.00010884699999999872, 0.00010818100000000233, 0.00010866699999999979]</msg>
<status status="PASS" starttime="20201030 15:53:16.719" endtime="20201030 15:53:16.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.714" endtime="20201030 15:53:16.721"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:16.725" endtime="20201030 15:53:16.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.724" endtime="20201030 15:53:16.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.722" endtime="20201030 15:53:16.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.363" endtime="20201030 15:53:16.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.362" endtime="20201030 15:53:16.746"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.754" endtime="20201030 15:53:16.775"></status>
</kw>
<msg timestamp="20201030 15:53:16.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.753" endtime="20201030 15:53:16.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:16.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:16.776" endtime="20201030 15:53:16.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.779" endtime="20201030 15:53:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.750" endtime="20201030 15:53:16.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.748" endtime="20201030 15:53:16.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:16.788" endtime="20201030 15:53:17.075"></status>
</kw>
<msg timestamp="20201030 15:53:17.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:16.786" endtime="20201030 15:53:17.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022239778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.079" endtime="20201030 15:53:17.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.088" endtime="20201030 15:53:17.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.784" endtime="20201030 15:53:17.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.782" endtime="20201030 15:53:17.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.094" level="INFO">${RESULT} = [{'diff': 0.00010913900000000115}, {'diff': 0.00010934699999999922}, {'diff': 0.00010899999999999799}, {'diff': 0.0001095549999999973}, {'diff': 0.00010974999999999874}, {'diff': 0.0001096939999999969...</msg>
<status status="PASS" starttime="20201030 15:53:17.091" endtime="20201030 15:53:17.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.098" level="INFO">${ACCURACY} = {'diff': [0.00010913900000000115, 0.00010934699999999922, 0.00010899999999999799, 0.0001095549999999973, 0.00010974999999999874, 0.00010969399999999699, 0.00010918000000000039, 0.00010901399999999756,...</msg>
<status status="PASS" starttime="20201030 15:53:17.095" endtime="20201030 15:53:17.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.103" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.102" endtime="20201030 15:53:17.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.105" level="INFO">VALUE: [0.00010913900000000115, 0.00010934699999999922, 0.00010899999999999799, 0.0001095549999999973, 0.00010974999999999874, 0.00010969399999999699, 0.00010918000000000039, 0.00010901399999999756, 0.00010983300000000015, 0.00010984699999999972, 0.00010965299999999775, 0.0001091950000000029, 0.00010952699999999815, 0.00010926400000000128, 0.00010986099999999929, 0.0001095280000000011, 0.00010948600000000239, 0.00010937500000000183, 0.00010984699999999972, 0.0001090280000000006, 0.00010918099999999986, 0.00010918099999999986, 0.00010919399999999996, 0.00010968000000000089, 0.00010901399999999756, 0.00010961099999999904, 0.00010984699999999972, 0.00010988899999999843, 0.00010951399999999806, 0.00010968100000000036, 0.0001097219999999996, 0.00010901299999999808, 0.00010991700000000104, 0.00010934699999999922, 0.00010901400000000103, 0.00010984699999999972, 0.00010901400000000103, 0.00010918099999999986, 0.0001095829999999999, 0.00010950000000000196, 0.0001097219999999996, 0.00010981900000000058, 0.00010916600000000082, 0.00010968000000000089, 0.00010919499999999943, 0.00010901399999999756, 0.00010977800000000135, 0.00010987499999999886, 0.0001098479999999992, 0.00010933399999999913]</msg>
<status status="PASS" starttime="20201030 15:53:17.104" endtime="20201030 15:53:17.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.099" endtime="20201030 15:53:17.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.111" endtime="20201030 15:53:17.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.109" endtime="20201030 15:53:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.108" endtime="20201030 15:53:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.747" endtime="20201030 15:53:17.131"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:16.746" endtime="20201030 15:53:17.131"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.140" endtime="20201030 15:53:17.161"></status>
</kw>
<msg timestamp="20201030 15:53:17.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.139" endtime="20201030 15:53:17.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.163" endtime="20201030 15:53:17.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.165" endtime="20201030 15:53:17.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.136" endtime="20201030 15:53:17.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.134" endtime="20201030 15:53:17.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.174" endtime="20201030 15:53:17.461"></status>
</kw>
<msg timestamp="20201030 15:53:17.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.173" endtime="20201030 15:53:17.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023173625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023284306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.465" endtime="20201030 15:53:17.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.473" endtime="20201030 15:53:17.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.170" endtime="20201030 15:53:17.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.169" endtime="20201030 15:53:17.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.479" level="INFO">${RESULT} = [{'diff': 0.00011068100000000136}, {'diff': 0.00011079099999999897}, {'diff': 0.00011034700000000022}, {'diff': 0.00011050000000000296}, {'diff': 0.00011048599999999992}, {'diff': 0.000110694999999997...</msg>
<status status="PASS" starttime="20201030 15:53:17.476" endtime="20201030 15:53:17.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.484" level="INFO">${ACCURACY} = {'diff': [0.00011068100000000136, 0.00011079099999999897, 0.00011034700000000022, 0.00011050000000000296, 0.00011048599999999992, 0.00011069499999999746, 0.00011033300000000065, 0.00011051400000000253...</msg>
<status status="PASS" starttime="20201030 15:53:17.480" endtime="20201030 15:53:17.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.488" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.487" endtime="20201030 15:53:17.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.490" level="INFO">VALUE: [0.00011068100000000136, 0.00011079099999999897, 0.00011034700000000022, 0.00011050000000000296, 0.00011048599999999992, 0.00011069499999999746, 0.00011033300000000065, 0.00011051400000000253, 0.00011033400000000013, 0.00011018000000000139, 0.00011051299999999958, 0.00011026399999999881, 0.00011086100000000029, 0.00011051399999999906, 0.00011033299999999718, 0.00011066700000000179, 0.00011069500000000093, 0.00011001400000000203, 0.00011001400000000203, 0.00011068000000000189, 0.00011052799999999863, 0.00011019400000000096, 0.00011050000000000296, 0.00011033300000000065, 0.00011070899999999703, 0.00011068099999999789, 0.00011083400000000063, 0.00011077800000000235, 0.00011084700000000072, 0.00011001399999999856, 0.00011001399999999856, 0.00011051399999999906, 0.00011034700000000022, 0.00011068099999999789, 0.00011084700000000072, 0.0001103479999999997, 0.00011068099999999789, 0.00011087499999999986, 0.00010994399999999724, 0.00011055599999999777, 0.00011034700000000022, 0.00011001399999999856, 0.00011001400000000203, 0.00011049999999999949, 0.00011080600000000149, 0.0001103479999999997, 0.00011047200000000035, 0.00011016600000000182, 0.00011045800000000078, 0.00011084700000000072]</msg>
<status status="PASS" starttime="20201030 15:53:17.489" endtime="20201030 15:53:17.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.484" endtime="20201030 15:53:17.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.496" endtime="20201030 15:53:17.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.495" endtime="20201030 15:53:17.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.494" endtime="20201030 15:53:17.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.132" endtime="20201030 15:53:17.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.132" endtime="20201030 15:53:17.517"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.526" endtime="20201030 15:53:17.546"></status>
</kw>
<msg timestamp="20201030 15:53:17.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.524" endtime="20201030 15:53:17.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.548" endtime="20201030 15:53:17.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.550" endtime="20201030 15:53:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.522" endtime="20201030 15:53:17.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.519" endtime="20201030 15:53:17.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.559" endtime="20201030 15:53:17.845"></status>
</kw>
<msg timestamp="20201030 15:53:17.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.558" endtime="20201030 15:53:17.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.849" endtime="20201030 15:53:17.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.857" endtime="20201030 15:53:17.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.555" endtime="20201030 15:53:17.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.553" endtime="20201030 15:53:17.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:17.864" level="INFO">${RESULT} = [{'diff': 0.00011132000000000156}, {'diff': 0.00011168099999999889}, {'diff': 0.00011183299999999868}, {'diff': 0.00011099999999999999}, {'diff': 0.00011184699999999825}, {'diff': 0.000111514000000000...</msg>
<status status="PASS" starttime="20201030 15:53:17.861" endtime="20201030 15:53:17.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:17.869" level="INFO">${ACCURACY} = {'diff': [0.00011132000000000156, 0.00011168099999999889, 0.00011183299999999868, 0.00011099999999999999, 0.00011184699999999825, 0.00011151400000000006, 0.00011184700000000172, 0.00011134700000000122...</msg>
<status status="PASS" starttime="20201030 15:53:17.865" endtime="20201030 15:53:17.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.873" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:17.872" endtime="20201030 15:53:17.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.876" level="INFO">VALUE: [0.00011132000000000156, 0.00011168099999999889, 0.00011183299999999868, 0.00011099999999999999, 0.00011184699999999825, 0.00011151400000000006, 0.00011184700000000172, 0.00011134700000000122, 0.00011123600000000067, 0.00011118100000000186, 0.00011119399999999849, 0.00011131899999999861, 0.00011101399999999956, 0.00011183299999999868, 0.00011102799999999913, 0.0001117229999999976, 0.00011151400000000006, 0.00011175000000000074, 0.00011152799999999963, 0.00011168099999999889, 0.00011134700000000122, 0.0001114029999999995, 0.00011169399999999899, 0.00011134700000000122, 0.00011183299999999868, 0.00011098600000000042, 0.00011118100000000186, 0.00011150000000000049, 0.00011118000000000239, 0.000111903, 0.00011169399999999899, 0.00011186100000000129, 0.00011150000000000049, 0.00011168100000000236, 0.00011151400000000006, 0.00011147199999999788, 0.0001113619999999968, 0.00011183399999999816, 0.00011150000000000049, 0.00011099999999999999, 0.00011117999999999892, 0.00011136100000000079, 0.00011101399999999956, 0.00011151400000000006, 0.00011118100000000186, 0.00011119500000000143, 0.0001118480000000012, 0.00011168000000000289, 0.00011108399999999741, 0.0001110280000000026]</msg>
<status status="PASS" starttime="20201030 15:53:17.874" endtime="20201030 15:53:17.876"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.870" endtime="20201030 15:53:17.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.881" endtime="20201030 15:53:17.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.879" endtime="20201030 15:53:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.878" endtime="20201030 15:53:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.518" endtime="20201030 15:53:17.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.517" endtime="20201030 15:53:17.901"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.910" endtime="20201030 15:53:17.930"></status>
</kw>
<msg timestamp="20201030 15:53:17.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.908" endtime="20201030 15:53:17.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.931" endtime="20201030 15:53:17.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.934" endtime="20201030 15:53:17.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.906" endtime="20201030 15:53:17.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.904" endtime="20201030 15:53:17.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.943" endtime="20201030 15:53:18.231"></status>
</kw>
<msg timestamp="20201030 15:53:18.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:17.941" endtime="20201030 15:53:18.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022086819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022199639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.235" endtime="20201030 15:53:18.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.243" endtime="20201030 15:53:18.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.939" endtime="20201030 15:53:18.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.937" endtime="20201030 15:53:18.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.250" level="INFO">${RESULT} = [{'diff': 0.00011281999999999959}, {'diff': 0.00011233299999999918}, {'diff': 0.00011263900000000118}, {'diff': 0.00011251299999999811}, {'diff': 0.00011268000000000042}, {'diff': 0.000112847000000002...</msg>
<status status="PASS" starttime="20201030 15:53:18.247" endtime="20201030 15:53:18.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.254" level="INFO">${ACCURACY} = {'diff': [0.00011281999999999959, 0.00011233299999999918, 0.00011263900000000118, 0.00011251299999999811, 0.00011268000000000042, 0.00011284700000000272, 0.00011281900000000011, 0.00011286099999999882...</msg>
<status status="PASS" starttime="20201030 15:53:18.251" endtime="20201030 15:53:18.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.258" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.257" endtime="20201030 15:53:18.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.261" level="INFO">VALUE: [0.00011281999999999959, 0.00011233299999999918, 0.00011263900000000118, 0.00011251299999999811, 0.00011268000000000042, 0.00011284700000000272, 0.00011281900000000011, 0.00011286099999999882, 0.00011200000000000099, 0.00011201399999999709, 0.00011194500000000218, 0.00011199999999999752, 0.00011283299999999968, 0.00011202800000000013, 0.00011286099999999882, 0.00011233300000000265, 0.00011247199999999888, 0.0001120419999999997, 0.00011268099999999989, 0.00011284799999999873, 0.00011202700000000065, 0.00011234700000000222, 0.00011216600000000035, 0.0001125700000000028, 0.00011269399999999999, 0.00011266700000000032, 0.0001120419999999997, 0.00011251400000000106, 0.00011283399999999916, 0.0001124169999999966, 0.00011201300000000108, 0.00011268000000000042, 0.00011258399999999891, 0.00011234699999999875, 0.00011234700000000222, 0.00011243099999999964, 0.00011201399999999709, 0.0001128619999999983, 0.00011202700000000065, 0.00011250000000000149, 0.00011217999999999992, 0.00011250000000000149, 0.00011217999999999992, 0.00011284699999999925, 0.00011202800000000013, 0.00011234699999999875, 0.00011234799999999823, 0.0001128480000000022, 0.00011252700000000115, 0.00011233299999999918]</msg>
<status status="PASS" starttime="20201030 15:53:18.259" endtime="20201030 15:53:18.261"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.255" endtime="20201030 15:53:18.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.266" endtime="20201030 15:53:18.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.264" endtime="20201030 15:53:18.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.263" endtime="20201030 15:53:18.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.902" endtime="20201030 15:53:18.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.902" endtime="20201030 15:53:18.286"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.295" endtime="20201030 15:53:18.316"></status>
</kw>
<msg timestamp="20201030 15:53:18.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.293" endtime="20201030 15:53:18.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.318" endtime="20201030 15:53:18.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.320" endtime="20201030 15:53:18.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.291" endtime="20201030 15:53:18.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.289" endtime="20201030 15:53:18.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.329" endtime="20201030 15:53:18.616"></status>
</kw>
<msg timestamp="20201030 15:53:18.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.328" endtime="20201030 15:53:18.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023131542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023245042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.620" endtime="20201030 15:53:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.628" endtime="20201030 15:53:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.325" endtime="20201030 15:53:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.323" endtime="20201030 15:53:18.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:18.635" level="INFO">${RESULT} = [{'diff': 0.00011349999999999902}, {'diff': 0.00011315300000000125}, {'diff': 0.00011368000000000142}, {'diff': 0.00011363900000000218}, {'diff': 0.00011336099999999932}, {'diff': 0.000113152999999997...</msg>
<status status="PASS" starttime="20201030 15:53:18.632" endtime="20201030 15:53:18.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:18.639" level="INFO">${ACCURACY} = {'diff': [0.00011349999999999902, 0.00011315300000000125, 0.00011368000000000142, 0.00011363900000000218, 0.00011336099999999932, 0.00011315299999999778, 0.00011318099999999692, 0.00011300000000000199...</msg>
<status status="PASS" starttime="20201030 15:53:18.636" endtime="20201030 15:53:18.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.644" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:18.642" endtime="20201030 15:53:18.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.646" level="INFO">VALUE: [0.00011349999999999902, 0.00011315300000000125, 0.00011368000000000142, 0.00011363900000000218, 0.00011336099999999932, 0.00011315299999999778, 0.00011318099999999692, 0.00011300000000000199, 0.00011301399999999809, 0.00011384799999999973, 0.00011363900000000218, 0.00011366599999999838, 0.00011300000000000199, 0.00011369400000000099, 0.00011315300000000125, 0.00011349999999999902, 0.00011358300000000043, 0.00011349999999999902, 0.00011316700000000082, 0.00011332000000000009, 0.00011372200000000013, 0.00011333300000000018, 0.00011384700000000025, 0.00011333300000000018, 0.00011369500000000046, 0.00011368100000000089, 0.00011333399999999966, 0.00011297299999999885, 0.00011308399999999941, 0.00011299999999999852, 0.00011336099999999932, 0.00011333300000000018, 0.00011388899999999896, 0.00011336099999999932, 0.00011336100000000279, 0.0001133480000000027, 0.0001133480000000027, 0.00011320800000000006, 0.00011384700000000025, 0.00011319400000000049, 0.00011351399999999859, 0.00011386099999999982, 0.00011375000000000274, 0.00011316700000000082, 0.00011350000000000249, 0.00011334799999999923, 0.00011317999999999745, 0.00011302800000000113, 0.0001137359999999997, 0.00011319400000000049]</msg>
<status status="PASS" starttime="20201030 15:53:18.645" endtime="20201030 15:53:18.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.640" endtime="20201030 15:53:18.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:18.652" endtime="20201030 15:53:18.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.650" endtime="20201030 15:53:18.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.649" endtime="20201030 15:53:18.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.287" endtime="20201030 15:53:18.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.287" endtime="20201030 15:53:18.673"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.681" endtime="20201030 15:53:18.703"></status>
</kw>
<msg timestamp="20201030 15:53:18.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.680" endtime="20201030 15:53:18.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:18.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:18.704" endtime="20201030 15:53:18.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.707" endtime="20201030 15:53:18.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.677" endtime="20201030 15:53:18.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.675" endtime="20201030 15:53:18.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:18.716" endtime="20201030 15:53:19.003"></status>
</kw>
<msg timestamp="20201030 15:53:19.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:18.714" endtime="20201030 15:53:19.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.007" endtime="20201030 15:53:19.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.015" endtime="20201030 15:53:19.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.712" endtime="20201030 15:53:19.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.710" endtime="20201030 15:53:19.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.021" level="INFO">${RESULT} = [{'diff': 0.00011452800000000263}, {'diff': 0.00011469399999999852}, {'diff': 0.00011483300000000168}, {'diff': 0.00011484700000000125}, {'diff': 0.00011434700000000075}, {'diff': 0.000114347000000000...</msg>
<status status="PASS" starttime="20201030 15:53:19.018" endtime="20201030 15:53:19.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.026" level="INFO">${ACCURACY} = {'diff': [0.00011452800000000263, 0.00011469399999999852, 0.00011483300000000168, 0.00011484700000000125, 0.00011434700000000075, 0.00011434700000000075, 0.00011486099999999735, 0.00011452699999999968...</msg>
<status status="PASS" starttime="20201030 15:53:19.022" endtime="20201030 15:53:19.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.031" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.030" endtime="20201030 15:53:19.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.033" level="INFO">VALUE: [0.00011452800000000263, 0.00011469399999999852, 0.00011483300000000168, 0.00011484700000000125, 0.00011434700000000075, 0.00011434700000000075, 0.00011486099999999735, 0.00011452699999999968, 0.00011452699999999968, 0.00011470799999999809, 0.00011451400000000306, 0.00011401400000000256, 0.00011462500000000014, 0.00011433300000000118, 0.00011483400000000116, 0.00011401399999999909, 0.00011448699999999992, 0.00011402799999999866, 0.00011451399999999959, 0.00011431900000000161, 0.00011484700000000125, 0.00011466699999999885, 0.00011488899999999996, 0.00011463899999999971, 0.00011451399999999959, 0.00011437500000000336, 0.00011401399999999909, 0.00011465299999999928, 0.00011458399999999744, 0.00011416699999999835, 0.0001140420000000017, 0.00011418100000000139, 0.00011402800000000213, 0.00011468100000000189, 0.00011433300000000118, 0.00011467999999999895, 0.00011467999999999895, 0.00011466699999999885, 0.00011394399999999777, 0.00011450000000000002, 0.00011483400000000116, 0.00011416699999999835, 0.00011416699999999835, 0.00011450000000000002, 0.00011465199999999981, 0.00011420900000000053, 0.00011450000000000002, 0.00011393100000000114, 0.00011418100000000139, 0.00011401399999999909]</msg>
<status status="PASS" starttime="20201030 15:53:19.032" endtime="20201030 15:53:19.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.027" endtime="20201030 15:53:19.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.038" endtime="20201030 15:53:19.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.037" endtime="20201030 15:53:19.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.035" endtime="20201030 15:53:19.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.673" endtime="20201030 15:53:19.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:18.673" endtime="20201030 15:53:19.059"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.068" endtime="20201030 15:53:19.088"></status>
</kw>
<msg timestamp="20201030 15:53:19.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.066" endtime="20201030 15:53:19.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.089" endtime="20201030 15:53:19.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.092" endtime="20201030 15:53:19.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.063" endtime="20201030 15:53:19.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.061" endtime="20201030 15:53:19.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.101" endtime="20201030 15:53:19.388"></status>
</kw>
<msg timestamp="20201030 15:53:19.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.099" endtime="20201030 15:53:19.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022234944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.393" endtime="20201030 15:53:19.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.401" endtime="20201030 15:53:19.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.097" endtime="20201030 15:53:19.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.095" endtime="20201030 15:53:19.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.407" level="INFO">${RESULT} = [{'diff': 0.00011500000000000052}, {'diff': 0.00011494399999999877}, {'diff': 0.00011498599999999748}, {'diff': 0.00011518100000000239}, {'diff': 0.00011494500000000171}, {'diff': 0.000115014000000000...</msg>
<status status="PASS" starttime="20201030 15:53:19.404" endtime="20201030 15:53:19.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.411" level="INFO">${ACCURACY} = {'diff': [0.00011500000000000052, 0.00011494399999999877, 0.00011498599999999748, 0.00011518100000000239, 0.00011494500000000171, 0.00011501400000000009, 0.00011550000000000102, 0.00011518099999999892...</msg>
<status status="PASS" starttime="20201030 15:53:19.408" endtime="20201030 15:53:19.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.416" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.415" endtime="20201030 15:53:19.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.418" level="INFO">VALUE: [0.00011500000000000052, 0.00011494399999999877, 0.00011498599999999748, 0.00011518100000000239, 0.00011494500000000171, 0.00011501400000000009, 0.00011550000000000102, 0.00011518099999999892, 0.00011500000000000052, 0.00011556999999999887, 0.00011517999999999945, 0.00011552800000000016, 0.00011551399999999712, 0.00011591600000000063, 0.00011516699999999935, 0.00011500000000000052, 0.00011536100000000132, 0.00011584700000000225, 0.00011569400000000299, 0.00011569399999999952, 0.00011529199999999948, 0.00011569499999999899, 0.00011518099999999892, 0.00011550000000000102, 0.00011568100000000289, 0.0001155689999999994, 0.00011533299999999871, 0.00011576400000000084, 0.00011584700000000225, 0.00011565300000000028, 0.00011498599999999748, 0.00011562500000000114, 0.00011568099999999942, 0.00011586100000000182, 0.00011517999999999945, 0.00011536100000000132, 0.00011583299999999921, 0.00011522199999999816, 0.00011554199999999973, 0.00011516599999999988, 0.00011563900000000071, 0.00011534800000000123, 0.00011533399999999819, 0.00011586100000000182, 0.0001156109999999981, 0.00011518000000000292, 0.00011516699999999935, 0.00011584699999999878, 0.00011516700000000282, 0.00011568099999999942]</msg>
<status status="PASS" starttime="20201030 15:53:19.417" endtime="20201030 15:53:19.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.412" endtime="20201030 15:53:19.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.425" endtime="20201030 15:53:19.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.422" endtime="20201030 15:53:19.446"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.420" endtime="20201030 15:53:19.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.060" endtime="20201030 15:53:19.447"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.059" endtime="20201030 15:53:19.447"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.459" endtime="20201030 15:53:19.482"></status>
</kw>
<msg timestamp="20201030 15:53:19.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.457" endtime="20201030 15:53:19.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.484" endtime="20201030 15:53:19.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.486" endtime="20201030 15:53:19.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.454" endtime="20201030 15:53:19.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.450" endtime="20201030 15:53:19.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.496" endtime="20201030 15:53:19.782"></status>
</kw>
<msg timestamp="20201030 15:53:19.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029280167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029396681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.494" endtime="20201030 15:53:19.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029280167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029396681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.786" endtime="20201030 15:53:19.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.794" endtime="20201030 15:53:19.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.491" endtime="20201030 15:53:19.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.490" endtime="20201030 15:53:19.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:19.800" level="INFO">${RESULT} = [{'diff': 0.00011651400000000159}, {'diff': 0.00011618000000000045}, {'diff': 0.00011651400000000159}, {'diff': 0.00011668000000000095}, {'diff': 0.00011600000000000152}, {'diff': 0.000116514000000001...</msg>
<status status="PASS" starttime="20201030 15:53:19.797" endtime="20201030 15:53:19.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:19.804" level="INFO">${ACCURACY} = {'diff': [0.00011651400000000159, 0.00011618000000000045, 0.00011651400000000159, 0.00011668000000000095, 0.00011600000000000152, 0.00011651400000000159, 0.0001162499999999983, 0.00011669499999999999,...</msg>
<status status="PASS" starttime="20201030 15:53:19.801" endtime="20201030 15:53:19.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.809" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:19.808" endtime="20201030 15:53:19.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.811" level="INFO">VALUE: [0.00011651400000000159, 0.00011618000000000045, 0.00011651400000000159, 0.00011668000000000095, 0.00011600000000000152, 0.00011651400000000159, 0.0001162499999999983, 0.00011669499999999999, 0.00011598600000000195, 0.00011684799999999926, 0.00011633299999999971, 0.00011618000000000045, 0.00011684700000000325, 0.00011633299999999971, 0.00011630600000000005, 0.00011652800000000116, 0.00011600000000000499, 0.00011682000000000359, 0.0001161379999999948, 0.00011637499999999495, 0.00011650000000000549, 0.00011652799999999769, 0.00011649999999999855, 0.00011625000000000524, 0.00011666699999999391, 0.00011684800000000273, 0.00011688900000000196, 0.00011640300000000103, 0.00011636100000000232, 0.00011634700000000275, 0.00011657000000000334, 0.00011686099999999588, 0.00011595800000000628, 0.00011670899999999956, 0.00011651399999999812, 0.00011665300000000128, 0.00011616600000000088, 0.00011634699999999581, 0.00011679199999999751, 0.00011686100000000282, 0.00011680600000000402, 0.00011636100000000232, 0.00011634799999999529, 0.00011668100000000042, 0.00011668000000000095, 0.00011652800000000463, 0.00011601399999999762, 0.00011616700000000035, 0.00011652799999999769, 0.00011652800000000463]</msg>
<status status="PASS" starttime="20201030 15:53:19.810" endtime="20201030 15:53:19.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.805" endtime="20201030 15:53:19.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:19.817" endtime="20201030 15:53:19.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.816" endtime="20201030 15:53:19.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.814" endtime="20201030 15:53:19.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.448" endtime="20201030 15:53:19.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.447" endtime="20201030 15:53:19.838"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.847" endtime="20201030 15:53:19.867"></status>
</kw>
<msg timestamp="20201030 15:53:19.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.845" endtime="20201030 15:53:19.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:19.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:19.869" endtime="20201030 15:53:19.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.871" endtime="20201030 15:53:19.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.842" endtime="20201030 15:53:19.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.840" endtime="20201030 15:53:19.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:19.880" endtime="20201030 15:53:20.166"></status>
</kw>
<msg timestamp="20201030 15:53:20.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:19.879" endtime="20201030 15:53:20.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022530236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022648056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.170" endtime="20201030 15:53:20.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.178" endtime="20201030 15:53:20.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.876" endtime="20201030 15:53:20.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.875" endtime="20201030 15:53:20.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.185" level="INFO">${RESULT} = [{'diff': 0.00011782000000000112}, {'diff': 0.00011768000000000195}, {'diff': 0.00011717999999999798}, {'diff': 0.00011717999999999798}, {'diff': 0.00011766699999999838}, {'diff': 0.000117347000000000...</msg>
<status status="PASS" starttime="20201030 15:53:20.182" endtime="20201030 15:53:20.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.190" level="INFO">${ACCURACY} = {'diff': [0.00011782000000000112, 0.00011768000000000195, 0.00011717999999999798, 0.00011717999999999798, 0.00011766699999999838, 0.00011734700000000028, 0.00011708300000000046, 0.00011734799999999976...</msg>
<status status="PASS" starttime="20201030 15:53:20.186" endtime="20201030 15:53:20.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.194" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.193" endtime="20201030 15:53:20.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.197" level="INFO">VALUE: [0.00011782000000000112, 0.00011768000000000195, 0.00011717999999999798, 0.00011717999999999798, 0.00011766699999999838, 0.00011734700000000028, 0.00011708300000000046, 0.00011734799999999976, 0.00011733400000000019, 0.00011784700000000078, 0.00011695800000000034, 0.00011718000000000145, 0.00011701399999999862, 0.000117695000000001, 0.00011695800000000034, 0.00011749999999999955, 0.00011698599999999948, 0.00011772200000000066, 0.00011701399999999862, 0.00011702800000000166, 0.00011702800000000166, 0.00011768099999999795, 0.00011768100000000142, 0.00011702799999999819, 0.00011701400000000209, 0.00011751400000000259, 0.00011697199999999991, 0.00011744400000000127, 0.00011768000000000195, 0.00011734700000000028, 0.00011784700000000078, 0.00011784700000000078, 0.00011719500000000049, 0.00011784800000000026, 0.00011701399999999862, 0.00011733300000000071, 0.00011751399999999912, 0.00011763900000000271, 0.00011766699999999838, 0.00011737499999999942, 0.00011758300000000096, 0.00011784800000000026, 0.00011698699999999895, 0.00011699999999999905, 0.00011784700000000078, 0.0001178889999999995, 0.00011751399999999912, 0.00011736099999999985, 0.0001171109999999996, 0.00011736199999999933]</msg>
<status status="PASS" starttime="20201030 15:53:20.195" endtime="20201030 15:53:20.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.191" endtime="20201030 15:53:20.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.202" endtime="20201030 15:53:20.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.200" endtime="20201030 15:53:20.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.199" endtime="20201030 15:53:20.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.839" endtime="20201030 15:53:20.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:19.838" endtime="20201030 15:53:20.222"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.231" endtime="20201030 15:53:20.251"></status>
</kw>
<msg timestamp="20201030 15:53:20.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.230" endtime="20201030 15:53:20.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.253" endtime="20201030 15:53:20.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.255" endtime="20201030 15:53:20.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.227" endtime="20201030 15:53:20.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.225" endtime="20201030 15:53:20.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.264" endtime="20201030 15:53:20.551"></status>
</kw>
<msg timestamp="20201030 15:53:20.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:20.263" endtime="20201030 15:53:20.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02206625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:20.555" endtime="20201030 15:53:20.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.563" endtime="20201030 15:53:20.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.260" endtime="20201030 15:53:20.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.259" endtime="20201030 15:53:20.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.569" level="INFO">${RESULT} = [{'diff': 0.00011818100000000192}, {'diff': 0.00011869399999999905}, {'diff': 0.00011802799999999919}, {'diff': 0.00011801399999999962}, {'diff': 0.00011884699999999832}, {'diff': 0.000118374999999996...</msg>
<status status="PASS" starttime="20201030 15:53:20.566" endtime="20201030 15:53:20.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.573" level="INFO">${ACCURACY} = {'diff': [0.00011818100000000192, 0.00011869399999999905, 0.00011802799999999919, 0.00011801399999999962, 0.00011884699999999832, 0.00011837499999999695, 0.00011866699999999938, 0.00011832000000000162...</msg>
<status status="PASS" starttime="20201030 15:53:20.570" endtime="20201030 15:53:20.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.578" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.577" endtime="20201030 15:53:20.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.580" level="INFO">VALUE: [0.00011818100000000192, 0.00011869399999999905, 0.00011802799999999919, 0.00011801399999999962, 0.00011884699999999832, 0.00011837499999999695, 0.00011866699999999938, 0.00011832000000000162, 0.00011834800000000076, 0.00011798699999999995, 0.00011869399999999905, 0.00011833300000000171, 0.00011850000000000055, 0.00011801399999999962, 0.00011852799999999969, 0.00011801399999999962, 0.00011854099999999979, 0.00011868100000000242, 0.00011863899999999677, 0.00011867999999999948, 0.00011834700000000128, 0.00011863899999999677, 0.00011851400000000012, 0.00011834700000000128, 0.00011869499999999852, 0.00011834800000000076, 0.00011818100000000192, 0.00011866599999999991, 0.00011883300000000221, 0.00011819499999999802, 0.00011841599999999966, 0.00011801399999999962, 0.00011798600000000048, 0.00011847199999999794, 0.00011851400000000012, 0.00011883299999999875, 0.00011848600000000098, 0.00011869399999999905, 0.00011809700000000103, 0.00011851400000000012, 0.00011852799999999969, 0.0001185690000000024, 0.00011805499999999886, 0.00011866699999999938, 0.0001187630000000009, 0.00011833300000000171, 0.00011801399999999962, 0.00011833300000000171, 0.00011834700000000128, 0.00011883400000000169]</msg>
<status status="PASS" starttime="20201030 15:53:20.579" endtime="20201030 15:53:20.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.574" endtime="20201030 15:53:20.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.585" endtime="20201030 15:53:20.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.584" endtime="20201030 15:53:20.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.583" endtime="20201030 15:53:20.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.223" endtime="20201030 15:53:20.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.223" endtime="20201030 15:53:20.606"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.615" endtime="20201030 15:53:20.636"></status>
</kw>
<msg timestamp="20201030 15:53:20.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.613" endtime="20201030 15:53:20.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.637" endtime="20201030 15:53:20.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.640" endtime="20201030 15:53:20.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.610" endtime="20201030 15:53:20.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.608" endtime="20201030 15:53:20.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.649" endtime="20201030 15:53:20.935"></status>
</kw>
<msg timestamp="20201030 15:53:20.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.647" endtime="20201030 15:53:20.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022994181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:20.939" endtime="20201030 15:53:20.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:20.947" endtime="20201030 15:53:20.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.645" endtime="20201030 15:53:20.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.643" endtime="20201030 15:53:20.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:20.954" level="INFO">${RESULT} = [{'diff': 0.00011901300000000115}, {'diff': 0.00011984699999999932}, {'diff': 0.00011917999999999998}, {'diff': 0.00011900000000000105}, {'diff': 0.00011936100000000185}, {'diff': 0.000119221999999998...</msg>
<status status="PASS" starttime="20201030 15:53:20.951" endtime="20201030 15:53:20.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:20.958" level="INFO">${ACCURACY} = {'diff': [0.00011901300000000115, 0.00011984699999999932, 0.00011917999999999998, 0.00011900000000000105, 0.00011936100000000185, 0.00011922199999999869, 0.00011951400000000112, 0.00011951400000000112...</msg>
<status status="PASS" starttime="20201030 15:53:20.955" endtime="20201030 15:53:20.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.962" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:20.961" endtime="20201030 15:53:20.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.965" level="INFO">VALUE: [0.00011901300000000115, 0.00011984699999999932, 0.00011917999999999998, 0.00011900000000000105, 0.00011936100000000185, 0.00011922199999999869, 0.00011951400000000112, 0.00011951400000000112, 0.00011966700000000038, 0.00011984699999999932, 0.00011951399999999765, 0.00011931899999999968, 0.00011916699999999988, 0.0001192089999999986, 0.00011919499999999902, 0.00011919499999999902, 0.00011951400000000112, 0.00011968000000000048, 0.00011986099999999889, 0.00011968000000000048, 0.00011919400000000302, 0.00011968099999999995, 0.00011973599999999876, 0.00011968099999999995, 0.00011950000000000155, 0.0001192500000000013, 0.00011979100000000104, 0.00011934699999999882, 0.00011917999999999998, 0.00011967999999999701, 0.0001197089999999991, 0.00011983299999999975, 0.0001191379999999978, 0.00011901399999999715, 0.00011983299999999975, 0.00011951399999999765, 0.00011899999999999758, 0.00011901400000000062, 0.00011906899999999943, 0.00011952799999999722, 0.00011984699999999932, 0.00011918099999999945, 0.00011951399999999765, 0.00011917999999999998, 0.00011968000000000048, 0.00011916600000000041, 0.00011954200000000026, 0.0001197089999999991, 0.00011968099999999995, 0.00011951399999999765]</msg>
<status status="PASS" starttime="20201030 15:53:20.963" endtime="20201030 15:53:20.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.959" endtime="20201030 15:53:20.967"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:20.971" endtime="20201030 15:53:20.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.969" endtime="20201030 15:53:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.968" endtime="20201030 15:53:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.607" endtime="20201030 15:53:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.606" endtime="20201030 15:53:20.991"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.000" endtime="20201030 15:53:21.021"></status>
</kw>
<msg timestamp="20201030 15:53:21.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.998" endtime="20201030 15:53:21.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.022" endtime="20201030 15:53:21.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.025" endtime="20201030 15:53:21.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.996" endtime="20201030 15:53:21.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.994" endtime="20201030 15:53:21.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.034" endtime="20201030 15:53:21.321"></status>
</kw>
<msg timestamp="20201030 15:53:21.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.032" endtime="20201030 15:53:21.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022199236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022319583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.325" endtime="20201030 15:53:21.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.333" endtime="20201030 15:53:21.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.030" endtime="20201030 15:53:21.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.028" endtime="20201030 15:53:21.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.339" level="INFO">${RESULT} = [{'diff': 0.00012034699999999982}, {'diff': 0.00012018000000000098}, {'diff': 0.00012068000000000148}, {'diff': 0.00012037500000000242}, {'diff': 0.00012084700000000032}, {'diff': 0.000120847000000000...</msg>
<status status="PASS" starttime="20201030 15:53:21.336" endtime="20201030 15:53:21.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.344" level="INFO">${ACCURACY} = {'diff': [0.00012034699999999982, 0.00012018000000000098, 0.00012068000000000148, 0.00012037500000000242, 0.00012084700000000032, 0.00012084700000000032, 0.00012051400000000212, 0.00012016700000000088...</msg>
<status status="PASS" starttime="20201030 15:53:21.340" endtime="20201030 15:53:21.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.349" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.348" endtime="20201030 15:53:21.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.351" level="INFO">VALUE: [0.00012034699999999982, 0.00012018000000000098, 0.00012068000000000148, 0.00012037500000000242, 0.00012084700000000032, 0.00012084700000000032, 0.00012051400000000212, 0.00012016700000000088, 0.00012045800000000037, 0.00012087499999999946, 0.00012019500000000002, 0.00012036099999999939, 0.00012002800000000119, 0.00012037499999999896, 0.00012000000000000205, 0.00012084799999999979, 0.0001199440000000003, 0.00012034699999999982, 0.00012036099999999939, 0.00012033300000000025, 0.00012077799999999847, 0.00012049999999999908, 0.00012037499999999896, 0.00012040300000000156, 0.00011998599999999901, 0.00012016600000000141, 0.00011998599999999901, 0.00012051400000000212, 0.00012086099999999989, 0.00012052799999999822, 0.00012068100000000095, 0.00012093099999999773, 0.00012084699999999685, 0.00012066599999999844, 0.00012086099999999989, 0.00012066700000000138, 0.00012001400000000162, 0.00012001400000000162, 0.00012068100000000095, 0.00012019500000000002, 0.00012018100000000045, 0.00012086099999999989, 0.00012051399999999865, 0.00012002800000000119, 0.00012019400000000055, 0.00012018100000000045, 0.00012034699999999982, 0.00012033399999999972, 0.0001206379999999993, 0.00012084700000000032]</msg>
<status status="PASS" starttime="20201030 15:53:21.350" endtime="20201030 15:53:21.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.345" endtime="20201030 15:53:21.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.356" endtime="20201030 15:53:21.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.355" endtime="20201030 15:53:21.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.353" endtime="20201030 15:53:21.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.992" endtime="20201030 15:53:21.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.992" endtime="20201030 15:53:21.377"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.385" endtime="20201030 15:53:21.406"></status>
</kw>
<msg timestamp="20201030 15:53:21.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.384" endtime="20201030 15:53:21.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.407" endtime="20201030 15:53:21.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.410" endtime="20201030 15:53:21.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.381" endtime="20201030 15:53:21.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.379" endtime="20201030 15:53:21.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.419" endtime="20201030 15:53:21.706"></status>
</kw>
<msg timestamp="20201030 15:53:21.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.417" endtime="20201030 15:53:21.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022202375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.710" endtime="20201030 15:53:21.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.718" endtime="20201030 15:53:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.415" endtime="20201030 15:53:21.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.413" endtime="20201030 15:53:21.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.724" level="INFO">${RESULT} = [{'diff': 0.00012151399999999965}, {'diff': 0.00012151399999999965}, {'diff': 0.00012151399999999965}, {'diff': 0.00012168099999999848}, {'diff': 0.00012116700000000188}, {'diff': 0.000121846999999997...</msg>
<status status="PASS" starttime="20201030 15:53:21.721" endtime="20201030 15:53:21.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.728" level="INFO">${ACCURACY} = {'diff': [0.00012151399999999965, 0.00012151399999999965, 0.00012151399999999965, 0.00012168099999999848, 0.00012116700000000188, 0.00012184699999999785, 0.00012169400000000205, 0.00012166700000000238...</msg>
<status status="PASS" starttime="20201030 15:53:21.725" endtime="20201030 15:53:21.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.733" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.732" endtime="20201030 15:53:21.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.735" level="INFO">VALUE: [0.00012151399999999965, 0.00012151399999999965, 0.00012151399999999965, 0.00012168099999999848, 0.00012116700000000188, 0.00012184699999999785, 0.00012169400000000205, 0.00012166700000000238, 0.00012167999999999901, 0.00012168099999999848, 0.00012169500000000152, 0.00012101399999999915, 0.00012134800000000029, 0.00012168099999999848, 0.00012117999999999851, 0.00012184699999999785, 0.00012186100000000089, 0.00012119500000000102, 0.00012166699999999891, 0.00012186099999999742, 0.00012154100000000279, 0.00012118099999999798, 0.00012134700000000082, 0.00012134699999999735, 0.00012184699999999785, 0.0001218189999999987, 0.00012134700000000082, 0.00012118099999999798, 0.00012147300000000041, 0.00012151399999999965, 0.00012102699999999925, 0.00012098600000000001, 0.00012134700000000082, 0.00012148600000000051, 0.0001217639999999999, 0.00012134700000000082, 0.00012190200000000012, 0.00012150000000000008, 0.00012099999999999958, 0.00012151399999999965, 0.00012101399999999915, 0.00012152799999999922, 0.00012169500000000152, 0.00012184699999999785, 0.00012166699999999891, 0.00012186100000000089, 0.00012167999999999901, 0.00012119400000000155, 0.00012167999999999901, 0.00012101399999999915]</msg>
<status status="PASS" starttime="20201030 15:53:21.734" endtime="20201030 15:53:21.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.729" endtime="20201030 15:53:21.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.740" endtime="20201030 15:53:21.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.739" endtime="20201030 15:53:21.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.738" endtime="20201030 15:53:21.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.378" endtime="20201030 15:53:21.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.377" endtime="20201030 15:53:21.761"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.770" endtime="20201030 15:53:21.791"></status>
</kw>
<msg timestamp="20201030 15:53:21.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.768" endtime="20201030 15:53:21.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.792" endtime="20201030 15:53:21.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.795" endtime="20201030 15:53:21.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.766" endtime="20201030 15:53:21.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.764" endtime="20201030 15:53:21.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.804" endtime="20201030 15:53:22.090"></status>
</kw>
<msg timestamp="20201030 15:53:22.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.802" endtime="20201030 15:53:22.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023076889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023199736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.094" endtime="20201030 15:53:22.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.102" endtime="20201030 15:53:22.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.800" endtime="20201030 15:53:22.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.798" endtime="20201030 15:53:22.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.109" level="INFO">${RESULT} = [{'diff': 0.00012284699999999885}, {'diff': 0.0001222229999999977}, {'diff': 0.00012252800000000022}, {'diff': 0.00012202799999999972}, {'diff': 0.00012204099999999982}, {'diff': 0.0001221799999999995...</msg>
<status status="PASS" starttime="20201030 15:53:22.106" endtime="20201030 15:53:22.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.113" level="INFO">${ACCURACY} = {'diff': [0.00012284699999999885, 0.0001222229999999977, 0.00012252800000000022, 0.00012202799999999972, 0.00012204099999999982, 0.0001221799999999995, 0.00012241699999999966, 0.00012268, 0.0001225559...</msg>
<status status="PASS" starttime="20201030 15:53:22.110" endtime="20201030 15:53:22.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.117" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.116" endtime="20201030 15:53:22.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.120" level="INFO">VALUE: [0.00012284699999999885, 0.0001222229999999977, 0.00012252800000000022, 0.00012202799999999972, 0.00012204099999999982, 0.0001221799999999995, 0.00012241699999999966, 0.00012268, 0.00012255599999999936, 0.00012201400000000015, 0.00012268099999999948, 0.00012248700000000098, 0.00012206900000000243, 0.00012237500000000096, 0.0001221799999999995, 0.0001226389999999973, 0.00012266699999999991, 0.00012237499999999749, 0.00012218099999999898, 0.00012268099999999948, 0.00012266699999999991, 0.00012222199999999822, 0.0001225129999999977, 0.00012233299999999878, 0.0001229030000000006, 0.00012200000000000058, 0.00012201399999999668, 0.00012266699999999991, 0.00012281999999999918, 0.00012233300000000225, 0.00012219399999999908, 0.0001228189999999997, 0.00012284699999999885, 0.00012200000000000058, 0.00012284700000000232, 0.00012287499999999799, 0.00012269499999999905, 0.00012284799999999832, 0.00012241699999999966, 0.00012245800000000237, 0.00012230499999999964, 0.00012268, 0.00012269499999999905, 0.00012233299999999878, 0.00012270899999999862, 0.00012266699999999991, 0.00012201400000000015, 0.00012215200000000037, 0.00012286100000000189, 0.00012280500000000014]</msg>
<status status="PASS" starttime="20201030 15:53:22.118" endtime="20201030 15:53:22.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.114" endtime="20201030 15:53:22.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.129" endtime="20201030 15:53:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.128" endtime="20201030 15:53:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.127" endtime="20201030 15:53:22.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.762" endtime="20201030 15:53:22.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.761" endtime="20201030 15:53:22.150"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.159" endtime="20201030 15:53:22.179"></status>
</kw>
<msg timestamp="20201030 15:53:22.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.157" endtime="20201030 15:53:22.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.180" endtime="20201030 15:53:22.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.183" endtime="20201030 15:53:22.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.155" endtime="20201030 15:53:22.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.152" endtime="20201030 15:53:22.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.192" endtime="20201030 15:53:22.477"></status>
</kw>
<msg timestamp="20201030 15:53:22.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.190" endtime="20201030 15:53:22.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022170403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.481" endtime="20201030 15:53:22.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.489" endtime="20201030 15:53:22.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.188" endtime="20201030 15:53:22.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.186" endtime="20201030 15:53:22.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.496" level="INFO">${RESULT} = [{'diff': 0.00012316599999999747}, {'diff': 0.000123680000000001}, {'diff': 0.0001231800000000005}, {'diff': 0.000123680000000001}, {'diff': 0.00012351400000000165}, {'diff': 0.00012366699999999745}, ...</msg>
<status status="PASS" starttime="20201030 15:53:22.493" endtime="20201030 15:53:22.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.501" level="INFO">${ACCURACY} = {'diff': [0.00012316599999999747, 0.000123680000000001, 0.0001231800000000005, 0.000123680000000001, 0.00012351400000000165, 0.00012366699999999745, 0.00012366699999999745, 0.00012387500000000246, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:22.497" endtime="20201030 15:53:22.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.505" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.504" endtime="20201030 15:53:22.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.508" level="INFO">VALUE: [0.00012316599999999747, 0.000123680000000001, 0.0001231800000000005, 0.000123680000000001, 0.00012351400000000165, 0.00012366699999999745, 0.00012366699999999745, 0.00012387500000000246, 0.00012334699999999935, 0.00012297199999999897, 0.00012383300000000028, 0.00012384699999999985, 0.00012316700000000042, 0.00012336099999999892, 0.00012302800000000072, 0.00012384799999999932, 0.00012325000000000183, 0.0001234999999999986, 0.0001230420000000003, 0.0001238190000000007, 0.00012351399999999818, 0.00012351399999999818, 0.00012368100000000048, 0.00012326399999999793, 0.00012318099999999998, 0.0001229579999999994, 0.000123680000000001, 0.00012301400000000115, 0.0001234579999999999, 0.00012384699999999985, 0.00012368100000000048, 0.00012352800000000122, 0.00012372199999999972, 0.00012311099999999867, 0.00012372199999999972, 0.00012333299999999978, 0.00012387499999999899, 0.00012301400000000115, 0.00012333399999999925, 0.00012368100000000048, 0.00012366700000000092, 0.00012319400000000008, 0.00012351399999999818, 0.00012350000000000208, 0.00012386099999999942, 0.00012333299999999978, 0.00012318099999999998, 0.00012380599999999714, 0.00012351399999999818, 0.000123680000000001]</msg>
<status status="PASS" starttime="20201030 15:53:22.506" endtime="20201030 15:53:22.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.502" endtime="20201030 15:53:22.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.513" endtime="20201030 15:53:22.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.511" endtime="20201030 15:53:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.510" endtime="20201030 15:53:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.151" endtime="20201030 15:53:22.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.150" endtime="20201030 15:53:22.533"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.542" endtime="20201030 15:53:22.563"></status>
</kw>
<msg timestamp="20201030 15:53:22.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.540" endtime="20201030 15:53:22.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.564" endtime="20201030 15:53:22.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.567" endtime="20201030 15:53:22.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.538" endtime="20201030 15:53:22.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.536" endtime="20201030 15:53:22.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.576" endtime="20201030 15:53:22.863"></status>
</kw>
<msg timestamp="20201030 15:53:22.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.574" endtime="20201030 15:53:22.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022456208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.867" endtime="20201030 15:53:22.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.875" endtime="20201030 15:53:22.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.571" endtime="20201030 15:53:22.877"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.570" endtime="20201030 15:53:22.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.881" level="INFO">${RESULT} = [{'diff': 0.00012417999999999804}, {'diff': 0.00012484700000000085}, {'diff': 0.00012434700000000035}, {'diff': 0.00012451399999999918}, {'diff': 0.0001239999999999991}, {'diff': 0.0001245280000000022...</msg>
<status status="PASS" starttime="20201030 15:53:22.878" endtime="20201030 15:53:22.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.886" level="INFO">${ACCURACY} = {'diff': [0.00012417999999999804, 0.00012484700000000085, 0.00012434700000000035, 0.00012451399999999918, 0.0001239999999999991, 0.00012452800000000222, 0.00012452699999999928, 0.00012404099999999835,...</msg>
<status status="PASS" starttime="20201030 15:53:22.883" endtime="20201030 15:53:22.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.890" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.889" endtime="20201030 15:53:22.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.892" level="INFO">VALUE: [0.00012417999999999804, 0.00012484700000000085, 0.00012434700000000035, 0.00012451399999999918, 0.0001239999999999991, 0.00012452800000000222, 0.00012452699999999928, 0.00012404099999999835, 0.00012483300000000128, 0.0001241800000000015, 0.00012479200000000204, 0.00012402800000000172, 0.00012484700000000085, 0.00012429200000000154, 0.00012466699999999845, 0.0001244999999999996, 0.00012419400000000108, 0.00012434700000000035, 0.00012401399999999868, 0.0001239999999999991, 0.00012418099999999752, 0.00012418100000000099, 0.00012484800000000032, 0.00012416700000000142, 0.00012401399999999868, 0.00012444400000000133, 0.00012430499999999817, 0.00012468100000000149, 0.00012469500000000105, 0.00012402800000000172, 0.00012434799999999982, 0.00012418100000000099, 0.00012480499999999867, 0.00012417999999999804, 0.00012454199999999832, 0.00012400000000000258, 0.00012412499999999924, 0.00012416700000000142, 0.00012452800000000222, 0.0001246939999999981, 0.0001239999999999991, 0.00012433300000000078, 0.00012417999999999804, 0.00012486100000000042, 0.00012434700000000035, 0.00012454199999999832, 0.00012466700000000192, 0.000124680000000002, 0.00012469400000000158, 0.00012430500000000164]</msg>
<status status="PASS" starttime="20201030 15:53:22.891" endtime="20201030 15:53:22.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.886" endtime="20201030 15:53:22.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.898" endtime="20201030 15:53:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.896" endtime="20201030 15:53:22.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.895" endtime="20201030 15:53:22.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.534" endtime="20201030 15:53:22.918"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.534" endtime="20201030 15:53:22.918"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.927" endtime="20201030 15:53:22.951"></status>
</kw>
<msg timestamp="20201030 15:53:22.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.925" endtime="20201030 15:53:22.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.952" endtime="20201030 15:53:22.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.955" endtime="20201030 15:53:22.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.923" endtime="20201030 15:53:22.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.921" endtime="20201030 15:53:22.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.964" endtime="20201030 15:53:23.249"></status>
</kw>
<msg timestamp="20201030 15:53:23.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025286708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.962" endtime="20201030 15:53:23.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025286708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025412222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.253" endtime="20201030 15:53:23.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.261" endtime="20201030 15:53:23.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.960" endtime="20201030 15:53:23.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.958" endtime="20201030 15:53:23.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.268" level="INFO">${RESULT} = [{'diff': 0.00012551400000000018}, {'diff': 0.00012529199999999907}, {'diff': 0.00012533300000000178}, {'diff': 0.0001250000000000001}, {'diff': 0.00012579199999999957}, {'diff': 0.0001255409999999998...</msg>
<status status="PASS" starttime="20201030 15:53:23.264" endtime="20201030 15:53:23.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.271" level="INFO">${ACCURACY} = {'diff': [0.00012551400000000018, 0.00012529199999999907, 0.00012533300000000178, 0.0001250000000000001, 0.00012579199999999957, 0.00012554099999999985, 0.00012501399999999968, 0.00012516599999999947,...</msg>
<status status="PASS" starttime="20201030 15:53:23.268" endtime="20201030 15:53:23.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.276" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.275" endtime="20201030 15:53:23.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.278" level="INFO">VALUE: [0.00012551400000000018, 0.00012529199999999907, 0.00012533300000000178, 0.0001250000000000001, 0.00012579199999999957, 0.00012554099999999985, 0.00012501399999999968, 0.00012516599999999947, 0.0001256390000000003, 0.0001256390000000003, 0.00012516699999999895, 0.00012519500000000156, 0.00012568099999999902, 0.00012568099999999902, 0.00012519400000000208, 0.0001253329999999983, 0.00012562500000000074, 0.00012530499999999917, 0.00012551400000000018, 0.00012568099999999902, 0.00012518099999999852, 0.00012558300000000203, 0.00012533399999999778, 0.00012517999999999904, 0.00012501399999999968, 0.00012586099999999795, 0.00012581899999999924, 0.00012536100000000092, 0.00012584700000000185, 0.00012518099999999852, 0.00012552700000000028, 0.0001252909999999996, 0.00012551400000000018, 0.00012501399999999968, 0.00012566700000000292, 0.00012501399999999968, 0.00012501399999999968, 0.00012584799999999785, 0.00012516699999999895, 0.00012544400000000233, 0.00012502799999999925, 0.0001258329999999988, 0.00012512499999999677, 0.00012518100000000199, 0.00012518100000000199, 0.00012584799999999785, 0.00012519400000000208, 0.000125165999999996, 0.00012584699999999838, 0.00012551400000000018]</msg>
<status status="PASS" starttime="20201030 15:53:23.277" endtime="20201030 15:53:23.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.272" endtime="20201030 15:53:23.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.284" endtime="20201030 15:53:23.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.283" endtime="20201030 15:53:23.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.281" endtime="20201030 15:53:23.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.919" endtime="20201030 15:53:23.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.919" endtime="20201030 15:53:23.305"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.313" endtime="20201030 15:53:23.335"></status>
</kw>
<msg timestamp="20201030 15:53:23.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.312" endtime="20201030 15:53:23.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.337" endtime="20201030 15:53:23.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.339" endtime="20201030 15:53:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.309" endtime="20201030 15:53:23.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.307" endtime="20201030 15:53:23.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.348" endtime="20201030 15:53:23.634"></status>
</kw>
<msg timestamp="20201030 15:53:23.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.347" endtime="20201030 15:53:23.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022620167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022746264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.638" endtime="20201030 15:53:23.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.646" endtime="20201030 15:53:23.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.344" endtime="20201030 15:53:23.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.342" endtime="20201030 15:53:23.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.652" level="INFO">${RESULT} = [{'diff': 0.00012609699999999863}, {'diff': 0.00012634700000000235}, {'diff': 0.0001262499999999979}, {'diff': 0.00012636099999999845}, {'diff': 0.00012599999999999764}, {'diff': 0.0001260280000000002...</msg>
<status status="PASS" starttime="20201030 15:53:23.649" endtime="20201030 15:53:23.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.657" level="INFO">${ACCURACY} = {'diff': [0.00012609699999999863, 0.00012634700000000235, 0.0001262499999999979, 0.00012636099999999845, 0.00012599999999999764, 0.00012602800000000025, 0.0001260269999999973, 0.00012666600000000097, ...</msg>
<status status="PASS" starttime="20201030 15:53:23.653" endtime="20201030 15:53:23.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.662" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.661" endtime="20201030 15:53:23.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.665" level="INFO">VALUE: [0.00012609699999999863, 0.00012634700000000235, 0.0001262499999999979, 0.00012636099999999845, 0.00012599999999999764, 0.00012602800000000025, 0.0001260269999999973, 0.00012666600000000097, 0.00012612499999999777, 0.00012652800000000075, 0.00012652799999999728, 0.00012658299999999956, 0.00012669499999999959, 0.00012634800000000182, 0.00012602700000000078, 0.00012613899999999734, 0.00012618000000000004, 0.00012649999999999814, 0.00012684699999999938, 0.00012684700000000285, 0.00012668100000000002, 0.0001265000000000016, 0.00012663799999999836, 0.00012636099999999845, 0.00012683300000000328, 0.00012599999999999764, 0.00012637500000000149, 0.00012637500000000149, 0.00012676400000000143, 0.00012618099999999952, 0.00012684699999999938, 0.00012668000000000054, 0.00012601400000000068, 0.0001261939999999996, 0.00012687500000000199, 0.00012677799999999753, 0.00012666700000000045, 0.00012634800000000182, 0.0001260130000000012, 0.00012684700000000285, 0.00012622200000000222, 0.0001266940000000001, 0.00012634700000000235, 0.00012634700000000235, 0.00012651400000000118, 0.00012602799999999678, 0.00012684699999999938, 0.00012602800000000025, 0.00012636100000000192, 0.00012615300000000038]</msg>
<status status="PASS" starttime="20201030 15:53:23.663" endtime="20201030 15:53:23.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.658" endtime="20201030 15:53:23.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.670" endtime="20201030 15:53:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.668" endtime="20201030 15:53:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.667" endtime="20201030 15:53:23.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.306" endtime="20201030 15:53:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.305" endtime="20201030 15:53:23.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:44.999" endtime="20201030 15:53:23.691"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:44.931" endtime="20201030 15:53:23.692" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:52:04.769" endtime="20201030 15:53:23.695"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.748" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:23.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:24.887" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:23.747" endtime="20201030 15:53:24.888"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.891" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 15:53:24.889" endtime="20201030 15:53:24.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.745" endtime="20201030 15:53:24.893"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.895" endtime="20201030 15:53:25.078"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.893" endtime="20201030 15:53:25.079"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.092" endtime="20201030 15:53:25.107"></status>
</kw>
<msg timestamp="20201030 15:53:25.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.090" endtime="20201030 15:53:25.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.110" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [')\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.109" endtime="20201030 15:53:25.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.113" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:25.111" endtime="20201030 15:53:25.114"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:25.088" endtime="20201030 15:53:25.114"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:25.085" endtime="20201030 15:53:25.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.084" endtime="20201030 15:53:25.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:25.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:25.118" endtime="20201030 15:53:25.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.116" endtime="20201030 15:53:25.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.083" endtime="20201030 15:53:25.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.083" endtime="20201030 15:53:25.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.121" endtime="20201030 15:53:25.122"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.081" endtime="20201030 15:53:25.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.124" endtime="20201030 15:53:25.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.080" endtime="20201030 15:53:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.744" endtime="20201030 15:53:25.126"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.132" endtime="20201030 15:53:25.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.130" endtime="20201030 15:53:25.152"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.165" endtime="20201030 15:53:25.179"></status>
</kw>
<msg timestamp="20201030 15:53:25.180" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.164" endtime="20201030 15:53:25.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.182" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.181" endtime="20201030 15:53:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.186" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:25.183" endtime="20201030 15:53:25.187"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:25.161" endtime="20201030 15:53:25.187"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:25.158" endtime="20201030 15:53:25.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.157" endtime="20201030 15:53:25.188"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:25.192" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:25.191" endtime="20201030 15:53:25.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.189" endtime="20201030 15:53:25.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.156" endtime="20201030 15:53:25.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.156" endtime="20201030 15:53:25.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.194" endtime="20201030 15:53:25.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.154" endtime="20201030 15:53:25.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.153" endtime="20201030 15:53:25.196"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.129" endtime="20201030 15:53:25.196"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.205" endtime="20201030 15:53:31.328"></status>
</kw>
<msg timestamp="20201030 15:53:31.329" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.203" endtime="20201030 15:53:31.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.331" endtime="20201030 15:53:31.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.336" endtime="20201030 15:53:31.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.201" endtime="20201030 15:53:31.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.198" endtime="20201030 15:53:31.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.347" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:31.343" endtime="20201030 15:53:31.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.356" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:31.354" endtime="20201030 15:53:31.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.361" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:31.358" endtime="20201030 15:53:31.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.348" endtime="20201030 15:53:31.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.371" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:31.369" endtime="20201030 15:53:31.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.375" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:31.373" endtime="20201030 15:53:31.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.364" endtime="20201030 15:53:31.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.385" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:31.383" endtime="20201030 15:53:31.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.389" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:53:31.387" endtime="20201030 15:53:31.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.378" endtime="20201030 15:53:31.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.405" endtime="20201030 15:53:31.709"></status>
</kw>
<msg timestamp="20201030 15:53:31.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163405056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.401" endtime="20201030 15:53:31.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063367611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163405056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.714" endtime="20201030 15:53:31.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.722" endtime="20201030 15:53:31.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.396" endtime="20201030 15:53:31.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.392" endtime="20201030 15:53:31.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:31.728" level="INFO">${FILTERED} = [{'diff': 0.10003744499999999}, {'diff': 0.10001101400000001}, {'diff': 0.100011028}, {'diff': 0.100011042}, {'diff': 0.10001105499999996}, {'diff': 0.1000110139999999}, {'diff': 0.100011042}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:53:31.725" endtime="20201030 15:53:31.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.732" level="INFO">${RESULT} = {'diff': [0.10003744499999999, 0.10001101400000001, 0.100011028, 0.100011042, 0.10001105499999996, 0.1000110139999999, 0.100011042, 0.10001101400000001, 0.10001102799999995, 0.10001104099999991, 0.100...</msg>
<status status="PASS" starttime="20201030 15:53:31.729" endtime="20201030 15:53:31.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.736" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:31.735" endtime="20201030 15:53:31.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.739" level="INFO">VALUE: [0.10003744499999999, 0.10001101400000001, 0.100011028, 0.100011042, 0.10001105499999996, 0.1000110139999999, 0.100011042, 0.10001101400000001, 0.10001102799999995, 0.10001104099999991, 0.10001111099999993, 0.100011042, 0.100011042, 0.10001102799999995, 0.10001104100000013, 0.10001104100000013, 0.10001102799999995, 0.10001101400000012, 0.10001102800000017, 0.10001104199999977, 0.10001099999999985, 0.10001101400000012, 0.1000110000000003, 0.10001098600000002, 0.10001101399999968, 0.1000109440000001, 0.10001105600000004, 0.10001098600000002, 0.1000109440000001, 0.10001097300000028, 0.10001099999999985, 0.10001104100000013, 0.10001094500000018, 0.10001098600000002, 0.10001097299999984, 0.1000110000000003, 0.10001095799999993, 0.1000110000000003, 0.10001098600000002, 0.1000109720000002, 0.10001097299999984, 0.10001097199999975, 0.10001098600000002, 0.10001104200000022, 0.10001095799999948, 0.10001097199999975, 0.10001098600000002, 0.10001095800000037, 0.10001101400000056, 0.1000109440000001, 0.10001098600000002]</msg>
<status status="PASS" starttime="20201030 15:53:31.737" endtime="20201030 15:53:31.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.733" endtime="20201030 15:53:31.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.744" endtime="20201030 15:53:31.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.742" endtime="20201030 15:53:31.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.741" endtime="20201030 15:53:31.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.197" endtime="20201030 15:53:31.764"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:25.127" endtime="20201030 15:53:31.765" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.771" endtime="20201030 15:53:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.770" endtime="20201030 15:53:31.791"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.805" endtime="20201030 15:53:31.819"></status>
</kw>
<msg timestamp="20201030 15:53:31.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.803" endtime="20201030 15:53:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.821" endtime="20201030 15:53:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.825" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:31.823" endtime="20201030 15:53:31.826"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:31.801" endtime="20201030 15:53:31.826"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:31.798" endtime="20201030 15:53:31.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.797" endtime="20201030 15:53:31.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:31.831" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:31.830" endtime="20201030 15:53:31.831"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.828" endtime="20201030 15:53:31.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.796" endtime="20201030 15:53:31.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.796" endtime="20201030 15:53:31.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.833" endtime="20201030 15:53:31.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.794" endtime="20201030 15:53:31.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.792" endtime="20201030 15:53:31.835"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.768" endtime="20201030 15:53:31.835"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.844" endtime="20201030 15:53:37.964"></status>
</kw>
<msg timestamp="20201030 15:53:37.964" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.842" endtime="20201030 15:53:37.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.967" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.965" endtime="20201030 15:53:37.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.968" endtime="20201030 15:53:37.970"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.839" endtime="20201030 15:53:37.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.837" endtime="20201030 15:53:37.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:37.974" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:37.972" endtime="20201030 15:53:37.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.978" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:37.977" endtime="20201030 15:53:37.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.981" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:37.979" endtime="20201030 15:53:37.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.974" endtime="20201030 15:53:37.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.986" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:37.985" endtime="20201030 15:53:37.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.988" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:37.987" endtime="20201030 15:53:37.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.983" endtime="20201030 15:53:37.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.993" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:37.991" endtime="20201030 15:53:37.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.995" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:53:37.994" endtime="20201030 15:53:37.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.989" endtime="20201030 15:53:37.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.002" endtime="20201030 15:53:38.298"></status>
</kw>
<msg timestamp="20201030 15:53:38.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063084958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163215958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.000" endtime="20201030 15:53:38.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063084958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163215958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.302" endtime="20201030 15:53:38.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.310" endtime="20201030 15:53:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.998" endtime="20201030 15:53:38.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.996" endtime="20201030 15:53:38.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:38.317" level="INFO">${FILTERED} = [{'diff': 0.100131}, {'diff': 0.09992336100000002}, {'diff': 0.100011986}, {'diff': 0.100011028}, {'diff': 0.10001101400000001}, {'diff': 0.10001100000000007}, {'diff': 0.10001101400000001}, {'diff': ...</msg>
<status status="PASS" starttime="20201030 15:53:38.314" endtime="20201030 15:53:38.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.321" level="INFO">${RESULT} = {'diff': [0.100131, 0.09992336100000002, 0.100011986, 0.100011028, 0.10001101400000001, 0.10001100000000007, 0.10001101400000001, 0.10001099999999996, 0.10001099999999996, 0.10001099999999996, 0.10001...</msg>
<status status="PASS" starttime="20201030 15:53:38.318" endtime="20201030 15:53:38.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.326" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:38.325" endtime="20201030 15:53:38.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.328" level="INFO">VALUE: [0.100131, 0.09992336100000002, 0.100011986, 0.100011028, 0.10001101400000001, 0.10001100000000007, 0.10001101400000001, 0.10001099999999996, 0.10001099999999996, 0.10001099999999996, 0.10001101400000012, 0.10001100000000007, 0.1000110139999999, 0.10001101300000004, 0.10001108300000006, 0.10001101400000012, 0.10001101400000012, 0.1000110139999999, 0.10001107000000009, 0.1000109859999998, 0.10001101400000012, 0.1000109870000001, 0.10001091700000009, 0.1000109720000002, 0.10001093000000028, 0.1000109440000001, 0.10001093099999991, 0.10001095900000001, 0.10001097199999975, 0.10001095799999993, 0.1000109440000001, 0.10001099999999985, 0.10001094500000018, 0.10001095799999993, 0.1000109440000001, 0.1000109440000001, 0.10001095900000001, 0.10001094499999974, 0.10001095800000037, 0.10001094399999966, 0.10001095800000037, 0.10001095899999957, 0.10001097299999984, 0.10001095800000037, 0.10001095799999948, 0.10001097200000064, 0.10001097199999975, 0.10001095900000045, 0.10001095799999948, 0.10001097200000064, 0.10001095800000037]</msg>
<status status="PASS" starttime="20201030 15:53:38.327" endtime="20201030 15:53:38.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.322" endtime="20201030 15:53:38.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.333" endtime="20201030 15:53:38.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.332" endtime="20201030 15:53:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.330" endtime="20201030 15:53:38.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.836" endtime="20201030 15:53:38.354"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:31.766" endtime="20201030 15:53:38.354" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.360" endtime="20201030 15:53:38.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.359" endtime="20201030 15:53:38.380"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.394" endtime="20201030 15:53:38.407"></status>
</kw>
<msg timestamp="20201030 15:53:38.408" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.392" endtime="20201030 15:53:38.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.410" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.409" endtime="20201030 15:53:38.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.413" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:38.411" endtime="20201030 15:53:38.414"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:38.389" endtime="20201030 15:53:38.414"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:38.387" endtime="20201030 15:53:38.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.386" endtime="20201030 15:53:38.415"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:38.419" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:38.418" endtime="20201030 15:53:38.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.416" endtime="20201030 15:53:38.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.385" endtime="20201030 15:53:38.420"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.384" endtime="20201030 15:53:38.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.421" endtime="20201030 15:53:38.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.383" endtime="20201030 15:53:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.381" endtime="20201030 15:53:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.358" endtime="20201030 15:53:38.423"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.433" endtime="20201030 15:53:44.556"></status>
</kw>
<msg timestamp="20201030 15:53:44.557" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.431" endtime="20201030 15:53:44.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.559" endtime="20201030 15:53:44.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.565" endtime="20201030 15:53:44.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.429" endtime="20201030 15:53:44.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.425" endtime="20201030 15:53:44.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.575" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:44.572" endtime="20201030 15:53:44.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.584" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:44.582" endtime="20201030 15:53:44.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.588" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:44.586" endtime="20201030 15:53:44.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.577" endtime="20201030 15:53:44.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.598" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:44.596" endtime="20201030 15:53:44.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.603" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:44.601" endtime="20201030 15:53:44.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.591" endtime="20201030 15:53:44.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.613" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:44.610" endtime="20201030 15:53:44.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.617" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:53:44.615" endtime="20201030 15:53:44.618"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.606" endtime="20201030 15:53:44.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.633" endtime="20201030 15:53:44.931"></status>
</kw>
<msg timestamp="20201030 15:53:44.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063161042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1633795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:44.629" endtime="20201030 15:53:44.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063161042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.1633795, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:44.935" endtime="20201030 15:53:44.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.943" endtime="20201030 15:53:44.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.624" endtime="20201030 15:53:44.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.620" endtime="20201030 15:53:44.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:44.953" level="INFO">${FILTERED} = [{'diff': 0.10021845800000001}, {'diff': 0.10006706900000001}, {'diff': 0.09978526300000001}, {'diff': 0.100011972}, {'diff': 0.10001098600000002}, {'diff': 0.10001098599999991}, {'diff': 0.1000109580...</msg>
<status status="PASS" starttime="20201030 15:53:44.947" endtime="20201030 15:53:44.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.957" level="INFO">${RESULT} = {'diff': [0.10021845800000001, 0.10006706900000001, 0.09978526300000001, 0.100011972, 0.10001098600000002, 0.10001098599999991, 0.10001095800000004, 0.10001098600000002, 0.10001098600000002, 0.1000109...</msg>
<status status="PASS" starttime="20201030 15:53:44.954" endtime="20201030 15:53:44.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.961" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:44.960" endtime="20201030 15:53:44.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.963" level="INFO">VALUE: [0.10021845800000001, 0.10006706900000001, 0.09978526300000001, 0.100011972, 0.10001098600000002, 0.10001098599999991, 0.10001095800000004, 0.10001098600000002, 0.10001098600000002, 0.10001098599999991, 0.10001101400000012, 0.10001097300000006, 0.10001098600000002, 0.10001097199999998, 0.10001098600000002, 0.10001098600000002, 0.10001098600000002, 0.10001097199999998, 0.10001097299999984, 0.10001095799999993, 0.10001093000000028, 0.10001090199999974, 0.10001091700000009, 0.10001091700000009, 0.1000109720000002, 0.1000109440000001, 0.10001095800000037, 0.10001095799999993, 0.100010916, 0.10001092999999983, 0.100010916, 0.10001098600000002, 0.10001093000000028, 0.1000109440000001, 0.10001093000000028, 0.100010916, 0.10001092999999983, 0.10001091700000009, 0.10001092999999983, 0.10001095800000037, 0.1000109440000001, 0.10001092999999983, 0.10001092999999983, 0.10001091699999964, 0.10001095800000037, 0.10001091699999964, 0.10001091699999964, 0.10001093099999991, 0.10001093099999991, 0.10001093099999991, 0.10001094500000018]</msg>
<status status="PASS" starttime="20201030 15:53:44.962" endtime="20201030 15:53:44.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.958" endtime="20201030 15:53:44.965"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.968" endtime="20201030 15:53:44.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.967" endtime="20201030 15:53:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.966" endtime="20201030 15:53:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.424" endtime="20201030 15:53:44.989"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:38.356" endtime="20201030 15:53:44.989" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.996" endtime="20201030 15:53:45.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.994" endtime="20201030 15:53:45.016"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.030" endtime="20201030 15:53:45.044"></status>
</kw>
<msg timestamp="20201030 15:53:45.044" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.028" endtime="20201030 15:53:45.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.047" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.045" endtime="20201030 15:53:45.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.049" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:45.048" endtime="20201030 15:53:45.050"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:45.025" endtime="20201030 15:53:45.050"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:45.022" endtime="20201030 15:53:45.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.021" endtime="20201030 15:53:45.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:45.055" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:45.054" endtime="20201030 15:53:45.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.052" endtime="20201030 15:53:45.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.020" endtime="20201030 15:53:45.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.020" endtime="20201030 15:53:45.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.057" endtime="20201030 15:53:45.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.018" endtime="20201030 15:53:45.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.017" endtime="20201030 15:53:45.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.993" endtime="20201030 15:53:45.059"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.068" endtime="20201030 15:53:51.190"></status>
</kw>
<msg timestamp="20201030 15:53:51.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.066" endtime="20201030 15:53:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.197" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.193" endtime="20201030 15:53:51.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.200" endtime="20201030 15:53:51.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.063" endtime="20201030 15:53:51.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.061" endtime="20201030 15:53:51.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:51.210" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:51.207" endtime="20201030 15:53:51.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.219" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:51.217" endtime="20201030 15:53:51.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.223" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:51.221" endtime="20201030 15:53:51.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.212" endtime="20201030 15:53:51.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.233" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:51.231" endtime="20201030 15:53:51.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.237" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:51.235" endtime="20201030 15:53:51.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.226" endtime="20201030 15:53:51.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.246" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:51.245" endtime="20201030 15:53:51.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.248" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:53:51.247" endtime="20201030 15:53:51.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.240" endtime="20201030 15:53:51.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.257" endtime="20201030 15:53:51.554"></status>
</kw>
<msg timestamp="20201030 15:53:51.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062390792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.255" endtime="20201030 15:53:51.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062390792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.558" endtime="20201030 15:53:51.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.566" endtime="20201030 15:53:51.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.253" endtime="20201030 15:53:51.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.249" endtime="20201030 15:53:51.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:51.573" level="INFO">${FILTERED} = [{'diff': 0.100387125}, {'diff': 0.10007612500000002}, {'diff': 0.09961420799999998}, {'diff': 0.10001094400000005}, {'diff': 0.10001099999999996}, {'diff': 0.10001097300000006}, {'diff': 0.1000109579...</msg>
<status status="PASS" starttime="20201030 15:53:51.570" endtime="20201030 15:53:51.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:51.577" level="INFO">${RESULT} = {'diff': [0.100387125, 0.10007612500000002, 0.09961420799999998, 0.10001094400000005, 0.10001099999999996, 0.10001097300000006, 0.10001095799999993, 0.10001094399999999, 0.10001095800000004, 0.1000109...</msg>
<status status="PASS" starttime="20201030 15:53:51.574" endtime="20201030 15:53:51.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.581" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:51.580" endtime="20201030 15:53:51.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.583" level="INFO">VALUE: [0.100387125, 0.10007612500000002, 0.09961420799999998, 0.10001094400000005, 0.10001099999999996, 0.10001097300000006, 0.10001095799999993, 0.10001094399999999, 0.10001095800000004, 0.10001094499999996, 0.10001095900000001, 0.10001094399999988, 0.10001094399999988, 0.10001097199999998, 0.10001095900000001, 0.10001097199999998, 0.10001097199999998, 0.10001094499999996, 0.10001097199999998, 0.10001097199999998, 0.10001097199999975, 0.1000109720000002, 0.10001094500000018, 0.10001091700000009, 0.10001088899999999, 0.10001088899999999, 0.10001092999999983, 0.10001087500000017, 0.10001090300000026, 0.10001090300000026, 0.100010916, 0.10001092999999983, 0.10001095799999993, 0.10001090299999982, 0.10001091700000009, 0.10001093000000028, 0.10001088899999999, 0.10001090299999982, 0.10001090300000026, 0.10001091599999956, 0.10001090200000018, 0.10001088899999999, 0.10001088899999999, 0.1000109310000008, 0.10001088899999999, 0.10001088799999991, 0.10001090300000026, 0.10001090300000026, 0.10001090300000026, 0.10001090300000026, 0.10001090199999929]</msg>
<status status="PASS" starttime="20201030 15:53:51.582" endtime="20201030 15:53:51.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.578" endtime="20201030 15:53:51.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:51.589" endtime="20201030 15:53:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.587" endtime="20201030 15:53:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.586" endtime="20201030 15:53:51.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.060" endtime="20201030 15:53:51.610"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:44.991" endtime="20201030 15:53:51.610" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:51.617" endtime="20201030 15:53:51.636"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.615" endtime="20201030 15:53:51.637"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.650" endtime="20201030 15:53:51.664"></status>
</kw>
<msg timestamp="20201030 15:53:51.664" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.648" endtime="20201030 15:53:51.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.667" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.665" endtime="20201030 15:53:51.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.670" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:51.668" endtime="20201030 15:53:51.670"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:51.646" endtime="20201030 15:53:51.671"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:51.643" endtime="20201030 15:53:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.642" endtime="20201030 15:53:51.672"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:51.675" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:51.675" endtime="20201030 15:53:51.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.673" endtime="20201030 15:53:51.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.641" endtime="20201030 15:53:51.676"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.640" endtime="20201030 15:53:51.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.677" endtime="20201030 15:53:51.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.639" endtime="20201030 15:53:51.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.637" endtime="20201030 15:53:51.679"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.614" endtime="20201030 15:53:51.680"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.689" endtime="20201030 15:53:57.812"></status>
</kw>
<msg timestamp="20201030 15:53:57.813" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.686" endtime="20201030 15:53:57.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.815" endtime="20201030 15:53:57.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.821" endtime="20201030 15:53:57.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.684" endtime="20201030 15:53:57.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.682" endtime="20201030 15:53:57.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.831" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:53:57.828" endtime="20201030 15:53:57.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.840" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:57.838" endtime="20201030 15:53:57.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.844" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:53:57.842" endtime="20201030 15:53:57.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.833" endtime="20201030 15:53:57.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.854" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:53:57.852" endtime="20201030 15:53:57.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.858" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:53:57.856" endtime="20201030 15:53:57.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.847" endtime="20201030 15:53:57.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.868" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:53:57.866" endtime="20201030 15:53:57.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.873" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:53:57.871" endtime="20201030 15:53:57.873"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.861" endtime="20201030 15:53:57.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.888" endtime="20201030 15:53:58.189"></status>
</kw>
<msg timestamp="20201030 15:53:58.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063066028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163652528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.885" endtime="20201030 15:53:58.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063066028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163652528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.194" endtime="20201030 15:53:58.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.201" endtime="20201030 15:53:58.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.879" endtime="20201030 15:53:58.204"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.876" endtime="20201030 15:53:58.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:53:58.208" level="INFO">${FILTERED} = [{'diff': 0.1005865}, {'diff': 0.10008820900000001}, {'diff': 0.09940898599999998}, {'diff': 0.10001094500000002}, {'diff': 0.10001094400000005}, {'diff': 0.10001094499999996}, {'diff': 0.100010959000...</msg>
<status status="PASS" starttime="20201030 15:53:58.205" endtime="20201030 15:53:58.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.213" level="INFO">${RESULT} = {'diff': [0.1005865, 0.10008820900000001, 0.09940898599999998, 0.10001094500000002, 0.10001094400000005, 0.10001094499999996, 0.10001095900000001, 0.10001090299999993, 0.10001094500000007, 0.100010945...</msg>
<status status="PASS" starttime="20201030 15:53:58.209" endtime="20201030 15:53:58.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.217" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:53:58.216" endtime="20201030 15:53:58.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.219" level="INFO">VALUE: [0.1005865, 0.10008820900000001, 0.09940898599999998, 0.10001094500000002, 0.10001094400000005, 0.10001094499999996, 0.10001095900000001, 0.10001090299999993, 0.10001094500000007, 0.10001094500000007, 0.10001093100000014, 0.10001094499999996, 0.10001093099999991, 0.10001093000000005, 0.1000109440000001, 0.10001094399999988, 0.1000109440000001, 0.100010916, 0.1000108609999999, 0.10001087500000017, 0.1000108609999999, 0.10001088899999999, 0.10001088799999991, 0.10001087500000017, 0.10001091700000009, 0.10001088899999999, 0.10001087500000017, 0.100010916, 0.1000108609999999, 0.10001091700000009, 0.10001090199999974, 0.10001088899999999, 0.1000108609999999, 0.10001087499999972, 0.10001090300000026, 0.10001101399999968, 0.10001099999999985, 0.1000110000000003, 0.10001099999999985, 0.10001101399999968, 0.10001101399999968, 0.10001101300000048, 0.10001101399999968, 0.1000109870000001, 0.10001101399999968, 0.10001106999999987, 0.10001097199999975, 0.10001098600000002, 0.10001098600000002, 0.1000109999999994, 0.10001098600000002]</msg>
<status status="PASS" starttime="20201030 15:53:58.218" endtime="20201030 15:53:58.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.214" endtime="20201030 15:53:58.221"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.224" endtime="20201030 15:53:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.223" endtime="20201030 15:53:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.222" endtime="20201030 15:53:58.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.680" endtime="20201030 15:53:58.245"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:51.612" endtime="20201030 15:53:58.245" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.252" endtime="20201030 15:53:58.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.250" endtime="20201030 15:53:58.272"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.285" endtime="20201030 15:53:58.299"></status>
</kw>
<msg timestamp="20201030 15:53:58.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.283" endtime="20201030 15:53:58.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.302" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.300" endtime="20201030 15:53:58.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.305" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:58.303" endtime="20201030 15:53:58.305"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:58.281" endtime="20201030 15:53:58.306"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:58.278" endtime="20201030 15:53:58.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.277" endtime="20201030 15:53:58.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:58.311" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:58.310" endtime="20201030 15:53:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.308" endtime="20201030 15:53:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.276" endtime="20201030 15:53:58.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.276" endtime="20201030 15:53:58.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.312" endtime="20201030 15:53:58.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.274" endtime="20201030 15:53:58.314"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.273" endtime="20201030 15:53:58.315"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.249" endtime="20201030 15:53:58.315"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.323" endtime="20201030 15:54:04.446"></status>
</kw>
<msg timestamp="20201030 15:54:04.447" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.322" endtime="20201030 15:54:04.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.449" endtime="20201030 15:54:04.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.456" endtime="20201030 15:54:04.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.319" endtime="20201030 15:54:04.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.317" endtime="20201030 15:54:04.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.466" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 15:54:04.463" endtime="20201030 15:54:04.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.475" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:04.473" endtime="20201030 15:54:04.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.479" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:04.477" endtime="20201030 15:54:04.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.468" endtime="20201030 15:54:04.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.489" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:04.487" endtime="20201030 15:54:04.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.493" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:04.491" endtime="20201030 15:54:04.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.482" endtime="20201030 15:54:04.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.503" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:04.501" endtime="20201030 15:54:04.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.508" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:54:04.506" endtime="20201030 15:54:04.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.496" endtime="20201030 15:54:04.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.523" endtime="20201030 15:54:04.824"></status>
</kw>
<msg timestamp="20201030 15:54:04.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062200403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163049958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.520" endtime="20201030 15:54:04.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062200403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163049958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.828" endtime="20201030 15:54:04.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.836" endtime="20201030 15:54:04.838"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.514" endtime="20201030 15:54:04.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.511" endtime="20201030 15:54:04.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:04.843" level="INFO">${FILTERED} = [{'diff': 0.100849555}, {'diff': 0.10009115299999999}, {'diff': 0.100092181}, {'diff': 0.09906730600000002}, {'diff': 0.10001102799999995}, {'diff': 0.10001105600000004}, {'diff': 0.10001105599999993}...</msg>
<status status="PASS" starttime="20201030 15:54:04.840" endtime="20201030 15:54:04.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.847" level="INFO">${RESULT} = {'diff': [0.100849555, 0.10009115299999999, 0.100092181, 0.09906730600000002, 0.10001102799999995, 0.10001105600000004, 0.10001105599999993, 0.10001102800000006, 0.10001105499999996, 0.100011000000000...</msg>
<status status="PASS" starttime="20201030 15:54:04.844" endtime="20201030 15:54:04.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.851" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:04.850" endtime="20201030 15:54:04.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.853" level="INFO">VALUE: [0.100849555, 0.10009115299999999, 0.100092181, 0.09906730600000002, 0.10001102799999995, 0.10001105600000004, 0.10001105599999993, 0.10001102800000006, 0.10001105499999996, 0.10001100000000007, 0.10001102799999995, 0.100011042, 0.10001102799999995, 0.10001102699999986, 0.1000110139999999, 0.10001102799999995, 0.1000110139999999, 0.10001102700000009, 0.10001104100000013, 0.10001102800000017, 0.10001101399999968, 0.10001107000000031, 0.10001097299999984, 0.10001099999999985, 0.10001098600000002, 0.10001097199999975, 0.10001097299999984, 0.1000109720000002, 0.1000109720000002, 0.10001104200000022, 0.1000109720000002, 0.10001098600000002, 0.10001097199999975, 0.10001095799999993, 0.10001098600000002, 0.10001095799999993, 0.10001097199999975, 0.10001097300000028, 0.1000109440000001, 0.1000110000000003, 0.10001102799999995, 0.10001098600000002, 0.10001097200000064, 0.10001094500000018, 0.10001097199999975, 0.10001098600000002, 0.10001101399999968, 0.1000109440000001, 0.10001101400000056, 0.1000109870000001, 0.10001098600000002]</msg>
<status status="PASS" starttime="20201030 15:54:04.852" endtime="20201030 15:54:04.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.848" endtime="20201030 15:54:04.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.858" endtime="20201030 15:54:04.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.857" endtime="20201030 15:54:04.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.856" endtime="20201030 15:54:04.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.316" endtime="20201030 15:54:04.879"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:58.247" endtime="20201030 15:54:04.880" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:23.704" endtime="20201030 15:54:04.886"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:51:19.827" endtime="20201030 15:54:04.919"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
