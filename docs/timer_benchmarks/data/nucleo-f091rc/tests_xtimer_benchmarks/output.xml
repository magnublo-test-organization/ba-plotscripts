<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 18:14:57.358" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:57.946" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:57.955" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:14:59.326" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:57.945" endtime="20201029 18:14:59.326"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.329" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:14:59.327" endtime="20201029 18:14:59.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.943" endtime="20201029 18:14:59.330"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.332" endtime="20201029 18:14:59.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.330" endtime="20201029 18:14:59.517"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.530" endtime="20201029 18:14:59.544"></status>
</kw>
<msg timestamp="20201029 18:14:59.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:14:59.528" endtime="20201029 18:14:59.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.548" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['n(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succ...</msg>
<status status="PASS" starttime="20201029 18:14:59.546" endtime="20201029 18:14:59.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.551" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:59.549" endtime="20201029 18:14:59.551"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.526" endtime="20201029 18:14:59.552"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.524" endtime="20201029 18:14:59.553"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.522" endtime="20201029 18:14:59.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:59.557" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:59.556" endtime="20201029 18:14:59.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.554" endtime="20201029 18:14:59.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.522" endtime="20201029 18:14:59.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.521" endtime="20201029 18:14:59.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.559" endtime="20201029 18:14:59.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.519" endtime="20201029 18:14:59.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.562" endtime="20201029 18:14:59.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.518" endtime="20201029 18:14:59.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:57.941" endtime="20201029 18:14:59.564"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:14:59.570" endtime="20201029 18:14:59.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.569" endtime="20201029 18:14:59.592"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.620" endtime="20201029 18:14:59.638"></status>
</kw>
<msg timestamp="20201029 18:14:59.639" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.617" endtime="20201029 18:14:59.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.645" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.642" endtime="20201029 18:14:59.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.652" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:14:59.648" endtime="20201029 18:14:59.652"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.611" endtime="20201029 18:14:59.654"></status>
</kw>
<status status="FAIL" starttime="20201029 18:14:59.606" endtime="20201029 18:14:59.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.603" endtime="20201029 18:14:59.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:14:59.664" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:14:59.662" endtime="20201029 18:14:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.657" endtime="20201029 18:14:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.601" endtime="20201029 18:14:59.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.600" endtime="20201029 18:14:59.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.668" endtime="20201029 18:14:59.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.597" endtime="20201029 18:14:59.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.594" endtime="20201029 18:14:59.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.568" endtime="20201029 18:14:59.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.691" endtime="20201029 18:14:59.702"></status>
</kw>
<msg timestamp="20201029 18:14:59.703" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.688" endtime="20201029 18:14:59.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.706" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:14:59.704" endtime="20201029 18:14:59.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:14:59.707" endtime="20201029 18:14:59.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.681" endtime="20201029 18:14:59.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.677" endtime="20201029 18:14:59.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.715" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 18:14:59.714" endtime="20201029 18:14:59.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.717" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 18:14:59.716" endtime="20201029 18:14:59.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.711" endtime="20201029 18:14:59.717"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:14:59.565" endtime="20201029 18:14:59.718" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:57.483" endtime="20201029 18:14:59.720"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:14:59.772" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:14:59.781" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:01.222" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:14:59.771" endtime="20201029 18:15:01.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.229" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:01.226" endtime="20201029 18:15:01.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.769" endtime="20201029 18:15:01.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.235" endtime="20201029 18:15:01.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.232" endtime="20201029 18:15:01.528"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.541" endtime="20201029 18:15:01.555"></status>
</kw>
<msg timestamp="20201029 18:15:01.556" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:15:01.539" endtime="20201029 18:15:01.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.558" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['(): This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Succe...</msg>
<status status="PASS" starttime="20201029 18:15:01.557" endtime="20201029 18:15:01.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.562" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.559" endtime="20201029 18:15:01.562"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.537" endtime="20201029 18:15:01.563"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.535" endtime="20201029 18:15:01.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.533" endtime="20201029 18:15:01.564"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.567" endtime="20201029 18:15:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.564" endtime="20201029 18:15:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.532" endtime="20201029 18:15:01.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.532" endtime="20201029 18:15:01.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.569" endtime="20201029 18:15:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.531" endtime="20201029 18:15:01.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.572" endtime="20201029 18:15:01.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.529" endtime="20201029 18:15:01.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:14:59.768" endtime="20201029 18:15:01.574"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:01.581" endtime="20201029 18:15:01.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.578" endtime="20201029 18:15:01.601"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.614" endtime="20201029 18:15:01.628"></status>
</kw>
<msg timestamp="20201029 18:15:01.628" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.612" endtime="20201029 18:15:01.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.629" endtime="20201029 18:15:01.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.634" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:01.632" endtime="20201029 18:15:01.634"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.610" endtime="20201029 18:15:01.635"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:01.607" endtime="20201029 18:15:01.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.606" endtime="20201029 18:15:01.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:01.640" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:01.639" endtime="20201029 18:15:01.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.637" endtime="20201029 18:15:01.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.605" endtime="20201029 18:15:01.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.605" endtime="20201029 18:15:01.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.641" endtime="20201029 18:15:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.603" endtime="20201029 18:15:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.601" endtime="20201029 18:15:01.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.577" endtime="20201029 18:15:01.644"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.655" endtime="20201029 18:15:01.667"></status>
</kw>
<msg timestamp="20201029 18:15:01.668" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.653" endtime="20201029 18:15:01.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.671" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:01.669" endtime="20201029 18:15:01.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.673" endtime="20201029 18:15:01.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.649" endtime="20201029 18:15:01.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.647" endtime="20201029 18:15:01.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.686" endtime="20201029 18:15:01.979"></status>
</kw>
<msg timestamp="20201029 18:15:01.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065630764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065631236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.683" endtime="20201029 18:15:01.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:01.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065630764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065631236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:01.983" endtime="20201029 18:15:01.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:01.991" endtime="20201029 18:15:01.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.680" endtime="20201029 18:15:01.993"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.677" endtime="20201029 18:15:01.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:01.998" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.859999999939912e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:15:01.995" endtime="20201029 18:15:01.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:02.003" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720...</msg>
<status status="PASS" starttime="20201029 18:15:01.999" endtime="20201029 18:15:02.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.007" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:02.006" endtime="20201029 18:15:02.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.009" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.859999999939912e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201029 18:15:02.008" endtime="20201029 18:15:02.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.003" endtime="20201029 18:15:02.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.646" endtime="20201029 18:15:02.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.645" endtime="20201029 18:15:02.012"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.020" endtime="20201029 18:15:02.030"></status>
</kw>
<msg timestamp="20201029 18:15:02.031" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.018" endtime="20201029 18:15:02.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.034" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.032" endtime="20201029 18:15:02.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.035" endtime="20201029 18:15:02.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.016" endtime="20201029 18:15:02.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.014" endtime="20201029 18:15:02.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.051" endtime="20201029 18:15:02.355"></status>
</kw>
<msg timestamp="20201029 18:15:02.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066328778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066329264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.048" endtime="20201029 18:15:02.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066328778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066329264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.360" endtime="20201029 18:15:02.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.370" endtime="20201029 18:15:02.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.045" endtime="20201029 18:15:02.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.042" endtime="20201029 18:15:02.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.377" level="INFO">${RESULT} = [{'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000013602e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:15:02.374" endtime="20201029 18:15:02.378"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:02.383" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.8...</msg>
<status status="PASS" starttime="20201029 18:15:02.379" endtime="20201029 18:15:02.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.388" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:02.387" endtime="20201029 18:15:02.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.390" level="INFO">VALUE: [4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201029 18:15:02.389" endtime="20201029 18:15:02.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.384" endtime="20201029 18:15:02.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.013" endtime="20201029 18:15:02.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.012" endtime="20201029 18:15:02.392"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.399" endtime="20201029 18:15:02.410"></status>
</kw>
<msg timestamp="20201029 18:15:02.410" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.398" endtime="20201029 18:15:02.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.413" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.411" endtime="20201029 18:15:02.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.414" endtime="20201029 18:15:02.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.395" endtime="20201029 18:15:02.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.394" endtime="20201029 18:15:02.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.423" endtime="20201029 18:15:02.723"></status>
</kw>
<msg timestamp="20201029 18:15:02.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418698403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.421" endtime="20201029 18:15:02.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.418698403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.418698889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.728" endtime="20201029 18:15:02.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.737" endtime="20201029 18:15:02.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.419" endtime="20201029 18:15:02.740"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.417" endtime="20201029 18:15:02.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:02.744" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:15:02.741" endtime="20201029 18:15:02.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:02.750" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:15:02.746" endtime="20201029 18:15:02.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.754" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:02.753" endtime="20201029 18:15:02.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.756" level="INFO">VALUE: [4.860000000217468e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.860000000217468e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.73000000056345e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201029 18:15:02.755" endtime="20201029 18:15:02.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.750" endtime="20201029 18:15:02.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.392" endtime="20201029 18:15:02.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.392" endtime="20201029 18:15:02.758"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.766" endtime="20201029 18:15:02.777"></status>
</kw>
<msg timestamp="20201029 18:15:02.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.764" endtime="20201029 18:15:02.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:02.780" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:02.779" endtime="20201029 18:15:02.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.781" endtime="20201029 18:15:02.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.761" endtime="20201029 18:15:02.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.760" endtime="20201029 18:15:02.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:02.790" endtime="20201029 18:15:03.113"></status>
</kw>
<msg timestamp="20201029 18:15:03.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.788306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.788306861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:02.789" endtime="20201029 18:15:03.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.788306389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.788306861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.118" endtime="20201029 18:15:03.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.128" endtime="20201029 18:15:03.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.786" endtime="20201029 18:15:03.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.784" endtime="20201029 18:15:03.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.135" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999999107245e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:15:03.131" endtime="20201029 18:15:03.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.140" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201029 18:15:03.136" endtime="20201029 18:15:03.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.145" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:03.144" endtime="20201029 18:15:03.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.147" level="INFO">VALUE: [4.7199999997360464e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.73000000056345e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:03.146" endtime="20201029 18:15:03.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.141" endtime="20201029 18:15:03.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.759" endtime="20201029 18:15:03.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:02.758" endtime="20201029 18:15:03.149"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.156" endtime="20201029 18:15:03.167"></status>
</kw>
<msg timestamp="20201029 18:15:03.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.155" endtime="20201029 18:15:03.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.168" endtime="20201029 18:15:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.171" endtime="20201029 18:15:03.172"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.152" endtime="20201029 18:15:03.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.151" endtime="20201029 18:15:03.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.180" endtime="20201029 18:15:03.487"></status>
</kw>
<msg timestamp="20201029 18:15:03.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.145453917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.145454389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.178" endtime="20201029 18:15:03.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.145453917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.145454389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.492" endtime="20201029 18:15:03.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.502" endtime="20201029 18:15:03.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.176" endtime="20201029 18:15:03.504"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.174" endtime="20201029 18:15:03.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.512" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:15:03.506" endtime="20201029 18:15:03.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:15:03.514" endtime="20201029 18:15:03.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.528" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:03.526" endtime="20201029 18:15:03.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.536" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.859999997997022e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:15:03.533" endtime="20201029 18:15:03.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.522" endtime="20201029 18:15:03.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.149" endtime="20201029 18:15:03.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.149" endtime="20201029 18:15:03.539"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.548" endtime="20201029 18:15:03.559"></status>
</kw>
<msg timestamp="20201029 18:15:03.559" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.546" endtime="20201029 18:15:03.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.560" endtime="20201029 18:15:03.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.563" endtime="20201029 18:15:03.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.543" endtime="20201029 18:15:03.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.541" endtime="20201029 18:15:03.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.572" endtime="20201029 18:15:03.873"></status>
</kw>
<msg timestamp="20201029 18:15:03.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.525308681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.525309153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.571" endtime="20201029 18:15:03.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.525308681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.525309153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.878" endtime="20201029 18:15:03.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.890" endtime="20201029 18:15:03.891"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.568" endtime="20201029 18:15:03.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.566" endtime="20201029 18:15:03.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:03.897" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-0...</msg>
<status status="PASS" starttime="20201029 18:15:03.894" endtime="20201029 18:15:03.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:03.902" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:15:03.898" endtime="20201029 18:15:03.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.906" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:03.905" endtime="20201029 18:15:03.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.909" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.860000000217468e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.729999998343004e-07]</msg>
<status status="PASS" starttime="20201029 18:15:03.908" endtime="20201029 18:15:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.903" endtime="20201029 18:15:03.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.540" endtime="20201029 18:15:03.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.539" endtime="20201029 18:15:03.911"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.920" endtime="20201029 18:15:03.930"></status>
</kw>
<msg timestamp="20201029 18:15:03.931" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.918" endtime="20201029 18:15:03.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:03.933" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:03.932" endtime="20201029 18:15:03.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.934" endtime="20201029 18:15:03.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.915" endtime="20201029 18:15:03.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.913" endtime="20201029 18:15:03.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:03.944" endtime="20201029 18:15:04.248"></status>
</kw>
<msg timestamp="20201029 18:15:04.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.907787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.907787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:03.943" endtime="20201029 18:15:04.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.907787306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.907787778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.253" endtime="20201029 18:15:04.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.263" endtime="20201029 18:15:04.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.940" endtime="20201029 18:15:04.266"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.938" endtime="20201029 18:15:04.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.270" level="INFO">${RESULT} = [{'diff': 4.7200000019564925e-07}, {'diff': 4.7200000019564925e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201029 18:15:04.267" endtime="20201029 18:15:04.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:04.276" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201029 18:15:04.271" endtime="20201029 18:15:04.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.280" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:04.279" endtime="20201029 18:15:04.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.283" level="INFO">VALUE: [4.7200000019564925e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.869999998824426e-07, 4.859999997997022e-07]</msg>
<status status="PASS" starttime="20201029 18:15:04.282" endtime="20201029 18:15:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.277" endtime="20201029 18:15:04.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.912" endtime="20201029 18:15:04.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:03.911" endtime="20201029 18:15:04.285"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.294" endtime="20201029 18:15:04.305"></status>
</kw>
<msg timestamp="20201029 18:15:04.305" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.292" endtime="20201029 18:15:04.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.308" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.307" endtime="20201029 18:15:04.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.309" endtime="20201029 18:15:04.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.290" endtime="20201029 18:15:04.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.287" endtime="20201029 18:15:04.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.319" endtime="20201029 18:15:04.627"></status>
</kw>
<msg timestamp="20201029 18:15:04.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269836694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269837167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.317" endtime="20201029 18:15:04.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269836694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269837167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.632" endtime="20201029 18:15:04.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.642" endtime="20201029 18:15:04.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.314" endtime="20201029 18:15:04.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.312" endtime="20201029 18:15:04.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:04.649" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:15:04.645" endtime="20201029 18:15:04.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:04.655" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859...</msg>
<status status="PASS" starttime="20201029 18:15:04.650" endtime="20201029 18:15:04.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.659" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:04.658" endtime="20201029 18:15:04.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.661" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.869999998824426e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7200000041769385e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201029 18:15:04.660" endtime="20201029 18:15:04.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.656" endtime="20201029 18:15:04.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.286" endtime="20201029 18:15:04.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.285" endtime="20201029 18:15:04.663"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.671" endtime="20201029 18:15:04.682"></status>
</kw>
<msg timestamp="20201029 18:15:04.683" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.670" endtime="20201029 18:15:04.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:04.685" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:04.684" endtime="20201029 18:15:04.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.686" endtime="20201029 18:15:04.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.667" endtime="20201029 18:15:04.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.665" endtime="20201029 18:15:04.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:04.696" endtime="20201029 18:15:05.012"></status>
</kw>
<msg timestamp="20201029 18:15:05.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.633165792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.633166264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:04.695" endtime="20201029 18:15:05.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.633165792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.633166264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.018" endtime="20201029 18:15:05.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.028" endtime="20201029 18:15:05.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.691" endtime="20201029 18:15:05.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.689" endtime="20201029 18:15:05.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.035" level="INFO">${RESULT} = [{'diff': 4.7200000041769385e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.7199999997360464e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:15:05.031" endtime="20201029 18:15:05.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.040" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:15:05.036" endtime="20201029 18:15:05.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.045" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:05.043" endtime="20201029 18:15:05.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.051" level="INFO">VALUE: [4.7200000041769385e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07]</msg>
<status status="PASS" starttime="20201029 18:15:05.048" endtime="20201029 18:15:05.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.040" endtime="20201029 18:15:05.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.664" endtime="20201029 18:15:05.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:04.663" endtime="20201029 18:15:05.056"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.073" endtime="20201029 18:15:05.086"></status>
</kw>
<msg timestamp="20201029 18:15:05.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.069" endtime="20201029 18:15:05.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.092" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.089" endtime="20201029 18:15:05.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.095" endtime="20201029 18:15:05.098"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.064" endtime="20201029 18:15:05.099"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.060" endtime="20201029 18:15:05.100"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.114" endtime="20201029 18:15:05.437"></status>
</kw>
<msg timestamp="20201029 18:15:05.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.000313181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.000313653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.110" endtime="20201029 18:15:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.000313181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.000313653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.442" endtime="20201029 18:15:05.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.452" endtime="20201029 18:15:05.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.105" endtime="20201029 18:15:05.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.101" endtime="20201029 18:15:05.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.459" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-0...</msg>
<status status="PASS" starttime="20201029 18:15:05.456" endtime="20201029 18:15:05.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.465" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201029 18:15:05.460" endtime="20201029 18:15:05.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.469" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:05.468" endtime="20201029 18:15:05.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.472" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:05.470" endtime="20201029 18:15:05.472"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.466" endtime="20201029 18:15:05.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.057" endtime="20201029 18:15:05.473"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.056" endtime="20201029 18:15:05.473"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.481" endtime="20201029 18:15:05.492"></status>
</kw>
<msg timestamp="20201029 18:15:05.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.480" endtime="20201029 18:15:05.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.495" endtime="20201029 18:15:05.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.499" endtime="20201029 18:15:05.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.477" endtime="20201029 18:15:05.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.475" endtime="20201029 18:15:05.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.513" endtime="20201029 18:15:05.824"></status>
</kw>
<msg timestamp="20201029 18:15:05.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390379792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390380264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.510" endtime="20201029 18:15:05.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.390379792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.390380264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.829" endtime="20201029 18:15:05.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.839" endtime="20201029 18:15:05.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.506" endtime="20201029 18:15:05.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.503" endtime="20201029 18:15:05.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:05.846" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.73000000056345e-07}...</msg>
<status status="PASS" starttime="20201029 18:15:05.843" endtime="20201029 18:15:05.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:05.851" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:15:05.847" endtime="20201029 18:15:05.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.855" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:05.854" endtime="20201029 18:15:05.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.858" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.729999996122558e-07, 4.870000003265318e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:05.856" endtime="20201029 18:15:05.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.852" endtime="20201029 18:15:05.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.474" endtime="20201029 18:15:05.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.474" endtime="20201029 18:15:05.859"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.868" endtime="20201029 18:15:05.879"></status>
</kw>
<msg timestamp="20201029 18:15:05.880" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.866" endtime="20201029 18:15:05.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:05.882" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:05.881" endtime="20201029 18:15:05.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.883" endtime="20201029 18:15:05.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.863" endtime="20201029 18:15:05.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.861" endtime="20201029 18:15:05.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:05.892" endtime="20201029 18:15:06.208"></status>
</kw>
<msg timestamp="20201029 18:15:06.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.786705819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.786706292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:05.891" endtime="20201029 18:15:06.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.786705819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.786706292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.213" endtime="20201029 18:15:06.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.223" endtime="20201029 18:15:06.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.888" endtime="20201029 18:15:06.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.887" endtime="20201029 18:15:06.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.230" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.860000002437914e-07}, {...</msg>
<status status="PASS" starttime="20201029 18:15:06.226" endtime="20201029 18:15:06.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:06.235" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73...</msg>
<status status="PASS" starttime="20201029 18:15:06.231" endtime="20201029 18:15:06.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.240" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:06.239" endtime="20201029 18:15:06.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.242" level="INFO">VALUE: [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:06.241" endtime="20201029 18:15:06.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.236" endtime="20201029 18:15:06.243"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.860" endtime="20201029 18:15:06.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:05.859" endtime="20201029 18:15:06.244"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.252" endtime="20201029 18:15:06.263"></status>
</kw>
<msg timestamp="20201029 18:15:06.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.250" endtime="20201029 18:15:06.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.266" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.265" endtime="20201029 18:15:06.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.267" endtime="20201029 18:15:06.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.247" endtime="20201029 18:15:06.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.246" endtime="20201029 18:15:06.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.276" endtime="20201029 18:15:06.597"></status>
</kw>
<msg timestamp="20201029 18:15:06.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.163736819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.163737292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.275" endtime="20201029 18:15:06.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.163736819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.163737292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.603" endtime="20201029 18:15:06.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.612" endtime="20201029 18:15:06.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.272" endtime="20201029 18:15:06.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.270" endtime="20201029 18:15:06.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:06.620" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:06.616" endtime="20201029 18:15:06.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:06.625" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199...</msg>
<status status="PASS" starttime="20201029 18:15:06.621" endtime="20201029 18:15:06.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.630" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:06.629" endtime="20201029 18:15:06.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.632" level="INFO">VALUE: [4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:06.631" endtime="20201029 18:15:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.626" endtime="20201029 18:15:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.244" endtime="20201029 18:15:06.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.244" endtime="20201029 18:15:06.634"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.642" endtime="20201029 18:15:06.652"></status>
</kw>
<msg timestamp="20201029 18:15:06.653" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.640" endtime="20201029 18:15:06.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:06.654" endtime="20201029 18:15:06.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.656" endtime="20201029 18:15:06.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.638" endtime="20201029 18:15:06.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.636" endtime="20201029 18:15:06.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.666" endtime="20201029 18:15:06.978"></status>
</kw>
<msg timestamp="20201029 18:15:06.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537173306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537173778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.664" endtime="20201029 18:15:06.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:06.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.537173306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.537173778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:06.983" endtime="20201029 18:15:06.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:06.993" endtime="20201029 18:15:06.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.661" endtime="20201029 18:15:06.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.660" endtime="20201029 18:15:06.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.000" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}...</msg>
<status status="PASS" starttime="20201029 18:15:06.996" endtime="20201029 18:15:07.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:07.004" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:15:07.001" endtime="20201029 18:15:07.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.009" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:07.008" endtime="20201029 18:15:07.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.011" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:15:07.010" endtime="20201029 18:15:07.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.005" endtime="20201029 18:15:07.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.635" endtime="20201029 18:15:07.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:06.634" endtime="20201029 18:15:07.013"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.023" endtime="20201029 18:15:07.033"></status>
</kw>
<msg timestamp="20201029 18:15:07.034" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.021" endtime="20201029 18:15:07.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.036" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.035" endtime="20201029 18:15:07.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.037" endtime="20201029 18:15:07.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.016" endtime="20201029 18:15:07.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.015" endtime="20201029 18:15:07.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.047" endtime="20201029 18:15:07.379"></status>
</kw>
<msg timestamp="20201029 18:15:07.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.916376792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.916377264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.045" endtime="20201029 18:15:07.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.916376792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.916377264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:07.383" endtime="20201029 18:15:07.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.393" endtime="20201029 18:15:07.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.042" endtime="20201029 18:15:07.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.041" endtime="20201029 18:15:07.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:07.400" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201029 18:15:07.397" endtime="20201029 18:15:07.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:07.405" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201029 18:15:07.401" endtime="20201029 18:15:07.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.410" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:07.409" endtime="20201029 18:15:07.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.412" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:07.411" endtime="20201029 18:15:07.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.406" endtime="20201029 18:15:07.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.013" endtime="20201029 18:15:07.414"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.013" endtime="20201029 18:15:07.414"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.422" endtime="20201029 18:15:07.432"></status>
</kw>
<msg timestamp="20201029 18:15:07.432" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.420" endtime="20201029 18:15:07.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:07.435" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:07.433" endtime="20201029 18:15:07.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:07.436" endtime="20201029 18:15:07.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.418" endtime="20201029 18:15:07.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.416" endtime="20201029 18:15:07.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.447" endtime="20201029 18:15:09.777"></status>
</kw>
<msg timestamp="20201029 18:15:09.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.286824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.286825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.444" endtime="20201029 18:15:09.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.286824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.286825083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.782" endtime="20201029 18:15:09.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.792" endtime="20201029 18:15:09.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.441" endtime="20201029 18:15:09.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.439" endtime="20201029 18:15:09.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:09.799" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, ...</msg>
<status status="PASS" starttime="20201029 18:15:09.796" endtime="20201029 18:15:09.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:09.805" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:15:09.800" endtime="20201029 18:15:09.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.809" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:09.808" endtime="20201029 18:15:09.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.812" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:09.811" endtime="20201029 18:15:09.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.806" endtime="20201029 18:15:09.813"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.415" endtime="20201029 18:15:09.814"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:07.414" endtime="20201029 18:15:09.814"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.822" endtime="20201029 18:15:09.832"></status>
</kw>
<msg timestamp="20201029 18:15:09.833" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.820" endtime="20201029 18:15:09.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:09.836" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:09.834" endtime="20201029 18:15:09.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.837" endtime="20201029 18:15:09.838"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.818" endtime="20201029 18:15:09.839"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.816" endtime="20201029 18:15:09.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:09.847" endtime="20201029 18:15:10.166"></status>
</kw>
<msg timestamp="20201029 18:15:10.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.675656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.675657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:09.845" endtime="20201029 18:15:10.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.675656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.675657333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:10.171" endtime="20201029 18:15:10.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.181" endtime="20201029 18:15:10.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.842" endtime="20201029 18:15:10.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.840" endtime="20201029 18:15:10.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.189" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201029 18:15:10.185" endtime="20201029 18:15:10.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:10.194" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85...</msg>
<status status="PASS" starttime="20201029 18:15:10.190" endtime="20201029 18:15:10.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.198" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:10.197" endtime="20201029 18:15:10.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.201" level="INFO">VALUE: [4.860000002437914e-07, 4.860000002437914e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:15:10.199" endtime="20201029 18:15:10.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.195" endtime="20201029 18:15:10.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.815" endtime="20201029 18:15:10.202"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:09.814" endtime="20201029 18:15:10.203"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.211" endtime="20201029 18:15:10.222"></status>
</kw>
<msg timestamp="20201029 18:15:10.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.210" endtime="20201029 18:15:10.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.224" endtime="20201029 18:15:10.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.227" endtime="20201029 18:15:10.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.206" endtime="20201029 18:15:10.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.205" endtime="20201029 18:15:10.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.237" endtime="20201029 18:15:10.551"></status>
</kw>
<msg timestamp="20201029 18:15:10.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.066329028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.0663295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:10.235" endtime="20201029 18:15:10.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.066329028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.0663295, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:10.558" endtime="20201029 18:15:10.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.569" endtime="20201029 18:15:10.572"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.232" endtime="20201029 18:15:10.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.231" endtime="20201029 18:15:10.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.580" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.869999994383534e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:10.575" endtime="20201029 18:15:10.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:10.587" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.8599999...</msg>
<status status="PASS" starttime="20201029 18:15:10.581" endtime="20201029 18:15:10.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.593" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:10.592" endtime="20201029 18:15:10.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.596" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000017499615e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07]</msg>
<status status="PASS" starttime="20201029 18:15:10.594" endtime="20201029 18:15:10.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.589" endtime="20201029 18:15:10.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.203" endtime="20201029 18:15:10.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.203" endtime="20201029 18:15:10.598"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.607" endtime="20201029 18:15:10.618"></status>
</kw>
<msg timestamp="20201029 18:15:10.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.605" endtime="20201029 18:15:10.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.622" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.619" endtime="20201029 18:15:10.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.623" endtime="20201029 18:15:10.625"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.602" endtime="20201029 18:15:10.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.600" endtime="20201029 18:15:10.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.635" endtime="20201029 18:15:10.951"></status>
</kw>
<msg timestamp="20201029 18:15:10.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.4457175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.445717986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:10.633" endtime="20201029 18:15:10.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.4457175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.445717986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:10.956" endtime="20201029 18:15:10.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.965" endtime="20201029 18:15:10.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.630" endtime="20201029 18:15:10.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.628" endtime="20201029 18:15:10.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:10.972" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07},...</msg>
<status status="PASS" starttime="20201029 18:15:10.969" endtime="20201029 18:15:10.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:10.978" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.719...</msg>
<status status="PASS" starttime="20201029 18:15:10.973" endtime="20201029 18:15:10.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.982" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:10.981" endtime="20201029 18:15:10.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:10.985" level="INFO">VALUE: [4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201029 18:15:10.983" endtime="20201029 18:15:10.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.979" endtime="20201029 18:15:10.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.599" endtime="20201029 18:15:10.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.598" endtime="20201029 18:15:10.986"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:10.997" endtime="20201029 18:15:11.011"></status>
</kw>
<msg timestamp="20201029 18:15:11.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:10.994" endtime="20201029 18:15:11.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.014" endtime="20201029 18:15:11.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.019" endtime="20201029 18:15:11.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.990" endtime="20201029 18:15:11.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.988" endtime="20201029 18:15:11.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.041" endtime="20201029 18:15:11.365"></status>
</kw>
<msg timestamp="20201029 18:15:11.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.830891708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.830892194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.036" endtime="20201029 18:15:11.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.830891708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.830892194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.370" endtime="20201029 18:15:11.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.380" endtime="20201029 18:15:11.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.030" endtime="20201029 18:15:11.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.027" endtime="20201029 18:15:11.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.387" level="INFO">${RESULT} = [{'diff': 4.860000011319698e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201029 18:15:11.384" endtime="20201029 18:15:11.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:11.392" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201029 18:15:11.388" endtime="20201029 18:15:11.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.396" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 18:15:11.395" endtime="20201029 18:15:11.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.398" level="INFO">VALUE: [4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.860000011319698e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000011319698e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201029 18:15:11.397" endtime="20201029 18:15:11.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.393" endtime="20201029 18:15:11.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.987" endtime="20201029 18:15:11.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:10.987" endtime="20201029 18:15:11.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:01.645" endtime="20201029 18:15:11.400"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:01.575" endtime="20201029 18:15:11.401" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:11.408" endtime="20201029 18:15:11.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.406" endtime="20201029 18:15:11.428"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.442" endtime="20201029 18:15:11.455"></status>
</kw>
<msg timestamp="20201029 18:15:11.455" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.440" endtime="20201029 18:15:11.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.458" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.456" endtime="20201029 18:15:11.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.461" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:11.459" endtime="20201029 18:15:11.461"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:11.437" endtime="20201029 18:15:11.462"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:11.435" endtime="20201029 18:15:11.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.433" endtime="20201029 18:15:11.463"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:11.466" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:11.466" endtime="20201029 18:15:11.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.464" endtime="20201029 18:15:11.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.433" endtime="20201029 18:15:11.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.432" endtime="20201029 18:15:11.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.468" endtime="20201029 18:15:11.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.431" endtime="20201029 18:15:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.429" endtime="20201029 18:15:11.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.405" endtime="20201029 18:15:11.471"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.479" endtime="20201029 18:15:11.492"></status>
</kw>
<msg timestamp="20201029 18:15:11.492" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.478" endtime="20201029 18:15:11.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.493" endtime="20201029 18:15:11.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.496" endtime="20201029 18:15:11.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.475" endtime="20201029 18:15:11.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.473" endtime="20201029 18:15:11.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.505" endtime="20201029 18:15:11.791"></status>
</kw>
<msg timestamp="20201029 18:15:11.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062878556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062880958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.503" endtime="20201029 18:15:11.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062878556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062880958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.795" endtime="20201029 18:15:11.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.803" endtime="20201029 18:15:11.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.501" endtime="20201029 18:15:11.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.499" endtime="20201029 18:15:11.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:11.810" level="INFO">${RESULT} = [{'diff': 2.401999999998572e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.4029999999980456e-06}, {'diff': 2.332999999993257e-06}, {'diff': 2.3749999999989058e-06...</msg>
<status status="PASS" starttime="20201029 18:15:11.807" endtime="20201029 18:15:11.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:11.814" level="INFO">${OVERHEAD} = {'diff': [2.401999999998572e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4029999999980456e-06, 2.332999999993257e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:11.811" endtime="20201029 18:15:11.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.818" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:11.817" endtime="20201029 18:15:11.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.821" level="INFO">VALUE: [2.401999999998572e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4029999999980456e-06, 2.332999999993257e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3049999999941173e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.4169999999906766e-06, 2.3749999999989058e-06, 2.305999999993591e-06, 2.3890000000054146e-06, 2.3620000000057484e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4589999999963252e-06, 2.3890000000054146e-06, 2.3750000000127836e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.4160000000050808e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.333000000007135e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3890000000054146e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.360999999992397e-06, 2.305000000007995e-06]</msg>
<status status="PASS" starttime="20201029 18:15:11.819" endtime="20201029 18:15:11.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.815" endtime="20201029 18:15:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.472" endtime="20201029 18:15:11.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.472" endtime="20201029 18:15:11.823"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.831" endtime="20201029 18:15:11.842"></status>
</kw>
<msg timestamp="20201029 18:15:11.843" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.829" endtime="20201029 18:15:11.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:11.845" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:11.844" endtime="20201029 18:15:11.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.846" endtime="20201029 18:15:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.827" endtime="20201029 18:15:11.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.825" endtime="20201029 18:15:11.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:11.855" endtime="20201029 18:15:12.158"></status>
</kw>
<msg timestamp="20201029 18:15:12.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063298139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063300514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:11.854" endtime="20201029 18:15:12.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063298139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063300514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.163" endtime="20201029 18:15:12.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.173" endtime="20201029 18:15:12.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.851" endtime="20201029 18:15:12.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.849" endtime="20201029 18:15:12.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.180" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3889999999915368e-...</msg>
<status status="PASS" starttime="20201029 18:15:12.176" endtime="20201029 18:15:12.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:12.185" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3749999999989058e-06...</msg>
<status status="PASS" starttime="20201029 18:15:12.181" endtime="20201029 18:15:12.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.189" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:12.188" endtime="20201029 18:15:12.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.192" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3890000000054146e-06, 2.3890000000054146e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.360999999992397e-06, 2.305000000007995e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4299999999977118e-06, 2.2909999999876085e-06, 2.3610000000062747e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.4299999999977118e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.431000000024941e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.4160000000050808e-06, 2.3889999999915368e-06, 2.361999999977993e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.458000000038485e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.431000000024941e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.4019999999569386e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201029 18:15:12.190" endtime="20201029 18:15:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.186" endtime="20201029 18:15:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.824" endtime="20201029 18:15:12.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.824" endtime="20201029 18:15:12.194"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.201" endtime="20201029 18:15:12.214"></status>
</kw>
<msg timestamp="20201029 18:15:12.214" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.200" endtime="20201029 18:15:12.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.216" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.215" endtime="20201029 18:15:12.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.218" endtime="20201029 18:15:12.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.197" endtime="20201029 18:15:12.220"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.196" endtime="20201029 18:15:12.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.227" endtime="20201029 18:15:12.528"></status>
</kw>
<msg timestamp="20201029 18:15:12.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405251639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405254014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.225" endtime="20201029 18:15:12.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.405251639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.405254014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.533" endtime="20201029 18:15:12.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.543" endtime="20201029 18:15:12.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.222" endtime="20201029 18:15:12.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.221" endtime="20201029 18:15:12.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.550" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3470000000136437e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3610000000062747e-06...</msg>
<status status="PASS" starttime="20201029 18:15:12.546" endtime="20201029 18:15:12.550"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:12.555" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3470000000136437e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.4019999999569386e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:12.551" endtime="20201029 18:15:12.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.559" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:12.558" endtime="20201029 18:15:12.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.561" level="INFO">VALUE: [2.3749999999989058e-06, 2.3470000000136437e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.4019999999569386e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3610000000062747e-06, 2.3879999999643076e-06, 2.347999999985362e-06, 2.4169999999212877e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3889999999360256e-06, 2.361000000061786e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.361000000061786e-06, 2.3889999999360256e-06, 2.3749999999989058e-06, 2.361000000061786e-06, 2.362000000033504e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3200000000000998e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:12.560" endtime="20201029 18:15:12.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.555" endtime="20201029 18:15:12.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.194" endtime="20201029 18:15:12.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.194" endtime="20201029 18:15:12.563"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.571" endtime="20201029 18:15:12.584"></status>
</kw>
<msg timestamp="20201029 18:15:12.584" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.569" endtime="20201029 18:15:12.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.587" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.585" endtime="20201029 18:15:12.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.588" endtime="20201029 18:15:12.589"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.566" endtime="20201029 18:15:12.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.565" endtime="20201029 18:15:12.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.598" endtime="20201029 18:15:12.906"></status>
</kw>
<msg timestamp="20201029 18:15:12.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766508875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.76651125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:12.596" endtime="20201029 18:15:12.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.766508875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.76651125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:12.911" endtime="20201029 18:15:12.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.921" endtime="20201029 18:15:12.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.593" endtime="20201029 18:15:12.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.591" endtime="20201029 18:15:12.924"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:12.928" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.402999999984168e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3749999999989058e-0...</msg>
<status status="PASS" starttime="20201029 18:15:12.925" endtime="20201029 18:15:12.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:12.934" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:12.929" endtime="20201029 18:15:12.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.940" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:12.939" endtime="20201029 18:15:12.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.943" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.402999999984168e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.362000000033504e-06, 2.3889999998250033e-06, 2.430000000108734e-06, 2.389000000047048e-06, 2.3059999998409353e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06]</msg>
<status status="PASS" starttime="20201029 18:15:12.941" endtime="20201029 18:15:12.944"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.936" endtime="20201029 18:15:12.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.563" endtime="20201029 18:15:12.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.563" endtime="20201029 18:15:12.946"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.958" endtime="20201029 18:15:12.970"></status>
</kw>
<msg timestamp="20201029 18:15:12.970" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.956" endtime="20201029 18:15:12.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:12.973" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:12.971" endtime="20201029 18:15:12.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.974" endtime="20201029 18:15:12.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.952" endtime="20201029 18:15:12.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.949" endtime="20201029 18:15:12.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:12.983" endtime="20201029 18:15:13.291"></status>
</kw>
<msg timestamp="20201029 18:15:13.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125794472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125796861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:12.981" endtime="20201029 18:15:13.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.125794472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.125796861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.297" endtime="20201029 18:15:13.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.307" endtime="20201029 18:15:13.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.979" endtime="20201029 18:15:13.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.977" endtime="20201029 18:15:13.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.314" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.361000000172808e-06}, {'diff': 2.347999999985362e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3749999999989058e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:13.310" endtime="20201029 18:15:13.314"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:13.319" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.361000000172808e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:15:13.315" endtime="20201029 18:15:13.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:13.322" endtime="20201029 18:15:13.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.326" level="INFO">VALUE: [2.389000000047048e-06, 2.361000000172808e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3889999998250033e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.4029999998731455e-06, 2.3749999999989058e-06, 2.3199999998890775e-06, 2.3749999999989058e-06, 2.3199999998890775e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3340000001592642e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.40300000009519e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3889999998250033e-06, 2.3469999999026214e-06, 2.389000000047048e-06, 2.4580000002050184e-06]</msg>
<status status="PASS" starttime="20201029 18:15:13.324" endtime="20201029 18:15:13.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.320" endtime="20201029 18:15:13.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.947" endtime="20201029 18:15:13.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:12.947" endtime="20201029 18:15:13.327"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.338" endtime="20201029 18:15:13.351"></status>
</kw>
<msg timestamp="20201029 18:15:13.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.336" endtime="20201029 18:15:13.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.355" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.353" endtime="20201029 18:15:13.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.357" endtime="20201029 18:15:13.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.332" endtime="20201029 18:15:13.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.329" endtime="20201029 18:15:13.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.368" endtime="20201029 18:15:13.656"></status>
</kw>
<msg timestamp="20201029 18:15:13.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.501913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.501916, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:13.366" endtime="20201029 18:15:13.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.501913625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.501916, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:13.661" endtime="20201029 18:15:13.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.671" endtime="20201029 18:15:13.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.363" endtime="20201029 18:15:13.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.361" endtime="20201029 18:15:13.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:13.678" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3749999999989058e-...</msg>
<status status="PASS" starttime="20201029 18:15:13.675" endtime="20201029 18:15:13.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:13.683" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3190000000283817e-06...</msg>
<status status="PASS" starttime="20201029 18:15:13.679" endtime="20201029 18:15:13.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.687" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:13.686" endtime="20201029 18:15:13.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.689" level="INFO">VALUE: [2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3889999998250033e-06, 2.3469999999026214e-06, 2.389000000047048e-06, 2.4580000002050184e-06, 2.3469999999026214e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.389000000047048e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.40300000009519e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.3889999998250033e-06, 2.3889999998250033e-06, 2.320000000111122e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3619999998114594e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.3749999999989058e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.333000000076524e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3059999998409353e-06, 2.40300000009519e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06]</msg>
<status status="PASS" starttime="20201029 18:15:13.688" endtime="20201029 18:15:13.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.684" endtime="20201029 18:15:13.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.328" endtime="20201029 18:15:13.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.328" endtime="20201029 18:15:13.691"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.700" endtime="20201029 18:15:13.712"></status>
</kw>
<msg timestamp="20201029 18:15:13.713" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.699" endtime="20201029 18:15:13.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:13.715" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:13.714" endtime="20201029 18:15:13.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.716" endtime="20201029 18:15:13.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.695" endtime="20201029 18:15:13.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.693" endtime="20201029 18:15:13.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:13.726" endtime="20201029 18:15:14.026"></status>
</kw>
<msg timestamp="20201029 18:15:14.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.872417403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.872419778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:13.724" endtime="20201029 18:15:14.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.872417403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.872419778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.031" endtime="20201029 18:15:14.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.041" endtime="20201029 18:15:14.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.721" endtime="20201029 18:15:14.043"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.720" endtime="20201029 18:15:14.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.048" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3059999998409353e-06}, {'diff': 2.40300000009519e-06}, {'diff': 2.389000000047048e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:14.044" endtime="20201029 18:15:14.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:14.053" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3059999998409353e-06, 2.40300000009519e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:15:14.048" endtime="20201029 18:15:14.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.057" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:14.056" endtime="20201029 18:15:14.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.060" level="INFO">VALUE: [2.3749999999989058e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3059999998409353e-06, 2.40300000009519e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.334000000381309e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.3329999998544793e-06, 2.374999999776861e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.389000000047048e-06]</msg>
<status status="PASS" starttime="20201029 18:15:14.058" endtime="20201029 18:15:14.060"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.054" endtime="20201029 18:15:14.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.692" endtime="20201029 18:15:14.061"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:13.691" endtime="20201029 18:15:14.061"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.069" endtime="20201029 18:15:14.080"></status>
</kw>
<msg timestamp="20201029 18:15:14.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.067" endtime="20201029 18:15:14.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.083" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.081" endtime="20201029 18:15:14.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.084" endtime="20201029 18:15:14.085"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.065" endtime="20201029 18:15:14.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.063" endtime="20201029 18:15:14.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.093" endtime="20201029 18:15:14.402"></status>
</kw>
<msg timestamp="20201029 18:15:14.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.224710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.224713097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.092" endtime="20201029 18:15:14.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.224710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.224713097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.406" endtime="20201029 18:15:14.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.416" endtime="20201029 18:15:14.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.089" endtime="20201029 18:15:14.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.087" endtime="20201029 18:15:14.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.423" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.347999999763317e-06}, {'diff': 2.3889999996029587e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:14.420" endtime="20201029 18:15:14.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:14.429" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.37...</msg>
<status status="PASS" starttime="20201029 18:15:14.424" endtime="20201029 18:15:14.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:14.432" endtime="20201029 18:15:14.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.436" level="INFO">VALUE: [2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3889999996029587e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 18:15:14.434" endtime="20201029 18:15:14.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.430" endtime="20201029 18:15:14.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.062" endtime="20201029 18:15:14.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.061" endtime="20201029 18:15:14.437"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.445" endtime="20201029 18:15:14.457"></status>
</kw>
<msg timestamp="20201029 18:15:14.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.444" endtime="20201029 18:15:14.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.459" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.458" endtime="20201029 18:15:14.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.461" endtime="20201029 18:15:14.462"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.441" endtime="20201029 18:15:14.463"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.439" endtime="20201029 18:15:14.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.471" endtime="20201029 18:15:14.786"></status>
</kw>
<msg timestamp="20201029 18:15:14.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.58219625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.582198639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:14.468" endtime="20201029 18:15:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.58219625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.582198639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:14.791" endtime="20201029 18:15:14.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.801" endtime="20201029 18:15:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.466" endtime="20201029 18:15:14.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.464" endtime="20201029 18:15:14.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:14.808" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06...</msg>
<status status="PASS" starttime="20201029 18:15:14.804" endtime="20201029 18:15:14.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:14.812" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.3889999996029587e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:15:14.809" endtime="20201029 18:15:14.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.817" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:14.816" endtime="20201029 18:15:14.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.819" level="INFO">VALUE: [2.389000000047048e-06, 2.3889999996029587e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3339999999372196e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3619999995894148e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.362000000033504e-06, 2.389000000047048e-06, 2.3190000000283817e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.361000000394853e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.4440000001568762e-06, 2.374999999776861e-06, 2.3329999998544793e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.416000000060592e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:14.818" endtime="20201029 18:15:14.819"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.813" endtime="20201029 18:15:14.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.438" endtime="20201029 18:15:14.820"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.438" endtime="20201029 18:15:14.821"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.829" endtime="20201029 18:15:14.841"></status>
</kw>
<msg timestamp="20201029 18:15:14.842" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.828" endtime="20201029 18:15:14.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:14.844" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:14.843" endtime="20201029 18:15:14.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.845" endtime="20201029 18:15:14.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.825" endtime="20201029 18:15:14.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.823" endtime="20201029 18:15:14.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:14.855" endtime="20201029 18:15:15.164"></status>
</kw>
<msg timestamp="20201029 18:15:15.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.949635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.949638042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:14.853" endtime="20201029 18:15:15.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.949635653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.949638042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.169" endtime="20201029 18:15:15.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.179" endtime="20201029 18:15:15.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.851" endtime="20201029 18:15:15.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.849" endtime="20201029 18:15:15.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.186" level="INFO">${RESULT} = [{'diff': 2.389000000047048e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3190000000283817e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.389000000047048e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:15.182" endtime="20201029 18:15:15.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:15.191" level="INFO">${OVERHEAD} = {'diff': [2.389000000047048e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.416000000060592e-06, 2.374999999776861e-06, 2.36...</msg>
<status status="PASS" starttime="20201029 18:15:15.187" endtime="20201029 18:15:15.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.196" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:15.195" endtime="20201029 18:15:15.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.198" level="INFO">VALUE: [2.389000000047048e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.416000000060592e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.3750000002209504e-06, 2.3879999999643076e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3190000000283817e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3059999998409353e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3879999999643076e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.3190000000283817e-06, 2.319999999667033e-06, 2.3609999999507636e-06, 2.3879999999643076e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.4299999998866895e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.347000000124666e-06]</msg>
<status status="PASS" starttime="20201029 18:15:15.197" endtime="20201029 18:15:15.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.192" endtime="20201029 18:15:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.821" endtime="20201029 18:15:15.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:14.821" endtime="20201029 18:15:15.200"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.207" endtime="20201029 18:15:15.219"></status>
</kw>
<msg timestamp="20201029 18:15:15.219" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.206" endtime="20201029 18:15:15.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.220" endtime="20201029 18:15:15.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.223" endtime="20201029 18:15:15.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.203" endtime="20201029 18:15:15.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.202" endtime="20201029 18:15:15.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.232" endtime="20201029 18:15:15.552"></status>
</kw>
<msg timestamp="20201029 18:15:15.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.324436625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.324438944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.230" endtime="20201029 18:15:15.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.324436625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.324438944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.557" endtime="20201029 18:15:15.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.567" endtime="20201029 18:15:15.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.228" endtime="20201029 18:15:15.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.226" endtime="20201029 18:15:15.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.574" level="INFO">${RESULT} = [{'diff': 2.3190000000283817e-06}, {'diff': 2.319999999667033e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3879999999643076e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000047048e-06...</msg>
<status status="PASS" starttime="20201029 18:15:15.570" endtime="20201029 18:15:15.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:15.579" level="INFO">${OVERHEAD} = {'diff': [2.3190000000283817e-06, 2.319999999667033e-06, 2.3609999999507636e-06, 2.3879999999643076e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:15.575" endtime="20201029 18:15:15.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.583" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:15.582" endtime="20201029 18:15:15.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.586" level="INFO">VALUE: [2.3190000000283817e-06, 2.319999999667033e-06, 2.3609999999507636e-06, 2.3879999999643076e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.4299999998866895e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.4170000001433323e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.4029999998731455e-06, 2.361000000394853e-06, 2.3750000002209504e-06, 2.361000000394853e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3889999996029587e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:15.584" endtime="20201029 18:15:15.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.580" endtime="20201029 18:15:15.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.200" endtime="20201029 18:15:15.587"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.200" endtime="20201029 18:15:15.587"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.595" endtime="20201029 18:15:15.607"></status>
</kw>
<msg timestamp="20201029 18:15:15.608" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.594" endtime="20201029 18:15:15.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.610" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.609" endtime="20201029 18:15:15.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.612" endtime="20201029 18:15:15.613"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.591" endtime="20201029 18:15:15.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.589" endtime="20201029 18:15:15.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.623" endtime="20201029 18:15:15.941"></status>
</kw>
<msg timestamp="20201029 18:15:15.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.693503333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.693505722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.622" endtime="20201029 18:15:15.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.693503333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.693505722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:15.946" endtime="20201029 18:15:15.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.956" endtime="20201029 18:15:15.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.617" endtime="20201029 18:15:15.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.615" endtime="20201029 18:15:15.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:15.963" level="INFO">${RESULT} = [{'diff': 2.3889999996029587e-06}, {'diff': 2.374999999776861e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3329999998544793e-06}, {'diff': 2.389000000047048e-06...</msg>
<status status="PASS" starttime="20201029 18:15:15.960" endtime="20201029 18:15:15.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:15.968" level="INFO">${OVERHEAD} = {'diff': [2.3889999996029587e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:15.964" endtime="20201029 18:15:15.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.973" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:15.971" endtime="20201029 18:15:15.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:15.975" level="INFO">VALUE: [2.3889999996029587e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.320000000111122e-06, 2.389000000047048e-06, 2.374999999776861e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.362000000033504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.33299999941039e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.320000000111122e-06, 2.401999999790405e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 18:15:15.974" endtime="20201029 18:15:15.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.969" endtime="20201029 18:15:15.976"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.588" endtime="20201029 18:15:15.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.588" endtime="20201029 18:15:15.977"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:15.985" endtime="20201029 18:15:15.996"></status>
</kw>
<msg timestamp="20201029 18:15:15.997" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.983" endtime="20201029 18:15:15.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.000" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:15.998" endtime="20201029 18:15:16.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.001" endtime="20201029 18:15:16.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.980" endtime="20201029 18:15:16.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.979" endtime="20201029 18:15:16.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.010" endtime="20201029 18:15:16.323"></status>
</kw>
<msg timestamp="20201029 18:15:16.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.072695264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.072697639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.008" endtime="20201029 18:15:16.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.072695264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.072697639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.328" endtime="20201029 18:15:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.338" endtime="20201029 18:15:16.339"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.006" endtime="20201029 18:15:16.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.004" endtime="20201029 18:15:16.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.345" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:16.341" endtime="20201029 18:15:16.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:16.350" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.320000000111122e-06, 2.401999999790405e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:16.346" endtime="20201029 18:15:16.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.354" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:16.353" endtime="20201029 18:15:16.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.357" level="INFO">VALUE: [2.3750000002209504e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.320000000111122e-06, 2.401999999790405e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.362000000033504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.4170000001433323e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.320000000111122e-06, 2.389000000491137e-06, 2.2910000003761866e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3889999996029587e-06]</msg>
<status status="PASS" starttime="20201029 18:15:16.355" endtime="20201029 18:15:16.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.351" endtime="20201029 18:15:16.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.978" endtime="20201029 18:15:16.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:15.977" endtime="20201029 18:15:16.358"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.366" endtime="20201029 18:15:16.378"></status>
</kw>
<msg timestamp="20201029 18:15:16.379" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.365" endtime="20201029 18:15:16.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.381" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.380" endtime="20201029 18:15:16.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.383" endtime="20201029 18:15:16.384"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.362" endtime="20201029 18:15:16.385"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.360" endtime="20201029 18:15:16.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.392" endtime="20201029 18:15:16.707"></status>
</kw>
<msg timestamp="20201029 18:15:16.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.450749458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.450751819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.390" endtime="20201029 18:15:16.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.450749458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.450751819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.713" endtime="20201029 18:15:16.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.724" endtime="20201029 18:15:16.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.387" endtime="20201029 18:15:16.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.386" endtime="20201029 18:15:16.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:16.732" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201029 18:15:16.728" endtime="20201029 18:15:16.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:16.738" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:16.733" endtime="20201029 18:15:16.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:16.742" endtime="20201029 18:15:16.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.746" level="INFO">VALUE: [2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.401999999790405e-06, 2.3750000002209504e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3879999995202184e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 18:15:16.745" endtime="20201029 18:15:16.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.739" endtime="20201029 18:15:16.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.359" endtime="20201029 18:15:16.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.359" endtime="20201029 18:15:16.748"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.757" endtime="20201029 18:15:16.770"></status>
</kw>
<msg timestamp="20201029 18:15:16.770" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.755" endtime="20201029 18:15:16.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:16.773" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:16.771" endtime="20201029 18:15:16.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.774" endtime="20201029 18:15:16.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.752" endtime="20201029 18:15:16.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.750" endtime="20201029 18:15:16.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:16.783" endtime="20201029 18:15:17.090"></status>
</kw>
<msg timestamp="20201029 18:15:17.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.822563083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.822565458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:16.781" endtime="20201029 18:15:17.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.822563083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.822565458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.095" endtime="20201029 18:15:17.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.105" endtime="20201029 18:15:17.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.779" endtime="20201029 18:15:17.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.777" endtime="20201029 18:15:17.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.112" level="INFO">${RESULT} = [{'diff': 2.374999999332772e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.346999999680577e-06...</msg>
<status status="PASS" starttime="20201029 18:15:17.108" endtime="20201029 18:15:17.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:17.117" level="INFO">${OVERHEAD} = {'diff': [2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2...</msg>
<status status="PASS" starttime="20201029 18:15:17.113" endtime="20201029 18:15:17.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.122" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:17.121" endtime="20201029 18:15:17.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.124" level="INFO">VALUE: [2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.334000000381309e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.431000000413519e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3059999998409353e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.4449999997955274e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.304999999758195e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.403000000761324e-06, 2.3330000002985685e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.123" endtime="20201029 18:15:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.118" endtime="20201029 18:15:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.749" endtime="20201029 18:15:17.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:16.749" endtime="20201029 18:15:17.126"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.134" endtime="20201029 18:15:17.146"></status>
</kw>
<msg timestamp="20201029 18:15:17.146" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.132" endtime="20201029 18:15:17.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.147" endtime="20201029 18:15:17.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.150" endtime="20201029 18:15:17.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.129" endtime="20201029 18:15:17.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.128" endtime="20201029 18:15:17.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.159" endtime="20201029 18:15:17.477"></status>
</kw>
<msg timestamp="20201029 18:15:17.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.204195014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.204197375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.157" endtime="20201029 18:15:17.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.204195014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.204197375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.481" endtime="20201029 18:15:17.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.491" endtime="20201029 18:15:17.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.155" endtime="20201029 18:15:17.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.153" endtime="20201029 18:15:17.494"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.498" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-0...</msg>
<status status="PASS" starttime="20201029 18:15:17.495" endtime="20201029 18:15:17.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:17.504" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:17.499" endtime="20201029 18:15:17.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.508" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:17.507" endtime="20201029 18:15:17.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.510" level="INFO">VALUE: [2.3609999999507636e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.403000000761324e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3339999994931304e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.416999999255154e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.389000000491137e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.4299999994426003e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.374999999332772e-06, 2.3190000000283817e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4449999997955274e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.509" endtime="20201029 18:15:17.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.505" endtime="20201029 18:15:17.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.126" endtime="20201029 18:15:17.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.126" endtime="20201029 18:15:17.512"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.520" endtime="20201029 18:15:17.533"></status>
</kw>
<msg timestamp="20201029 18:15:17.533" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.519" endtime="20201029 18:15:17.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.535" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.534" endtime="20201029 18:15:17.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.536" endtime="20201029 18:15:17.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.516" endtime="20201029 18:15:17.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.514" endtime="20201029 18:15:17.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.546" endtime="20201029 18:15:17.866"></status>
</kw>
<msg timestamp="20201029 18:15:17.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.570233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.570235722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.544" endtime="20201029 18:15:17.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.570233389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.570235722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.871" endtime="20201029 18:15:17.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.880" endtime="20201029 18:15:17.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.541" endtime="20201029 18:15:17.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.540" endtime="20201029 18:15:17.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:17.887" level="INFO">${RESULT} = [{'diff': 2.33299999941039e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3190000000283817e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.4449999997955274e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:17.884" endtime="20201029 18:15:17.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:17.892" level="INFO">${OVERHEAD} = {'diff': [2.33299999941039e-06, 2.374999999332772e-06, 2.3190000000283817e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4449999997955274e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:17.888" endtime="20201029 18:15:17.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.896" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:17.895" endtime="20201029 18:15:17.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.899" level="INFO">VALUE: [2.33299999941039e-06, 2.374999999332772e-06, 2.3190000000283817e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.4449999997955274e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.4449999997955274e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.389000000491137e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.4449999997955274e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.304999999758195e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4449999997955274e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:17.897" endtime="20201029 18:15:17.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.893" endtime="20201029 18:15:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.513" endtime="20201029 18:15:17.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.512" endtime="20201029 18:15:17.900"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.916" endtime="20201029 18:15:17.928"></status>
</kw>
<msg timestamp="20201029 18:15:17.928" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.914" endtime="20201029 18:15:17.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:17.931" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:17.929" endtime="20201029 18:15:17.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.932" endtime="20201029 18:15:17.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.911" endtime="20201029 18:15:17.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.909" endtime="20201029 18:15:17.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:17.941" endtime="20201029 18:15:18.252"></status>
</kw>
<msg timestamp="20201029 18:15:18.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.946527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.946530194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:17.939" endtime="20201029 18:15:18.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.946527833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.946530194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.257" endtime="20201029 18:15:18.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.266" endtime="20201029 18:15:18.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.937" endtime="20201029 18:15:18.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.935" endtime="20201029 18:15:18.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.273" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.389000000491137e-06...</msg>
<status status="PASS" starttime="20201029 18:15:18.270" endtime="20201029 18:15:18.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:18.278" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:18.274" endtime="20201029 18:15:18.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.283" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:18.282" endtime="20201029 18:15:18.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.285" level="INFO">VALUE: [2.3609999999507636e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.4449999997955274e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.347999999763317e-06, 2.3190000000283817e-06, 2.362000000033504e-06, 2.3330000002985685e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.304999999758195e-06, 2.374999999332772e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4440000006009654e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.443999999712787e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.416000000060592e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06]</msg>
<status status="PASS" starttime="20201029 18:15:18.284" endtime="20201029 18:15:18.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.279" endtime="20201029 18:15:18.286"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.908" endtime="20201029 18:15:18.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:17.907" endtime="20201029 18:15:18.287"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.295" endtime="20201029 18:15:18.306"></status>
</kw>
<msg timestamp="20201029 18:15:18.307" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.293" endtime="20201029 18:15:18.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.308" endtime="20201029 18:15:18.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.310" endtime="20201029 18:15:18.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.291" endtime="20201029 18:15:18.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.289" endtime="20201029 18:15:18.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.319" endtime="20201029 18:15:18.634"></status>
</kw>
<msg timestamp="20201029 18:15:18.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.333170278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.333172694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.318" endtime="20201029 18:15:18.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.333170278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.333172694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.639" endtime="20201029 18:15:18.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.648" endtime="20201029 18:15:18.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.315" endtime="20201029 18:15:18.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.314" endtime="20201029 18:15:18.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:18.655" level="INFO">${RESULT} = [{'diff': 2.416000000060592e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201029 18:15:18.652" endtime="20201029 18:15:18.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:18.661" level="INFO">${OVERHEAD} = {'diff': [2.416000000060592e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, ...</msg>
<status status="PASS" starttime="20201029 18:15:18.656" endtime="20201029 18:15:18.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.665" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:18.664" endtime="20201029 18:15:18.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.668" level="INFO">VALUE: [2.416000000060592e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.4170000001433323e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.457999999982974e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3879999995202184e-06, 2.3889999996029587e-06, 2.334000000381309e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.403000000761324e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3199999992229436e-06, 2.3750000002209504e-06, 2.3880000004083968e-06, 2.389000000491137e-06, 2.3889999996029587e-06, 2.361000000838942e-06, 2.416999999255154e-06, 2.3330000002985685e-06, 2.4029999998731455e-06, 2.374999999332772e-06, 2.4029999998731455e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.361000000838942e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201029 18:15:18.666" endtime="20201029 18:15:18.668"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.662" endtime="20201029 18:15:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.288" endtime="20201029 18:15:18.669"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.287" endtime="20201029 18:15:18.669"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.677" endtime="20201029 18:15:18.688"></status>
</kw>
<msg timestamp="20201029 18:15:18.689" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.676" endtime="20201029 18:15:18.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:18.691" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:18.690" endtime="20201029 18:15:18.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.692" endtime="20201029 18:15:18.694"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.673" endtime="20201029 18:15:18.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.672" endtime="20201029 18:15:18.695"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:18.702" endtime="20201029 18:15:19.009"></status>
</kw>
<msg timestamp="20201029 18:15:19.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.702196611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.702199014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:18.701" endtime="20201029 18:15:19.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.702196611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.702199014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.014" endtime="20201029 18:15:19.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.024" endtime="20201029 18:15:19.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.697" endtime="20201029 18:15:19.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.696" endtime="20201029 18:15:19.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.030" level="INFO">${RESULT} = [{'diff': 2.4029999998731455e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3750000002209504e-0...</msg>
<status status="PASS" starttime="20201029 18:15:19.027" endtime="20201029 18:15:19.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:19.035" level="INFO">${OVERHEAD} = {'diff': [2.4029999998731455e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06,...</msg>
<status status="PASS" starttime="20201029 18:15:19.031" endtime="20201029 18:15:19.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.039" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 18:15:19.038" endtime="20201029 18:15:19.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.044" level="INFO">VALUE: [2.4029999998731455e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3880000004083968e-06, 2.361000000838942e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.431000000413519e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.389000000491137e-06, 2.334000000381309e-06, 2.4020000006785835e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3060000007291137e-06, 2.33299999941039e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3889999996029587e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.3889999996029587e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.389000000491137e-06, 2.346999999680577e-06]</msg>
<status status="PASS" starttime="20201029 18:15:19.040" endtime="20201029 18:15:19.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.036" endtime="20201029 18:15:19.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.670" endtime="20201029 18:15:19.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:18.670" endtime="20201029 18:15:19.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:11.471" endtime="20201029 18:15:19.046"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:11.402" endtime="20201029 18:15:19.047" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.054" endtime="20201029 18:15:19.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.052" endtime="20201029 18:15:19.074"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.086" endtime="20201029 18:15:19.100"></status>
</kw>
<msg timestamp="20201029 18:15:19.101" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.085" endtime="20201029 18:15:19.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.103" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.102" endtime="20201029 18:15:19.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.106" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:19.104" endtime="20201029 18:15:19.107"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.082" endtime="20201029 18:15:19.107"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.080" endtime="20201029 18:15:19.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.079" endtime="20201029 18:15:19.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:19.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:19.111" endtime="20201029 18:15:19.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.109" endtime="20201029 18:15:19.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.078" endtime="20201029 18:15:19.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.077" endtime="20201029 18:15:19.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.114" endtime="20201029 18:15:19.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.076" endtime="20201029 18:15:19.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.074" endtime="20201029 18:15:19.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.051" endtime="20201029 18:15:19.116"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.126" endtime="20201029 18:15:19.145"></status>
</kw>
<msg timestamp="20201029 18:15:19.146" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.124" endtime="20201029 18:15:19.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.148" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.147" endtime="20201029 18:15:19.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.150" endtime="20201029 18:15:19.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.121" endtime="20201029 18:15:19.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.118" endtime="20201029 18:15:19.155"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.158" endtime="20201029 18:15:19.161"></status>
</kw>
<msg timestamp="20201029 18:15:19.161" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:19.156" endtime="20201029 18:15:19.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.166" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:19.165" endtime="20201029 18:15:19.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.168" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:19.167" endtime="20201029 18:15:19.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.162" endtime="20201029 18:15:19.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.173" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:19.171" endtime="20201029 18:15:19.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.175" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:19.174" endtime="20201029 18:15:19.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.169" endtime="20201029 18:15:19.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.182" endtime="20201029 18:15:19.468"></status>
</kw>
<msg timestamp="20201029 18:15:19.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06450875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064516097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:19.180" endtime="20201029 18:15:19.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06450875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064516097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:19.472" endtime="20201029 18:15:19.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.480" endtime="20201029 18:15:19.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.178" endtime="20201029 18:15:19.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.176" endtime="20201029 18:15:19.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:19.487" level="INFO">${RESULT} = [{'diff': 7.346999999990889e-06}, {'diff': 7.5969999999980775e-06}, {'diff': 7.540999999999798e-06}, {'diff': 7.569999999998411e-06}, {'diff': 7.5969999999980775e-06}, {'diff': 7.569999999998411e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:19.484" endtime="20201029 18:15:19.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:19.492" level="INFO">${OVERHEAD} = {'diff': [7.346999999990889e-06, 7.5969999999980775e-06, 7.540999999999798e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.597000000011955e-06, 7.582999999991569e-06, 7.58...</msg>
<status status="PASS" starttime="20201029 18:15:19.488" endtime="20201029 18:15:19.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.496" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 18:15:19.495" endtime="20201029 18:15:19.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.499" level="INFO">VALUE: [7.346999999990889e-06, 7.5969999999980775e-06, 7.540999999999798e-06, 7.569999999998411e-06, 7.5969999999980775e-06, 7.569999999998411e-06, 7.597000000011955e-06, 7.582999999991569e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.624999999997217e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.568999999998938e-06, 7.5830000000054465e-06, 7.569999999998411e-06, 7.597000000011955e-06, 7.6109999999907085e-06, 7.582999999991569e-06, 7.5969999999980775e-06, 7.5830000000054465e-06, 7.5830000000054465e-06, 7.582999999991569e-06, 7.554999999992429e-06, 7.569999999998411e-06, 7.514000000000132e-06, 7.569999999998411e-06, 7.568999999998938e-06, 7.583999999991042e-06, 7.570000000012289e-06, 7.597000000011955e-06, 7.5559999999919025e-06, 7.652999999996357e-06, 7.5969999999980775e-06, 7.5830000000054465e-06, 7.5969999999980775e-06, 7.597999999997551e-06, 7.582999999991569e-06, 7.568999999998938e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 7.568999999998938e-06, 7.583999999991042e-06, 7.58400000000492e-06, 7.5830000000054465e-06, 7.58400000000492e-06, 7.5969999999980775e-06, 7.568999999998938e-06, 7.58400000000492e-06, 7.58400000000492e-06]</msg>
<status status="PASS" starttime="20201029 18:15:19.498" endtime="20201029 18:15:19.499"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.493" endtime="20201029 18:15:19.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.117" endtime="20201029 18:15:19.501"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:19.048" endtime="20201029 18:15:19.501" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:19.508" endtime="20201029 18:15:19.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.507" endtime="20201029 18:15:19.528"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.541" endtime="20201029 18:15:19.554"></status>
</kw>
<msg timestamp="20201029 18:15:19.555" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.539" endtime="20201029 18:15:19.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.557" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.556" endtime="20201029 18:15:19.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.560" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:19.558" endtime="20201029 18:15:19.561"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.537" endtime="20201029 18:15:19.561"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:19.534" endtime="20201029 18:15:19.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.533" endtime="20201029 18:15:19.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:19.567" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:19.566" endtime="20201029 18:15:19.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.563" endtime="20201029 18:15:19.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.532" endtime="20201029 18:15:19.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.532" endtime="20201029 18:15:19.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.569" endtime="20201029 18:15:19.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.530" endtime="20201029 18:15:19.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.529" endtime="20201029 18:15:19.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.505" endtime="20201029 18:15:19.571"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.580" endtime="20201029 18:15:19.684"></status>
</kw>
<msg timestamp="20201029 18:15:19.685" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.578" endtime="20201029 18:15:19.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.687" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:19.686" endtime="20201029 18:15:19.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.688" endtime="20201029 18:15:19.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.576" endtime="20201029 18:15:19.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.574" endtime="20201029 18:15:19.691"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.694" endtime="20201029 18:15:19.695"></status>
</kw>
<msg timestamp="20201029 18:15:19.696" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:19.692" endtime="20201029 18:15:19.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.700" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:19.699" endtime="20201029 18:15:19.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.702" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:19.701" endtime="20201029 18:15:19.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.696" endtime="20201029 18:15:19.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.706" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:19.705" endtime="20201029 18:15:19.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:19.709" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:19.708" endtime="20201029 18:15:19.709"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.703" endtime="20201029 18:15:19.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:19.716" endtime="20201029 18:15:20.007"></status>
</kw>
<msg timestamp="20201029 18:15:20.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066340875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:19.714" endtime="20201029 18:15:20.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066281347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066340875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.011" endtime="20201029 18:15:20.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.019" endtime="20201029 18:15:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.712" endtime="20201029 18:15:20.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.710" endtime="20201029 18:15:20.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.027" level="INFO">${RESULT} = [{'diff': 5.9527999999989256e-05}, {'diff': 5.93750000000004e-05}, {'diff': 5.9320000000001594e-05}, {'diff': 5.93340000000081e-05}, {'diff': 5.9264000000003314e-05}, {'diff': 5.933300000000863e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:20.022" endtime="20201029 18:15:20.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:20.031" level="INFO">${OVERHEAD} = {'diff': [5.9527999999989256e-05, 5.93750000000004e-05, 5.9320000000001594e-05, 5.93340000000081e-05, 5.9264000000003314e-05, 5.933300000000863e-05, 5.9319999999987716e-05, 5.933300000000863e-05, 5.93...</msg>
<status status="PASS" starttime="20201029 18:15:20.028" endtime="20201029 18:15:20.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.036" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 18:15:20.035" endtime="20201029 18:15:20.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.039" level="INFO">VALUE: [5.9527999999989256e-05, 5.93750000000004e-05, 5.9320000000001594e-05, 5.93340000000081e-05, 5.9264000000003314e-05, 5.933300000000863e-05, 5.9319999999987716e-05, 5.933300000000863e-05, 5.9320000000001594e-05, 5.9333999999994225e-05, 5.930500000000949e-05, 5.931900000000212e-05, 5.930500000000949e-05, 5.930600000000896e-05, 5.931900000000212e-05, 5.930499999999561e-05, 5.9320000000001594e-05, 5.936099999999389e-05, 5.930500000000949e-05, 5.933300000000863e-05, 5.9320000000001594e-05, 5.9305999999995085e-05, 5.9320000000001594e-05, 5.930499999999561e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.9333999999994225e-05, 5.931900000000212e-05, 5.933299999999475e-05, 5.93340000000081e-05, 5.929100000000298e-05, 5.931899999998824e-05, 5.931900000000212e-05, 5.930600000000896e-05, 5.931900000000212e-05, 5.9264000000003314e-05, 5.931900000000212e-05, 5.933299999999475e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.931900000000212e-05, 5.9320000000001594e-05, 5.9320000000001594e-05, 5.9277999999995945e-05, 5.9304999999981733e-05, 5.930500000000949e-05, 5.930599999998121e-05, 5.93750000000004e-05, 5.9264000000003314e-05, 5.931900000000212e-05]</msg>
<status status="PASS" starttime="20201029 18:15:20.038" endtime="20201029 18:15:20.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.032" endtime="20201029 18:15:20.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:19.572" endtime="20201029 18:15:20.043"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:19.503" endtime="20201029 18:15:20.045" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.056" endtime="20201029 18:15:20.075"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.053" endtime="20201029 18:15:20.076"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.091" endtime="20201029 18:15:20.105"></status>
</kw>
<msg timestamp="20201029 18:15:20.105" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.089" endtime="20201029 18:15:20.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.108" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.106" endtime="20201029 18:15:20.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.111" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:20.109" endtime="20201029 18:15:20.111"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:20.086" endtime="20201029 18:15:20.112"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:20.084" endtime="20201029 18:15:20.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.082" endtime="20201029 18:15:20.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:20.117" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:20.116" endtime="20201029 18:15:20.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.114" endtime="20201029 18:15:20.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.081" endtime="20201029 18:15:20.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.081" endtime="20201029 18:15:20.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.119" endtime="20201029 18:15:20.120"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.079" endtime="20201029 18:15:20.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.077" endtime="20201029 18:15:20.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.051" endtime="20201029 18:15:20.121"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.130" endtime="20201029 18:15:20.467"></status>
</kw>
<msg timestamp="20201029 18:15:20.468" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.128" endtime="20201029 18:15:20.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.473" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.470" endtime="20201029 18:15:20.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.475" endtime="20201029 18:15:20.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.126" endtime="20201029 18:15:20.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.124" endtime="20201029 18:15:20.480"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.485" endtime="20201029 18:15:20.489"></status>
</kw>
<msg timestamp="20201029 18:15:20.490" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:20.482" endtime="20201029 18:15:20.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.498" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:20.496" endtime="20201029 18:15:20.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.502" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:20.500" endtime="20201029 18:15:20.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.491" endtime="20201029 18:15:20.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.512" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:20.510" endtime="20201029 18:15:20.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.517" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:20.515" endtime="20201029 18:15:20.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.506" endtime="20201029 18:15:20.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.534" endtime="20201029 18:15:20.833"></status>
</kw>
<msg timestamp="20201029 18:15:20.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072045708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072159403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.531" endtime="20201029 18:15:20.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072045708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072159403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:20.837" endtime="20201029 18:15:20.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.846" endtime="20201029 18:15:20.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.523" endtime="20201029 18:15:20.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.520" endtime="20201029 18:15:20.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:20.854" level="INFO">${RESULT} = [{'diff': 0.00011369499999999699}, {'diff': 0.00011215300000000372}, {'diff': 0.00011215300000000372}, {'diff': 0.00011216699999999635}, {'diff': 0.00011215300000000372}, {'diff': 0.000112181000000002...</msg>
<status status="PASS" starttime="20201029 18:15:20.850" endtime="20201029 18:15:20.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:20.858" level="INFO">${OVERHEAD} = {'diff': [0.00011369499999999699, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011215300000000372, 0.00011218100000000286, 0.00011213899999999721, 0.00011216599999999688...</msg>
<status status="PASS" starttime="20201029 18:15:20.855" endtime="20201029 18:15:20.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.862" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 18:15:20.861" endtime="20201029 18:15:20.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.865" level="INFO">VALUE: [0.00011369499999999699, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011215300000000372, 0.00011218100000000286, 0.00011213899999999721, 0.00011216599999999688, 0.00011216699999999635, 0.00011215300000000372, 0.00011211100000002583, 0.00011215200000000425, 0.00011216699999999635, 0.00011215299999997597, 0.00011218100000001674, 0.00011213899999998334, 0.00011213899999998334, 0.00011209700000000544, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011216699999999635, 0.00011216699999999635, 0.00011215300000000372, 0.00011215300000000372, 0.00011218099999998898, 0.00011216599999999688, 0.00011217999999996175, 0.00011218099999998898, 0.00011216600000002463, 0.00011216699999999635, 0.00011215300000000372, 0.00011215199999997649, 0.00011215300000000372, 0.00011215300000000372, 0.000112152000000032, 0.00011215300000000372, 0.00011215300000000372, 0.00011216699999999635, 0.00011219500000003713, 0.00011218099999998898, 0.00011213899999995558, 0.00011216600000002463, 0.00011213899999995558, 0.00011209699999997769, 0.00011213800000003937, 0.00011215300000000372, 0.00011213900000001109]</msg>
<status status="PASS" starttime="20201029 18:15:20.864" endtime="20201029 18:15:20.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.859" endtime="20201029 18:15:20.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.122" endtime="20201029 18:15:20.866"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:20.047" endtime="20201029 18:15:20.867" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:20.874" endtime="20201029 18:15:20.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.873" endtime="20201029 18:15:20.894"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.908" endtime="20201029 18:15:20.922"></status>
</kw>
<msg timestamp="20201029 18:15:20.923" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.906" endtime="20201029 18:15:20.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.925" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.924" endtime="20201029 18:15:20.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.928" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:20.927" endtime="20201029 18:15:20.929"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:20.904" endtime="20201029 18:15:20.930"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:20.901" endtime="20201029 18:15:20.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.900" endtime="20201029 18:15:20.931"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:20.935" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:20.934" endtime="20201029 18:15:20.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.931" endtime="20201029 18:15:20.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.899" endtime="20201029 18:15:20.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.899" endtime="20201029 18:15:20.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.936" endtime="20201029 18:15:20.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.897" endtime="20201029 18:15:20.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.895" endtime="20201029 18:15:20.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.871" endtime="20201029 18:15:20.939"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.948" endtime="20201029 18:15:20.969"></status>
</kw>
<msg timestamp="20201029 18:15:20.970" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.947" endtime="20201029 18:15:20.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.972" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:20.971" endtime="20201029 18:15:20.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.973" endtime="20201029 18:15:20.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.944" endtime="20201029 18:15:20.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.942" endtime="20201029 18:15:20.976"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:20.978" endtime="20201029 18:15:20.981"></status>
</kw>
<msg timestamp="20201029 18:15:20.981" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:20.977" endtime="20201029 18:15:20.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.986" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:20.985" endtime="20201029 18:15:20.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.988" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:20.987" endtime="20201029 18:15:20.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.982" endtime="20201029 18:15:20.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.992" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:20.991" endtime="20201029 18:15:20.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:20.994" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:20.993" endtime="20201029 18:15:20.995"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.989" endtime="20201029 18:15:20.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.002" endtime="20201029 18:15:21.287"></status>
</kw>
<msg timestamp="20201029 18:15:21.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067660681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067662986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.000" endtime="20201029 18:15:21.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067660681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067662986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.291" endtime="20201029 18:15:21.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.299" endtime="20201029 18:15:21.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.998" endtime="20201029 18:15:21.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.996" endtime="20201029 18:15:21.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.306" level="INFO">${RESULT} = [{'diff': 2.3049999999941173e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.319000000000626e-06}, {'diff': 2.332999999993257e-06}, {'diff': 2.3200000000000998e-06}, {'diff': 2.305000000007995e-06}...</msg>
<status status="PASS" starttime="20201029 18:15:21.303" endtime="20201029 18:15:21.306"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:21.311" level="INFO">${OVERHEAD} = {'diff': [2.3049999999941173e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.332999999993257e-06, 2.3200000000000998e-06, 2.305000000007995e-06, 2.332999999993257e-06, 2.319000000000626e-06, 2.3...</msg>
<status status="PASS" starttime="20201029 18:15:21.307" endtime="20201029 18:15:21.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.315" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 18:15:21.314" endtime="20201029 18:15:21.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.318" level="INFO">VALUE: [2.3049999999941173e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.332999999993257e-06, 2.3200000000000998e-06, 2.305000000007995e-06, 2.332999999993257e-06, 2.319000000000626e-06, 2.333000000007135e-06, 2.3340000000066086e-06, 2.3339999999927308e-06, 2.3200000000000998e-06, 2.305999999993591e-06, 2.3049999999941173e-06, 2.3049999999941173e-06, 2.305000000007995e-06, 2.3339999999927308e-06, 2.2909999999876085e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.305999999993591e-06, 2.346999999999766e-06, 2.26400000000182e-06, 2.2909999999876085e-06, 2.332999999993257e-06, 2.3200000000000998e-06, 2.319000000000626e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.319000000000626e-06, 2.26400000000182e-06, 2.277999999994451e-06, 2.319000000000626e-06, 2.3200000000000998e-06, 2.3060000000074687e-06, 2.305000000007995e-06, 2.319000000000626e-06, 2.319000000000626e-06, 2.333000000007135e-06, 2.346999999999766e-06, 2.3200000000000998e-06, 2.3200000000000998e-06, 2.3049999999941173e-06, 2.3200000000000998e-06, 2.3610000000062747e-06, 2.3060000000074687e-06, 2.333000000007135e-06, 2.3200000000000998e-06]</msg>
<status status="PASS" starttime="20201029 18:15:21.316" endtime="20201029 18:15:21.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.312" endtime="20201029 18:15:21.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:20.940" endtime="20201029 18:15:21.319"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:20.869" endtime="20201029 18:15:21.320" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.327" endtime="20201029 18:15:21.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.325" endtime="20201029 18:15:21.347"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.367" endtime="20201029 18:15:21.383"></status>
</kw>
<msg timestamp="20201029 18:15:21.384" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.365" endtime="20201029 18:15:21.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.386" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.385" endtime="20201029 18:15:21.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.389" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:21.387" endtime="20201029 18:15:21.389"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:21.361" endtime="20201029 18:15:21.390"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:21.357" endtime="20201029 18:15:21.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.356" endtime="20201029 18:15:21.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:21.395" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:21.394" endtime="20201029 18:15:21.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.392" endtime="20201029 18:15:21.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.354" endtime="20201029 18:15:21.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.354" endtime="20201029 18:15:21.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.396" endtime="20201029 18:15:21.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.351" endtime="20201029 18:15:21.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.348" endtime="20201029 18:15:21.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.324" endtime="20201029 18:15:21.399"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.409" endtime="20201029 18:15:21.515"></status>
</kw>
<msg timestamp="20201029 18:15:21.515" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.408" endtime="20201029 18:15:21.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.518" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.516" endtime="20201029 18:15:21.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.519" endtime="20201029 18:15:21.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.405" endtime="20201029 18:15:21.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.401" endtime="20201029 18:15:21.521"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.524" endtime="20201029 18:15:21.525"></status>
</kw>
<msg timestamp="20201029 18:15:21.526" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:21.522" endtime="20201029 18:15:21.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.530" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:21.529" endtime="20201029 18:15:21.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.532" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:21.531" endtime="20201029 18:15:21.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.527" endtime="20201029 18:15:21.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.537" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:21.536" endtime="20201029 18:15:21.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.539" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:21.538" endtime="20201029 18:15:21.539"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.534" endtime="20201029 18:15:21.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.547" endtime="20201029 18:15:21.840"></status>
</kw>
<msg timestamp="20201029 18:15:21.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076852569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076871208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.545" endtime="20201029 18:15:21.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076852569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076871208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:21.844" endtime="20201029 18:15:21.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.852" endtime="20201029 18:15:21.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.542" endtime="20201029 18:15:21.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.541" endtime="20201029 18:15:21.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:21.859" level="INFO">${RESULT} = [{'diff': 1.863900000000085e-05}, {'diff': 1.866699999999999e-05}, {'diff': 1.858300000000257e-05}, {'diff': 1.863899999998697e-05}, {'diff': 1.8653000000007358e-05}, {'diff': 1.863900000000085e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:21.856" endtime="20201029 18:15:21.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:21.864" level="INFO">${OVERHEAD} = {'diff': [1.863900000000085e-05, 1.866699999999999e-05, 1.858300000000257e-05, 1.863899999998697e-05, 1.8653000000007358e-05, 1.863900000000085e-05, 1.8653000000007358e-05, 1.862499999999434e-05, 1.86...</msg>
<status status="PASS" starttime="20201029 18:15:21.860" endtime="20201029 18:15:21.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.869" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 18:15:21.868" endtime="20201029 18:15:21.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.871" level="INFO">VALUE: [1.863900000000085e-05, 1.866699999999999e-05, 1.858300000000257e-05, 1.863899999998697e-05, 1.8653000000007358e-05, 1.863900000000085e-05, 1.8653000000007358e-05, 1.862499999999434e-05, 1.863900000000085e-05, 1.8651999999994007e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8651999999994007e-05, 1.868099999999262e-05, 1.863899999998697e-05, 1.863900000000085e-05, 1.863900000000085e-05, 1.8651999999994007e-05, 1.866699999999999e-05, 1.865299999999348e-05, 1.863900000000085e-05, 1.865299999999348e-05, 1.85969999999952e-05, 1.863900000000085e-05, 1.862499999999434e-05, 1.8653000000007358e-05, 1.8639000000014727e-05, 1.863899999998697e-05, 1.863899999998697e-05, 1.8681000000020376e-05, 1.866699999999999e-05, 1.8681000000020376e-05, 1.8653000000007358e-05, 1.862499999999434e-05, 1.866699999999999e-05, 1.8653000000007358e-05, 1.8652999999979603e-05, 1.862499999999434e-05, 1.863899999998697e-05, 1.863899999998697e-05, 1.865199999998013e-05, 1.8653000000007358e-05, 1.8721999999998795e-05, 1.8653000000007358e-05, 1.8583000000016447e-05, 1.863899999998697e-05, 1.866699999999999e-05]</msg>
<status status="PASS" starttime="20201029 18:15:21.870" endtime="20201029 18:15:21.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.865" endtime="20201029 18:15:21.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.400" endtime="20201029 18:15:21.872"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:21.321" endtime="20201029 18:15:21.873" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:21.880" endtime="20201029 18:15:21.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.878" endtime="20201029 18:15:21.900"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.914" endtime="20201029 18:15:21.928"></status>
</kw>
<msg timestamp="20201029 18:15:21.928" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.912" endtime="20201029 18:15:21.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.931" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.930" endtime="20201029 18:15:21.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:21.940" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:21.932" endtime="20201029 18:15:21.940"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:21.910" endtime="20201029 18:15:21.941"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:21.907" endtime="20201029 18:15:21.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.906" endtime="20201029 18:15:21.942"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:21.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:21.946" endtime="20201029 18:15:21.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.943" endtime="20201029 18:15:21.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.905" endtime="20201029 18:15:21.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.904" endtime="20201029 18:15:21.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.950" endtime="20201029 18:15:21.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.903" endtime="20201029 18:15:21.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.901" endtime="20201029 18:15:21.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.877" endtime="20201029 18:15:21.953"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:21.966" endtime="20201029 18:15:22.305"></status>
</kw>
<msg timestamp="20201029 18:15:22.306" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:21.964" endtime="20201029 18:15:22.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.311" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.308" endtime="20201029 18:15:22.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.314" endtime="20201029 18:15:22.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.960" endtime="20201029 18:15:22.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.956" endtime="20201029 18:15:22.319"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.324" endtime="20201029 18:15:22.327"></status>
</kw>
<msg timestamp="20201029 18:15:22.328" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201029 18:15:22.321" endtime="20201029 18:15:22.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.337" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 18:15:22.335" endtime="20201029 18:15:22.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.342" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 18:15:22.340" endtime="20201029 18:15:22.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.330" endtime="20201029 18:15:22.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.352" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 18:15:22.350" endtime="20201029 18:15:22.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.356" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 18:15:22.354" endtime="20201029 18:15:22.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.345" endtime="20201029 18:15:22.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.372" endtime="20201029 18:15:22.673"></status>
</kw>
<msg timestamp="20201029 18:15:22.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084724653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084759972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.369" endtime="20201029 18:15:22.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.084724653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.084759972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:22.677" endtime="20201029 18:15:22.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.685" endtime="20201029 18:15:22.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.363" endtime="20201029 18:15:22.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.359" endtime="20201029 18:15:22.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:22.693" level="INFO">${RESULT} = [{'diff': 3.5319000000005873e-05}, {'diff': 3.529200000000621e-05}, {'diff': 3.5277000000000225e-05}, {'diff': 3.531999999999147e-05}, {'diff': 3.5332999999998504e-05}, {'diff': 3.530599999999884e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:22.690" endtime="20201029 18:15:22.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 18:15:22.697" level="INFO">${OVERHEAD} = {'diff': [3.5319000000005873e-05, 3.529200000000621e-05, 3.5277000000000225e-05, 3.531999999999147e-05, 3.5332999999998504e-05, 3.530599999999884e-05, 3.5318999999991996e-05, 3.532000000000535e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:15:22.694" endtime="20201029 18:15:22.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.702" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 18:15:22.700" endtime="20201029 18:15:22.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.704" level="INFO">VALUE: [3.5319000000005873e-05, 3.529200000000621e-05, 3.5277000000000225e-05, 3.531999999999147e-05, 3.5332999999998504e-05, 3.530599999999884e-05, 3.5318999999991996e-05, 3.532000000000535e-05, 3.5346999999991136e-05, 3.5292000000020085e-05, 3.531899999997812e-05, 3.532000000000535e-05, 3.529199999999233e-05, 3.530499999998549e-05, 3.530599999998496e-05, 3.536100000001152e-05, 3.537500000000415e-05, 3.5402999999989415e-05, 3.5319000000005873e-05, 3.5332999999998504e-05, 3.5332999999998504e-05, 3.529199999999233e-05, 3.5319000000005873e-05, 3.530499999998549e-05, 3.532000000000535e-05, 3.5319000000005873e-05, 3.5319000000005873e-05, 3.534700000001889e-05, 3.533300000002626e-05, 3.5305999999957205e-05, 3.531900000003363e-05, 3.5305999999957205e-05, 3.532000000000535e-05, 3.537500000000415e-05, 3.530499999998549e-05, 3.5306000000012716e-05, 3.5292000000020085e-05, 3.5292000000020085e-05, 3.531900000003363e-05, 3.534700000001889e-05, 3.5290999999992856e-05, 3.5305999999957205e-05, 3.531899999997812e-05, 3.532000000000535e-05, 3.531899999997812e-05, 3.5305000000041e-05, 3.532000000000535e-05, 3.530499999998549e-05, 3.5306000000012716e-05, 3.5401999999962186e-05]</msg>
<status status="PASS" starttime="20201029 18:15:22.703" endtime="20201029 18:15:22.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.698" endtime="20201029 18:15:22.705"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:21.954" endtime="20201029 18:15:22.705"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:21.875" endtime="20201029 18:15:22.706" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:22.713" endtime="20201029 18:15:22.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.711" endtime="20201029 18:15:22.733"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.747" endtime="20201029 18:15:22.761"></status>
</kw>
<msg timestamp="20201029 18:15:22.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.746" endtime="20201029 18:15:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:22.763" endtime="20201029 18:15:22.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.767" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:22.765" endtime="20201029 18:15:22.768"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:22.743" endtime="20201029 18:15:22.768"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:22.740" endtime="20201029 18:15:22.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.739" endtime="20201029 18:15:22.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:22.773" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:22.772" endtime="20201029 18:15:22.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.770" endtime="20201029 18:15:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.738" endtime="20201029 18:15:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.737" endtime="20201029 18:15:22.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:22.775" endtime="20201029 18:15:22.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.736" endtime="20201029 18:15:22.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.734" endtime="20201029 18:15:22.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.710" endtime="20201029 18:15:22.777"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:22.781" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:22.790" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:24.054" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:22.780" endtime="20201029 18:15:24.055"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.057" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:24.056" endtime="20201029 18:15:24.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:22.778" endtime="20201029 18:15:24.058"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.062" endtime="20201029 18:15:24.081"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.060" endtime="20201029 18:15:24.082"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.091" endtime="20201029 18:15:24.098"></status>
</kw>
<msg timestamp="20201029 18:15:24.099" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.089" endtime="20201029 18:15:24.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.102" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.100" endtime="20201029 18:15:24.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.103" endtime="20201029 18:15:24.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.086" endtime="20201029 18:15:24.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.084" endtime="20201029 18:15:24.106"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.114" endtime="20201029 18:15:24.397"></status>
</kw>
<msg timestamp="20201029 18:15:24.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018147431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018155125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.113" endtime="20201029 18:15:24.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018147431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018155125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.401" endtime="20201029 18:15:24.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.409" endtime="20201029 18:15:24.411"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.108" endtime="20201029 18:15:24.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.107" endtime="20201029 18:15:24.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:24.416" level="INFO">${PHILIP_RES} = [{'diff': 7.694000000002532e-06}, {'diff': 7.680999999998966e-06}, {'diff': 7.693999999999063e-06}, {'diff': 7.707999999998633e-06}, {'diff': 7.652999999999827e-06}, {'diff': 7.777999999999952e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:24.413" endtime="20201029 18:15:24.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.421" level="INFO">${RESULT} = {'diff': [7.694000000002532e-06, 7.680999999998966e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.652999999999827e-06, 7.777999999999952e-06, 7.708000000002102e-06, 7.708999999998106e-06, 7.6800...</msg>
<status status="PASS" starttime="20201029 18:15:24.417" endtime="20201029 18:15:24.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.425" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:24.424" endtime="20201029 18:15:24.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.428" level="INFO">VALUE: [7.694000000002532e-06, 7.680999999998966e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.652999999999827e-06, 7.777999999999952e-06, 7.708000000002102e-06, 7.708999999998106e-06, 7.680000000002962e-06, 7.707999999998633e-06, 7.695000000002006e-06, 7.679999999999493e-06, 7.680999999998966e-06, 7.680999999998966e-06, 7.694000000002532e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.707999999998633e-06, 7.695000000002006e-06, 7.693999999999063e-06, 7.681000000002436e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.679999999999493e-06, 7.708000000002102e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.680999999998966e-06, 7.693999999999063e-06, 7.708000000002102e-06, 7.749999999997342e-06, 7.721999999998203e-06, 7.666999999999397e-06, 7.694999999998536e-06, 7.694000000002532e-06, 7.666999999999397e-06, 7.680999999998966e-06, 7.679999999999493e-06, 7.721999999998203e-06, 7.695000000002006e-06, 7.708000000002102e-06, 7.680999999998966e-06, 7.709000000001576e-06, 7.693999999999063e-06, 7.707999999998633e-06, 7.667000000002866e-06, 7.679999999999493e-06]</msg>
<status status="PASS" starttime="20201029 18:15:24.426" endtime="20201029 18:15:24.428"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.422" endtime="20201029 18:15:24.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.083" endtime="20201029 18:15:24.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.059" endtime="20201029 18:15:24.429"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.432" endtime="20201029 18:15:24.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.430" endtime="20201029 18:15:24.452"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.466" endtime="20201029 18:15:24.476"></status>
</kw>
<msg timestamp="20201029 18:15:24.477" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.463" endtime="20201029 18:15:24.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.480" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.478" endtime="20201029 18:15:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.482" endtime="20201029 18:15:24.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.459" endtime="20201029 18:15:24.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.456" endtime="20201029 18:15:24.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.494" endtime="20201029 18:15:24.779"></status>
</kw>
<msg timestamp="20201029 18:15:24.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.492" endtime="20201029 18:15:24.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024552722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024567833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.783" endtime="20201029 18:15:24.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.791" endtime="20201029 18:15:24.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.489" endtime="20201029 18:15:24.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.487" endtime="20201029 18:15:24.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:24.798" level="INFO">${PHILIP_RES} = [{'diff': 1.5111000000001679e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.5083000000002539e-05}, {'diff': 1.5153000000000388e-05}, {'diff': 1.5139000000000818e-05}, {'diff': 1.5153000000000388e-...</msg>
<status status="PASS" starttime="20201029 18:15:24.795" endtime="20201029 18:15:24.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:24.803" level="INFO">${RESULT} = {'diff': [1.5111000000001679e-05, 1.5139000000000818e-05, 1.5083000000002539e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05...</msg>
<status status="PASS" starttime="20201029 18:15:24.799" endtime="20201029 18:15:24.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.807" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:24.806" endtime="20201029 18:15:24.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.810" level="INFO">VALUE: [1.5111000000001679e-05, 1.5139000000000818e-05, 1.5083000000002539e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5152000000000915e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5166999999999958e-05, 1.5153000000000388e-05, 1.5138999999997349e-05, 1.5193999999999624e-05, 1.5152999999996919e-05, 1.5166999999999958e-05, 1.5180999999999528e-05, 1.5153000000000388e-05, 1.5124999999997779e-05, 1.5097000000002109e-05, 1.5153000000000388e-05, 1.5125000000001249e-05, 1.5208000000002664e-05, 1.5152000000000915e-05, 1.5124999999997779e-05, 1.5125000000001249e-05, 1.5138999999997349e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5138000000001345e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5153000000000388e-05, 1.5139000000000818e-05, 1.5166000000000485e-05, 1.5139000000000818e-05, 1.508299999999907e-05, 1.5153000000000388e-05, 1.5153000000000388e-05, 1.5152000000000915e-05]</msg>
<status status="PASS" starttime="20201029 18:15:24.808" endtime="20201029 18:15:24.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.804" endtime="20201029 18:15:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.453" endtime="20201029 18:15:24.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.430" endtime="20201029 18:15:24.811"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:24.814" endtime="20201029 18:15:24.833"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.812" endtime="20201029 18:15:24.834"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.842" endtime="20201029 18:15:24.851"></status>
</kw>
<msg timestamp="20201029 18:15:24.852" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.840" endtime="20201029 18:15:24.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:24.855" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:24.853" endtime="20201029 18:15:24.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.856" endtime="20201029 18:15:24.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.838" endtime="20201029 18:15:24.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.836" endtime="20201029 18:15:24.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:24.866" endtime="20201029 18:15:25.152"></status>
</kw>
<msg timestamp="20201029 18:15:25.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017789444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:24.865" endtime="20201029 18:15:25.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017789444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017813097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.157" endtime="20201029 18:15:25.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.165" endtime="20201029 18:15:25.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.862" endtime="20201029 18:15:25.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.860" endtime="20201029 18:15:25.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:25.172" level="INFO">${PHILIP_RES} = [{'diff': 2.365299999999848e-05}, {'diff': 2.368100000000109e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.3666000000002047e-05}, {'diff': 2.366700000000152e-05}, {'diff': 2.368100000000109e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:25.168" endtime="20201029 18:15:25.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.177" level="INFO">${RESULT} = {'diff': [2.365299999999848e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.3666000000002047e-05, 2.366700000000152e-05, 2.368100000000109e-05, 2.365300000000195e-05, 2.3652000000002477e-05, 2.36...</msg>
<status status="PASS" starttime="20201029 18:15:25.173" endtime="20201029 18:15:25.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.181" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:25.180" endtime="20201029 18:15:25.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.184" level="INFO">VALUE: [2.365299999999848e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.3666000000002047e-05, 2.366700000000152e-05, 2.368100000000109e-05, 2.365300000000195e-05, 2.3652000000002477e-05, 2.368100000000109e-05, 2.366700000000152e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.365299999999848e-05, 2.366699999999805e-05, 2.3679999999998147e-05, 2.3693999999997717e-05, 2.368099999999762e-05, 2.363899999999891e-05, 2.3651999999999007e-05, 2.365300000000195e-05, 2.368100000000109e-05, 2.3652000000002477e-05, 2.366700000000152e-05, 2.369500000000066e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.365299999999848e-05, 2.3651999999999007e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3665999999998577e-05, 2.366699999999805e-05, 2.366699999999805e-05, 2.3693999999997717e-05, 2.368099999999762e-05, 2.368099999999762e-05, 2.365299999999848e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.3666000000002047e-05, 2.366700000000152e-05, 2.368100000000109e-05, 2.3666000000002047e-05, 2.366700000000152e-05, 2.368100000000109e-05, 2.3666000000002047e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.182" endtime="20201029 18:15:25.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.178" endtime="20201029 18:15:25.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.834" endtime="20201029 18:15:25.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.812" endtime="20201029 18:15:25.185"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.188" endtime="20201029 18:15:25.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.186" endtime="20201029 18:15:25.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.216" endtime="20201029 18:15:25.226"></status>
</kw>
<msg timestamp="20201029 18:15:25.226" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.215" endtime="20201029 18:15:25.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.229" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.228" endtime="20201029 18:15:25.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.230" endtime="20201029 18:15:25.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.212" endtime="20201029 18:15:25.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.210" endtime="20201029 18:15:25.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.239" endtime="20201029 18:15:25.527"></status>
</kw>
<msg timestamp="20201029 18:15:25.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017880583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.238" endtime="20201029 18:15:25.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017880583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017913778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.531" endtime="20201029 18:15:25.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.539" endtime="20201029 18:15:25.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.235" endtime="20201029 18:15:25.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.234" endtime="20201029 18:15:25.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:25.546" level="INFO">${PHILIP_RES} = [{'diff': 3.319500000000322e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.327800000000117e-05}, {'diff': 3.3276999999998225e-05}, {'diff': 3.3290999999997795e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:25.542" endtime="20201029 18:15:25.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.550" level="INFO">${RESULT} = {'diff': [3.319500000000322e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.3276999999998225e-05, 3.3290999999997795e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.330...</msg>
<status status="PASS" starttime="20201029 18:15:25.547" endtime="20201029 18:15:25.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.554" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:25.553" endtime="20201029 18:15:25.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.557" level="INFO">VALUE: [3.319500000000322e-05, 3.326399999999813e-05, 3.327800000000117e-05, 3.327800000000117e-05, 3.3276999999998225e-05, 3.3290999999997795e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.330600000000031e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.329200000000074e-05, 3.3277000000001694e-05, 3.3319000000000404e-05, 3.324999999999856e-05, 3.32640000000016e-05, 3.3332999999999974e-05, 3.32640000000016e-05, 3.329199999999727e-05, 3.327800000000117e-05, 3.325000000000203e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.320899999999932e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.326399999999813e-05, 3.3263000000002124e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.329199999999727e-05, 3.320799999999985e-05, 3.325000000000203e-05, 3.327800000000117e-05, 3.324999999999856e-05, 3.3290999999997795e-05, 3.32640000000016e-05, 3.327800000000117e-05, 3.3346999999999544e-05, 3.326399999999813e-05, 3.331999999999988e-05, 3.327800000000117e-05, 3.326399999999813e-05, 3.324999999999856e-05, 3.327800000000117e-05, 3.32640000000016e-05, 3.32640000000016e-05, 3.32779999999977e-05, 3.327800000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.555" endtime="20201029 18:15:25.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.551" endtime="20201029 18:15:25.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.208" endtime="20201029 18:15:25.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.186" endtime="20201029 18:15:25.558"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.561" endtime="20201029 18:15:25.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.559" endtime="20201029 18:15:25.581"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.589" endtime="20201029 18:15:25.600"></status>
</kw>
<msg timestamp="20201029 18:15:25.601" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.587" endtime="20201029 18:15:25.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.604" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.602" endtime="20201029 18:15:25.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.605" endtime="20201029 18:15:25.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.585" endtime="20201029 18:15:25.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.583" endtime="20201029 18:15:25.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.614" endtime="20201029 18:15:25.917"></status>
</kw>
<msg timestamp="20201029 18:15:25.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019079083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.612" endtime="20201029 18:15:25.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019079083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019123014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:25.923" endtime="20201029 18:15:25.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.933" endtime="20201029 18:15:25.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.610" endtime="20201029 18:15:25.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.608" endtime="20201029 18:15:25.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:25.941" level="INFO">${PHILIP_RES} = [{'diff': 4.3931000000000525e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.3958999999999665e-05}, {'diff': 4.3902999999997916e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.395800000000019e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:25.937" endtime="20201029 18:15:25.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:25.946" level="INFO">${RESULT} = {'diff': [4.3931000000000525e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.3902999999997916e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.394400000000062e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:15:25.942" endtime="20201029 18:15:25.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.950" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:25.949" endtime="20201029 18:15:25.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:25.954" level="INFO">VALUE: [4.3931000000000525e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.3902999999997916e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.394400000000062e-05, 4.397199999999976e-05, 4.3945000000000095e-05, 4.397199999999976e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.3903000000001385e-05, 4.39999999999989e-05, 4.3945000000000095e-05, 4.3972999999999235e-05, 4.395800000000019e-05, 4.393000000000105e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.394399999999715e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.395800000000019e-05, 4.397199999999976e-05, 4.3958999999999665e-05, 4.398599999999933e-05, 4.395800000000019e-05, 4.393000000000105e-05, 4.3958999999999665e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3958999999999665e-05, 4.395800000000019e-05, 4.398599999999933e-05, 4.404199999999761e-05, 4.3972999999999235e-05, 4.397199999999976e-05, 4.401400000000194e-05, 4.39860000000028e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.395800000000019e-05, 4.3972999999999235e-05, 4.39999999999989e-05, 4.394400000000062e-05, 4.402800000000151e-05, 4.397199999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:15:25.952" endtime="20201029 18:15:25.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.947" endtime="20201029 18:15:25.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.581" endtime="20201029 18:15:25.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.559" endtime="20201029 18:15:25.957"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:25.959" endtime="20201029 18:15:25.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.958" endtime="20201029 18:15:25.979"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:25.989" endtime="20201029 18:15:26.001"></status>
</kw>
<msg timestamp="20201029 18:15:26.001" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:25.987" endtime="20201029 18:15:26.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.004" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.002" endtime="20201029 18:15:26.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.005" endtime="20201029 18:15:26.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.984" endtime="20201029 18:15:26.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.982" endtime="20201029 18:15:26.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.014" endtime="20201029 18:15:26.313"></status>
</kw>
<msg timestamp="20201029 18:15:26.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.012" endtime="20201029 18:15:26.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019988014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020043708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.318" endtime="20201029 18:15:26.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.326" endtime="20201029 18:15:26.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.010" endtime="20201029 18:15:26.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.008" endtime="20201029 18:15:26.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:26.333" level="INFO">${PHILIP_RES} = [{'diff': 5.5694000000001964e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5736000000000674e-05}, {'diff': 5.573700000000015e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.5750000000000244e-0...</msg>
<status status="PASS" starttime="20201029 18:15:26.329" endtime="20201029 18:15:26.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.338" level="INFO">${RESULT} = {'diff': [5.5694000000001964e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.579099999999948e-05, 5.5735999999997204e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:26.334" endtime="20201029 18:15:26.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.342" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:26.341" endtime="20201029 18:15:26.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.345" level="INFO">VALUE: [5.5694000000001964e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5763999999999814e-05, 5.5750000000000244e-05, 5.579099999999948e-05, 5.5735999999997204e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.5721999999997635e-05, 5.573700000000015e-05, 5.5736000000000674e-05, 5.5736000000000674e-05, 5.570899999999754e-05, 5.573700000000015e-05, 5.5721999999997635e-05, 5.5708000000001534e-05, 5.5736000000000674e-05, 5.572300000000058e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.5750000000000244e-05, 5.577699999999991e-05, 5.573700000000015e-05, 5.5693999999998495e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.577699999999991e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.5722000000001104e-05, 5.570900000000101e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5707999999998065e-05, 5.5694000000001964e-05, 5.573700000000015e-05, 5.5750000000000244e-05, 5.5722000000001104e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.5735999999997204e-05, 5.5722000000001104e-05, 5.5749999999996774e-05, 5.570900000000101e-05, 5.572299999999711e-05, 5.5736000000000674e-05, 5.566699999999883e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.343" endtime="20201029 18:15:26.345"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.339" endtime="20201029 18:15:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.980" endtime="20201029 18:15:26.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:25.957" endtime="20201029 18:15:26.346"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.349" endtime="20201029 18:15:26.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.347" endtime="20201029 18:15:26.368"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.377" endtime="20201029 18:15:26.389"></status>
</kw>
<msg timestamp="20201029 18:15:26.389" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.375" endtime="20201029 18:15:26.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.392" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.390" endtime="20201029 18:15:26.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.393" endtime="20201029 18:15:26.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.372" endtime="20201029 18:15:26.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.370" endtime="20201029 18:15:26.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.402" endtime="20201029 18:15:26.687"></status>
</kw>
<msg timestamp="20201029 18:15:26.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018110153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.400" endtime="20201029 18:15:26.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018110153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018178722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.691" endtime="20201029 18:15:26.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.699" endtime="20201029 18:15:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.398" endtime="20201029 18:15:26.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.396" endtime="20201029 18:15:26.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:26.707" level="INFO">${PHILIP_RES} = [{'diff': 6.856900000000096e-05}, {'diff': 6.858300000000053e-05}, {'diff': 6.862500000000271e-05}, {'diff': 6.861099999999967e-05}, {'diff': 6.8584e-05}, {'diff': 6.854099999999835e-05}, {'diff': 6.8...</msg>
<status status="PASS" starttime="20201029 18:15:26.703" endtime="20201029 18:15:26.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:26.711" level="INFO">${RESULT} = {'diff': [6.856900000000096e-05, 6.858300000000053e-05, 6.862500000000271e-05, 6.861099999999967e-05, 6.8584e-05, 6.854099999999835e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.858299999999706e...</msg>
<status status="PASS" starttime="20201029 18:15:26.708" endtime="20201029 18:15:26.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.715" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:26.714" endtime="20201029 18:15:26.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.717" level="INFO">VALUE: [6.856900000000096e-05, 6.858300000000053e-05, 6.862500000000271e-05, 6.861099999999967e-05, 6.8584e-05, 6.854099999999835e-05, 6.858300000000053e-05, 6.85970000000001e-05, 6.858299999999706e-05, 6.849999999999912e-05, 6.861099999999967e-05, 6.856999999999697e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.857000000000044e-05, 6.855600000000087e-05, 6.85970000000001e-05, 6.85970000000001e-05, 6.849999999999912e-05, 6.859799999999958e-05, 6.861099999999967e-05, 6.85420000000013e-05, 6.85970000000001e-05, 6.8584e-05, 6.857000000000044e-05, 6.858300000000053e-05, 6.859799999999958e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.856900000000096e-05, 6.858300000000053e-05, 6.8584e-05, 6.852799999999826e-05, 6.8584e-05, 6.863899999999881e-05, 6.85970000000001e-05, 6.861099999999967e-05, 6.865299999999838e-05, 6.85970000000001e-05, 6.858300000000053e-05, 6.858300000000053e-05, 6.865300000000185e-05, 6.85970000000001e-05, 6.8584e-05, 6.858299999999706e-05, 6.865199999999891e-05, 6.855499999999792e-05, 6.858299999999706e-05, 6.859799999999958e-05, 6.858300000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:15:26.716" endtime="20201029 18:15:26.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.711" endtime="20201029 18:15:26.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.369" endtime="20201029 18:15:26.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.346" endtime="20201029 18:15:26.719"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:26.721" endtime="20201029 18:15:26.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.720" endtime="20201029 18:15:26.741"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.750" endtime="20201029 18:15:26.762"></status>
</kw>
<msg timestamp="20201029 18:15:26.763" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.748" endtime="20201029 18:15:26.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:26.765" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:26.764" endtime="20201029 18:15:26.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.766" endtime="20201029 18:15:26.771"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.746" endtime="20201029 18:15:26.772"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.743" endtime="20201029 18:15:26.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:26.778" endtime="20201029 18:15:27.086"></status>
</kw>
<msg timestamp="20201029 18:15:27.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:26.777" endtime="20201029 18:15:27.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018120847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018203361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.095" endtime="20201029 18:15:27.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.113" endtime="20201029 18:15:27.117"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.774" endtime="20201029 18:15:27.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.773" endtime="20201029 18:15:27.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.127" level="INFO">${PHILIP_RES} = [{'diff': 8.251400000000228e-05}, {'diff': 8.251399999999881e-05}, {'diff': 8.252800000000185e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.252800000000185e-05}, {'diff': 8.255500000000152e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.121" endtime="20201029 18:15:27.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.136" level="INFO">${RESULT} = {'diff': [8.251400000000228e-05, 8.251399999999881e-05, 8.252800000000185e-05, 8.249999999999924e-05, 8.252800000000185e-05, 8.255500000000152e-05, 8.252799999999838e-05, 8.251400000000228e-05, 8.2528...</msg>
<status status="PASS" starttime="20201029 18:15:27.129" endtime="20201029 18:15:27.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.145" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.143" endtime="20201029 18:15:27.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.150" level="INFO">VALUE: [8.251400000000228e-05, 8.251399999999881e-05, 8.252800000000185e-05, 8.249999999999924e-05, 8.252800000000185e-05, 8.255500000000152e-05, 8.252799999999838e-05, 8.251400000000228e-05, 8.252800000000185e-05, 8.252799999999838e-05, 8.248599999999967e-05, 8.255600000000099e-05, 8.252800000000185e-05, 8.254200000000142e-05, 8.256899999999762e-05, 8.252700000000238e-05, 8.252799999999838e-05, 8.249999999999924e-05, 8.252800000000185e-05, 8.249999999999924e-05, 8.254200000000142e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.252699999999891e-05, 8.252799999999838e-05, 8.248599999999967e-05, 8.252799999999838e-05, 8.255600000000099e-05, 8.252799999999838e-05, 8.251399999999881e-05, 8.252700000000238e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.252800000000185e-05, 8.251299999999934e-05, 8.254200000000142e-05, 8.254199999999795e-05, 8.252800000000185e-05, 8.251299999999934e-05, 8.258399999999666e-05, 8.251400000000228e-05, 8.252799999999838e-05, 8.249999999999924e-05, 8.254200000000142e-05, 8.252799999999838e-05, 8.252800000000185e-05, 8.248599999999967e-05, 8.252800000000185e-05, 8.255500000000152e-05, 8.258299999999719e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.147" endtime="20201029 18:15:27.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.138" endtime="20201029 18:15:27.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.742" endtime="20201029 18:15:27.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:26.719" endtime="20201029 18:15:27.155"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.160" endtime="20201029 18:15:27.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.157" endtime="20201029 18:15:27.182"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.190" endtime="20201029 18:15:27.203"></status>
</kw>
<msg timestamp="20201029 18:15:27.204" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.188" endtime="20201029 18:15:27.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.206" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.205" endtime="20201029 18:15:27.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.207" endtime="20201029 18:15:27.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.186" endtime="20201029 18:15:27.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.184" endtime="20201029 18:15:27.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.216" endtime="20201029 18:15:27.502"></status>
</kw>
<msg timestamp="20201029 18:15:27.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019032444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019129944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.215" endtime="20201029 18:15:27.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019032444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019129944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.506" endtime="20201029 18:15:27.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.514" endtime="20201029 18:15:27.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.212" endtime="20201029 18:15:27.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.210" endtime="20201029 18:15:27.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.521" level="INFO">${PHILIP_RES} = [{'diff': 9.750000000000036e-05}, {'diff': 9.754199999999907e-05}, {'diff': 9.755600000000211e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.758299999999831e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:27.518" endtime="20201029 18:15:27.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.526" level="INFO">${RESULT} = {'diff': [9.750000000000036e-05, 9.754199999999907e-05, 9.755600000000211e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.758299999999831e-05, 9.754199999999907e-05, 9.754199999999907e-05, 9.7540...</msg>
<status status="PASS" starttime="20201029 18:15:27.522" endtime="20201029 18:15:27.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.530" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.529" endtime="20201029 18:15:27.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.533" level="INFO">VALUE: [9.750000000000036e-05, 9.754199999999907e-05, 9.755600000000211e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.758299999999831e-05, 9.754199999999907e-05, 9.754199999999907e-05, 9.75409999999996e-05, 9.756899999999874e-05, 9.755599999999864e-05, 9.754199999999907e-05, 9.754100000000307e-05, 9.75409999999996e-05, 9.755499999999917e-05, 9.754199999999907e-05, 9.75279999999995e-05, 9.750000000000036e-05, 9.755600000000211e-05, 9.755599999999864e-05, 9.759800000000082e-05, 9.75409999999996e-05, 9.755500000000264e-05, 9.756899999999874e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.755499999999917e-05, 9.755600000000211e-05, 9.751399999999993e-05, 9.755599999999864e-05, 9.758299999999831e-05, 9.750000000000036e-05, 9.757000000000168e-05, 9.755600000000211e-05, 9.756899999999874e-05, 9.758299999999831e-05, 9.755600000000211e-05, 9.750000000000036e-05, 9.75279999999995e-05, 9.755499999999917e-05, 9.761100000000092e-05, 9.757000000000168e-05, 9.755600000000211e-05, 9.75279999999995e-05, 9.756899999999874e-05, 9.756999999999821e-05, 9.748599999999732e-05, 9.755500000000264e-05, 9.755499999999917e-05, 9.755599999999864e-05]</msg>
<status status="PASS" starttime="20201029 18:15:27.532" endtime="20201029 18:15:27.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.527" endtime="20201029 18:15:27.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.182" endtime="20201029 18:15:27.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.156" endtime="20201029 18:15:27.535"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.537" endtime="20201029 18:15:27.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.536" endtime="20201029 18:15:27.557"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.566" endtime="20201029 18:15:27.580"></status>
</kw>
<msg timestamp="20201029 18:15:27.580" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.564" endtime="20201029 18:15:27.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.583" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.581" endtime="20201029 18:15:27.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.584" endtime="20201029 18:15:27.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.561" endtime="20201029 18:15:27.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.559" endtime="20201029 18:15:27.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.593" endtime="20201029 18:15:27.879"></status>
</kw>
<msg timestamp="20201029 18:15:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017782681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.592" endtime="20201029 18:15:27.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017782681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:27.883" endtime="20201029 18:15:27.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.891" endtime="20201029 18:15:27.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.589" endtime="20201029 18:15:27.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.587" endtime="20201029 18:15:27.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:27.905" level="INFO">${PHILIP_RES} = [{'diff': 0.00011365199999999881}, {'diff': 0.00011366600000000185}, {'diff': 0.00011365299999999828}, {'diff': 0.00011363899999999871}, {'diff': 0.00011359800000000295}, {'diff': 0.000113735999999999...</msg>
<status status="PASS" starttime="20201029 18:15:27.899" endtime="20201029 18:15:27.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:27.914" level="INFO">${RESULT} = {'diff': [0.00011365199999999881, 0.00011366600000000185, 0.00011365299999999828, 0.00011363899999999871, 0.00011359800000000295, 0.0001137359999999997, 0.00011366700000000132, 0.00011365300000000175,...</msg>
<status status="PASS" starttime="20201029 18:15:27.907" endtime="20201029 18:15:27.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.924" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:27.922" endtime="20201029 18:15:27.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:27.930" level="INFO">VALUE: [0.00011365199999999881, 0.00011366600000000185, 0.00011365299999999828, 0.00011363899999999871, 0.00011359800000000295, 0.0001137359999999997, 0.00011366700000000132, 0.00011365300000000175, 0.00011362499999999914, 0.00011365299999999828, 0.00011365299999999828, 0.00011368100000000089, 0.00011363900000000218, 0.00011362499999999914, 0.00011366700000000132, 0.00012562499999999727, 0.00011366699999999785, 0.00011368000000000142, 0.00011366700000000132, 0.00011369400000000099, 0.00011365300000000175, 0.00011365299999999828, 0.00011365299999999828, 0.00011366699999999785, 0.00011363900000000218, 0.00011366700000000132, 0.00011369500000000046, 0.00011363899999999871, 0.00011366699999999785, 0.00011365299999999828, 0.00011366700000000132, 0.00011363900000000218, 0.000113597, 0.00011366600000000185, 0.00011365199999999881, 0.00011366599999999838, 0.00011365199999999881, 0.00011370800000000056, 0.00011366700000000132, 0.00011365199999999881, 0.00011365299999999828, 0.00011368099999999742, 0.00011365299999999828, 0.00011366699999999785, 0.00011363900000000218, 0.00011365300000000175, 0.00011369399999999752, 0.00011368099999999742, 0.00011366699999999785, 0.00011365299999999828]</msg>
<status status="PASS" starttime="20201029 18:15:27.927" endtime="20201029 18:15:27.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.916" endtime="20201029 18:15:27.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.558" endtime="20201029 18:15:27.934"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.535" endtime="20201029 18:15:27.934"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:27.940" endtime="20201029 18:15:27.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.936" endtime="20201029 18:15:27.963"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:27.981" endtime="20201029 18:15:27.998"></status>
</kw>
<msg timestamp="20201029 18:15:27.998" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.977" endtime="20201029 18:15:27.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.001" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:27.999" endtime="20201029 18:15:28.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.002" endtime="20201029 18:15:28.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.972" endtime="20201029 18:15:28.005"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.967" endtime="20201029 18:15:28.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.012" endtime="20201029 18:15:28.298"></status>
</kw>
<msg timestamp="20201029 18:15:28.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030997458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031128264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.010" endtime="20201029 18:15:28.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030997458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031128264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.302" endtime="20201029 18:15:28.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.310" endtime="20201029 18:15:28.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.008" endtime="20201029 18:15:28.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.006" endtime="20201029 18:15:28.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:28.317" level="INFO">${PHILIP_RES} = [{'diff': 0.00013080600000000067}, {'diff': 0.0001308469999999999}, {'diff': 0.00013084699999999644}, {'diff': 0.00013084699999999644}, {'diff': 0.00013090300000000166}, {'diff': 0.0001308750000000025...</msg>
<status status="PASS" starttime="20201029 18:15:28.313" endtime="20201029 18:15:28.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.321" level="INFO">${RESULT} = {'diff': [0.00013080600000000067, 0.0001308469999999999, 0.00013084699999999644, 0.00013084699999999644, 0.00013090300000000166, 0.00013087500000000252, 0.00013086100000000295, 0.00013083299999999687,...</msg>
<status status="PASS" starttime="20201029 18:15:28.318" endtime="20201029 18:15:28.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.325" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:28.324" endtime="20201029 18:15:28.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.328" level="INFO">VALUE: [0.00013080600000000067, 0.0001308469999999999, 0.00013084699999999644, 0.00013084699999999644, 0.00013090300000000166, 0.00013087500000000252, 0.00013086100000000295, 0.00013083299999999687, 0.0001307769999999986, 0.00013087500000000252, 0.00013079199999999763, 0.000130860999999996, 0.00013083299999999687, 0.0001308330000000038, 0.00013084800000000285, 0.000130860999999996, 0.000130860999999996, 0.00013084700000000338, 0.00013084700000000338, 0.00013079099999999816, 0.00013083399999999634, 0.00013084699999999644, 0.0001308330000000038, 0.00013084700000000338, 0.00013076299999999902, 0.0001308479999999959, 0.00013084700000000338, 0.00013091700000000123, 0.00013084699999999644, 0.000130860999999996, 0.00013080600000000414, 0.0001308330000000038, 0.00013086100000000295, 0.0001308059999999972, 0.00013084699999999644, 0.00013083400000000328, 0.00013083400000000328, 0.00013084699999999644, 0.00013080499999999773, 0.0001308890000000021, 0.00013084800000000285, 0.00013087499999999558, 0.00013088899999999515, 0.00013086100000000295, 0.00013084700000000338, 0.00013086100000000295, 0.00013081999999999677, 0.00013086100000000295, 0.00013081900000000424, 0.00013084700000000338]</msg>
<status status="PASS" starttime="20201029 18:15:28.326" endtime="20201029 18:15:28.329"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.322" endtime="20201029 18:15:28.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.964" endtime="20201029 18:15:28.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:27.935" endtime="20201029 18:15:28.330"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.333" endtime="20201029 18:15:28.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.331" endtime="20201029 18:15:28.353"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.361" endtime="20201029 18:15:28.377"></status>
</kw>
<msg timestamp="20201029 18:15:28.378" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.359" endtime="20201029 18:15:28.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.380" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.379" endtime="20201029 18:15:28.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.381" endtime="20201029 18:15:28.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.357" endtime="20201029 18:15:28.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.355" endtime="20201029 18:15:28.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.390" endtime="20201029 18:15:28.678"></status>
</kw>
<msg timestamp="20201029 18:15:28.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.389" endtime="20201029 18:15:28.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017747042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017896097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.682" endtime="20201029 18:15:28.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.690" endtime="20201029 18:15:28.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.386" endtime="20201029 18:15:28.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.384" endtime="20201029 18:15:28.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:28.697" level="INFO">${PHILIP_RES} = [{'diff': 0.00014905499999999863}, {'diff': 0.00014912499999999995}, {'diff': 0.00014912499999999995}, {'diff': 0.00014912499999999995}, {'diff': 0.0001491659999999992}, {'diff': 0.0001491119999999998...</msg>
<status status="PASS" starttime="20201029 18:15:28.694" endtime="20201029 18:15:28.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:28.702" level="INFO">${RESULT} = {'diff': [0.00014905499999999863, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.0001491659999999992, 0.00014911199999999986, 0.00014916699999999866, 0.0001491529999999991, ...</msg>
<status status="PASS" starttime="20201029 18:15:28.698" endtime="20201029 18:15:28.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.706" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:28.705" endtime="20201029 18:15:28.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.709" level="INFO">VALUE: [0.00014905499999999863, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.0001491659999999992, 0.00014911199999999986, 0.00014916699999999866, 0.0001491529999999991, 0.00014911100000000038, 0.00014913899999999952, 0.00014912499999999995, 0.00014912499999999995, 0.00014911100000000038, 0.0001490970000000008, 0.00014907000000000115, 0.00014912499999999995, 0.00014912499999999995, 0.00014913899999999952, 0.00014913899999999952, 0.00014908299999999777, 0.00014911100000000038, 0.00014912499999999995, 0.00014911100000000038, 0.00014909800000000029, 0.00014911100000000038, 0.00014912499999999995, 0.00014909800000000029, 0.00014908299999999777, 0.000149139000000003, 0.00014913899999999952, 0.00014913899999999952, 0.00014912499999999995, 0.00014912499999999995, 0.0001490970000000008, 0.00014912499999999995, 0.0001490559999999981, 0.00014912499999999995, 0.0001490970000000008, 0.0001491529999999991, 0.00014909800000000029, 0.00014911100000000038, 0.00014912499999999995, 0.00014908299999999777, 0.00014913899999999952, 0.00014915199999999962, 0.00014912499999999995, 0.00014912499999999995, 0.00014912499999999995, 0.00014911199999999986, 0.0001490970000000008]</msg>
<status status="PASS" starttime="20201029 18:15:28.707" endtime="20201029 18:15:28.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.703" endtime="20201029 18:15:28.710"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.353" endtime="20201029 18:15:28.711"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.331" endtime="20201029 18:15:28.711"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:28.713" endtime="20201029 18:15:28.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.712" endtime="20201029 18:15:28.733"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.741" endtime="20201029 18:15:28.759"></status>
</kw>
<msg timestamp="20201029 18:15:28.759" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.740" endtime="20201029 18:15:28.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:28.762" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:28.760" endtime="20201029 18:15:28.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.763" endtime="20201029 18:15:28.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.737" endtime="20201029 18:15:28.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.735" endtime="20201029 18:15:28.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:28.772" endtime="20201029 18:15:29.056"></status>
</kw>
<msg timestamp="20201029 18:15:29.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:28.771" endtime="20201029 18:15:29.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018137139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.060" endtime="20201029 18:15:29.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.068" endtime="20201029 18:15:29.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.768" endtime="20201029 18:15:29.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.766" endtime="20201029 18:15:29.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:29.076" level="INFO">${PHILIP_RES} = [{'diff': 0.0001684449999999997}, {'diff': 0.00016847199999999937}, {'diff': 0.00016847199999999937}, {'diff': 0.00016847199999999937}, {'diff': 0.00016847300000000232}, {'diff': 0.0001684719999999993...</msg>
<status status="PASS" starttime="20201029 18:15:29.073" endtime="20201029 18:15:29.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.080" level="INFO">${RESULT} = {'diff': [0.0001684449999999997, 0.00016847199999999937, 0.00016847199999999937, 0.00016847199999999937, 0.00016847300000000232, 0.00016847199999999937, 0.00016848599999999894, 0.00016848599999999894,...</msg>
<status status="PASS" starttime="20201029 18:15:29.077" endtime="20201029 18:15:29.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.084" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:29.083" endtime="20201029 18:15:29.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.087" level="INFO">VALUE: [0.0001684449999999997, 0.00016847199999999937, 0.00016847199999999937, 0.00016847199999999937, 0.00016847300000000232, 0.00016847199999999937, 0.00016848599999999894, 0.00016848599999999894, 0.00016843100000000014, 0.00016848599999999894, 0.0001684860000000024, 0.00016845800000000327, 0.0001684860000000024, 0.00016848599999999894, 0.00016845899999999928, 0.00016847199999999937, 0.00016847299999999885, 0.00016848599999999894, 0.00016848700000000189, 0.00016847200000000284, 0.00016848599999999894, 0.00016848599999999894, 0.0001684999999999985, 0.00016848599999999894, 0.00016847299999999885, 0.00016847200000000284, 0.0001684860000000024, 0.00016847199999999937, 0.00016848599999999894, 0.00018930500000000072, 0.00016847299999999885, 0.00016847199999999937, 0.00016847199999999937, 0.00016848599999999894, 0.00016847199999999937, 0.00016844400000000023, 0.00016847199999999937, 0.00016847199999999937, 0.00016848699999999842, 0.00016844400000000023, 0.00016845899999999928, 0.0001684579999999998, 0.0001684860000000024, 0.00016847199999999937, 0.00016847299999999885, 0.00016847199999999937, 0.00016847299999999885, 0.00016847199999999937, 0.0001684999999999985, 0.0001684579999999998]</msg>
<status status="PASS" starttime="20201029 18:15:29.086" endtime="20201029 18:15:29.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.081" endtime="20201029 18:15:29.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.734" endtime="20201029 18:15:29.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:28.711" endtime="20201029 18:15:29.089"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.091" endtime="20201029 18:15:29.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.090" endtime="20201029 18:15:29.111"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.120" endtime="20201029 18:15:29.139"></status>
</kw>
<msg timestamp="20201029 18:15:29.139" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.118" endtime="20201029 18:15:29.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.141" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.140" endtime="20201029 18:15:29.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.143" endtime="20201029 18:15:29.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.115" endtime="20201029 18:15:29.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.113" endtime="20201029 18:15:29.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.153" endtime="20201029 18:15:29.438"></status>
</kw>
<msg timestamp="20201029 18:15:29.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018301278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.151" endtime="20201029 18:15:29.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018301278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:29.442" endtime="20201029 18:15:29.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.450" endtime="20201029 18:15:29.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.148" endtime="20201029 18:15:29.453"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.147" endtime="20201029 18:15:29.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:29.457" level="INFO">${PHILIP_RES} = [{'diff': 0.0001888890000000011}, {'diff': 0.0001889159999999973}, {'diff': 0.00018891700000000025}, {'diff': 0.00018893099999999982}, {'diff': 0.0001889449999999994}, {'diff': 0.00018891700000000025}...</msg>
<status status="PASS" starttime="20201029 18:15:29.454" endtime="20201029 18:15:29.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.461" level="INFO">${RESULT} = {'diff': [0.0001888890000000011, 0.0001889159999999973, 0.00018891700000000025, 0.00018893099999999982, 0.0001889449999999994, 0.00018891700000000025, 0.00018891600000000078, 0.00018891700000000025, 0...</msg>
<status status="PASS" starttime="20201029 18:15:29.458" endtime="20201029 18:15:29.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.466" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:29.465" endtime="20201029 18:15:29.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.468" level="INFO">VALUE: [0.0001888890000000011, 0.0001889159999999973, 0.00018891700000000025, 0.00018893099999999982, 0.0001889449999999994, 0.00018891700000000025, 0.00018891600000000078, 0.00018891700000000025, 0.00018891700000000025, 0.00018892999999999688, 0.0001889449999999994, 0.00018898599999999863, 0.00018884699999999893, 0.00018891699999999678, 0.00018890300000000068, 0.00018891700000000025, 0.0001889449999999994, 0.00018891700000000025, 0.00018888899999999764, 0.00018893099999999982, 0.00018893000000000035, 0.00018890300000000068, 0.00018893099999999982, 0.0001889020000000012, 0.00018897200000000253, 0.00018891700000000025, 0.00018893000000000035, 0.00018890300000000068, 0.0001888609999999985, 0.00018891700000000025, 0.00018891700000000025, 0.0001889020000000012, 0.00018891700000000025, 0.00018891700000000025, 0.0001889159999999973, 0.00018891700000000025, 0.00018898599999999863, 0.00018891700000000025, 0.00018900000000000167, 0.0001889579999999995, 0.00018890300000000068, 0.00018893099999999982, 0.0001889159999999973, 0.00018890300000000068, 0.00018891700000000025, 0.00018893000000000035, 0.00018891699999999678, 0.00018891700000000025, 0.00018891699999999678, 0.00018891700000000025]</msg>
<status status="PASS" starttime="20201029 18:15:29.467" endtime="20201029 18:15:29.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.462" endtime="20201029 18:15:29.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.112" endtime="20201029 18:15:29.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.089" endtime="20201029 18:15:29.471"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.473" endtime="20201029 18:15:29.493"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.472" endtime="20201029 18:15:29.493"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.501" endtime="20201029 18:15:29.521"></status>
</kw>
<msg timestamp="20201029 18:15:29.522" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.500" endtime="20201029 18:15:29.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.525" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.523" endtime="20201029 18:15:29.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.526" endtime="20201029 18:15:29.527"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.497" endtime="20201029 18:15:29.528"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.495" endtime="20201029 18:15:29.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.535" endtime="20201029 18:15:29.821"></status>
</kw>
<msg timestamp="20201029 18:15:29.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01823475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:29.533" endtime="20201029 18:15:29.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018024292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01823475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:29.827" endtime="20201029 18:15:29.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.835" endtime="20201029 18:15:29.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.531" endtime="20201029 18:15:29.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.529" endtime="20201029 18:15:29.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:29.841" level="INFO">${PHILIP_RES} = [{'diff': 0.00021045800000000017}, {'diff': 0.0002104310000000005}, {'diff': 0.00021044500000000008}, {'diff': 0.00021044500000000008}, {'diff': 0.0002104310000000005}, {'diff': 0.0002104440000000006}...</msg>
<status status="PASS" starttime="20201029 18:15:29.838" endtime="20201029 18:15:29.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:29.846" level="INFO">${RESULT} = {'diff': [0.00021045800000000017, 0.0002104310000000005, 0.00021044500000000008, 0.00021044500000000008, 0.0002104310000000005, 0.0002104440000000006, 0.00021043000000000103, 0.0002104440000000006, 0....</msg>
<status status="PASS" starttime="20201029 18:15:29.842" endtime="20201029 18:15:29.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.850" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:29.849" endtime="20201029 18:15:29.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.853" level="INFO">VALUE: [0.00021045800000000017, 0.0002104310000000005, 0.00021044500000000008, 0.00021044500000000008, 0.0002104310000000005, 0.0002104440000000006, 0.00021043000000000103, 0.0002104440000000006, 0.0002104440000000006, 0.00021044399999999713, 0.00021041600000000146, 0.0002104310000000005, 0.00021044500000000008, 0.00021045900000000312, 0.0002104440000000006, 0.0002104859999999993, 0.00021047199999999974, 0.00021049999999999888, 0.00021045800000000017, 0.00021045800000000017, 0.00021044500000000008, 0.00021043099999999704, 0.0002104310000000005, 0.00021043000000000103, 0.0002104440000000006, 0.00021042999999999756, 0.000210415999999998, 0.00021049999999999888, 0.00021044500000000008, 0.00021043099999999704, 0.00021043099999999704, 0.00021044500000000008, 0.0002104310000000005, 0.0002104440000000006, 0.00021042999999999756, 0.00021041600000000146, 0.0002104310000000005, 0.00021043099999999704, 0.00021041699999999747, 0.00021037500000000223, 0.0002104310000000005, 0.00021043000000000103, 0.000210415999999998, 0.00021041600000000146, 0.0002104859999999993, 0.0002104440000000006, 0.00021043099999999704, 0.00021044500000000008, 0.0002103890000000018, 0.0002104310000000005]</msg>
<status status="PASS" starttime="20201029 18:15:29.851" endtime="20201029 18:15:29.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.847" endtime="20201029 18:15:29.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.494" endtime="20201029 18:15:29.855"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.471" endtime="20201029 18:15:29.855"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:29.857" endtime="20201029 18:15:29.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.856" endtime="20201029 18:15:29.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.885" endtime="20201029 18:15:29.906"></status>
</kw>
<msg timestamp="20201029 18:15:29.907" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.884" endtime="20201029 18:15:29.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:29.909" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:29.908" endtime="20201029 18:15:29.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.910" endtime="20201029 18:15:29.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.881" endtime="20201029 18:15:29.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.879" endtime="20201029 18:15:29.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:29.919" endtime="20201029 18:15:30.223"></status>
</kw>
<msg timestamp="20201029 18:15:30.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017968, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:29.918" endtime="20201029 18:15:30.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017968, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:30.227" endtime="20201029 18:15:30.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.235" endtime="20201029 18:15:30.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.915" endtime="20201029 18:15:30.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.914" endtime="20201029 18:15:30.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:30.241" level="INFO">${PHILIP_RES} = [{'diff': 0.00023301400000000014}, {'diff': 0.00023305599999999885}, {'diff': 0.00023304199999999928}, {'diff': 0.00023304200000000275}, {'diff': 0.00023306999999999842}, {'diff': 0.000233055999999998...</msg>
<status status="PASS" starttime="20201029 18:15:30.238" endtime="20201029 18:15:30.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.245" level="INFO">${RESULT} = {'diff': [0.00023301400000000014, 0.00023305599999999885, 0.00023304199999999928, 0.00023304200000000275, 0.00023306999999999842, 0.00023305599999999885, 0.00023304200000000275, 0.00023305499999999937...</msg>
<status status="PASS" starttime="20201029 18:15:30.242" endtime="20201029 18:15:30.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.250" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:30.248" endtime="20201029 18:15:30.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.252" level="INFO">VALUE: [0.00023301400000000014, 0.00023305599999999885, 0.00023304199999999928, 0.00023304200000000275, 0.00023306999999999842, 0.00023305599999999885, 0.00023304200000000275, 0.00023305499999999937, 0.00023305499999999937, 0.0002330409999999998, 0.00023306899999999894, 0.00023305499999999937, 0.0002330279999999997, 0.00023304199999999928, 0.00023305599999999885, 0.00023305600000000232, 0.00023301400000000014, 0.00023306999999999842, 0.00023304199999999928, 0.00023300000000000057, 0.00023305499999999937, 0.0002330409999999998, 0.0002330409999999998, 0.00023306899999999894, 0.00023297199999999796, 0.00023304199999999928, 0.00023308400000000146, 0.00023301400000000014, 0.00023304199999999928, 0.00023304199999999928, 0.0002330279999999997, 0.00023300000000000057, 0.00023306899999999894, 0.0002330409999999998, 0.0002476109999999983, 0.00023304199999999928, 0.00023304199999999928, 0.00023305599999999885, 0.0002330279999999997, 0.00023304200000000275, 0.00023297200000000143, 0.00023305499999999937, 0.00023305500000000284, 0.0002331250000000007, 0.0002331120000000006, 0.0002331120000000006, 0.00023304199999999928, 0.00023305599999999885, 0.00023304200000000275, 0.0002330279999999997]</msg>
<status status="PASS" starttime="20201029 18:15:30.251" endtime="20201029 18:15:30.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.246" endtime="20201029 18:15:30.253"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.878" endtime="20201029 18:15:30.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:29.855" endtime="20201029 18:15:30.254"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.256" endtime="20201029 18:15:30.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.255" endtime="20201029 18:15:30.276"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.284" endtime="20201029 18:15:30.306"></status>
</kw>
<msg timestamp="20201029 18:15:30.307" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.283" endtime="20201029 18:15:30.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.309" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.308" endtime="20201029 18:15:30.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.310" endtime="20201029 18:15:30.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.280" endtime="20201029 18:15:30.315"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.278" endtime="20201029 18:15:30.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.322" endtime="20201029 18:15:30.608"></status>
</kw>
<msg timestamp="20201029 18:15:30.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.321" endtime="20201029 18:15:30.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017683403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017940139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.612" endtime="20201029 18:15:30.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.620" endtime="20201029 18:15:30.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.318" endtime="20201029 18:15:30.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.316" endtime="20201029 18:15:30.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:30.627" level="INFO">${PHILIP_RES} = [{'diff': 0.00025673600000000046}, {'diff': 0.00025673600000000046}, {'diff': 0.00025673600000000046}, {'diff': 0.0002566809999999982}, {'diff': 0.0002567639999999996}, {'diff': 0.00025675000000000003...</msg>
<status status="PASS" starttime="20201029 18:15:30.623" endtime="20201029 18:15:30.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:30.631" level="INFO">${RESULT} = {'diff': [0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.0002566809999999982, 0.0002567639999999996, 0.00025675000000000003, 0.00025673600000000046, 0.00025672300000000037, ...</msg>
<status status="PASS" starttime="20201029 18:15:30.628" endtime="20201029 18:15:30.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.635" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:30.634" endtime="20201029 18:15:30.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.637" level="INFO">VALUE: [0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.0002566809999999982, 0.0002567639999999996, 0.00025675000000000003, 0.00025673600000000046, 0.00025672300000000037, 0.00025675000000000003, 0.00025672300000000037, 0.0002566669999999986, 0.0002774300000000021, 0.00025673600000000046, 0.00025675000000000003, 0.00025673600000000046, 0.00025672300000000037, 0.00025676299999999666, 0.0002566809999999982, 0.0002567639999999996, 0.00025673600000000046, 0.0002567639999999996, 0.0002567219999999974, 0.00025675000000000003, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025673600000000046, 0.00025675000000000003, 0.00025675000000000003, 0.00025673600000000046, 0.00025673699999999994, 0.00025675000000000003, 0.0002567779999999992, 0.00025675000000000003, 0.00025673600000000046, 0.00025675000000000003, 0.00025675000000000003, 0.0002567639999999996, 0.0002567220000000009, 0.0002567639999999996, 0.00025675000000000003, 0.0002567219999999974, 0.0002566799999999987, 0.0002567220000000009, 0.00025675000000000003, 0.00025673699999999994, 0.00025676300000000013, 0.00025673699999999994, 0.00025673600000000046, 0.0002567769999999997]</msg>
<status status="PASS" starttime="20201029 18:15:30.636" endtime="20201029 18:15:30.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.631" endtime="20201029 18:15:30.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.277" endtime="20201029 18:15:30.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.254" endtime="20201029 18:15:30.640"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:30.642" endtime="20201029 18:15:30.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.641" endtime="20201029 18:15:30.662"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.670" endtime="20201029 18:15:30.694"></status>
</kw>
<msg timestamp="20201029 18:15:30.695" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.669" endtime="20201029 18:15:30.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:30.697" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:30.696" endtime="20201029 18:15:30.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.698" endtime="20201029 18:15:30.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.666" endtime="20201029 18:15:30.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.664" endtime="20201029 18:15:30.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:30.707" endtime="20201029 18:15:30.993"></status>
</kw>
<msg timestamp="20201029 18:15:30.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017990472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.706" endtime="20201029 18:15:30.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017708972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017990472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:30.997" endtime="20201029 18:15:31.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.005" endtime="20201029 18:15:31.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.703" endtime="20201029 18:15:31.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.701" endtime="20201029 18:15:31.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.012" level="INFO">${PHILIP_RES} = [{'diff': 0.0002815000000000005}, {'diff': 0.0002815000000000005}, {'diff': 0.00028151400000000007}, {'diff': 0.0002815840000000014}, {'diff': 0.0002815000000000005}, {'diff': 0.00028149999999999703},...</msg>
<status status="PASS" starttime="20201029 18:15:31.009" endtime="20201029 18:15:31.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.016" level="INFO">${RESULT} = {'diff': [0.0002815000000000005, 0.0002815000000000005, 0.00028151400000000007, 0.0002815840000000014, 0.0002815000000000005, 0.00028149999999999703, 0.0002815000000000005, 0.00028151400000000007, 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:31.013" endtime="20201029 18:15:31.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.021" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.020" endtime="20201029 18:15:31.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.023" level="INFO">VALUE: [0.0002815000000000005, 0.0002815000000000005, 0.00028151400000000007, 0.0002815840000000014, 0.0002815000000000005, 0.00028149999999999703, 0.0002815000000000005, 0.00028151400000000007, 0.00028152799999999964, 0.0002815000000000005, 0.00028151400000000007, 0.0002815000000000005, 0.00028152799999999964, 0.0002815130000000006, 0.0002815000000000005, 0.00028152700000000017, 0.00028152799999999964, 0.00028154099999999974, 0.0002815000000000005, 0.0002815000000000005, 0.00028151400000000007, 0.00028149999999999703, 0.0002815559999999988, 0.00028145900000000126, 0.00028152700000000017, 0.00028152799999999964, 0.0002815000000000005, 0.0002815000000000005, 0.00028151400000000007, 0.0002815000000000005, 0.0002815000000000005, 0.0002815000000000005, 0.00030394400000000044, 0.00028143099999999865, 0.00028151400000000007, 0.00028151400000000007, 0.0002815130000000006, 0.00028151400000000007, 0.00028145900000000126, 0.00028152799999999964, 0.00028151400000000007, 0.00028148600000000093, 0.00028151400000000007, 0.00028149999999999703, 0.00028151400000000354, 0.0002815139999999966, 0.0002815139999999966, 0.00028152700000000364, 0.0002815280000000031, 0.00028148699999999693]</msg>
<status status="PASS" starttime="20201029 18:15:31.022" endtime="20201029 18:15:31.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.017" endtime="20201029 18:15:31.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.663" endtime="20201029 18:15:31.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:30.640" endtime="20201029 18:15:31.025"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.028" endtime="20201029 18:15:31.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.026" endtime="20201029 18:15:31.048"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.056" endtime="20201029 18:15:31.080"></status>
</kw>
<msg timestamp="20201029 18:15:31.080" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.054" endtime="20201029 18:15:31.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.083" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.081" endtime="20201029 18:15:31.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.084" endtime="20201029 18:15:31.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.051" endtime="20201029 18:15:31.086"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.050" endtime="20201029 18:15:31.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.093" endtime="20201029 18:15:31.381"></status>
</kw>
<msg timestamp="20201029 18:15:31.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017943931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.091" endtime="20201029 18:15:31.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017943931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.390" endtime="20201029 18:15:31.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.401" endtime="20201029 18:15:31.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.089" endtime="20201029 18:15:31.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.087" endtime="20201029 18:15:31.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.408" level="INFO">${PHILIP_RES} = [{'diff': 0.00030734799999999896}, {'diff': 0.0003073610000000025}, {'diff': 0.0003073469999999995}, {'diff': 0.00030736099999999905}, {'diff': 0.0003073749999999986}, {'diff': 0.00030736099999999905}...</msg>
<status status="PASS" starttime="20201029 18:15:31.405" endtime="20201029 18:15:31.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.412" level="INFO">${RESULT} = {'diff': [0.00030734799999999896, 0.0003073610000000025, 0.0003073469999999995, 0.00030736099999999905, 0.0003073749999999986, 0.00030736099999999905, 0.00030740200000000176, 0.0003073749999999986, 0....</msg>
<status status="PASS" starttime="20201029 18:15:31.409" endtime="20201029 18:15:31.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.417" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.416" endtime="20201029 18:15:31.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.419" level="INFO">VALUE: [0.00030734799999999896, 0.0003073610000000025, 0.0003073469999999995, 0.00030736099999999905, 0.0003073749999999986, 0.00030736099999999905, 0.00030740200000000176, 0.0003073749999999986, 0.0003073610000000025, 0.0003073339999999994, 0.00030736099999999905, 0.0003073610000000025, 0.0003073750000000021, 0.00030736099999999905, 0.00030738900000000166, 0.0003073610000000025, 0.00030736099999999905, 0.0003073749999999986, 0.0003074300000000009, 0.00030736099999999905, 0.0003073749999999986, 0.00030736099999999905, 0.00030736099999999905, 0.00030736099999999905, 0.0003073749999999986, 0.00030740299999999776, 0.0003073749999999986, 0.0003073749999999986, 0.00030736099999999905, 0.00030734700000000295, 0.00030736099999999905, 0.00030736099999999905, 0.0003073750000000021, 0.0003073749999999986, 0.0003073889999999982, 0.0003073749999999986, 0.00030734700000000295, 0.0003073619999999985, 0.0003073889999999982, 0.0003073750000000021, 0.0003072780000000011, 0.0003073470000000064, 0.00030736099999999905, 0.0003073749999999986, 0.0003073749999999986, 0.0003073749999999986, 0.00030736099999999905, 0.000307361000000006, 0.00030737500000000556, 0.0003073339999999994]</msg>
<status status="PASS" starttime="20201029 18:15:31.418" endtime="20201029 18:15:31.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.413" endtime="20201029 18:15:31.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.048" endtime="20201029 18:15:31.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.026" endtime="20201029 18:15:31.421"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.424" endtime="20201029 18:15:31.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.423" endtime="20201029 18:15:31.444"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.453" endtime="20201029 18:15:31.479"></status>
</kw>
<msg timestamp="20201029 18:15:31.480" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.451" endtime="20201029 18:15:31.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.482" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.481" endtime="20201029 18:15:31.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.483" endtime="20201029 18:15:31.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.448" endtime="20201029 18:15:31.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.446" endtime="20201029 18:15:31.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.494" endtime="20201029 18:15:31.797"></status>
</kw>
<msg timestamp="20201029 18:15:31.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:31.492" endtime="20201029 18:15:31.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0182075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018541792, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:31.801" endtime="20201029 18:15:31.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.809" endtime="20201029 18:15:31.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.489" endtime="20201029 18:15:31.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.488" endtime="20201029 18:15:31.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:31.816" level="INFO">${PHILIP_RES} = [{'diff': 0.0003342919999999999}, {'diff': 0.000334305}, {'diff': 0.0003343609999999983}, {'diff': 0.0003342919999999999}, {'diff': 0.00033432000000000253}, {'diff': 0.0003343059999999995}, {'diff': 0...</msg>
<status status="PASS" starttime="20201029 18:15:31.813" endtime="20201029 18:15:31.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:31.820" level="INFO">${RESULT} = {'diff': [0.0003342919999999999, 0.000334305, 0.0003343609999999983, 0.0003342919999999999, 0.00033432000000000253, 0.0003343059999999995, 0.00033438899999999744, 0.0003343189999999996, 0.000334305999...</msg>
<status status="PASS" starttime="20201029 18:15:31.817" endtime="20201029 18:15:31.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.824" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:31.823" endtime="20201029 18:15:31.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.826" level="INFO">VALUE: [0.0003342919999999999, 0.000334305, 0.0003343609999999983, 0.0003342919999999999, 0.00033432000000000253, 0.0003343059999999995, 0.00033438899999999744, 0.0003343189999999996, 0.0003343059999999995, 0.000334305, 0.0003342500000000012, 0.000334305, 0.00033429100000000045, 0.0003342919999999999, 0.00033430600000000296, 0.0003343059999999995, 0.0003342919999999999, 0.0003343059999999995, 0.00033433300000000263, 0.00033430600000000296, 0.0003343609999999983, 0.0003343059999999995, 0.00033433300000000263, 0.00033430600000000296, 0.000334305, 0.0003342640000000008, 0.00033433299999999916, 0.0003343059999999995, 0.0003343470000000022, 0.0003343059999999995, 0.000334305, 0.00033433399999999863, 0.000334290999999997, 0.00033434800000000167, 0.0003343189999999961, 0.0003343059999999995, 0.0003342220000000021, 0.0003343059999999995, 0.000334305, 0.00035588900000000506, 0.0003343059999999995, 0.00033429100000000045, 0.000334320000000006, 0.00033429100000000045, 0.0003343059999999995, 0.000334305, 0.00033431999999999906, 0.000334305, 0.0003343059999999995, 0.000334305]</msg>
<status status="PASS" starttime="20201029 18:15:31.825" endtime="20201029 18:15:31.828"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.821" endtime="20201029 18:15:31.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.445" endtime="20201029 18:15:31.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.422" endtime="20201029 18:15:31.829"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:31.831" endtime="20201029 18:15:31.851"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.830" endtime="20201029 18:15:31.851"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.860" endtime="20201029 18:15:31.887"></status>
</kw>
<msg timestamp="20201029 18:15:31.887" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.858" endtime="20201029 18:15:31.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:31.890" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:31.888" endtime="20201029 18:15:31.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.891" endtime="20201029 18:15:31.892"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.855" endtime="20201029 18:15:31.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.854" endtime="20201029 18:15:31.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:31.900" endtime="20201029 18:15:32.186"></status>
</kw>
<msg timestamp="20201029 18:15:32.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:31.898" endtime="20201029 18:15:32.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018004278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.190" endtime="20201029 18:15:32.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.197" endtime="20201029 18:15:32.199"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.896" endtime="20201029 18:15:32.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.894" endtime="20201029 18:15:32.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:32.204" level="INFO">${PHILIP_RES} = [{'diff': 0.0003623749999999981}, {'diff': 0.0003623749999999981}, {'diff': 0.00036236099999999855}, {'diff': 0.00036240200000000125}, {'diff': 0.0003623330000000029}, {'diff': 0.0003623879999999982},...</msg>
<status status="PASS" starttime="20201029 18:15:32.201" endtime="20201029 18:15:32.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.209" level="INFO">${RESULT} = {'diff': [0.0003623749999999981, 0.0003623749999999981, 0.00036236099999999855, 0.00036240200000000125, 0.0003623330000000029, 0.0003623879999999982, 0.000362346999999999, 0.000362346999999999, 0.0003...</msg>
<status status="PASS" starttime="20201029 18:15:32.205" endtime="20201029 18:15:32.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.213" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:32.212" endtime="20201029 18:15:32.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.216" level="INFO">VALUE: [0.0003623749999999981, 0.0003623749999999981, 0.00036236099999999855, 0.00036240200000000125, 0.0003623330000000029, 0.0003623879999999982, 0.000362346999999999, 0.000362346999999999, 0.0003623339999999989, 0.0003623199999999993, 0.0003623199999999993, 0.00036234799999999845, 0.0003623339999999989, 0.0003623329999999994, 0.00036230500000000027, 0.0003623750000000016, 0.0003623750000000016, 0.0003623190000000033, 0.00036226400000000103, 0.00036231899999999984, 0.00036231899999999984, 0.0003623329999999994, 0.00036236099999999855, 0.00036229200000000017, 0.0003623329999999994, 0.0003622780000000006, 0.0003623329999999994, 0.0003623329999999994, 0.00036234700000000244, 0.0003623330000000029, 0.0003623200000000028, 0.0003623200000000028, 0.00036234799999999845, 0.0003623480000000019, 0.00036229200000000017, 0.0003623480000000054, 0.0003623749999999981, 0.0003623199999999993, 0.0003622780000000006, 0.00036236099999999855, 0.00036231899999999984, 0.0003623329999999994, 0.00036231899999999984, 0.00036226400000000103, 0.000362346999999999, 0.000362346999999999, 0.0003623610000000055, 0.000362346999999999, 0.00036233300000000634, 0.000362346999999999]</msg>
<status status="PASS" starttime="20201029 18:15:32.214" endtime="20201029 18:15:32.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.210" endtime="20201029 18:15:32.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.852" endtime="20201029 18:15:32.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:31.829" endtime="20201029 18:15:32.217"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.220" endtime="20201029 18:15:32.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.218" endtime="20201029 18:15:32.240"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.248" endtime="20201029 18:15:32.277"></status>
</kw>
<msg timestamp="20201029 18:15:32.278" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.246" endtime="20201029 18:15:32.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.280" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.279" endtime="20201029 18:15:32.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.281" endtime="20201029 18:15:32.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.244" endtime="20201029 18:15:32.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.242" endtime="20201029 18:15:32.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.290" endtime="20201029 18:15:32.577"></status>
</kw>
<msg timestamp="20201029 18:15:32.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.289" endtime="20201029 18:15:32.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018068986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.581" endtime="20201029 18:15:32.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.589" endtime="20201029 18:15:32.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.286" endtime="20201029 18:15:32.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.285" endtime="20201029 18:15:32.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:32.596" level="INFO">${PHILIP_RES} = [{'diff': 0.00039142999999999817}, {'diff': 0.0003914310000000011}, {'diff': 0.00039145900000000025}, {'diff': 0.00039137499999999936}, {'diff': 0.00039147200000000035}, {'diff': 0.0003914440000000012...</msg>
<status status="PASS" starttime="20201029 18:15:32.593" endtime="20201029 18:15:32.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.600" level="INFO">${RESULT} = {'diff': [0.00039142999999999817, 0.0003914310000000011, 0.00039145900000000025, 0.00039137499999999936, 0.00039147200000000035, 0.0003914440000000012, 0.0003914029999999985, 0.00039147200000000035, 0...</msg>
<status status="PASS" starttime="20201029 18:15:32.597" endtime="20201029 18:15:32.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.604" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:32.603" endtime="20201029 18:15:32.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.607" level="INFO">VALUE: [0.00039142999999999817, 0.0003914310000000011, 0.00039145900000000025, 0.00039137499999999936, 0.00039147200000000035, 0.0003914440000000012, 0.0003914029999999985, 0.00039147200000000035, 0.0003914440000000012, 0.00039151300000000305, 0.0003914449999999972, 0.00039141700000000154, 0.00039143000000000164, 0.00039144399999999774, 0.00041037499999999755, 0.0003914580000000008, 0.0003914310000000011, 0.0003914449999999972, 0.0003914440000000012, 0.00039143000000000164, 0.00039143099999999764, 0.00039141700000000154, 0.00039143000000000164, 0.00039138899999999893, 0.00039144399999999774, 0.0003914450000000007, 0.0003914450000000007, 0.00039144399999999774, 0.00039143000000000164, 0.00039140300000000197, 0.00039143099999999764, 0.0003914580000000008, 0.00039144399999999774, 0.0003914589999999968, 0.0003914310000000046, 0.0003914579999999973, 0.0003914159999999986, 0.00039144500000000415, 0.0003914029999999985, 0.00039144399999999774, 0.0003914720000000038, 0.00039143099999999764, 0.0003914449999999972, 0.00039140300000000544, 0.00039144399999999774, 0.00039142999999999817, 0.0003914860000000034, 0.00039144399999999774, 0.00039144399999999774, 0.00039140300000000544]</msg>
<status status="PASS" starttime="20201029 18:15:32.605" endtime="20201029 18:15:32.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.601" endtime="20201029 18:15:32.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.240" endtime="20201029 18:15:32.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.218" endtime="20201029 18:15:32.608"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:32.611" endtime="20201029 18:15:32.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.609" endtime="20201029 18:15:32.631"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.639" endtime="20201029 18:15:32.671"></status>
</kw>
<msg timestamp="20201029 18:15:32.672" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.637" endtime="20201029 18:15:32.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.674" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:32.673" endtime="20201029 18:15:32.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.675" endtime="20201029 18:15:32.678"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.635" endtime="20201029 18:15:32.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.633" endtime="20201029 18:15:32.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.686" endtime="20201029 18:15:32.971"></status>
</kw>
<msg timestamp="20201029 18:15:32.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.684" endtime="20201029 18:15:32.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017682694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018104306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:32.975" endtime="20201029 18:15:32.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:32.983" endtime="20201029 18:15:32.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.681" endtime="20201029 18:15:32.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.680" endtime="20201029 18:15:32.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:32.990" level="INFO">${PHILIP_RES} = [{'diff': 0.00042161200000000176}, {'diff': 0.0004216520000000015}, {'diff': 0.00042163900000000143}, {'diff': 0.0004216109999999988}, {'diff': 0.0004216249999999984}, {'diff': 0.00042163899999999796}...</msg>
<status status="PASS" starttime="20201029 18:15:32.987" endtime="20201029 18:15:32.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:32.994" level="INFO">${RESULT} = {'diff': [0.00042161200000000176, 0.0004216520000000015, 0.00042163900000000143, 0.0004216109999999988, 0.0004216249999999984, 0.00042163899999999796, 0.0004216109999999988, 0.00042163900000000143, 0....</msg>
<status status="PASS" starttime="20201029 18:15:32.991" endtime="20201029 18:15:32.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:32.998" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:32.997" endtime="20201029 18:15:32.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.000" level="INFO">VALUE: [0.00042161200000000176, 0.0004216520000000015, 0.00042163900000000143, 0.0004216109999999988, 0.0004216249999999984, 0.00042163899999999796, 0.0004216109999999988, 0.00042163900000000143, 0.00042168000000000067, 0.00042169400000000024, 0.00042163900000000143, 0.0004216379999999985, 0.00042159699999999925, 0.00042163900000000143, 0.00042163900000000143, 0.000421653000000001, 0.00042162500000000186, 0.00045194399999999926, 0.00042163899999999796, 0.00042159699999999925, 0.00042163900000000143, 0.00042162500000000186, 0.00042162500000000186, 0.0004216110000000023, 0.0004215979999999987, 0.0004217079999999998, 0.0004216249999999984, 0.00042163900000000143, 0.00042163900000000143, 0.00042163900000000143, 0.00042162500000000186, 0.0004216110000000023, 0.00042162500000000186, 0.00042163900000000143, 0.00042162500000000186, 0.0004216389999999945, 0.0004216949999999997, 0.00042165299999999406, 0.00042162500000000186, 0.0004215969999999958, 0.00042162500000000186, 0.00042163900000000143, 0.00042163900000000143, 0.0004216110000000023, 0.00042163900000000143, 0.00042162500000000186, 0.0004216660000000011, 0.00042162500000000186, 0.00042162500000000186, 0.0004216249999999949]</msg>
<status status="PASS" starttime="20201029 18:15:32.999" endtime="20201029 18:15:33.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.995" endtime="20201029 18:15:33.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.631" endtime="20201029 18:15:33.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:32.609" endtime="20201029 18:15:33.010"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.013" endtime="20201029 18:15:33.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.011" endtime="20201029 18:15:33.033"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.041" endtime="20201029 18:15:33.073"></status>
</kw>
<msg timestamp="20201029 18:15:33.074" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.040" endtime="20201029 18:15:33.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.076" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.075" endtime="20201029 18:15:33.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.077" endtime="20201029 18:15:33.079"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.037" endtime="20201029 18:15:33.080"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.035" endtime="20201029 18:15:33.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.087" endtime="20201029 18:15:33.372"></status>
</kw>
<msg timestamp="20201029 18:15:33.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.085" endtime="20201029 18:15:33.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017875361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.376" endtime="20201029 18:15:33.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.384" endtime="20201029 18:15:33.386"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.082" endtime="20201029 18:15:33.387"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.081" endtime="20201029 18:15:33.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:33.391" level="INFO">${PHILIP_RES} = [{'diff': 0.000452903000000001}, {'diff': 0.0004528750000000019}, {'diff': 0.00045286099999999885}, {'diff': 0.000452888999999998}, {'diff': 0.00045290200000000155}, {'diff': 0.000452903000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:33.388" endtime="20201029 18:15:33.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.396" level="INFO">${RESULT} = {'diff': [0.000452903000000001, 0.0004528750000000019, 0.00045286099999999885, 0.000452888999999998, 0.00045290200000000155, 0.000452903000000001, 0.0004528750000000019, 0.00045290299999999756, 0.0004...</msg>
<status status="PASS" starttime="20201029 18:15:33.392" endtime="20201029 18:15:33.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.400" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:33.399" endtime="20201029 18:15:33.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.403" level="INFO">VALUE: [0.000452903000000001, 0.0004528750000000019, 0.00045286099999999885, 0.000452888999999998, 0.00045290200000000155, 0.000452903000000001, 0.0004528750000000019, 0.00045290299999999756, 0.0004528749999999984, 0.0004528750000000019, 0.0004529170000000006, 0.00045290299999999756, 0.0004529019999999981, 0.000452903000000001, 0.0004529170000000006, 0.000452903000000001, 0.0004529719999999994, 0.0004529019999999981, 0.0004529299999999972, 0.00045294499999999974, 0.00045290200000000155, 0.00045294400000000026, 0.000452888999999998, 0.000452903000000001, 0.0004529170000000006, 0.00045288900000000146, 0.00045288900000000146, 0.00045290299999999756, 0.0004528879999999985, 0.00045286099999999885, 0.00045291699999999713, 0.000452902000000005, 0.00045286099999999885, 0.00045290299999999756, 0.00045291699999999713, 0.000452888999999998, 0.00045287500000000536, 0.00045290299999999756, 0.0004529030000000045, 0.0004528879999999985, 0.00045291699999999713, 0.0004529030000000045, 0.00045291599999999765, 0.00045290299999999756, 0.000452888999999998, 0.000452888999999998, 0.00045293100000000364, 0.0004529019999999981, 0.00045291700000000407, 0.000452888999999998]</msg>
<status status="PASS" starttime="20201029 18:15:33.401" endtime="20201029 18:15:33.403"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.397" endtime="20201029 18:15:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.034" endtime="20201029 18:15:33.404"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.011" endtime="20201029 18:15:33.405"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.407" endtime="20201029 18:15:33.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.405" endtime="20201029 18:15:33.427"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.435" endtime="20201029 18:15:33.469"></status>
</kw>
<msg timestamp="20201029 18:15:33.469" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.434" endtime="20201029 18:15:33.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.472" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.471" endtime="20201029 18:15:33.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.473" endtime="20201029 18:15:33.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.431" endtime="20201029 18:15:33.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.429" endtime="20201029 18:15:33.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.483" endtime="20201029 18:15:33.770"></status>
</kw>
<msg timestamp="20201029 18:15:33.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.481" endtime="20201029 18:15:33.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017973806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.774" endtime="20201029 18:15:33.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.782" endtime="20201029 18:15:33.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.478" endtime="20201029 18:15:33.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.476" endtime="20201029 18:15:33.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:33.788" level="INFO">${PHILIP_RES} = [{'diff': 0.000485236}, {'diff': 0.000485236}, {'diff': 0.0004853060000000013}, {'diff': 0.0004852780000000022}, {'diff': 0.0004852640000000026}, {'diff': 0.0004853469999999971}, {'diff': 0.0004852639...</msg>
<status status="PASS" starttime="20201029 18:15:33.785" endtime="20201029 18:15:33.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:33.793" level="INFO">${RESULT} = {'diff': [0.000485236, 0.000485236, 0.0004853060000000013, 0.0004852780000000022, 0.0004852640000000026, 0.0004853469999999971, 0.00048526399999999914, 0.00048524999999999957, 0.000485236, 0.000485277...</msg>
<status status="PASS" starttime="20201029 18:15:33.789" endtime="20201029 18:15:33.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.797" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:33.796" endtime="20201029 18:15:33.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.799" level="INFO">VALUE: [0.000485236, 0.000485236, 0.0004853060000000013, 0.0004852780000000022, 0.0004852640000000026, 0.0004853469999999971, 0.00048526399999999914, 0.00048524999999999957, 0.000485236, 0.0004852779999999987, 0.0004852779999999987, 0.00048524999999999957, 0.00048526399999999914, 0.0004852079999999974, 0.00048524999999999957, 0.0004852640000000026, 0.00048520800000000086, 0.00048526399999999914, 0.0004853329999999975, 0.00048524999999999957, 0.00048526399999999914, 0.00048526399999999914, 0.000485236, 0.0004853190000000014, 0.00048529200000000175, 0.00048526399999999914, 0.00048530599999999785, 0.00048526399999999914, 0.0004852919999999983, 0.00048526399999999914, 0.00048530599999999785, 0.0004852779999999987, 0.00048526399999999914, 0.0004852779999999987, 0.00048527699999999924, 0.00048524999999999957, 0.000485236, 0.00048526399999999914, 0.00048526399999999914, 0.00048526299999999967, 0.0004852909999999988, 0.000485236, 0.000485236, 0.000485236, 0.00048526399999999914, 0.00048524999999999957, 0.0004852370000000064, 0.0004852500000000065, 0.0004852640000000061, 0.0004852640000000061]</msg>
<status status="PASS" starttime="20201029 18:15:33.798" endtime="20201029 18:15:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.793" endtime="20201029 18:15:33.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.427" endtime="20201029 18:15:33.801"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.405" endtime="20201029 18:15:33.801"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:33.804" endtime="20201029 18:15:33.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.802" endtime="20201029 18:15:33.824"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.832" endtime="20201029 18:15:33.869"></status>
</kw>
<msg timestamp="20201029 18:15:33.870" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.830" endtime="20201029 18:15:33.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:33.875" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:33.872" endtime="20201029 18:15:33.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.878" endtime="20201029 18:15:33.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.828" endtime="20201029 18:15:33.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.826" endtime="20201029 18:15:33.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:33.903" endtime="20201029 18:15:34.195"></status>
</kw>
<msg timestamp="20201029 18:15:34.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:33.900" endtime="20201029 18:15:34.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018127208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018645903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.199" endtime="20201029 18:15:34.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.207" endtime="20201029 18:15:34.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.894" endtime="20201029 18:15:34.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.891" endtime="20201029 18:15:34.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:34.213" level="INFO">${PHILIP_RES} = [{'diff': 0.0005186949999999996}, {'diff': 0.0005187079999999997}, {'diff': 0.0005186940000000001}, {'diff': 0.0005186670000000004}, {'diff': 0.0005187079999999997}, {'diff': 0.000518778000000001}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:34.210" endtime="20201029 18:15:34.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.217" level="INFO">${RESULT} = {'diff': [0.0005186949999999996, 0.0005187079999999997, 0.0005186940000000001, 0.0005186670000000004, 0.0005187079999999997, 0.000518778000000001, 0.000518763999999998, 0.000518681, 0.0005187640000000...</msg>
<status status="PASS" starttime="20201029 18:15:34.214" endtime="20201029 18:15:34.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.222" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:34.221" endtime="20201029 18:15:34.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.224" level="INFO">VALUE: [0.0005186949999999996, 0.0005187079999999997, 0.0005186940000000001, 0.0005186670000000004, 0.0005187079999999997, 0.000518778000000001, 0.000518763999999998, 0.000518681, 0.0005187640000000014, 0.0005187219999999992, 0.0005187370000000018, 0.0005186940000000001, 0.0005187079999999997, 0.0005186949999999996, 0.0005187219999999992, 0.0005186940000000001, 0.0005187229999999987, 0.0005187219999999992, 0.0005187079999999997, 0.0005187089999999991, 0.0005187219999999992, 0.0005186940000000001, 0.0005186800000000005, 0.0005186530000000009, 0.0005186800000000005, 0.0005187079999999997, 0.0005187089999999991, 0.0005187219999999992, 0.0005187219999999992, 0.0005187089999999991, 0.0005187219999999992, 0.0005187079999999997, 0.000518681, 0.0005186670000000004, 0.0005187219999999992, 0.0005187779999999975, 0.000518681, 0.0005187219999999992, 0.0005187079999999997, 0.000518681, 0.0005187080000000066, 0.0005186940000000001, 0.0005186949999999996, 0.000518681, 0.0005186940000000001, 0.0005186949999999996, 0.0005187089999999991, 0.0005186940000000001, 0.0005437780000000017, 0.0005187359999999988]</msg>
<status status="PASS" starttime="20201029 18:15:34.223" endtime="20201029 18:15:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.218" endtime="20201029 18:15:34.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.824" endtime="20201029 18:15:34.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:33.801" endtime="20201029 18:15:34.227"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.229" endtime="20201029 18:15:34.249"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.228" endtime="20201029 18:15:34.249"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.257" endtime="20201029 18:15:34.295"></status>
</kw>
<msg timestamp="20201029 18:15:34.296" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.256" endtime="20201029 18:15:34.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.298" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.297" endtime="20201029 18:15:34.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.299" endtime="20201029 18:15:34.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.253" endtime="20201029 18:15:34.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.251" endtime="20201029 18:15:34.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.309" endtime="20201029 18:15:34.595"></status>
</kw>
<msg timestamp="20201029 18:15:34.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017807319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.307" endtime="20201029 18:15:34.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017807319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018360569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.599" endtime="20201029 18:15:34.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.607" endtime="20201029 18:15:34.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.304" endtime="20201029 18:15:34.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.303" endtime="20201029 18:15:34.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:34.614" level="INFO">${PHILIP_RES} = [{'diff': 0.0005532500000000017}, {'diff': 0.0005532770000000013}, {'diff': 0.0005531660000000008}, {'diff': 0.0005532640000000012}, {'diff': 0.0005532359999999986}, {'diff': 0.0005532499999999982}, {...</msg>
<status status="PASS" starttime="20201029 18:15:34.611" endtime="20201029 18:15:34.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:34.619" level="INFO">${RESULT} = {'diff': [0.0005532500000000017, 0.0005532770000000013, 0.0005531660000000008, 0.0005532640000000012, 0.0005532359999999986, 0.0005532499999999982, 0.0005532370000000016, 0.0005532079999999995, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:34.615" endtime="20201029 18:15:34.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.623" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:34.622" endtime="20201029 18:15:34.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.625" level="INFO">VALUE: [0.0005532500000000017, 0.0005532770000000013, 0.0005531660000000008, 0.0005532640000000012, 0.0005532359999999986, 0.0005532499999999982, 0.0005532370000000016, 0.0005532079999999995, 0.0005532499999999982, 0.0005531670000000002, 0.000553223000000002, 0.000553221999999999, 0.000553221999999999, 0.0005532359999999986, 0.0005532360000000021, 0.0005532079999999995, 0.0005532359999999986, 0.0005531530000000007, 0.000553221999999999, 0.0005532369999999981, 0.0005532640000000012, 0.000553221999999999, 0.0005532090000000024, 0.0005531949999999994, 0.0005531939999999999, 0.0005532359999999986, 0.0005532359999999986, 0.0005532359999999986, 0.0005532500000000051, 0.0005531940000000068, 0.0005532359999999986, 0.0005532499999999982, 0.0005532359999999986, 0.0005532359999999986, 0.0005532499999999982, 0.000553222000000006, 0.000553222000000006, 0.0005532229999999985, 0.0005531800000000003, 0.000553221999999999, 0.0005531809999999998, 0.000553208999999999, 0.0005532080000000064, 0.000553221999999999, 0.000553221999999999, 0.0005532359999999986, 0.000582667000000002, 0.000553221999999999, 0.0005532359999999986, 0.000553221999999999]</msg>
<status status="PASS" starttime="20201029 18:15:34.624" endtime="20201029 18:15:34.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.619" endtime="20201029 18:15:34.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.250" endtime="20201029 18:15:34.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.227" endtime="20201029 18:15:34.627"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:34.630" endtime="20201029 18:15:34.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.628" endtime="20201029 18:15:34.650"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.658" endtime="20201029 18:15:34.697"></status>
</kw>
<msg timestamp="20201029 18:15:34.698" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.656" endtime="20201029 18:15:34.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:34.700" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:34.699" endtime="20201029 18:15:34.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.701" endtime="20201029 18:15:34.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.654" endtime="20201029 18:15:34.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.652" endtime="20201029 18:15:34.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:34.711" endtime="20201029 18:15:34.996"></status>
</kw>
<msg timestamp="20201029 18:15:34.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018470917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:34.709" endtime="20201029 18:15:35.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017882125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018470917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.001" endtime="20201029 18:15:35.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.009" endtime="20201029 18:15:35.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.706" endtime="20201029 18:15:35.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.705" endtime="20201029 18:15:35.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:35.015" level="INFO">${PHILIP_RES} = [{'diff': 0.0005887920000000012}, {'diff': 0.0005888050000000013}, {'diff': 0.0005888339999999999}, {'diff': 0.0005888330000000004}, {'diff': 0.0005888200000000003}, {'diff': 0.0005888330000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:15:35.012" endtime="20201029 18:15:35.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.019" level="INFO">${RESULT} = {'diff': [0.0005887920000000012, 0.0005888050000000013, 0.0005888339999999999, 0.0005888330000000004, 0.0005888200000000003, 0.0005888330000000004, 0.0005888330000000004, 0.0005888339999999999, 0.0005...</msg>
<status status="PASS" starttime="20201029 18:15:35.016" endtime="20201029 18:15:35.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.024" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:35.023" endtime="20201029 18:15:35.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.026" level="INFO">VALUE: [0.0005887920000000012, 0.0005888050000000013, 0.0005888339999999999, 0.0005888330000000004, 0.0005888200000000003, 0.0005888330000000004, 0.0005888330000000004, 0.0005888339999999999, 0.0005888330000000004, 0.0005888339999999999, 0.000588847, 0.0005889019999999988, 0.0005888050000000013, 0.0005888190000000008, 0.0005888609999999996, 0.0005888330000000004, 0.0005888200000000003, 0.0005888190000000008, 0.0005888330000000004, 0.000588847, 0.000588847, 0.0005889029999999948, 0.0005889029999999948, 0.000588847999999996, 0.0005888329999999969, 0.0005888619999999956, 0.0005888329999999969, 0.0005888609999999961, 0.000588847999999996, 0.0005888189999999974, 0.0005888339999999964, 0.0005888329999999969, 0.0006218610000000013, 0.0005888329999999969, 0.0005888199999999968, 0.0005888470000000035, 0.000588861000000003, 0.0005888330000000039, 0.0005888060000000042, 0.0005888470000000035, 0.0005888330000000039, 0.0005888060000000042, 0.0005888330000000039, 0.0005887780000000051, 0.0005888330000000039, 0.0005888470000000035, 0.0005888330000000039, 0.0005887779999999981, 0.0005888200000000038, 0.0005887919999999977]</msg>
<status status="PASS" starttime="20201029 18:15:35.025" endtime="20201029 18:15:35.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.020" endtime="20201029 18:15:35.027"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.650" endtime="20201029 18:15:35.028"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:34.628" endtime="20201029 18:15:35.028"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.030" endtime="20201029 18:15:35.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.029" endtime="20201029 18:15:35.051"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.059" endtime="20201029 18:15:35.101"></status>
</kw>
<msg timestamp="20201029 18:15:35.102" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.057" endtime="20201029 18:15:35.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.105" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.103" endtime="20201029 18:15:35.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.106" endtime="20201029 18:15:35.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.055" endtime="20201029 18:15:35.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.053" endtime="20201029 18:15:35.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.116" endtime="20201029 18:15:35.407"></status>
</kw>
<msg timestamp="20201029 18:15:35.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018185014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.114" endtime="20201029 18:15:35.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018185014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.416" endtime="20201029 18:15:35.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.434" endtime="20201029 18:15:35.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.112" endtime="20201029 18:15:35.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.110" endtime="20201029 18:15:35.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:35.448" level="INFO">${PHILIP_RES} = [{'diff': 0.0006254720000000019}, {'diff': 0.0006255419999999998}, {'diff': 0.0006255140000000006}, {'diff': 0.0006255140000000006}, {'diff': 0.0006255419999999998}, {'diff': 0.0006255279999999967}, {...</msg>
<status status="PASS" starttime="20201029 18:15:35.441" endtime="20201029 18:15:35.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.456" level="INFO">${RESULT} = {'diff': [0.0006254720000000019, 0.0006255419999999998, 0.0006255140000000006, 0.0006255140000000006, 0.0006255419999999998, 0.0006255279999999967, 0.0006255410000000003, 0.0006255419999999998, 0.0006...</msg>
<status status="PASS" starttime="20201029 18:15:35.450" endtime="20201029 18:15:35.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.465" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:35.463" endtime="20201029 18:15:35.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.471" level="INFO">VALUE: [0.0006254720000000019, 0.0006255419999999998, 0.0006255140000000006, 0.0006255140000000006, 0.0006255419999999998, 0.0006255279999999967, 0.0006255410000000003, 0.0006255419999999998, 0.0006255280000000002, 0.0006255410000000003, 0.0006255419999999998, 0.0006255280000000002, 0.0006255280000000002, 0.0006255549999999999, 0.0006255280000000002, 0.0006255140000000006, 0.0006255410000000003, 0.0006255279999999967, 0.0006255280000000002, 0.0006576110000000024, 0.0006255280000000002, 0.0006255699999999989, 0.0006255140000000006, 0.0006255280000000002, 0.0006255410000000003, 0.0006254580000000023, 0.0006255419999999998, 0.0006255410000000003, 0.0006255280000000002, 0.0006255840000000054, 0.0006255140000000006, 0.0006255270000000007, 0.0006255000000000011, 0.0006255140000000006, 0.0006255280000000002, 0.0006255140000000006, 0.0006255280000000002, 0.0006255279999999933, 0.0006255280000000002, 0.0006255280000000002, 0.0006254860000000015, 0.0006255689999999994, 0.0006255280000000002, 0.0006255000000000011, 0.0006255140000000006, 0.0006255280000000002, 0.0006255280000000002, 0.0006255280000000002, 0.0006255270000000007, 0.0006255699999999989]</msg>
<status status="PASS" starttime="20201029 18:15:35.468" endtime="20201029 18:15:35.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.458" endtime="20201029 18:15:35.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.051" endtime="20201029 18:15:35.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.028" endtime="20201029 18:15:35.476"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.481" endtime="20201029 18:15:35.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.478" endtime="20201029 18:15:35.502"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.510" endtime="20201029 18:15:35.554"></status>
</kw>
<msg timestamp="20201029 18:15:35.554" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.509" endtime="20201029 18:15:35.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.557" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.555" endtime="20201029 18:15:35.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.558" endtime="20201029 18:15:35.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.506" endtime="20201029 18:15:35.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.504" endtime="20201029 18:15:35.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.567" endtime="20201029 18:15:35.855"></status>
</kw>
<msg timestamp="20201029 18:15:35.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017713597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018376875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.565" endtime="20201029 18:15:35.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017713597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018376875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.859" endtime="20201029 18:15:35.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.867" endtime="20201029 18:15:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.563" endtime="20201029 18:15:35.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.561" endtime="20201029 18:15:35.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:35.874" level="INFO">${PHILIP_RES} = [{'diff': 0.0006632779999999998}, {'diff': 0.0006632920000000028}, {'diff': 0.000663318999999999}, {'diff': 0.0006633330000000021}, {'diff': 0.0006633059999999989}, {'diff': 0.0006633059999999989}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:35.871" endtime="20201029 18:15:35.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:35.879" level="INFO">${RESULT} = {'diff': [0.0006632779999999998, 0.0006632920000000028, 0.000663318999999999, 0.0006633330000000021, 0.0006633059999999989, 0.0006633059999999989, 0.0006633060000000024, 0.0006633060000000024, 0.00066...</msg>
<status status="PASS" starttime="20201029 18:15:35.875" endtime="20201029 18:15:35.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.883" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:35.882" endtime="20201029 18:15:35.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.886" level="INFO">VALUE: [0.0006632779999999998, 0.0006632920000000028, 0.000663318999999999, 0.0006633330000000021, 0.0006633059999999989, 0.0006633059999999989, 0.0006633060000000024, 0.0006633060000000024, 0.0006633049999999995, 0.0006632909999999999, 0.0006632919999999994, 0.0006633199999999985, 0.0006633480000000011, 0.0006633190000000025, 0.0006632909999999999, 0.0006633049999999995, 0.0006633059999999989, 0.0006633060000000024, 0.0006633199999999985, 0.0006632919999999959, 0.0006633190000000025, 0.0006633050000000029, 0.000663320000000002, 0.000663320000000002, 0.0006633060000000024, 0.0006633050000000029, 0.0006632909999999964, 0.0006632909999999964, 0.0006633059999999955, 0.0006857219999999997, 0.0006632910000000034, 0.0006633060000000024, 0.0006633060000000024, 0.0006632359999999976, 0.0006633059999999955, 0.000663304999999996, 0.000663304999999996, 0.000663320000000002, 0.0006632920000000028, 0.000663221999999998, 0.0006633050000000029, 0.0006632360000000045, 0.0006633050000000029, 0.0006632919999999959, 0.0006632919999999959, 0.0006632779999999963, 0.0006633329999999951, 0.0006632909999999964, 0.0006632910000000034, 0.0006632920000000028]</msg>
<status status="PASS" starttime="20201029 18:15:35.884" endtime="20201029 18:15:35.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.880" endtime="20201029 18:15:35.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.503" endtime="20201029 18:15:35.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.477" endtime="20201029 18:15:35.888"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:35.890" endtime="20201029 18:15:35.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.889" endtime="20201029 18:15:35.910"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.918" endtime="20201029 18:15:35.964"></status>
</kw>
<msg timestamp="20201029 18:15:35.965" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.917" endtime="20201029 18:15:35.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:35.967" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:35.966" endtime="20201029 18:15:35.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.968" endtime="20201029 18:15:35.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.914" endtime="20201029 18:15:35.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.912" endtime="20201029 18:15:35.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:35.977" endtime="20201029 18:15:36.281"></status>
</kw>
<msg timestamp="20201029 18:15:36.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017816403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:35.976" endtime="20201029 18:15:36.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017816403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018518542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.290" endtime="20201029 18:15:36.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.300" endtime="20201029 18:15:36.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.973" endtime="20201029 18:15:36.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.971" endtime="20201029 18:15:36.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:36.307" level="INFO">${PHILIP_RES} = [{'diff': 0.0007021389999999975}, {'diff': 0.0007021800000000002}, {'diff': 0.0007021670000000001}, {'diff': 0.0007021390000000009}, {'diff': 0.0007021660000000006}, {'diff': 0.0007021659999999971}, {...</msg>
<status status="PASS" starttime="20201029 18:15:36.304" endtime="20201029 18:15:36.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.311" level="INFO">${RESULT} = {'diff': [0.0007021389999999975, 0.0007021800000000002, 0.0007021670000000001, 0.0007021390000000009, 0.0007021660000000006, 0.0007021659999999971, 0.0007021380000000015, 0.0007021660000000006, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:15:36.308" endtime="20201029 18:15:36.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.315" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:36.314" endtime="20201029 18:15:36.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.318" level="INFO">VALUE: [0.0007021389999999975, 0.0007021800000000002, 0.0007021670000000001, 0.0007021390000000009, 0.0007021660000000006, 0.0007021659999999971, 0.0007021380000000015, 0.0007021660000000006, 0.0007263610000000018, 0.0007021949999999992, 0.0007021530000000005, 0.0007021249999999979, 0.0007021809999999996, 0.0007021670000000001, 0.0007021530000000005, 0.0007021519999999976, 0.0007021660000000006, 0.0007021660000000006, 0.0007021519999999976, 0.0007021389999999975, 0.0007021660000000041, 0.0007021389999999975, 0.0007021659999999971, 0.0007021670000000035, 0.0007020969999999987, 0.0007021670000000035, 0.0007021669999999966, 0.0007021669999999966, 0.0007021810000000031, 0.000702152999999997, 0.0007020969999999987, 0.0007021810000000031, 0.0007021669999999966, 0.000702153000000004, 0.0007021669999999966, 0.0007021669999999966, 0.0007020840000000056, 0.0007022219999999954, 0.000702153000000004, 0.000702152999999997, 0.0007021799999999967, 0.0007021660000000041, 0.0007021799999999967, 0.0007021109999999983, 0.0007021519999999976, 0.0007021799999999967, 0.0007021800000000036, 0.0007021519999999976, 0.000702152999999997, 0.000702153000000004]</msg>
<status status="PASS" starttime="20201029 18:15:36.316" endtime="20201029 18:15:36.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.312" endtime="20201029 18:15:36.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.911" endtime="20201029 18:15:36.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:35.888" endtime="20201029 18:15:36.320"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.322" endtime="20201029 18:15:36.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.320" endtime="20201029 18:15:36.342"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.350" endtime="20201029 18:15:36.398"></status>
</kw>
<msg timestamp="20201029 18:15:36.399" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.349" endtime="20201029 18:15:36.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.401" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.400" endtime="20201029 18:15:36.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.403" endtime="20201029 18:15:36.405"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.346" endtime="20201029 18:15:36.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.344" endtime="20201029 18:15:36.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.413" endtime="20201029 18:15:36.699"></status>
</kw>
<msg timestamp="20201029 18:15:36.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.411" endtime="20201029 18:15:36.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017901181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.703" endtime="20201029 18:15:36.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.711" endtime="20201029 18:15:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.408" endtime="20201029 18:15:36.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.407" endtime="20201029 18:15:36.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:36.717" level="INFO">${PHILIP_RES} = [{'diff': 0.0007724020000000019}, {'diff': 0.0007420970000000006}, {'diff': 0.0007421389999999993}, {'diff': 0.0007421110000000002}, {'diff': 0.0007421249999999997}, {'diff': 0.0007421110000000002}, {...</msg>
<status status="PASS" starttime="20201029 18:15:36.714" endtime="20201029 18:15:36.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:36.721" level="INFO">${RESULT} = {'diff': [0.0007724020000000019, 0.0007420970000000006, 0.0007421389999999993, 0.0007421110000000002, 0.0007421249999999997, 0.0007421110000000002, 0.000742083000000001, 0.0007420970000000006, 0.00074...</msg>
<status status="PASS" starttime="20201029 18:15:36.718" endtime="20201029 18:15:36.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.726" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:36.725" endtime="20201029 18:15:36.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.728" level="INFO">VALUE: [0.0007724020000000019, 0.0007420970000000006, 0.0007421389999999993, 0.0007421110000000002, 0.0007421249999999997, 0.0007421110000000002, 0.000742083000000001, 0.0007420970000000006, 0.0007420970000000006, 0.0007421110000000002, 0.0007421249999999997, 0.0007421110000000002, 0.0007420970000000006, 0.0007420840000000005, 0.0007420980000000001, 0.0007420840000000005, 0.0007421249999999997, 0.0007421250000000032, 0.0007420279999999987, 0.0007420969999999971, 0.0007421110000000036, 0.0007421109999999967, 0.0007420409999999988, 0.0007420969999999971, 0.0007421110000000036, 0.0007421120000000031, 0.0007421109999999967, 0.0007421250000000032, 0.0007421249999999963, 0.0007420829999999976, 0.0007421109999999967, 0.0007421670000000019, 0.0007421109999999967, 0.0007420969999999971, 0.0007420969999999971, 0.000742068999999998, 0.0007421250000000032, 0.000742084000000004, 0.000742083999999997, 0.0007421110000000036, 0.0007420829999999976, 0.000757555, 0.0007420700000000044, 0.0007421249999999963, 0.0007421110000000036, 0.0007421109999999967, 0.0007420970000000041, 0.0007421389999999958, 0.0007421110000000036, 0.0007421389999999958]</msg>
<status status="PASS" starttime="20201029 18:15:36.727" endtime="20201029 18:15:36.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.722" endtime="20201029 18:15:36.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.343" endtime="20201029 18:15:36.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.320" endtime="20201029 18:15:36.731"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:36.734" endtime="20201029 18:15:36.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.732" endtime="20201029 18:15:36.753"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.762" endtime="20201029 18:15:36.812"></status>
</kw>
<msg timestamp="20201029 18:15:36.813" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.760" endtime="20201029 18:15:36.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:36.815" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:36.814" endtime="20201029 18:15:36.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.816" endtime="20201029 18:15:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.757" endtime="20201029 18:15:36.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.756" endtime="20201029 18:15:36.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:36.825" endtime="20201029 18:15:37.124"></status>
</kw>
<msg timestamp="20201029 18:15:37.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017874514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:36.824" endtime="20201029 18:15:37.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017874514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018657625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.128" endtime="20201029 18:15:37.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.136" endtime="20201029 18:15:37.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.821" endtime="20201029 18:15:37.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.819" endtime="20201029 18:15:37.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:37.143" level="INFO">${PHILIP_RES} = [{'diff': 0.0007831109999999995}, {'diff': 0.0007831109999999995}, {'diff': 0.0007831249999999991}, {'diff': 0.0007831389999999987}, {'diff': 0.0007831529999999982}, {'diff': 0.0007830830000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.140" endtime="20201029 18:15:37.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.148" level="INFO">${RESULT} = {'diff': [0.0007831109999999995, 0.0007831109999999995, 0.0007831249999999991, 0.0007831389999999987, 0.0007831529999999982, 0.0007830830000000004, 0.0007831249999999991, 0.0007831250000000026, 0.0007...</msg>
<status status="PASS" starttime="20201029 18:15:37.144" endtime="20201029 18:15:37.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.152" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:37.151" endtime="20201029 18:15:37.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.155" level="INFO">VALUE: [0.0007831109999999995, 0.0007831109999999995, 0.0007831249999999991, 0.0007831389999999987, 0.0007831529999999982, 0.0007830830000000004, 0.0007831249999999991, 0.0007831250000000026, 0.0007831120000000025, 0.0007831249999999991, 0.0007831249999999991, 0.0007831529999999982, 0.0007831389999999987, 0.0007831389999999987, 0.0007831109999999995, 0.0007831390000000021, 0.0007831389999999952, 0.0008160700000000021, 0.0007831250000000026, 0.0007831390000000021, 0.0007831390000000021, 0.0007831529999999948, 0.0007831390000000021, 0.0007831389999999952, 0.0007831390000000021, 0.0007831389999999952, 0.0007831390000000021, 0.000783111000000003, 0.0007831389999999952, 0.0007831120000000025, 0.0007831389999999952, 0.0007831390000000021, 0.0007831109999999961, 0.0007831250000000026, 0.0007831250000000026, 0.0007831250000000026, 0.000783111000000003, 0.0007831529999999948, 0.0007831250000000026, 0.0007831249999999956, 0.0007831390000000021, 0.0007831390000000021, 0.0007831250000000026, 0.0007831390000000021, 0.0007831799999999944, 0.0007831390000000021, 0.0007831389999999952, 0.0007831380000000027, 0.0007831810000000008, 0.0007831250000000026]</msg>
<status status="PASS" starttime="20201029 18:15:37.153" endtime="20201029 18:15:37.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.149" endtime="20201029 18:15:37.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.754" endtime="20201029 18:15:37.157"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:36.731" endtime="20201029 18:15:37.157"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.159" endtime="20201029 18:15:37.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.158" endtime="20201029 18:15:37.179"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.188" endtime="20201029 18:15:37.240"></status>
</kw>
<msg timestamp="20201029 18:15:37.240" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.186" endtime="20201029 18:15:37.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.243" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.241" endtime="20201029 18:15:37.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.244" endtime="20201029 18:15:37.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.183" endtime="20201029 18:15:37.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.181" endtime="20201029 18:15:37.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.253" endtime="20201029 18:15:37.540"></status>
</kw>
<msg timestamp="20201029 18:15:37.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018965389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.252" endtime="20201029 18:15:37.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018965389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.544" endtime="20201029 18:15:37.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.552" endtime="20201029 18:15:37.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.249" endtime="20201029 18:15:37.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.247" endtime="20201029 18:15:37.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:37.558" level="INFO">${PHILIP_RES} = [{'diff': 0.000825236}, {'diff': 0.0008252499999999996}, {'diff': 0.0008252229999999999}, {'diff': 0.0008252639999999992}, {'diff': 0.000825236}, {'diff': 0.0008252220000000005}, {'diff': 0.0008252639...</msg>
<status status="PASS" starttime="20201029 18:15:37.555" endtime="20201029 18:15:37.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.562" level="INFO">${RESULT} = {'diff': [0.000825236, 0.0008252499999999996, 0.0008252229999999999, 0.0008252639999999992, 0.000825236, 0.0008252220000000005, 0.0008252639999999992, 0.000825236, 0.0008252499999999996, 0.00082522200...</msg>
<status status="PASS" starttime="20201029 18:15:37.559" endtime="20201029 18:15:37.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.567" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:37.566" endtime="20201029 18:15:37.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.569" level="INFO">VALUE: [0.000825236, 0.0008252499999999996, 0.0008252229999999999, 0.0008252639999999992, 0.000825236, 0.0008252220000000005, 0.0008252639999999992, 0.000825236, 0.0008252499999999996, 0.0008252220000000005, 0.000825236, 0.000825236, 0.0008252640000000026, 0.0008252499999999996, 0.0008251809999999977, 0.000825236, 0.0008252499999999996, 0.000825236, 0.0008253190000000049, 0.0008252499999999996, 0.0008252499999999996, 0.0008252629999999997, 0.000825236, 0.000825236, 0.0008252769999999993, 0.000825236, 0.000825236, 0.000825236, 0.0008252499999999996, 0.0008252639999999992, 0.000825236, 0.0008252779999999987, 0.0008252220000000005, 0.0008252499999999996, 0.000825236, 0.000825236, 0.0008252909999999988, 0.000825236, 0.0008252229999999999, 0.0008252220000000005, 0.0008252499999999996, 0.0008252229999999999, 0.0008252090000000004, 0.0008252499999999996, 0.0008252909999999988, 0.0008252220000000005, 0.0008252499999999996, 0.000825236, 0.000825236, 0.000825236]</msg>
<status status="PASS" starttime="20201029 18:15:37.568" endtime="20201029 18:15:37.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.563" endtime="20201029 18:15:37.570"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.180" endtime="20201029 18:15:37.571"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.157" endtime="20201029 18:15:37.571"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:37.574" endtime="20201029 18:15:37.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.572" endtime="20201029 18:15:37.594"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.602" endtime="20201029 18:15:37.656"></status>
</kw>
<msg timestamp="20201029 18:15:37.656" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.600" endtime="20201029 18:15:37.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.659" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:37.658" endtime="20201029 18:15:37.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.660" endtime="20201029 18:15:37.665"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.598" endtime="20201029 18:15:37.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.596" endtime="20201029 18:15:37.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.673" endtime="20201029 18:15:37.975"></status>
</kw>
<msg timestamp="20201029 18:15:37.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018113597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018982014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.671" endtime="20201029 18:15:37.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:37.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018113597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018982014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:37.979" endtime="20201029 18:15:37.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:37.987" endtime="20201029 18:15:37.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.668" endtime="20201029 18:15:37.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.667" endtime="20201029 18:15:37.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:37.994" level="INFO">${PHILIP_RES} = [{'diff': 0.0008684169999999998}, {'diff': 0.0008684299999999999}, {'diff': 0.0008684449999999989}, {'diff': 0.0008684299999999999}, {'diff': 0.0008684449999999989}, {'diff': 0.0008684299999999999}, {...</msg>
<status status="PASS" starttime="20201029 18:15:37.991" endtime="20201029 18:15:37.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:37.998" level="INFO">${RESULT} = {'diff': [0.0008684169999999998, 0.0008684299999999999, 0.0008684449999999989, 0.0008684299999999999, 0.0008684449999999989, 0.0008684299999999999, 0.0008684309999999994, 0.0008684299999999999, 0.0008...</msg>
<status status="PASS" starttime="20201029 18:15:37.995" endtime="20201029 18:15:37.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.002" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:38.001" endtime="20201029 18:15:38.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.005" level="INFO">VALUE: [0.0008684169999999998, 0.0008684299999999999, 0.0008684449999999989, 0.0008684299999999999, 0.0008684449999999989, 0.0008684299999999999, 0.0008684309999999994, 0.0008684299999999999, 0.0008684309999999994, 0.0008684299999999999, 0.000868457999999999, 0.0008684030000000002, 0.0008684439999999995, 0.0008684309999999994, 0.0008684159999999969, 0.0008684450000000024, 0.0008684440000000029, 0.0008684310000000028, 0.0008683749999999976, 0.0008684309999999959, 0.0008684300000000034, 0.0008684450000000024, 0.0008684299999999964, 0.0008684029999999968, 0.0008684440000000029, 0.0008684030000000037, 0.0008684300000000034, 0.0008684169999999963, 0.0009013479999999963, 0.0008684310000000028, 0.0008684299999999964, 0.0008684169999999963, 0.0008684860000000016, 0.0008683750000000046, 0.0008684160000000038, 0.0008684310000000028, 0.000868443999999996, 0.0008684309999999959, 0.0008684720000000021, 0.0008684170000000033, 0.000868443999999996, 0.0008684449999999955, 0.0008684030000000037, 0.0008684310000000028, 0.0008683889999999972, 0.0008684579999999956, 0.0008684309999999959, 0.0008684300000000034, 0.000868430999999989, 0.0008684300000000034]</msg>
<status status="PASS" starttime="20201029 18:15:38.003" endtime="20201029 18:15:38.012"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.999" endtime="20201029 18:15:38.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.594" endtime="20201029 18:15:38.013"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:37.571" endtime="20201029 18:15:38.014"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.016" endtime="20201029 18:15:38.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.015" endtime="20201029 18:15:38.036"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.044" endtime="20201029 18:15:38.102"></status>
</kw>
<msg timestamp="20201029 18:15:38.102" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.043" endtime="20201029 18:15:38.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.105" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.104" endtime="20201029 18:15:38.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.106" endtime="20201029 18:15:38.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.040" endtime="20201029 18:15:38.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.038" endtime="20201029 18:15:38.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.116" endtime="20201029 18:15:38.402"></status>
</kw>
<msg timestamp="20201029 18:15:38.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018903486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.114" endtime="20201029 18:15:38.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017990778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018903486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.406" endtime="20201029 18:15:38.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.414" endtime="20201029 18:15:38.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.112" endtime="20201029 18:15:38.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.110" endtime="20201029 18:15:38.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:38.420" level="INFO">${PHILIP_RES} = [{'diff': 0.0009127080000000017}, {'diff': 0.0009127079999999982}, {'diff': 0.0009127079999999982}, {'diff': 0.0009127080000000017}, {'diff': 0.0009127079999999982}, {'diff': 0.0009127220000000012}, {...</msg>
<status status="PASS" starttime="20201029 18:15:38.417" endtime="20201029 18:15:38.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.425" level="INFO">${RESULT} = {'diff': [0.0009127080000000017, 0.0009127079999999982, 0.0009127079999999982, 0.0009127080000000017, 0.0009127079999999982, 0.0009127220000000012, 0.0009127230000000007, 0.0009127230000000007, 0.0009...</msg>
<status status="PASS" starttime="20201029 18:15:38.421" endtime="20201029 18:15:38.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.429" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:38.428" endtime="20201029 18:15:38.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.432" level="INFO">VALUE: [0.0009127080000000017, 0.0009127079999999982, 0.0009127079999999982, 0.0009127080000000017, 0.0009127079999999982, 0.0009127220000000012, 0.0009127230000000007, 0.0009127230000000007, 0.0009127090000000011, 0.0009127090000000011, 0.000946528000000002, 0.0009127080000000017, 0.0009127909999999996, 0.000912666999999999, 0.0009127089999999977, 0.0009126529999999994, 0.0009127639999999965, 0.0009126940000000056, 0.0009127219999999978, 0.0009127079999999982, 0.0009126939999999986, 0.0009126939999999986, 0.0009127220000000047, 0.0009127770000000035, 0.0009127770000000035, 0.000912666999999999, 0.0009126809999999985, 0.0009127090000000046, 0.0009127090000000046, 0.0009127089999999977, 0.0009127089999999977, 0.0009127079999999982, 0.0009127079999999982, 0.0009127080000000051, 0.0009127080000000051, 0.0009126810000000055, 0.0009127079999999982, 0.0009127079999999982, 0.0009126529999999994, 0.0009126810000000055, 0.0009127089999999977, 0.0009127089999999977, 0.0009127089999999977, 0.0009508889999999964, 0.000912666999999999, 0.0009127219999999908, 0.0009127229999999903, 0.0009127089999999977, 0.0009127230000000042, 0.0009127500000000038]</msg>
<status status="PASS" starttime="20201029 18:15:38.431" endtime="20201029 18:15:38.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.426" endtime="20201029 18:15:38.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.037" endtime="20201029 18:15:38.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.014" endtime="20201029 18:15:38.434"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.436" endtime="20201029 18:15:38.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.435" endtime="20201029 18:15:38.456"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.464" endtime="20201029 18:15:38.525"></status>
</kw>
<msg timestamp="20201029 18:15:38.525" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.463" endtime="20201029 18:15:38.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.528" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.526" endtime="20201029 18:15:38.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.529" endtime="20201029 18:15:38.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.460" endtime="20201029 18:15:38.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.458" endtime="20201029 18:15:38.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.538" endtime="20201029 18:15:38.836"></status>
</kw>
<msg timestamp="20201029 18:15:38.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017601028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.536" endtime="20201029 18:15:38.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017601028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018559056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.840" endtime="20201029 18:15:38.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.848" endtime="20201029 18:15:38.849"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.534" endtime="20201029 18:15:38.850"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.532" endtime="20201029 18:15:38.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:38.854" level="INFO">${PHILIP_RES} = [{'diff': 0.0009580279999999997}, {'diff': 0.0009580549999999993}, {'diff': 0.0009580979999999975}, {'diff': 0.000958096999999998}, {'diff': 0.0009580689999999989}, {'diff': 0.0009580690000000024}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:38.851" endtime="20201029 18:15:38.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:38.858" level="INFO">${RESULT} = {'diff': [0.0009580279999999997, 0.0009580549999999993, 0.0009580979999999975, 0.000958096999999998, 0.0009580689999999989, 0.0009580690000000024, 0.0009580700000000018, 0.0009580689999999989, 0.00095...</msg>
<status status="PASS" starttime="20201029 18:15:38.855" endtime="20201029 18:15:38.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.863" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:38.861" endtime="20201029 18:15:38.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.865" level="INFO">VALUE: [0.0009580279999999997, 0.0009580549999999993, 0.0009580979999999975, 0.000958096999999998, 0.0009580689999999989, 0.0009580690000000024, 0.0009580700000000018, 0.0009580689999999989, 0.0009580409999999998, 0.0009580689999999989, 0.0009580840000000014, 0.0009580830000000019, 0.0009581519999999968, 0.0009580699999999984, 0.0009581250000000041, 0.0009580549999999993, 0.000985764, 0.0009580409999999998, 0.0009580839999999979, 0.0009580839999999979, 0.0009580829999999985, 0.0009580549999999993, 0.0009581109999999976, 0.0009580419999999992, 0.0009580829999999985, 0.0009580699999999984, 0.0009580699999999984, 0.0009580829999999985, 0.0009580830000000054, 0.0009580699999999984, 0.000958096999999998, 0.0009580140000000001, 0.0009579720000000014, 0.0009580560000000057, 0.0009580689999999989, 0.0009580689999999989, 0.0009580419999999992, 0.0009580559999999988, 0.0009581530000000033, 0.0009580419999999992, 0.0009580699999999984, 0.0009580549999999993, 0.0009580140000000001, 0.0009580700000000053, 0.0009580279999999997, 0.0009580690000000058, 0.0009580700000000053, 0.0009580559999999988, 0.0009700140000000051, 0.0009580549999999993]</msg>
<status status="PASS" starttime="20201029 18:15:38.864" endtime="20201029 18:15:38.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.859" endtime="20201029 18:15:38.866"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.457" endtime="20201029 18:15:38.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.434" endtime="20201029 18:15:38.867"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:38.869" endtime="20201029 18:15:38.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.868" endtime="20201029 18:15:38.889"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.897" endtime="20201029 18:15:38.958"></status>
</kw>
<msg timestamp="20201029 18:15:38.959" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.896" endtime="20201029 18:15:38.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:38.961" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:38.960" endtime="20201029 18:15:38.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.962" endtime="20201029 18:15:38.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.893" endtime="20201029 18:15:38.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.891" endtime="20201029 18:15:38.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:38.972" endtime="20201029 18:15:39.262"></status>
</kw>
<msg timestamp="20201029 18:15:39.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018740111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:38.971" endtime="20201029 18:15:39.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018740111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.266" endtime="20201029 18:15:39.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.274" endtime="20201029 18:15:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.968" endtime="20201029 18:15:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.967" endtime="20201029 18:15:39.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:39.281" level="INFO">${PHILIP_RES} = [{'diff': 0.0010044859999999989}, {'diff': 0.0010045140000000015}, {'diff': 0.001004513999999998}, {'diff': 0.0010044999999999984}, {'diff': 0.0010045129999999985}, {'diff': 0.001004513999999998}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:39.277" endtime="20201029 18:15:39.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.285" level="INFO">${RESULT} = {'diff': [0.0010044859999999989, 0.0010045140000000015, 0.001004513999999998, 0.0010044999999999984, 0.0010045129999999985, 0.001004513999999998, 0.001004513999999998, 0.0010044999999999984, 0.0010045...</msg>
<status status="PASS" starttime="20201029 18:15:39.282" endtime="20201029 18:15:39.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.289" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:39.288" endtime="20201029 18:15:39.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.291" level="INFO">VALUE: [0.0010044859999999989, 0.0010045140000000015, 0.001004513999999998, 0.0010044999999999984, 0.0010045129999999985, 0.001004513999999998, 0.001004513999999998, 0.0010044999999999984, 0.0010045140000000015, 0.0010217640000000014, 0.0010045420000000006, 0.0010044859999999989, 0.001004513999999998, 0.0010044999999999984, 0.001004513999999998, 0.0010045279999999976, 0.0010044999999999984, 0.0010044859999999989, 0.0010045000000000054, 0.001004513999999998, 0.001004514000000005, 0.0010044999999999984, 0.0010044859999999989, 0.0010045279999999976, 0.0010044859999999989, 0.0010045129999999985, 0.0010045699999999963, 0.0010045560000000037, 0.0010044999999999984, 0.001004513999999998, 0.0010044859999999989, 0.0010045000000000054, 0.0010044999999999984, 0.0010045000000000054, 0.001004513999999998, 0.0010045279999999976, 0.0010045279999999976, 0.0010044999999999984, 0.0010045269999999981, 0.0010330979999999962, 0.0010045000000000054, 0.0010045690000000038, 0.0010045000000000054, 0.001004514000000012, 0.0010044720000000062, 0.0010045000000000054, 0.0010045279999999907, 0.0010045829999999895, 0.001004513999999998, 0.0010044859999999989]</msg>
<status status="PASS" starttime="20201029 18:15:39.290" endtime="20201029 18:15:39.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.285" endtime="20201029 18:15:39.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.890" endtime="20201029 18:15:39.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:38.867" endtime="20201029 18:15:39.294"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.296" endtime="20201029 18:15:39.316"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.295" endtime="20201029 18:15:39.316"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.324" endtime="20201029 18:15:39.389"></status>
</kw>
<msg timestamp="20201029 18:15:39.389" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.323" endtime="20201029 18:15:39.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.392" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.390" endtime="20201029 18:15:39.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.393" endtime="20201029 18:15:39.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.320" endtime="20201029 18:15:39.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.318" endtime="20201029 18:15:39.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.402" endtime="20201029 18:15:39.700"></status>
</kw>
<msg timestamp="20201029 18:15:39.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017740083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018792097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.400" endtime="20201029 18:15:39.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017740083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018792097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.704" endtime="20201029 18:15:39.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.711" endtime="20201029 18:15:39.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.398" endtime="20201029 18:15:39.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.396" endtime="20201029 18:15:39.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:39.718" level="INFO">${PHILIP_RES} = [{'diff': 0.0010520140000000004}, {'diff': 0.001052028}, {'diff': 0.0010520560000000026}, {'diff': 0.001052028}, {'diff': 0.0010520270000000005}, {'diff': 0.001052028}, {'diff': 0.0010520419999999996}...</msg>
<status status="PASS" starttime="20201029 18:15:39.715" endtime="20201029 18:15:39.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:39.723" level="INFO">${RESULT} = {'diff': [0.0010520140000000004, 0.001052028, 0.0010520560000000026, 0.001052028, 0.0010520270000000005, 0.001052028, 0.0010520419999999996, 0.001089277999999999, 0.001052125000000001, 0.0010520689999...</msg>
<status status="PASS" starttime="20201029 18:15:39.719" endtime="20201029 18:15:39.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.727" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:39.726" endtime="20201029 18:15:39.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.730" level="INFO">VALUE: [0.0010520140000000004, 0.001052028, 0.0010520560000000026, 0.001052028, 0.0010520270000000005, 0.001052028, 0.0010520419999999996, 0.001089277999999999, 0.001052125000000001, 0.0010520689999999992, 0.0010520419999999996, 0.0010520419999999996, 0.0010519579999999987, 0.0010520280000000035, 0.0010520559999999957, 0.001051943999999999, 0.0010520410000000036, 0.0010520279999999965, 0.001052042000000003, 0.0010520140000000039, 0.0010520549999999962, 0.0010520280000000035, 0.001052125000000001, 0.0010520129999999975, 0.0010520280000000035, 0.0010520840000000017, 0.0010520279999999965, 0.0010520280000000035, 0.0010520560000000026, 0.0010520279999999965, 0.001052027000000004, 0.0010520140000000039, 0.001052041999999996, 0.0010520410000000036, 0.0010520280000000035, 0.0010520279999999965, 0.0010884859999999996, 0.001052041999999996, 0.0010520280000000035, 0.0010520830000000023, 0.001052042000000003, 0.0010520419999999892, 0.0010520549999999962, 0.0010519999999999974, 0.0010519719999999982, 0.00105205500000001, 0.0010520140000000039, 0.0010520419999999892, 0.0010520280000000104, 0.0010520410000000036]</msg>
<status status="PASS" starttime="20201029 18:15:39.728" endtime="20201029 18:15:39.730"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.724" endtime="20201029 18:15:39.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.317" endtime="20201029 18:15:39.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.294" endtime="20201029 18:15:39.731"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:39.734" endtime="20201029 18:15:39.753"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.732" endtime="20201029 18:15:39.754"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.762" endtime="20201029 18:15:39.828"></status>
</kw>
<msg timestamp="20201029 18:15:39.829" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.760" endtime="20201029 18:15:39.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:39.831" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:39.830" endtime="20201029 18:15:39.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.832" endtime="20201029 18:15:39.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.758" endtime="20201029 18:15:39.834"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.756" endtime="20201029 18:15:39.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:39.841" endtime="20201029 18:15:40.128"></status>
</kw>
<msg timestamp="20201029 18:15:40.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:39.840" endtime="20201029 18:15:40.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017613389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018714014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.132" endtime="20201029 18:15:40.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.140" endtime="20201029 18:15:40.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.837" endtime="20201029 18:15:40.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.835" endtime="20201029 18:15:40.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:40.147" level="INFO">${PHILIP_RES} = [{'diff': 0.001100625000000001}, {'diff': 0.001100625000000001}, {'diff': 0.0011006669999999996}, {'diff': 0.001100638999999997}, {'diff': 0.0011006520000000006}, {'diff': 0.0011006379999999975}, {'di...</msg>
<status status="PASS" starttime="20201029 18:15:40.144" endtime="20201029 18:15:40.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.151" level="INFO">${RESULT} = {'diff': [0.001100625000000001, 0.001100625000000001, 0.0011006669999999996, 0.001100638999999997, 0.0011006520000000006, 0.0011006379999999975, 0.0011006390000000005, 0.0011006390000000005, 0.0011006...</msg>
<status status="PASS" starttime="20201029 18:15:40.148" endtime="20201029 18:15:40.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.155" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:40.154" endtime="20201029 18:15:40.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.158" level="INFO">VALUE: [0.001100625000000001, 0.001100625000000001, 0.0011006669999999996, 0.001100638999999997, 0.0011006520000000006, 0.0011006379999999975, 0.0011006390000000005, 0.0011006390000000005, 0.0011006669999999996, 0.001100625000000001, 0.001100653, 0.0011006250000000044, 0.001100624999999994, 0.001100624999999994, 0.001100653, 0.001100624999999994, 0.0011006390000000005, 0.0011006520000000006, 0.0011006660000000001, 0.0011006390000000005, 0.0011006390000000005, 0.001100653, 0.0011006669999999996, 0.001100625000000001, 0.0011005830000000022, 0.0011353610000000014, 0.0011006520000000006, 0.0011006660000000001, 0.0011006390000000005, 0.0011006390000000005, 0.001100653, 0.0011006110000000013, 0.0011006390000000005, 0.001100653, 0.001100653, 0.0011006390000000005, 0.0011006520000000006, 0.0011006659999999932, 0.0011006390000000005, 0.0011006390000000005, 0.001100653000000007, 0.0011006390000000005, 0.0011006110000000013, 0.0011006390000000005, 0.0011006250000000078, 0.0011006669999999996, 0.0011006529999999931, 0.0011006110000000013, 0.001100624999999994, 0.001100638000000001]</msg>
<status status="PASS" starttime="20201029 18:15:40.156" endtime="20201029 18:15:40.158"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.152" endtime="20201029 18:15:40.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.754" endtime="20201029 18:15:40.159"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:39.732" endtime="20201029 18:15:40.160"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.162" endtime="20201029 18:15:40.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.161" endtime="20201029 18:15:40.182"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.190" endtime="20201029 18:15:40.261"></status>
</kw>
<msg timestamp="20201029 18:15:40.262" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.189" endtime="20201029 18:15:40.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.267" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.264" endtime="20201029 18:15:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.269" endtime="20201029 18:15:40.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.186" endtime="20201029 18:15:40.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.184" endtime="20201029 18:15:40.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.290" endtime="20201029 18:15:40.581"></status>
</kw>
<msg timestamp="20201029 18:15:40.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018727889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.286" endtime="20201029 18:15:40.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018727889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.585" endtime="20201029 18:15:40.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.593" endtime="20201029 18:15:40.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.281" endtime="20201029 18:15:40.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.277" endtime="20201029 18:15:40.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:40.599" level="INFO">${PHILIP_RES} = [{'diff': 0.0011502920000000007}, {'diff': 0.0011503060000000002}, {'diff': 0.001150333}, {'diff': 0.001150347000000003}, {'diff': 0.0011503480000000024}, {'diff': 0.0011503469999999995}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201029 18:15:40.596" endtime="20201029 18:15:40.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:40.603" level="INFO">${RESULT} = {'diff': [0.0011502920000000007, 0.0011503060000000002, 0.001150333, 0.001150347000000003, 0.0011503480000000024, 0.0011503469999999995, 0.0011503469999999995, 0.0011503469999999995, 0.001150333, 0.00...</msg>
<status status="PASS" starttime="20201029 18:15:40.600" endtime="20201029 18:15:40.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.607" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:40.606" endtime="20201029 18:15:40.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.610" level="INFO">VALUE: [0.0011502920000000007, 0.0011503060000000002, 0.001150333, 0.001150347000000003, 0.0011503480000000024, 0.0011503469999999995, 0.0011503469999999995, 0.0011503469999999995, 0.001150333, 0.0011503339999999994, 0.0011503339999999994, 0.001150347000000003, 0.001150347000000003, 0.0011503329999999964, 0.0011503340000000029, 0.001150346999999996, 0.001150347000000003, 0.001150346999999996, 0.001150375000000002, 0.001150333999999996, 0.0011503340000000029, 0.0011503329999999964, 0.0011929170000000017, 0.0011503329999999964, 0.0011503330000000034, 0.0011503330000000034, 0.0011503189999999969, 0.0011503340000000029, 0.001150346999999996, 0.0011503190000000038, 0.0011502769999999982, 0.0011503610000000025, 0.0011503479999999955, 0.001150375000000002, 0.0011503189999999969, 0.0011502910000000047, 0.0011503610000000095, 0.001150333999999989, 0.0011503329999999895, 0.0011503330000000034, 0.0011503330000000034, 0.0011502909999999977, 0.0011503479999999955, 0.0011503060000000037, 0.001150346999999996, 0.0011503330000000034, 0.001150346999999996, 0.0011502780000000046, 0.0011503330000000034, 0.0011796949999999945]</msg>
<status status="PASS" starttime="20201029 18:15:40.609" endtime="20201029 18:15:40.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.604" endtime="20201029 18:15:40.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.183" endtime="20201029 18:15:40.612"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.160" endtime="20201029 18:15:40.613"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:40.615" endtime="20201029 18:15:40.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.614" endtime="20201029 18:15:40.635"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.643" endtime="20201029 18:15:40.716"></status>
</kw>
<msg timestamp="20201029 18:15:40.716" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.641" endtime="20201029 18:15:40.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:40.719" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:40.718" endtime="20201029 18:15:40.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.721" endtime="20201029 18:15:40.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.639" endtime="20201029 18:15:40.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.637" endtime="20201029 18:15:40.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:40.730" endtime="20201029 18:15:41.016"></status>
</kw>
<msg timestamp="20201029 18:15:41.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017857069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019103361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:40.728" endtime="20201029 18:15:41.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017857069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019103361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.020" endtime="20201029 18:15:41.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.028" endtime="20201029 18:15:41.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.726" endtime="20201029 18:15:41.030"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.724" endtime="20201029 18:15:41.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:41.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0012462919999999995}, {'diff': 0.0012011109999999978}, {'diff': 0.0012011250000000008}, {'diff': 0.0012011110000000012}, {'diff': 0.0012011109999999978}, {'diff': 0.0012011390000000004}, {...</msg>
<status status="PASS" starttime="20201029 18:15:41.032" endtime="20201029 18:15:41.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.039" level="INFO">${RESULT} = {'diff': [0.0012462919999999995, 0.0012011109999999978, 0.0012011250000000008, 0.0012011110000000012, 0.0012011109999999978, 0.0012011390000000004, 0.001201153, 0.0012011250000000008, 0.00120109699999...</msg>
<status status="PASS" starttime="20201029 18:15:41.036" endtime="20201029 18:15:41.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.044" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:41.043" endtime="20201029 18:15:41.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.046" level="INFO">VALUE: [0.0012462919999999995, 0.0012011109999999978, 0.0012011250000000008, 0.0012011110000000012, 0.0012011109999999978, 0.0012011390000000004, 0.001201153, 0.0012011250000000008, 0.0012010969999999982, 0.0012010419999999994, 0.0012010699999999985, 0.0012010969999999982, 0.0012011250000000043, 0.001201068999999999, 0.0012010549999999995, 0.0012011109999999978, 0.0012011119999999972, 0.0012011109999999978, 0.0012011249999999973, 0.0012010979999999977, 0.0012011110000000047, 0.0012011390000000038, 0.0012011110000000047, 0.0012011109999999978, 0.0012011249999999973, 0.0012010969999999982, 0.0012305830000000004, 0.0012011109999999978, 0.0012010979999999977, 0.0012010969999999982, 0.0012010969999999982, 0.0012011120000000042, 0.0012011250000000043, 0.0012011250000000043, 0.001201152000000004, 0.0012011390000000038, 0.0012011250000000112, 0.0012011529999999965, 0.0012011110000000047, 0.001201084000000005, 0.001201068999999999, 0.0012011390000000038, 0.0012011249999999973, 0.0012011110000000047, 0.0012011110000000047, 0.001201055999999992, 0.0012011250000000112, 0.0012011249999999973, 0.0012011249999999973, 0.0012010969999999982]</msg>
<status status="PASS" starttime="20201029 18:15:41.045" endtime="20201029 18:15:41.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.040" endtime="20201029 18:15:41.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.635" endtime="20201029 18:15:41.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:40.613" endtime="20201029 18:15:41.048"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.051" endtime="20201029 18:15:41.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.049" endtime="20201029 18:15:41.073"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.089" endtime="20201029 18:15:41.166"></status>
</kw>
<msg timestamp="20201029 18:15:41.167" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.086" endtime="20201029 18:15:41.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.174" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.169" endtime="20201029 18:15:41.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.177" endtime="20201029 18:15:41.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.081" endtime="20201029 18:15:41.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.077" endtime="20201029 18:15:41.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.196" endtime="20201029 18:15:41.489"></status>
</kw>
<msg timestamp="20201029 18:15:41.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0296855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030938458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:41.193" endtime="20201029 18:15:41.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0296855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030938458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:41.493" endtime="20201029 18:15:41.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.503" endtime="20201029 18:15:41.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.187" endtime="20201029 18:15:41.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.184" endtime="20201029 18:15:41.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:41.513" level="INFO">${PHILIP_RES} = [{'diff': 0.0012529579999999985}, {'diff': 0.001252958000000002}, {'diff': 0.0012530140000000037}, {'diff': 0.0012530000000000041}, {'diff': 0.0012529860000000045}, {'diff': 0.0012529590000000049}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.509" endtime="20201029 18:15:41.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.520" level="INFO">${RESULT} = {'diff': [0.0012529579999999985, 0.001252958000000002, 0.0012530140000000037, 0.0012530000000000041, 0.0012529860000000045, 0.0012529590000000049, 0.001252971999999998, 0.001252971999999998, 0.0012530...</msg>
<status status="PASS" starttime="20201029 18:15:41.514" endtime="20201029 18:15:41.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.528" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:41.526" endtime="20201029 18:15:41.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.530" level="INFO">VALUE: [0.0012529579999999985, 0.001252958000000002, 0.0012530140000000037, 0.0012530000000000041, 0.0012529860000000045, 0.0012529590000000049, 0.001252971999999998, 0.001252971999999998, 0.0012530270000000038, 0.0012824310000000005, 0.001252971999999998, 0.0012530560000000024, 0.0012529579999999985, 0.0012529580000000054, 0.001252972000000005, 0.0012529580000000054, 0.0012529860000000045, 0.0012530280000000033, 0.0012529860000000045, 0.0012530000000000041, 0.0012529859999999976, 0.001252971999999998, 0.0012529579999999985, 0.001252889, 0.001252972000000005, 0.001252972000000005, 0.0012529440000000058, 0.0012529730000000044, 0.001252972000000005, 0.0012529860000000115, 0.0012530000000000041, 0.001252971999999991, 0.001252958999999998, 0.0012955969999999956, 0.001252972000000005, 0.0012529730000000044, 0.0012529859999999976, 0.001252972000000005, 0.001253055000000003, 0.0012529859999999976, 0.001252971999999991, 0.0012529579999999985, 0.001252986999999997, 0.0012530000000000041, 0.001252972000000005, 0.001252971999999991, 0.0012530280000000033, 0.001252971999999991, 0.001252972000000005, 0.0012529729999999906]</msg>
<status status="PASS" starttime="20201029 18:15:41.529" endtime="20201029 18:15:41.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.524" endtime="20201029 18:15:41.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.074" endtime="20201029 18:15:41.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.049" endtime="20201029 18:15:41.532"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.534" endtime="20201029 18:15:41.554"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.533" endtime="20201029 18:15:41.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.562" endtime="20201029 18:15:41.641"></status>
</kw>
<msg timestamp="20201029 18:15:41.641" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.561" endtime="20201029 18:15:41.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.644" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:41.642" endtime="20201029 18:15:41.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.645" endtime="20201029 18:15:41.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.558" endtime="20201029 18:15:41.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.556" endtime="20201029 18:15:41.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.657" endtime="20201029 18:15:41.943"></status>
</kw>
<msg timestamp="20201029 18:15:41.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017856069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019161958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.655" endtime="20201029 18:15:41.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017856069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019161958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:41.947" endtime="20201029 18:15:41.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:41.955" endtime="20201029 18:15:41.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.653" endtime="20201029 18:15:41.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.651" endtime="20201029 18:15:41.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:41.961" level="INFO">${PHILIP_RES} = [{'diff': 0.001305889000000001}, {'diff': 0.0013059309999999998}, {'diff': 0.0013059300000000003}, {'diff': 0.0013059309999999998}, {'diff': 0.0013059170000000002}, {'diff': 0.0013059170000000002}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:41.958" endtime="20201029 18:15:41.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:41.968" level="INFO">${RESULT} = {'diff': [0.001305889000000001, 0.0013059309999999998, 0.0013059300000000003, 0.0013059309999999998, 0.0013059170000000002, 0.0013059170000000002, 0.0013059309999999998, 0.0013059160000000007, 0.00130...</msg>
<status status="PASS" starttime="20201029 18:15:41.962" endtime="20201029 18:15:41.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.977" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:41.975" endtime="20201029 18:15:41.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:41.982" level="INFO">VALUE: [0.001305889000000001, 0.0013059309999999998, 0.0013059300000000003, 0.0013059309999999998, 0.0013059170000000002, 0.0013059170000000002, 0.0013059309999999998, 0.0013059160000000007, 0.001305889000000001, 0.0013059160000000007, 0.0013059170000000037, 0.0013059440000000033, 0.0013059590000000024, 0.0013059160000000042, 0.0013059170000000037, 0.0013059310000000032, 0.0013059160000000042, 0.0013059170000000037, 0.0013059300000000038, 0.0013059310000000032, 0.0013059160000000042, 0.0013059310000000032, 0.0013059720000000025, 0.0013059170000000037, 0.0013059170000000037, 0.0013058480000000053, 0.001305903000000004, 0.0013059170000000037, 0.0013059300000000038, 0.0013058470000000058, 0.001305874999999998, 0.0013058889999999976, 0.0013059170000000037, 0.001305973000000002, 0.001305957999999996, 0.0013059440000000033, 0.0013059029999999971, 0.0013059440000000033, 0.0013059170000000037, 0.0013059160000000042, 0.0013059170000000037, 0.0013059019999999977, 0.0013059590000000093, 0.0013059170000000037, 0.0013059170000000037, 0.001305985999999995, 0.001342402999999992, 0.0013059159999999903, 0.0013059169999999898, 0.0013059159999999903]</msg>
<status status="PASS" starttime="20201029 18:15:41.979" endtime="20201029 18:15:41.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.970" endtime="20201029 18:15:41.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.555" endtime="20201029 18:15:41.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.532" endtime="20201029 18:15:41.987"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:41.992" endtime="20201029 18:15:42.014"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.989" endtime="20201029 18:15:42.015"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.032" endtime="20201029 18:15:42.113"></status>
</kw>
<msg timestamp="20201029 18:15:42.113" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.029" endtime="20201029 18:15:42.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.116" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.114" endtime="20201029 18:15:42.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.117" endtime="20201029 18:15:42.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.023" endtime="20201029 18:15:42.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.019" endtime="20201029 18:15:42.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.126" endtime="20201029 18:15:42.413"></status>
</kw>
<msg timestamp="20201029 18:15:42.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029896972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031256875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.124" endtime="20201029 18:15:42.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029896972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031256875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.417" endtime="20201029 18:15:42.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.425" endtime="20201029 18:15:42.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.122" endtime="20201029 18:15:42.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.120" endtime="20201029 18:15:42.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:42.432" level="INFO">${PHILIP_RES} = [{'diff': 0.0013599030000000026}, {'diff': 0.0013599440000000018}, {'diff': 0.0013599440000000018}, {'diff': 0.0013599170000000022}, {'diff': 0.0013599170000000022}, {'diff': 0.0013599439999999949}, {...</msg>
<status status="PASS" starttime="20201029 18:15:42.429" endtime="20201029 18:15:42.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.437" level="INFO">${RESULT} = {'diff': [0.0013599030000000026, 0.0013599440000000018, 0.0013599440000000018, 0.0013599170000000022, 0.0013599170000000022, 0.0013599439999999949, 0.0013599580000000014, 0.0013599580000000014, 0.0013...</msg>
<status status="PASS" starttime="20201029 18:15:42.433" endtime="20201029 18:15:42.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.441" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:42.440" endtime="20201029 18:15:42.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.443" level="INFO">VALUE: [0.0013599030000000026, 0.0013599440000000018, 0.0013599440000000018, 0.0013599170000000022, 0.0013599170000000022, 0.0013599439999999949, 0.0013599580000000014, 0.0013599580000000014, 0.0013599440000000018, 0.0013599440000000018, 0.0013599029999999956, 0.0013599439999999949, 0.0013599440000000018, 0.001409500000000001, 0.00136, 0.0013599450000000013, 0.0013599439999999949, 0.0013599310000000017, 0.0013599450000000013, 0.0013599030000000026, 0.0013599450000000013, 0.0013599450000000013, 0.0013599449999999944, 0.0013599580000000083, 0.0013599450000000013, 0.0013599450000000013, 0.0013599440000000018, 0.0013599450000000013, 0.0013599579999999944, 0.0013599450000000013, 0.0013599859999999936, 0.001359972000000001, 0.0013599450000000013, 0.0013599310000000087, 0.0013599580000000083, 0.0013599310000000087, 0.0013981389999999927, 0.0013599579999999944, 0.00136, 0.0013599440000000018, 0.0013599579999999944, 0.0013599440000000018, 0.0013599579999999944, 0.0013599440000000018, 0.0013599170000000022, 0.0013599309999999948, 0.0013599579999999944, 0.001359943999999988, 0.0013599440000000018, 0.0013599440000000018]</msg>
<status status="PASS" starttime="20201029 18:15:42.442" endtime="20201029 18:15:42.444"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.437" endtime="20201029 18:15:42.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.016" endtime="20201029 18:15:42.445"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:41.988" endtime="20201029 18:15:42.445"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.448" endtime="20201029 18:15:42.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.446" endtime="20201029 18:15:42.467"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.476" endtime="20201029 18:15:42.559"></status>
</kw>
<msg timestamp="20201029 18:15:42.560" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.474" endtime="20201029 18:15:42.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.563" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.561" endtime="20201029 18:15:42.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.564" endtime="20201029 18:15:42.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.471" endtime="20201029 18:15:42.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.470" endtime="20201029 18:15:42.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.573" endtime="20201029 18:15:42.874"></status>
</kw>
<msg timestamp="20201029 18:15:42.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.571" endtime="20201029 18:15:42.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017641694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019056736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:42.878" endtime="20201029 18:15:42.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.886" endtime="20201029 18:15:42.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.569" endtime="20201029 18:15:42.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.567" endtime="20201029 18:15:42.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:42.893" level="INFO">${PHILIP_RES} = [{'diff': 0.0014150420000000018}, {'diff': 0.0014150560000000013}, {'diff': 0.0014602499999999997}, {'diff': 0.0014150840000000005}, {'diff': 0.001415070000000001}, {'diff': 0.0014150690000000014}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:42.890" endtime="20201029 18:15:42.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:42.897" level="INFO">${RESULT} = {'diff': [0.0014150420000000018, 0.0014150560000000013, 0.0014602499999999997, 0.0014150840000000005, 0.001415070000000001, 0.0014150690000000014, 0.001415083000000001, 0.0014150560000000013, 0.001415...</msg>
<status status="PASS" starttime="20201029 18:15:42.894" endtime="20201029 18:15:42.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.901" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:42.900" endtime="20201029 18:15:42.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:42.904" level="INFO">VALUE: [0.0014150420000000018, 0.0014150560000000013, 0.0014602499999999997, 0.0014150840000000005, 0.001415070000000001, 0.0014150690000000014, 0.001415083000000001, 0.0014150560000000013, 0.0014150420000000018, 0.0014150419999999983, 0.0014150549999999984, 0.0014150550000000053, 0.0014150559999999979, 0.0014150560000000048, 0.0014150419999999983, 0.0014150550000000053, 0.0014150279999999987, 0.0014150829999999975, 0.0014150830000000045, 0.0014150409999999988, 0.0014150409999999988, 0.0014150559999999979, 0.0014150560000000048, 0.0014150559999999979, 0.0014515000000000014, 0.0014150419999999983, 0.0014150409999999988, 0.001415068999999998, 0.0014150699999999974, 0.0014150419999999914, 0.0014150549999999984, 0.0014150830000000114, 0.0014150279999999987, 0.0014150559999999979, 0.0014150559999999979, 0.0014150410000000058, 0.001415068999999991, 0.0014150559999999979, 0.0014150559999999979, 0.0014150409999999919, 0.0014150410000000058, 0.0014150549999999984, 0.0014150559999999979, 0.0014150420000000052, 0.0014150549999999984, 0.0014150829999999975, 0.0014383750000000056, 0.0014150549999999984, 0.0014150420000000052, 0.001414986000000007]</msg>
<status status="PASS" starttime="20201029 18:15:42.902" endtime="20201029 18:15:42.904"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.898" endtime="20201029 18:15:42.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.468" endtime="20201029 18:15:42.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.446" endtime="20201029 18:15:42.905"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:42.908" endtime="20201029 18:15:42.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.906" endtime="20201029 18:15:42.928"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:42.936" endtime="20201029 18:15:43.022"></status>
</kw>
<msg timestamp="20201029 18:15:43.023" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:42.934" endtime="20201029 18:15:43.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.025" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.024" endtime="20201029 18:15:43.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.026" endtime="20201029 18:15:43.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.932" endtime="20201029 18:15:43.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.930" endtime="20201029 18:15:43.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.036" endtime="20201029 18:15:43.322"></status>
</kw>
<msg timestamp="20201029 18:15:43.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017902625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.035" endtime="20201029 18:15:43.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017902625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019373847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.326" endtime="20201029 18:15:43.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.334" endtime="20201029 18:15:43.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.032" endtime="20201029 18:15:43.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.030" endtime="20201029 18:15:43.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:43.341" level="INFO">${PHILIP_RES} = [{'diff': 0.0014712220000000012}, {'diff': 0.001513819999999999}, {'diff': 0.0014713049999999991}, {'diff': 0.0014712360000000008}, {'diff': 0.0014712500000000003}, {'diff': 0.0014712500000000003}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:43.338" endtime="20201029 18:15:43.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.345" level="INFO">${RESULT} = {'diff': [0.0014712220000000012, 0.001513819999999999, 0.0014713049999999991, 0.0014712360000000008, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712499999999969, 0.00147...</msg>
<status status="PASS" starttime="20201029 18:15:43.342" endtime="20201029 18:15:43.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.349" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:43.348" endtime="20201029 18:15:43.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.351" level="INFO">VALUE: [0.0014712220000000012, 0.001513819999999999, 0.0014713049999999991, 0.0014712360000000008, 0.0014712500000000003, 0.0014712500000000003, 0.0014712500000000003, 0.0014712499999999969, 0.001471264, 0.0014712360000000008, 0.0014712500000000003, 0.0014712360000000008, 0.0014712779999999995, 0.0014712909999999996, 0.0014712500000000003, 0.001471264, 0.0014712500000000003, 0.0014712500000000003, 0.001471264, 0.0014712500000000003, 0.001471264, 0.0014712360000000008, 0.0015111800000000009, 0.0014712500000000003, 0.0014712779999999995, 0.0014712360000000008, 0.0014712360000000008, 0.001471264, 0.0014712499999999934, 0.0014712499999999934, 0.0014712360000000008, 0.001471264, 0.0014712220000000081, 0.0014712220000000081, 0.001471264, 0.0014712220000000081, 0.001471264, 0.001471181000000002, 0.0014712500000000073, 0.0014712500000000073, 0.0014712779999999925, 0.0014712500000000073, 0.0014712080000000016, 0.00150769399999999, 0.0014712219999999943, 0.0014712780000000064, 0.0014712780000000064, 0.001471264, 0.0014712220000000081, 0.0014713049999999922]</msg>
<status status="PASS" starttime="20201029 18:15:43.350" endtime="20201029 18:15:43.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.346" endtime="20201029 18:15:43.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.928" endtime="20201029 18:15:43.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:42.906" endtime="20201029 18:15:43.360"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.363" endtime="20201029 18:15:43.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.361" endtime="20201029 18:15:43.383"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.391" endtime="20201029 18:15:43.480"></status>
</kw>
<msg timestamp="20201029 18:15:43.481" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.390" endtime="20201029 18:15:43.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.483" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.482" endtime="20201029 18:15:43.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.484" endtime="20201029 18:15:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.387" endtime="20201029 18:15:43.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.385" endtime="20201029 18:15:43.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.493" endtime="20201029 18:15:43.790"></status>
</kw>
<msg timestamp="20201029 18:15:43.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019171625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.492" endtime="20201029 18:15:43.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017643111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019171625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.794" endtime="20201029 18:15:43.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.802" endtime="20201029 18:15:43.803"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.489" endtime="20201029 18:15:43.804"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.488" endtime="20201029 18:15:43.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:43.808" level="INFO">${PHILIP_RES} = [{'diff': 0.0015285140000000016}, {'diff': 0.0015285269999999983}, {'diff': 0.0015285420000000008}, {'diff': 0.0015284999999999986}, {'diff': 0.0015285279999999977}, {'diff': 0.0015285409999999978}, {...</msg>
<status status="PASS" starttime="20201029 18:15:43.805" endtime="20201029 18:15:43.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:43.813" level="INFO">${RESULT} = {'diff': [0.0015285140000000016, 0.0015285269999999983, 0.0015285420000000008, 0.0015284999999999986, 0.0015285279999999977, 0.0015285409999999978, 0.0015285420000000008, 0.0015285280000000012, 0.0015...</msg>
<status status="PASS" starttime="20201029 18:15:43.809" endtime="20201029 18:15:43.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.817" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:43.816" endtime="20201029 18:15:43.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.820" level="INFO">VALUE: [0.0015285140000000016, 0.0015285269999999983, 0.0015285420000000008, 0.0015284999999999986, 0.0015285279999999977, 0.0015285409999999978, 0.0015285420000000008, 0.0015285280000000012, 0.0015285410000000013, 0.0015285279999999943, 0.0015285140000000016, 0.0015285270000000017, 0.0015285280000000012, 0.0015285420000000008, 0.0015285690000000005, 0.0015285420000000008, 0.0015285140000000016, 0.0015285280000000012, 0.0015285420000000008, 0.0015285140000000016, 0.0015285139999999947, 0.0015285280000000012, 0.0015285280000000012, 0.0015285410000000013, 0.0015500970000000003, 0.0015285140000000016, 0.0015285280000000012, 0.0015285269999999948, 0.0015285420000000077, 0.0015285139999999947, 0.0015286109999999992, 0.0015285140000000086, 0.0015285140000000086, 0.0015285270000000017, 0.0015285140000000086, 0.0015285419999999939, 0.001528583, 0.0015286109999999992, 0.0015285560000000004, 0.0015285550000000009, 0.0015285279999999873, 0.0015285420000000077, 0.0015285409999999944, 0.0015285139999999947, 0.0015579449999999911, 0.0015285280000000012, 0.0015285409999999944, 0.001528500000000002, 0.0015285279999999873, 0.0015285279999999873]</msg>
<status status="PASS" starttime="20201029 18:15:43.818" endtime="20201029 18:15:43.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.814" endtime="20201029 18:15:43.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.384" endtime="20201029 18:15:43.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.361" endtime="20201029 18:15:43.822"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:43.824" endtime="20201029 18:15:43.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.823" endtime="20201029 18:15:43.844"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.852" endtime="20201029 18:15:43.944"></status>
</kw>
<msg timestamp="20201029 18:15:43.945" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.851" endtime="20201029 18:15:43.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:43.947" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:43.946" endtime="20201029 18:15:43.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.948" endtime="20201029 18:15:43.950"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.848" endtime="20201029 18:15:43.951"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.846" endtime="20201029 18:15:43.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:43.957" endtime="20201029 18:15:44.245"></status>
</kw>
<msg timestamp="20201029 18:15:44.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017765056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:43.956" endtime="20201029 18:15:44.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017765056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019351889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:44.249" endtime="20201029 18:15:44.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.257" endtime="20201029 18:15:44.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.953" endtime="20201029 18:15:44.259"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.952" endtime="20201029 18:15:44.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:44.263" level="INFO">${PHILIP_RES} = [{'diff': 0.0015868329999999993}, {'diff': 0.0015868889999999976}, {'diff': 0.0016268340000000006}, {'diff': 0.0015868889999999976}, {'diff': 0.001586889000000001}, {'diff': 0.001586889000000001}, {'d...</msg>
<status status="PASS" starttime="20201029 18:15:44.260" endtime="20201029 18:15:44.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.267" level="INFO">${RESULT} = {'diff': [0.0015868329999999993, 0.0015868889999999976, 0.0016268340000000006, 0.0015868889999999976, 0.001586889000000001, 0.001586889000000001, 0.0015869030000000006, 0.0015868750000000015, 0.001586...</msg>
<status status="PASS" starttime="20201029 18:15:44.264" endtime="20201029 18:15:44.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.272" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:44.271" endtime="20201029 18:15:44.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.274" level="INFO">VALUE: [0.0015868329999999993, 0.0015868889999999976, 0.0016268340000000006, 0.0015868889999999976, 0.001586889000000001, 0.001586889000000001, 0.0015869030000000006, 0.0015868750000000015, 0.001586889000000001, 0.001586889000000001, 0.001586889000000001, 0.0015868199999999957, 0.0015868750000000015, 0.0015868750000000015, 0.0015868750000000015, 0.001586860999999995, 0.0015868189999999963, 0.001586889000000001, 0.001586861000000002, 0.0015869020000000011, 0.0015869020000000011, 0.001639069, 0.0015869030000000006, 0.0015869309999999998, 0.0015868889999999941, 0.0015869030000000006, 0.0015869030000000006, 0.0015869030000000006, 0.0015869030000000006, 0.0015869030000000006, 0.0015868750000000015, 0.001586972000000006, 0.0015868889999999941, 0.0015868750000000015, 0.0015869030000000006, 0.0015869030000000006, 0.0015869579999999994, 0.001586889000000008, 0.0015869450000000063, 0.0015868610000000088, 0.0015868889999999941, 0.0016207079999999985, 0.0015868889999999941, 0.001586889000000008, 0.0015868750000000015, 0.001586889000000008, 0.0015868750000000015, 0.001586889000000008, 0.0015868199999999888, 0.0015868889999999941]</msg>
<status status="PASS" starttime="20201029 18:15:44.273" endtime="20201029 18:15:44.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.268" endtime="20201029 18:15:44.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.845" endtime="20201029 18:15:44.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:43.822" endtime="20201029 18:15:44.276"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:44.278" endtime="20201029 18:15:44.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.277" endtime="20201029 18:15:44.298"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.306" endtime="20201029 18:15:44.402"></status>
</kw>
<msg timestamp="20201029 18:15:44.403" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.305" endtime="20201029 18:15:44.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.408" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:44.406" endtime="20201029 18:15:44.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.411" endtime="20201029 18:15:44.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.302" endtime="20201029 18:15:44.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.300" endtime="20201029 18:15:44.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.431" endtime="20201029 18:15:44.724"></status>
</kw>
<msg timestamp="20201029 18:15:44.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01781975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:44.428" endtime="20201029 18:15:44.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01781975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466069, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:44.728" endtime="20201029 18:15:44.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:44.736" endtime="20201029 18:15:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.423" endtime="20201029 18:15:44.738"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.419" endtime="20201029 18:15:44.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 18:15:44.743" level="INFO">${PHILIP_RES} = [{'diff': 0.0016463190000000003}, {'diff': 0.0016463339999999993}, {'diff': 0.0016463329999999998}, {'diff': 0.0016463190000000003}, {'diff': 0.0016463329999999998}, {'diff': 0.0016652780000000027}, {...</msg>
<status status="PASS" starttime="20201029 18:15:44.739" endtime="20201029 18:15:44.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:44.747" level="INFO">${RESULT} = {'diff': [0.0016463190000000003, 0.0016463339999999993, 0.0016463329999999998, 0.0016463190000000003, 0.0016463329999999998, 0.0016652780000000027, 0.0016463329999999998, 0.0016463199999999963, 0.0016...</msg>
<status status="PASS" starttime="20201029 18:15:44.744" endtime="20201029 18:15:44.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.751" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 18:15:44.750" endtime="20201029 18:15:44.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.753" level="INFO">VALUE: [0.0016463190000000003, 0.0016463339999999993, 0.0016463329999999998, 0.0016463190000000003, 0.0016463329999999998, 0.0016652780000000027, 0.0016463329999999998, 0.0016463199999999963, 0.0016463339999999993, 0.0016464019999999982, 0.0016463469999999994, 0.0016463190000000003, 0.0016463339999999993, 0.0016463469999999994, 0.0016463329999999998, 0.0016463050000000007, 0.0016463339999999993, 0.0016463340000000062, 0.001646389000000005, 0.0016463190000000003, 0.0016463339999999993, 0.0016463749999999985, 0.0016463329999999998, 0.001696778000000003, 0.0016463329999999998, 0.0016464030000000046, 0.0016463470000000063, 0.0016463339999999993, 0.0016462639999999945, 0.0016462920000000075, 0.001646291000000008, 0.001646291000000008, 0.0016463339999999993, 0.0016463199999999928, 0.0016463050000000007, 0.0016463329999999998, 0.0016463200000000067, 0.0016463469999999925, 0.0016463329999999998, 0.0016463329999999998, 0.0016463199999999928, 0.0016463339999999993, 0.001688902000000006, 0.0016463339999999993, 0.0016463610000000128, 0.0016463329999999998, 0.0016463189999999933, 0.001646360999999999, 0.0016463339999999993, 0.0016463469999999925]</msg>
<status status="PASS" starttime="20201029 18:15:44.752" endtime="20201029 18:15:44.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.747" endtime="20201029 18:15:44.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.299" endtime="20201029 18:15:44.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.276" endtime="20201029 18:15:44.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:24.059" endtime="20201029 18:15:44.756"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:22.708" endtime="20201029 18:15:44.757" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:14:59.725" endtime="20201029 18:15:44.765"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:15:44.834" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:15:44.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:15:46.043" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:15:44.833" endtime="20201029 18:15:46.045"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.050" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:15:46.047" endtime="20201029 18:15:46.050"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.831" endtime="20201029 18:15:46.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.057" endtime="20201029 18:15:46.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.054" endtime="20201029 18:15:46.311"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.324" endtime="20201029 18:15:46.338"></status>
</kw>
<msg timestamp="20201029 18:15:46.339" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201029 18:15:46.322" endtime="20201029 18:15:46.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.341" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [' This is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'...</msg>
<status status="PASS" starttime="20201029 18:15:46.340" endtime="20201029 18:15:46.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.344" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:46.342" endtime="20201029 18:15:46.345"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.320" endtime="20201029 18:15:46.345"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.318" endtime="20201029 18:15:46.346"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.316" endtime="20201029 18:15:46.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:46.351" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:46.350" endtime="20201029 18:15:46.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.347" endtime="20201029 18:15:46.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.315" endtime="20201029 18:15:46.352"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.315" endtime="20201029 18:15:46.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.353" endtime="20201029 18:15:46.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.314" endtime="20201029 18:15:46.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.356" endtime="20201029 18:15:46.357"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.312" endtime="20201029 18:15:46.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:44.830" endtime="20201029 18:15:46.358"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.364" endtime="20201029 18:15:46.383"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.362" endtime="20201029 18:15:46.384"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.397" endtime="20201029 18:15:46.411"></status>
</kw>
<msg timestamp="20201029 18:15:46.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.396" endtime="20201029 18:15:46.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.414" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.412" endtime="20201029 18:15:46.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.417" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:15:46.415" endtime="20201029 18:15:46.417"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.393" endtime="20201029 18:15:46.418"></status>
</kw>
<status status="FAIL" starttime="20201029 18:15:46.391" endtime="20201029 18:15:46.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.390" endtime="20201029 18:15:46.418"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:15:46.422" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:15:46.421" endtime="20201029 18:15:46.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.419" endtime="20201029 18:15:46.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.389" endtime="20201029 18:15:46.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.388" endtime="20201029 18:15:46.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.424" endtime="20201029 18:15:46.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.387" endtime="20201029 18:15:46.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.385" endtime="20201029 18:15:46.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.361" endtime="20201029 18:15:46.427"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.437" endtime="20201029 18:15:46.453"></status>
</kw>
<msg timestamp="20201029 18:15:46.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.436" endtime="20201029 18:15:46.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.454" endtime="20201029 18:15:46.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.457" endtime="20201029 18:15:46.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.432" endtime="20201029 18:15:46.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.430" endtime="20201029 18:15:46.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.471" endtime="20201029 18:15:46.764"></status>
</kw>
<msg timestamp="20201029 18:15:46.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065706611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065711264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.468" endtime="20201029 18:15:46.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065706611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065711264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.770" endtime="20201029 18:15:46.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.778" endtime="20201029 18:15:46.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.465" endtime="20201029 18:15:46.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.463" endtime="20201029 18:15:46.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:46.785" level="INFO">${RESULT} = [{'diff': 4.653000000007235e-06}, {'diff': 4.7360000000051805e-06}, {'diff': 4.721999999998672e-06}, {'diff': 4.666000000000392e-06}, {'diff': 4.6949999999990055e-06}, {'diff': 4.666000000000392e-06},...</msg>
<status status="PASS" starttime="20201029 18:15:46.782" endtime="20201029 18:15:46.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:46.789" level="INFO">${ACCURACY} = {'diff': [4.653000000007235e-06, 4.7360000000051805e-06, 4.721999999998672e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.653000000007235e-06, 4.055000000002806e-06, 4.05...</msg>
<status status="PASS" starttime="20201029 18:15:46.786" endtime="20201029 18:15:46.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.795" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 18:15:46.794" endtime="20201029 18:15:46.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.797" level="INFO">VALUE: [4.653000000007235e-06, 4.7360000000051805e-06, 4.721999999998672e-06, 4.666000000000392e-06, 4.6949999999990055e-06, 4.666000000000392e-06, 4.653000000007235e-06, 4.055000000002806e-06, 4.055000000002806e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.666000000000392e-06, 4.596999999995077e-06, 4.069000000009315e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.0549999999889286e-06, 4.05600000000228e-06, 4.666000000000392e-06, 4.05600000000228e-06, 4.666999999999866e-06, 4.05600000000228e-06, 4.069999999994911e-06, 4.013999999996631e-06, 4.651999999993883e-06, 4.6810000000063745e-06, 4.0549999999889286e-06, 4.6949999999990055e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.11200000000056e-06, 4.666999999999866e-06, 4.055000000002806e-06, 4.624999999994217e-06, 4.666000000000392e-06, 4.083000000001946e-06, 4.083000000001946e-06, 4.666999999999866e-06, 4.069999999994911e-06, 4.070000000008789e-06, 4.068999999995437e-06, 4.666999999999866e-06, 4.05600000000228e-06, 4.666999999999866e-06, 4.666999999999866e-06, 4.0409999999962976e-06, 4.666000000000392e-06, 4.05600000000228e-06, 4.666999999999866e-06, 4.679999999993023e-06]</msg>
<status status="PASS" starttime="20201029 18:15:46.796" endtime="20201029 18:15:46.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.790" endtime="20201029 18:15:46.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:46.802" endtime="20201029 18:15:46.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.800" endtime="20201029 18:15:46.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.799" endtime="20201029 18:15:46.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.428" endtime="20201029 18:15:46.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.428" endtime="20201029 18:15:46.823"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.832" endtime="20201029 18:15:46.847"></status>
</kw>
<msg timestamp="20201029 18:15:46.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.830" endtime="20201029 18:15:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:46.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:46.848" endtime="20201029 18:15:46.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.851" endtime="20201029 18:15:46.852"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.827" endtime="20201029 18:15:46.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.825" endtime="20201029 18:15:46.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:46.860" endtime="20201029 18:15:47.168"></status>
</kw>
<msg timestamp="20201029 18:15:47.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:46.858" endtime="20201029 18:15:47.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021964694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.172" endtime="20201029 18:15:47.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.181" endtime="20201029 18:15:47.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.856" endtime="20201029 18:15:47.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.854" endtime="20201029 18:15:47.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.187" level="INFO">${RESULT} = [{'diff': 5.86199999999884e-06}, {'diff': 5.235999999998742e-06}, {'diff': 5.8889999999985065e-06}, {'diff': 5.874999999998937e-06}, {'diff': 5.2639999999978815e-06}, {'diff': 5.236999999998215e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:47.184" endtime="20201029 18:15:47.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.193" level="INFO">${ACCURACY} = {'diff': [5.86199999999884e-06, 5.235999999998742e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.2639999999978815e-06, 5.236999999998215e-06, 5.874999999998937e-06, 5.264000000001351e-06, 5.209...</msg>
<status status="PASS" starttime="20201029 18:15:47.188" endtime="20201029 18:15:47.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.197" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.196" endtime="20201029 18:15:47.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.200" level="INFO">VALUE: [5.86199999999884e-06, 5.235999999998742e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.2639999999978815e-06, 5.236999999998215e-06, 5.874999999998937e-06, 5.264000000001351e-06, 5.209000000002545e-06, 5.264000000001351e-06, 5.264000000001351e-06, 4.651999999997353e-06, 5.347000000002766e-06, 5.235999999998742e-06, 5.874999999998937e-06, 5.2639999999978815e-06, 5.277000000001447e-06, 5.278000000000921e-06, 5.1949999999995056e-06, 5.9029999999980765e-06, 4.7089999999985754e-06, 5.346999999999297e-06, 5.277999999997451e-06, 5.860999999999367e-06, 5.944000000000782e-06, 5.264000000001351e-06, 5.2499999999983116e-06, 5.236000000002211e-06, 5.277000000001447e-06, 5.874999999998937e-06, 5.290999999997548e-06, 5.8889999999985065e-06, 5.250000000001781e-06, 5.278000000000921e-06, 5.8889999999985065e-06, 5.820000000000131e-06, 5.278000000000921e-06, 5.875000000002406e-06, 5.874999999998937e-06, 4.666999999999866e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.319000000000157e-06, 5.292000000000491e-06, 5.8889999999985065e-06, 4.653000000000296e-06, 5.264000000001351e-06, 5.208000000003071e-06, 5.874999999998937e-06, 5.278000000000921e-06]</msg>
<status status="PASS" starttime="20201029 18:15:47.199" endtime="20201029 18:15:47.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.194" endtime="20201029 18:15:47.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.205" endtime="20201029 18:15:47.224"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.203" endtime="20201029 18:15:47.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.202" endtime="20201029 18:15:47.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.824" endtime="20201029 18:15:47.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.823" endtime="20201029 18:15:47.225"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.234" endtime="20201029 18:15:47.249"></status>
</kw>
<msg timestamp="20201029 18:15:47.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.233" endtime="20201029 18:15:47.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.251" endtime="20201029 18:15:47.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.253" endtime="20201029 18:15:47.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.230" endtime="20201029 18:15:47.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.228" endtime="20201029 18:15:47.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.263" endtime="20201029 18:15:47.548"></status>
</kw>
<msg timestamp="20201029 18:15:47.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02184125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.261" endtime="20201029 18:15:47.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02184125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02184775, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:15:47.552" endtime="20201029 18:15:47.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.561" endtime="20201029 18:15:47.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.259" endtime="20201029 18:15:47.566"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.257" endtime="20201029 18:15:47.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.570" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-06}, {'diff': 5.917000000001116e-06}, {'diff': 6.485999999999992e-06}, {'diff': 5.875000000002406e-06}, {'diff': 7.097000000001047e-06}, {'diff': 6.4729999999998955e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:47.567" endtime="20201029 18:15:47.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.575" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-06, 5.917000000001116e-06, 6.485999999999992e-06, 5.875000000002406e-06, 7.097000000001047e-06, 6.4729999999998955e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.88...</msg>
<status status="PASS" starttime="20201029 18:15:47.571" endtime="20201029 18:15:47.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.579" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.578" endtime="20201029 18:15:47.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.582" level="INFO">VALUE: [6.499999999999562e-06, 5.917000000001116e-06, 6.485999999999992e-06, 5.875000000002406e-06, 7.097000000001047e-06, 6.4729999999998955e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.8889999999985065e-06, 5.875000000002406e-06, 5.874999999998937e-06, 6.513999999999132e-06, 5.860999999999367e-06, 6.443999999997813e-06, 6.485999999999992e-06, 5.8889999999985065e-06, 5.86200000000231e-06, 5.875000000002406e-06, 5.874999999998937e-06, 6.472000000000422e-06, 6.459000000000326e-06, 6.485999999999992e-06, 6.485999999999992e-06, 6.417000000001616e-06, 5.888000000002502e-06, 6.472000000000422e-06, 6.472000000000422e-06, 6.472000000000422e-06, 7.0829999999980076e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.458000000000852e-06, 5.846999999999797e-06, 6.429999999998243e-06, 5.860999999999367e-06, 5.8889999999985065e-06, 5.874999999998937e-06, 5.875000000002406e-06, 5.860999999999367e-06, 6.472000000000422e-06, 5.874999999998937e-06, 6.472000000000422e-06, 6.431000000001186e-06, 6.458000000000852e-06, 7.068999999998438e-06, 6.458000000000852e-06, 5.820000000000131e-06, 6.513999999999132e-06, 7.068999999998438e-06, 6.499999999999562e-06]</msg>
<status status="PASS" starttime="20201029 18:15:47.580" endtime="20201029 18:15:47.582"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.576" endtime="20201029 18:15:47.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.586" endtime="20201029 18:15:47.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.585" endtime="20201029 18:15:47.606"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.584" endtime="20201029 18:15:47.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.226" endtime="20201029 18:15:47.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.226" endtime="20201029 18:15:47.607"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.617" endtime="20201029 18:15:47.631"></status>
</kw>
<msg timestamp="20201029 18:15:47.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.614" endtime="20201029 18:15:47.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.633" endtime="20201029 18:15:47.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.636" endtime="20201029 18:15:47.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.612" endtime="20201029 18:15:47.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.610" endtime="20201029 18:15:47.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.645" endtime="20201029 18:15:47.931"></status>
</kw>
<msg timestamp="20201029 18:15:47.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.644" endtime="20201029 18:15:47.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023033097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023040167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:47.935" endtime="20201029 18:15:47.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.944" endtime="20201029 18:15:47.945"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.641" endtime="20201029 18:15:47.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.639" endtime="20201029 18:15:47.946"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:47.950" level="INFO">${RESULT} = [{'diff': 7.070000000001381e-06}, {'diff': 7.681000000002436e-06}, {'diff': 7.666999999999397e-06}, {'diff': 7.680999999998966e-06}, {'diff': 7.083000000001477e-06}, {'diff': 7.693999999999063e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:47.947" endtime="20201029 18:15:47.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:47.954" level="INFO">${ACCURACY} = {'diff': [7.070000000001381e-06, 7.681000000002436e-06, 7.666999999999397e-06, 7.680999999998966e-06, 7.083000000001477e-06, 7.693999999999063e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.679...</msg>
<status status="PASS" starttime="20201029 18:15:47.951" endtime="20201029 18:15:47.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.959" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 18:15:47.958" endtime="20201029 18:15:47.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:47.961" level="INFO">VALUE: [7.070000000001381e-06, 7.681000000002436e-06, 7.666999999999397e-06, 7.680999999998966e-06, 7.083000000001477e-06, 7.693999999999063e-06, 7.0829999999980076e-06, 7.068999999998438e-06, 7.679999999999493e-06, 7.679999999999493e-06, 7.694000000002532e-06, 7.679999999999493e-06, 7.680999999998966e-06, 7.695000000002006e-06, 7.709000000001576e-06, 7.694000000002532e-06, 7.681000000002436e-06, 7.694999999998536e-06, 7.681000000002436e-06, 7.695000000002006e-06, 7.084000000000951e-06, 7.069999999997911e-06, 7.0829999999980076e-06, 7.694999999998536e-06, 7.097000000001047e-06, 7.0829999999980076e-06, 7.084000000000951e-06, 7.680999999998966e-06, 7.680999999998966e-06, 7.707999999998633e-06, 7.694999999998536e-06, 7.0969999999975775e-06, 7.0829999999980076e-06, 7.693999999999063e-06, 7.068999999998438e-06, 7.084000000000951e-06, 7.681000000002436e-06, 7.054999999998868e-06, 7.097000000001047e-06, 7.665999999999923e-06, 7.639000000000257e-06, 7.680999999998966e-06, 7.679999999999493e-06, 7.0829999999980076e-06, 7.694999999998536e-06, 7.0980000000005206e-06, 7.679999999999493e-06, 7.665999999999923e-06, 7.070000000001381e-06, 7.680999999998966e-06]</msg>
<status status="PASS" starttime="20201029 18:15:47.960" endtime="20201029 18:15:47.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.955" endtime="20201029 18:15:47.963"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:47.967" endtime="20201029 18:15:47.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.965" endtime="20201029 18:15:47.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.964" endtime="20201029 18:15:47.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.608" endtime="20201029 18:15:47.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.607" endtime="20201029 18:15:47.988"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:47.997" endtime="20201029 18:15:48.012"></status>
</kw>
<msg timestamp="20201029 18:15:48.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:47.995" endtime="20201029 18:15:48.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.015" endtime="20201029 18:15:48.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.020" endtime="20201029 18:15:48.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.992" endtime="20201029 18:15:48.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.990" endtime="20201029 18:15:48.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.036" endtime="20201029 18:15:48.322"></status>
</kw>
<msg timestamp="20201029 18:15:48.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.034" endtime="20201029 18:15:48.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022458222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.327" endtime="20201029 18:15:48.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.335" endtime="20201029 18:15:48.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.029" endtime="20201029 18:15:48.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.026" endtime="20201029 18:15:48.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.342" level="INFO">${RESULT} = [{'diff': 8.889000000001507e-06}, {'diff': 8.278000000000452e-06}, {'diff': 8.291000000000548e-06}, {'diff': 8.305000000000118e-06}, {'diff': 8.278000000000452e-06}, {'diff': 8.291000000000548e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:15:48.339" endtime="20201029 18:15:48.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.347" level="INFO">${ACCURACY} = {'diff': [8.889000000001507e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.8889...</msg>
<status status="PASS" starttime="20201029 18:15:48.343" endtime="20201029 18:15:48.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.352" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.351" endtime="20201029 18:15:48.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.355" level="INFO">VALUE: [8.889000000001507e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.305000000000118e-06, 8.278000000000452e-06, 8.291000000000548e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.888999999998037e-06, 8.292000000000022e-06, 8.292000000000022e-06, 8.903000000001077e-06, 8.902999999997607e-06, 8.903000000001077e-06, 8.264000000000882e-06, 8.249999999997842e-06, 8.889000000001507e-06, 8.278000000000452e-06, 8.889000000001507e-06, 8.889000000001507e-06, 8.290999999997078e-06, 8.276999999997509e-06, 7.707999999998633e-06, 8.902999999997607e-06, 7.762999999997439e-06, 8.236000000001742e-06, 8.903000000001077e-06, 8.959000000002826e-06, 8.290999999997078e-06, 8.292000000000022e-06, 8.889000000001507e-06, 8.292000000000022e-06, 8.277000000000978e-06, 8.346999999998828e-06, 8.264000000000882e-06, 8.292000000000022e-06, 8.917000000000647e-06, 8.889000000001507e-06, 8.346999999998828e-06, 8.292000000000022e-06, 8.249999999997842e-06, 7.750000000000812e-06, 8.860999999998898e-06, 8.875000000001937e-06, 8.291000000000548e-06, 8.292000000000022e-06, 7.695000000002006e-06, 8.278000000000452e-06, 8.819000000000188e-06, 8.916999999997177e-06]</msg>
<status status="PASS" starttime="20201029 18:15:48.353" endtime="20201029 18:15:48.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.348" endtime="20201029 18:15:48.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.359" endtime="20201029 18:15:48.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.358" endtime="20201029 18:15:48.379"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.357" endtime="20201029 18:15:48.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.988" endtime="20201029 18:15:48.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:47.988" endtime="20201029 18:15:48.380"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.397" endtime="20201029 18:15:48.412"></status>
</kw>
<msg timestamp="20201029 18:15:48.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.396" endtime="20201029 18:15:48.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.414" endtime="20201029 18:15:48.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.416" endtime="20201029 18:15:48.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.392" endtime="20201029 18:15:48.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.383" endtime="20201029 18:15:48.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.426" endtime="20201029 18:15:48.735"></status>
</kw>
<msg timestamp="20201029 18:15:48.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030117083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.424" endtime="20201029 18:15:48.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030117083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030126556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.739" endtime="20201029 18:15:48.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.748" endtime="20201029 18:15:48.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.421" endtime="20201029 18:15:48.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.420" endtime="20201029 18:15:48.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:48.755" level="INFO">${RESULT} = [{'diff': 9.472999999999426e-06}, {'diff': 9.499999999999093e-06}, {'diff': 8.889000000001507e-06}, {'diff': 8.874999999998467e-06}, {'diff': 1.0111999999999621e-05}, {'diff': 9.485999999999523e-06}, ...</msg>
<status status="PASS" starttime="20201029 18:15:48.751" endtime="20201029 18:15:48.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:48.759" level="INFO">${ACCURACY} = {'diff': [9.472999999999426e-06, 9.499999999999093e-06, 8.889000000001507e-06, 8.874999999998467e-06, 1.0111999999999621e-05, 9.485999999999523e-06, 8.875000000001937e-06, 9.500000000002562e-06, 1.011...</msg>
<status status="PASS" starttime="20201029 18:15:48.756" endtime="20201029 18:15:48.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.764" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 18:15:48.763" endtime="20201029 18:15:48.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.767" level="INFO">VALUE: [9.472999999999426e-06, 9.499999999999093e-06, 8.889000000001507e-06, 8.874999999998467e-06, 1.0111999999999621e-05, 9.485999999999523e-06, 8.875000000001937e-06, 9.500000000002562e-06, 1.0111000000000148e-05, 9.526999999998759e-06, 9.513999999998662e-06, 8.917000000000647e-06, 9.499999999999093e-06, 9.445000000000286e-06, 9.485999999999523e-06, 8.903000000001077e-06, 8.889000000001507e-06, 1.0097000000000578e-05, 9.499999999999093e-06, 8.903000000001077e-06, 8.888999999998037e-06, 9.513999999998662e-06, 8.916000000001173e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.527999999998232e-06, 8.902999999997607e-06, 8.889000000001507e-06, 8.931000000000217e-06, 8.916000000001173e-06, 9.499999999999093e-06, 8.874999999998467e-06, 9.513999999998662e-06, 8.888999999998037e-06, 9.500000000002562e-06, 9.499999999999093e-06, 8.917000000000647e-06, 9.514000000002132e-06, 8.875000000001937e-06, 9.513999999998662e-06, 9.583000000000508e-06, 9.499999999999093e-06, 9.485999999999523e-06, 8.874999999998467e-06, 9.486999999998996e-06, 8.903000000001077e-06, 9.514000000002132e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.485999999999523e-06]</msg>
<status status="PASS" starttime="20201029 18:15:48.765" endtime="20201029 18:15:48.767"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.760" endtime="20201029 18:15:48.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:48.771" endtime="20201029 18:15:48.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.770" endtime="20201029 18:15:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.768" endtime="20201029 18:15:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.381" endtime="20201029 18:15:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.381" endtime="20201029 18:15:48.793"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.802" endtime="20201029 18:15:48.818"></status>
</kw>
<msg timestamp="20201029 18:15:48.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.800" endtime="20201029 18:15:48.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:48.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:48.820" endtime="20201029 18:15:48.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.822" endtime="20201029 18:15:48.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.798" endtime="20201029 18:15:48.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.795" endtime="20201029 18:15:48.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:48.832" endtime="20201029 18:15:49.118"></status>
</kw>
<msg timestamp="20201029 18:15:49.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:48.830" endtime="20201029 18:15:49.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024067542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024077639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.122" endtime="20201029 18:15:49.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.130" endtime="20201029 18:15:49.132"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.828" endtime="20201029 18:15:49.133"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.826" endtime="20201029 18:15:49.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.137" level="INFO">${RESULT} = [{'diff': 1.0097000000000578e-05}, {'diff': 1.0707999999998163e-05}, {'diff': 1.0098000000000051e-05}, {'diff': 1.0111000000000148e-05}, {'diff': 1.0790999999999579e-05}, {'diff': 1.0694000000002063e-...</msg>
<status status="PASS" starttime="20201029 18:15:49.134" endtime="20201029 18:15:49.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.142" level="INFO">${ACCURACY} = {'diff': [1.0097000000000578e-05, 1.0707999999998163e-05, 1.0098000000000051e-05, 1.0111000000000148e-05, 1.0790999999999579e-05, 1.0694000000002063e-05, 1.0111000000000148e-05, 1.0111000000000148e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.138" endtime="20201029 18:15:49.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.146" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.145" endtime="20201029 18:15:49.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.149" level="INFO">VALUE: [1.0097000000000578e-05, 1.0707999999998163e-05, 1.0098000000000051e-05, 1.0111000000000148e-05, 1.0790999999999579e-05, 1.0694000000002063e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0708000000001633e-05, 1.0084000000000481e-05, 1.0707999999998163e-05, 1.0723000000000676e-05, 1.0098000000000051e-05, 1.0111000000000148e-05, 1.0708000000001633e-05, 1.0097000000000578e-05, 1.0097000000000578e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0708999999997637e-05, 1.0722000000001203e-05, 1.0097999999996582e-05, 1.0693999999998594e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0082999999997538e-05, 1.0708000000001633e-05, 1.0709000000001107e-05, 1.0111000000000148e-05, 1.0707999999998163e-05, 1.0111000000000148e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.0694000000002063e-05, 1.0040999999998829e-05, 1.0013999999999162e-05, 1.0097000000000578e-05, 1.0124999999999718e-05, 1.0708999999997637e-05, 1.0707999999998163e-05, 1.0708000000001633e-05, 1.0693999999998594e-05, 1.0721999999997733e-05, 1.0681000000001967e-05, 1.0152999999998857e-05, 1.0693999999998594e-05, 1.0708000000001633e-05, 1.0638999999999788e-05, 1.0693999999998594e-05, 1.0723000000000676e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.148" endtime="20201029 18:15:49.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.143" endtime="20201029 18:15:49.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.155" endtime="20201029 18:15:49.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.154" endtime="20201029 18:15:49.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.152" endtime="20201029 18:15:49.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.794" endtime="20201029 18:15:49.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:48.793" endtime="20201029 18:15:49.176"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.185" endtime="20201029 18:15:49.200"></status>
</kw>
<msg timestamp="20201029 18:15:49.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.184" endtime="20201029 18:15:49.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.202" endtime="20201029 18:15:49.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.204" endtime="20201029 18:15:49.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.181" endtime="20201029 18:15:49.207"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.179" endtime="20201029 18:15:49.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.217" endtime="20201029 18:15:49.503"></status>
</kw>
<msg timestamp="20201029 18:15:49.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.215" endtime="20201029 18:15:49.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022807208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022818528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.507" endtime="20201029 18:15:49.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.516" endtime="20201029 18:15:49.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.211" endtime="20201029 18:15:49.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.208" endtime="20201029 18:15:49.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.522" level="INFO">${RESULT} = [{'diff': 1.1320000000002162e-05}, {'diff': 1.1917000000000177e-05}, {'diff': 1.0736000000000773e-05}, {'diff': 1.1917000000000177e-05}, {'diff': 1.0708999999997637e-05}, {'diff': 1.1319000000002688e-...</msg>
<status status="PASS" starttime="20201029 18:15:49.519" endtime="20201029 18:15:49.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.527" level="INFO">${ACCURACY} = {'diff': [1.1320000000002162e-05, 1.1917000000000177e-05, 1.0736000000000773e-05, 1.1917000000000177e-05, 1.0708999999997637e-05, 1.1319000000002688e-05, 1.1318999999999219e-05, 1.1957999999999414e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.523" endtime="20201029 18:15:49.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.532" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.531" endtime="20201029 18:15:49.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.534" level="INFO">VALUE: [1.1320000000002162e-05, 1.1917000000000177e-05, 1.0736000000000773e-05, 1.1917000000000177e-05, 1.0708999999997637e-05, 1.1319000000002688e-05, 1.1318999999999219e-05, 1.1957999999999414e-05, 1.1915999999997234e-05, 1.1319000000002688e-05, 1.1334000000001732e-05, 1.1347000000001828e-05, 1.1304999999999649e-05, 1.0722000000001203e-05, 1.1320000000002162e-05, 1.0707999999998163e-05, 1.0777000000000009e-05, 1.1361000000001398e-05, 1.1930999999999747e-05, 1.1348000000001301e-05, 1.1917000000000177e-05, 1.1304999999999649e-05, 1.1305999999999122e-05, 1.1917000000000177e-05, 1.1305999999999122e-05, 1.0695000000001537e-05, 1.1318999999999219e-05, 1.1916000000000704e-05, 1.1333000000002258e-05, 1.0723000000000676e-05, 1.1318999999999219e-05, 1.1318999999999219e-05, 1.0707999999998163e-05, 1.1917000000000177e-05, 1.1304999999999649e-05, 1.1917000000000177e-05, 1.1305999999999122e-05, 1.0679999999999024e-05, 1.1291999999999552e-05, 1.1318999999999219e-05, 1.1319000000002688e-05, 1.1931000000003217e-05, 1.1375000000000968e-05, 1.1874999999997998e-05, 1.1305999999999122e-05, 1.1304999999999649e-05, 1.1903000000000608e-05, 1.0638999999999788e-05, 1.1874999999997998e-05, 1.1915999999997234e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.533" endtime="20201029 18:15:49.535"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.528" endtime="20201029 18:15:49.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.539" endtime="20201029 18:15:49.558"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.538" endtime="20201029 18:15:49.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.537" endtime="20201029 18:15:49.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.177" endtime="20201029 18:15:49.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.176" endtime="20201029 18:15:49.560"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.569" endtime="20201029 18:15:49.584"></status>
</kw>
<msg timestamp="20201029 18:15:49.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.567" endtime="20201029 18:15:49.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.585" endtime="20201029 18:15:49.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.588" endtime="20201029 18:15:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.564" endtime="20201029 18:15:49.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.562" endtime="20201029 18:15:49.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.597" endtime="20201029 18:15:49.885"></status>
</kw>
<msg timestamp="20201029 18:15:49.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.595" endtime="20201029 18:15:49.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021875889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.889" endtime="20201029 18:15:49.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.897" endtime="20201029 18:15:49.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.593" endtime="20201029 18:15:49.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.591" endtime="20201029 18:15:49.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:49.904" level="INFO">${RESULT} = [{'diff': 1.2513999999998193e-05}, {'diff': 1.2527999999997763e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.1902000000001134e-05}, {'diff': 1.2499999999998623e-05}, {'diff': 1.2513999999998193e-...</msg>
<status status="PASS" starttime="20201029 18:15:49.901" endtime="20201029 18:15:49.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:49.908" level="INFO">${ACCURACY} = {'diff': [1.2513999999998193e-05, 1.2527999999997763e-05, 1.2499999999998623e-05, 1.1902000000001134e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2513000000002189e-05, 1.2485999999999053e-05...</msg>
<status status="PASS" starttime="20201029 18:15:49.905" endtime="20201029 18:15:49.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.912" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 18:15:49.911" endtime="20201029 18:15:49.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.915" level="INFO">VALUE: [1.2513999999998193e-05, 1.2527999999997763e-05, 1.2499999999998623e-05, 1.1902000000001134e-05, 1.2499999999998623e-05, 1.2513999999998193e-05, 1.2513000000002189e-05, 1.2485999999999053e-05, 1.2514000000001663e-05, 1.3110999999999678e-05, 1.2527999999997763e-05, 1.1958999999998887e-05, 1.2513999999998193e-05, 1.2485999999999053e-05, 1.2471999999999483e-05, 1.2458999999999387e-05, 1.1999999999998123e-05, 1.1917000000000177e-05, 1.2000000000001593e-05, 1.2514000000001663e-05, 1.2528000000001233e-05, 1.2528000000001233e-05, 1.2527999999997763e-05, 1.2542000000000803e-05, 1.2583999999999512e-05, 1.2499999999998623e-05, 1.2499999999998623e-05, 1.1986000000002023e-05, 1.2513000000002189e-05, 1.1943999999999844e-05, 1.2513999999998193e-05, 1.2555000000000899e-05, 1.2514000000001663e-05, 1.1986000000002023e-05, 1.1943999999999844e-05, 1.1930000000000274e-05, 1.1915999999997234e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.2514000000001663e-05, 1.2499999999998623e-05, 1.1889000000001038e-05, 1.1917000000000177e-05, 1.1902000000001134e-05, 1.3124999999999248e-05, 1.2527999999997763e-05, 1.1930000000000274e-05, 1.2528000000001233e-05, 1.2514000000001663e-05, 1.2513999999998193e-05]</msg>
<status status="PASS" starttime="20201029 18:15:49.914" endtime="20201029 18:15:49.916"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.909" endtime="20201029 18:15:49.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:49.920" endtime="20201029 18:15:49.939"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.918" endtime="20201029 18:15:49.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.917" endtime="20201029 18:15:49.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.561" endtime="20201029 18:15:49.940"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.560" endtime="20201029 18:15:49.941"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.949" endtime="20201029 18:15:49.967"></status>
</kw>
<msg timestamp="20201029 18:15:49.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.948" endtime="20201029 18:15:49.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:49.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:49.970" endtime="20201029 18:15:49.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:49.975" endtime="20201029 18:15:49.979"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.945" endtime="20201029 18:15:49.980"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.943" endtime="20201029 18:15:49.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.004" endtime="20201029 18:15:50.304"></status>
</kw>
<msg timestamp="20201029 18:15:50.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:49.998" endtime="20201029 18:15:50.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022738667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022752403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.308" endtime="20201029 18:15:50.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.320" endtime="20201029 18:15:50.321"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.985" endtime="20201029 18:15:50.322"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.982" endtime="20201029 18:15:50.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.327" level="INFO">${RESULT} = [{'diff': 1.3736000000000304e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3111999999999152e-05}, {'diff': 1.3124999999999248e-05}, {'diff': 1.3138999999998818e-...</msg>
<status status="PASS" starttime="20201029 18:15:50.324" endtime="20201029 18:15:50.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.331" level="INFO">${ACCURACY} = {'diff': [1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3111999999999152e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3722000000000734e-05, 1.3722000000000734e-05...</msg>
<status status="PASS" starttime="20201029 18:15:50.328" endtime="20201029 18:15:50.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.336" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.335" endtime="20201029 18:15:50.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.338" level="INFO">VALUE: [1.3736000000000304e-05, 1.3736000000000304e-05, 1.3749999999999873e-05, 1.3111999999999152e-05, 1.3124999999999248e-05, 1.3138999999998818e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3084000000000012e-05, 1.3124999999999248e-05, 1.3097000000000109e-05, 1.3124999999999248e-05, 1.3707999999997694e-05, 1.3736000000000304e-05, 1.3125000000002718e-05, 1.3695000000001067e-05, 1.3722000000000734e-05, 1.3722000000000734e-05, 1.3139000000002288e-05, 1.3112000000002622e-05, 1.3722000000000734e-05, 1.3125000000002718e-05, 1.3166999999997958e-05, 1.3736000000000304e-05, 1.3723000000000207e-05, 1.3722000000000734e-05, 1.3194999999997098e-05, 1.3041000000001829e-05, 1.3736000000000304e-05, 1.3763999999999443e-05, 1.3124999999999248e-05, 1.3110999999999678e-05, 1.3708000000001164e-05, 1.3722000000000734e-05, 1.3084000000000012e-05, 1.3722000000000734e-05, 1.3736999999999777e-05, 1.3736000000000304e-05, 1.3708000000001164e-05, 1.3138999999998818e-05, 1.3125000000002718e-05, 1.3124999999999248e-05, 1.3125000000002718e-05, 1.3723000000000207e-05, 1.3125000000002718e-05, 1.3167000000001428e-05, 1.3124999999999248e-05, 1.3110999999999678e-05, 1.3124999999999248e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.337" endtime="20201029 18:15:50.340"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.332" endtime="20201029 18:15:50.340"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.344" endtime="20201029 18:15:50.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.342" endtime="20201029 18:15:50.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.341" endtime="20201029 18:15:50.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.941" endtime="20201029 18:15:50.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:49.941" endtime="20201029 18:15:50.365"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.374" endtime="20201029 18:15:50.389"></status>
</kw>
<msg timestamp="20201029 18:15:50.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.372" endtime="20201029 18:15:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.390" endtime="20201029 18:15:50.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.393" endtime="20201029 18:15:50.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.369" endtime="20201029 18:15:50.395"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.367" endtime="20201029 18:15:50.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.402" endtime="20201029 18:15:50.687"></status>
</kw>
<msg timestamp="20201029 18:15:50.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.400" endtime="20201029 18:15:50.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022070611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:50.692" endtime="20201029 18:15:50.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.700" endtime="20201029 18:15:50.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.398" endtime="20201029 18:15:50.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.396" endtime="20201029 18:15:50.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:50.706" level="INFO">${RESULT} = [{'diff': 1.4375000000000498e-05}, {'diff': 1.502700000000079e-05}, {'diff': 1.4333000000001789e-05}, {'diff': 1.3791999999998583e-05}, {'diff': 1.4305999999998653e-05}, {'diff': 1.4361000000000929e-0...</msg>
<status status="PASS" starttime="20201029 18:15:50.703" endtime="20201029 18:15:50.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:50.711" level="INFO">${ACCURACY} = {'diff': [1.4375000000000498e-05, 1.502700000000079e-05, 1.4333000000001789e-05, 1.3791999999998583e-05, 1.4305999999998653e-05, 1.4361000000000929e-05, 1.4888999999997099e-05, 1.4263999999999943e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:50.707" endtime="20201029 18:15:50.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.716" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 18:15:50.715" endtime="20201029 18:15:50.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.718" level="INFO">VALUE: [1.4375000000000498e-05, 1.502700000000079e-05, 1.4333000000001789e-05, 1.3791999999998583e-05, 1.4305999999998653e-05, 1.4361000000000929e-05, 1.4888999999997099e-05, 1.4263999999999943e-05, 1.3707999999997694e-05, 1.4889000000000568e-05, 1.4916999999999708e-05, 1.4944999999998848e-05, 1.431899999999875e-05, 1.4930999999999278e-05, 1.4333999999997793e-05, 1.433299999999832e-05, 1.4347000000001359e-05, 1.3722000000000734e-05, 1.4930999999999278e-05, 1.433299999999832e-05, 1.4334000000001262e-05, 1.4320000000001692e-05, 1.4263999999999943e-05, 1.4972000000001984e-05, 1.433299999999832e-05, 1.4333999999997793e-05, 1.4334000000001262e-05, 1.4347000000001359e-05, 1.4347000000001359e-05, 1.4930999999999278e-05, 1.4361000000000929e-05, 1.4957999999998944e-05, 1.433299999999832e-05, 1.3681000000001498e-05, 1.3763999999999443e-05, 1.4347000000001359e-05, 1.3736000000000304e-05, 1.3750000000003343e-05, 1.4958000000002414e-05, 1.4333000000001789e-05, 1.433299999999832e-05, 1.4319999999998223e-05, 1.4334000000001262e-05, 1.433299999999832e-05, 1.4333000000001789e-05, 1.4334000000001262e-05, 1.3736000000000304e-05, 1.434699999999789e-05, 1.4319000000002219e-05, 1.4347000000001359e-05]</msg>
<status status="PASS" starttime="20201029 18:15:50.717" endtime="20201029 18:15:50.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.712" endtime="20201029 18:15:50.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:50.723" endtime="20201029 18:15:50.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.722" endtime="20201029 18:15:50.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.721" endtime="20201029 18:15:50.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.366" endtime="20201029 18:15:50.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.365" endtime="20201029 18:15:50.744"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.753" endtime="20201029 18:15:50.768"></status>
</kw>
<msg timestamp="20201029 18:15:50.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.751" endtime="20201029 18:15:50.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:50.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:50.772" endtime="20201029 18:15:50.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.777" endtime="20201029 18:15:50.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.749" endtime="20201029 18:15:50.781"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.746" endtime="20201029 18:15:50.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:50.796" endtime="20201029 18:15:51.092"></status>
</kw>
<msg timestamp="20201029 18:15:51.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:50.793" endtime="20201029 18:15:51.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02185775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:51.097" endtime="20201029 18:15:51.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.105" endtime="20201029 18:15:51.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.787" endtime="20201029 18:15:51.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.784" endtime="20201029 18:15:51.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.112" level="INFO">${RESULT} = [{'diff': 1.611100000000268e-05}, {'diff': 1.5528000000000763e-05}, {'diff': 1.4916000000000235e-05}, {'diff': 1.554099999999739e-05}, {'diff': 1.559699999999914e-05}, {'diff': 1.5555999999999903e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:51.108" endtime="20201029 18:15:51.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.116" level="INFO">${ACCURACY} = {'diff': [1.611100000000268e-05, 1.5528000000000763e-05, 1.4916000000000235e-05, 1.554099999999739e-05, 1.559699999999914e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.4930000000003274e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:51.113" endtime="20201029 18:15:51.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.121" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.120" endtime="20201029 18:15:51.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.124" level="INFO">VALUE: [1.611100000000268e-05, 1.5528000000000763e-05, 1.4916000000000235e-05, 1.554099999999739e-05, 1.559699999999914e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.4930000000003274e-05, 1.4959000000001887e-05, 1.4929999999999805e-05, 1.4930999999999278e-05, 1.5527999999997294e-05, 1.4944999999998848e-05, 1.5013999999997224e-05, 1.5000000000001124e-05, 1.5541999999996864e-05, 1.4986000000001554e-05, 1.551300000000172e-05, 1.5528000000000763e-05, 1.5000000000001124e-05, 1.4958999999998418e-05, 1.5513999999997724e-05, 1.4943999999999374e-05, 1.555500000000043e-05, 1.5542000000000333e-05, 1.5527999999997294e-05, 1.5527999999997294e-05, 1.5555999999999903e-05, 1.5541999999996864e-05, 1.4874999999997529e-05, 1.4930000000003274e-05, 1.555500000000043e-05, 1.613899999999835e-05, 1.5542000000000333e-05, 1.4929999999999805e-05, 1.5542000000000333e-05, 1.4916999999999708e-05, 1.554099999999739e-05, 1.4972000000001984e-05, 1.554100000000086e-05, 1.5555999999999903e-05, 1.5528000000000763e-05, 1.4943999999999374e-05, 1.5541999999996864e-05, 1.5485999999998584e-05, 1.5542000000000333e-05, 1.5584000000002513e-05, 1.4986000000001554e-05, 1.4875000000000999e-05, 1.5569e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.122" endtime="20201029 18:15:51.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.117" endtime="20201029 18:15:51.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.129" endtime="20201029 18:15:51.148"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.127" endtime="20201029 18:15:51.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.126" endtime="20201029 18:15:51.149"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.745" endtime="20201029 18:15:51.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:50.744" endtime="20201029 18:15:51.150"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.159" endtime="20201029 18:15:51.175"></status>
</kw>
<msg timestamp="20201029 18:15:51.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.157" endtime="20201029 18:15:51.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.177" endtime="20201029 18:15:51.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.179" endtime="20201029 18:15:51.181"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.155" endtime="20201029 18:15:51.182"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.152" endtime="20201029 18:15:51.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.189" endtime="20201029 18:15:51.476"></status>
</kw>
<msg timestamp="20201029 18:15:51.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.187" endtime="20201029 18:15:51.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023380917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023397681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.480" endtime="20201029 18:15:51.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.488" endtime="20201029 18:15:51.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.185" endtime="20201029 18:15:51.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.183" endtime="20201029 18:15:51.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.495" level="INFO">${RESULT} = [{'diff': 1.6763999999998974e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.615300000000139e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.6195000000000098e-0...</msg>
<status status="PASS" starttime="20201029 18:15:51.492" endtime="20201029 18:15:51.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.499" level="INFO">${ACCURACY} = {'diff': [1.6763999999998974e-05, 1.6749999999999404e-05, 1.6778000000002014e-05, 1.615300000000139e-05, 1.6749999999999404e-05, 1.6195000000000098e-05, 1.615300000000139e-05, 1.615300000000139e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:51.496" endtime="20201029 18:15:51.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.504" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.503" endtime="20201029 18:15:51.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.506" level="INFO">VALUE: [1.6763999999998974e-05, 1.6749999999999404e-05, 1.6778000000002014e-05, 1.615300000000139e-05, 1.6749999999999404e-05, 1.6195000000000098e-05, 1.615300000000139e-05, 1.615300000000139e-05, 1.6764000000002444e-05, 1.6709000000000168e-05, 1.613900000000182e-05, 1.6749999999999404e-05, 1.6194000000000625e-05, 1.613899999999835e-05, 1.6791999999998114e-05, 1.612499999999878e-05, 1.6221999999999764e-05, 1.6151999999998445e-05, 1.6750000000002874e-05, 1.6735999999999834e-05, 1.6151999999998445e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.615299999999792e-05, 1.6749999999999404e-05, 1.6222999999999238e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.6750000000002874e-05, 1.615300000000139e-05, 1.615299999999792e-05, 1.6181000000000528e-05, 1.6764000000002444e-05, 1.6208000000000194e-05, 1.6749999999999404e-05, 1.613900000000182e-05, 1.6137999999998875e-05, 1.6181000000000528e-05, 1.613900000000182e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.668100000000103e-05, 1.6749999999999404e-05, 1.6208000000000194e-05, 1.6749999999999404e-05, 1.6151999999998445e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.505" endtime="20201029 18:15:51.508"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.500" endtime="20201029 18:15:51.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.512" endtime="20201029 18:15:51.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.511" endtime="20201029 18:15:51.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.509" endtime="20201029 18:15:51.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.151" endtime="20201029 18:15:51.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.150" endtime="20201029 18:15:51.533"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.542" endtime="20201029 18:15:51.557"></status>
</kw>
<msg timestamp="20201029 18:15:51.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.540" endtime="20201029 18:15:51.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.559" endtime="20201029 18:15:51.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.561" endtime="20201029 18:15:51.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.538" endtime="20201029 18:15:51.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.536" endtime="20201029 18:15:51.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.571" endtime="20201029 18:15:51.873"></status>
</kw>
<msg timestamp="20201029 18:15:51.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.569" endtime="20201029 18:15:51.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022360014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022377972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.877" endtime="20201029 18:15:51.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.885" endtime="20201029 18:15:51.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.566" endtime="20201029 18:15:51.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.565" endtime="20201029 18:15:51.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:51.892" level="INFO">${RESULT} = [{'diff': 1.7957999999998475e-05}, {'diff': 1.790299999999967e-05}, {'diff': 1.7959000000001418e-05}, {'diff': 1.7334000000000793e-05}, {'diff': 1.734700000000089e-05}, {'diff': 1.7334000000000793e-05...</msg>
<status status="PASS" starttime="20201029 18:15:51.889" endtime="20201029 18:15:51.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:51.897" level="INFO">${ACCURACY} = {'diff': [1.7957999999998475e-05, 1.790299999999967e-05, 1.7959000000001418e-05, 1.7334000000000793e-05, 1.734700000000089e-05, 1.7334000000000793e-05, 1.7943999999998905e-05, 1.733299999999785e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:15:51.893" endtime="20201029 18:15:51.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.901" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 18:15:51.900" endtime="20201029 18:15:51.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.904" level="INFO">VALUE: [1.7957999999998475e-05, 1.790299999999967e-05, 1.7959000000001418e-05, 1.7334000000000793e-05, 1.734700000000089e-05, 1.7334000000000793e-05, 1.7943999999998905e-05, 1.733299999999785e-05, 1.734700000000089e-05, 1.6749999999999404e-05, 1.736100000000046e-05, 1.7958000000001945e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.7958000000001945e-05, 1.737500000000003e-05, 1.741700000000221e-05, 1.7958000000001945e-05, 1.734700000000089e-05, 1.734700000000089e-05, 1.737500000000003e-05, 1.666700000000146e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.6735999999999834e-05, 1.733300000000132e-05, 1.7943999999998905e-05, 1.736100000000046e-05, 1.7957999999998475e-05, 1.795899999999795e-05, 1.737500000000003e-05, 1.7972000000001515e-05, 1.737500000000003e-05, 1.794499999999838e-05, 1.734700000000089e-05, 1.736100000000046e-05, 1.733300000000132e-05, 1.6750000000002874e-05, 1.794500000000185e-05, 1.737500000000003e-05, 1.737500000000003e-05, 1.740300000000264e-05, 1.6749999999999404e-05, 1.7292000000002083e-05, 1.7958000000001945e-05, 1.736100000000046e-05, 1.736100000000046e-05, 1.737500000000003e-05, 1.7334000000000793e-05, 1.6749999999999404e-05]</msg>
<status status="PASS" starttime="20201029 18:15:51.903" endtime="20201029 18:15:51.905"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.898" endtime="20201029 18:15:51.905"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:51.909" endtime="20201029 18:15:51.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.908" endtime="20201029 18:15:51.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.906" endtime="20201029 18:15:51.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.534" endtime="20201029 18:15:51.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.533" endtime="20201029 18:15:51.930"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.939" endtime="20201029 18:15:51.954"></status>
</kw>
<msg timestamp="20201029 18:15:51.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.937" endtime="20201029 18:15:51.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:51.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:51.956" endtime="20201029 18:15:51.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.958" endtime="20201029 18:15:51.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.935" endtime="20201029 18:15:51.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.932" endtime="20201029 18:15:51.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:51.967" endtime="20201029 18:15:52.254"></status>
</kw>
<msg timestamp="20201029 18:15:52.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:51.966" endtime="20201029 18:15:52.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022095417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.258" endtime="20201029 18:15:52.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.267" endtime="20201029 18:15:52.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.963" endtime="20201029 18:15:52.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.961" endtime="20201029 18:15:52.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.273" level="INFO">${RESULT} = [{'diff': 1.9152000000001446e-05}, {'diff': 1.9180000000000585e-05}, {'diff': 1.7957999999998475e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7972000000001515e-05}, {'diff': 1.8555999999999434e-...</msg>
<status status="PASS" starttime="20201029 18:15:52.270" endtime="20201029 18:15:52.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.278" level="INFO">${ACCURACY} = {'diff': [1.9152000000001446e-05, 1.9180000000000585e-05, 1.7957999999998475e-05, 1.7943999999998905e-05, 1.7972000000001515e-05, 1.8555999999999434e-05, 1.7973000000000988e-05, 1.856899999999953e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:52.274" endtime="20201029 18:15:52.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.282" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.281" endtime="20201029 18:15:52.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.285" level="INFO">VALUE: [1.9152000000001446e-05, 1.9180000000000585e-05, 1.7957999999998475e-05, 1.7943999999998905e-05, 1.7972000000001515e-05, 1.8555999999999434e-05, 1.7973000000000988e-05, 1.856899999999953e-05, 1.7971999999998045e-05, 1.793100000000228e-05, 1.915300000000092e-05, 1.8569000000003e-05, 1.85829999999991e-05, 1.8569999999999004e-05, 1.8556000000002904e-05, 1.856899999999953e-05, 1.8569999999999004e-05, 1.861099999999824e-05, 1.8499999999997685e-05, 1.916699999999702e-05, 1.7943999999998905e-05, 1.856899999999953e-05, 1.8555999999999434e-05, 1.7971999999998045e-05, 1.8569999999999004e-05, 1.863900000000085e-05, 1.916700000000049e-05, 1.855499999999996e-05, 1.8014000000000224e-05, 1.8541999999999864e-05, 1.856899999999953e-05, 1.8570000000002473e-05, 1.8555999999999434e-05, 1.7957999999998475e-05, 1.790299999999967e-05, 1.916700000000049e-05, 1.7972000000001515e-05, 1.8569999999999004e-05, 1.8569999999999004e-05, 1.9166000000001016e-05, 1.78890000000001e-05, 1.85829999999991e-05, 1.793099999999881e-05, 1.8555999999999434e-05, 1.7958000000001945e-05, 1.855499999999996e-05, 1.8569999999999004e-05, 1.8556000000002904e-05, 1.8569999999999004e-05, 1.7972000000001515e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.283" endtime="20201029 18:15:52.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.278" endtime="20201029 18:15:52.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.290" endtime="20201029 18:15:52.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.288" endtime="20201029 18:15:52.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.287" endtime="20201029 18:15:52.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.931" endtime="20201029 18:15:52.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:51.930" endtime="20201029 18:15:52.310"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.319" endtime="20201029 18:15:52.335"></status>
</kw>
<msg timestamp="20201029 18:15:52.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.318" endtime="20201029 18:15:52.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.337" endtime="20201029 18:15:52.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.339" endtime="20201029 18:15:52.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.315" endtime="20201029 18:15:52.341"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.313" endtime="20201029 18:15:52.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.349" endtime="20201029 18:15:52.636"></status>
</kw>
<msg timestamp="20201029 18:15:52.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.347" endtime="20201029 18:15:52.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023034389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.640" endtime="20201029 18:15:52.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.648" endtime="20201029 18:15:52.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.345" endtime="20201029 18:15:52.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.343" endtime="20201029 18:15:52.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:52.655" level="INFO">${RESULT} = [{'diff': 1.918100000000006e-05}, {'diff': 1.9112000000001683e-05}, {'diff': 1.977700000000207e-05}, {'diff': 1.915300000000092e-05}, {'diff': 1.979100000000164e-05}, {'diff': 1.983300000000035e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:52.651" endtime="20201029 18:15:52.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:52.659" level="INFO">${ACCURACY} = {'diff': [1.918100000000006e-05, 1.9112000000001683e-05, 1.977700000000207e-05, 1.915300000000092e-05, 1.979100000000164e-05, 1.983300000000035e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.9...</msg>
<status status="PASS" starttime="20201029 18:15:52.656" endtime="20201029 18:15:52.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.663" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 18:15:52.662" endtime="20201029 18:15:52.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.666" level="INFO">VALUE: [1.918100000000006e-05, 1.9112000000001683e-05, 1.977700000000207e-05, 1.915300000000092e-05, 1.979100000000164e-05, 1.983300000000035e-05, 1.9749999999998935e-05, 1.9764000000001974e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.9165999999997546e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.9180000000000585e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.912500000000178e-05, 1.919499999999963e-05, 1.9777999999998075e-05, 1.916700000000049e-05, 1.913900000000135e-05, 1.918100000000006e-05, 1.919499999999963e-05, 1.9721999999999795e-05, 1.9152000000001446e-05, 1.911099999999874e-05, 1.916700000000049e-05, 1.9777999999998075e-05, 1.9764000000001974e-05, 1.913900000000135e-05, 1.916699999999702e-05, 1.9179999999997116e-05, 1.916700000000049e-05, 1.915300000000092e-05, 1.916700000000049e-05, 1.916699999999702e-05, 1.9763999999998505e-05, 1.9777999999998075e-05, 1.9763999999998505e-05, 1.9735999999999365e-05, 1.90829999999996e-05, 1.9166000000001016e-05, 1.97769999999986e-05, 1.9763999999998505e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.915300000000092e-05, 1.915300000000092e-05]</msg>
<status status="PASS" starttime="20201029 18:15:52.664" endtime="20201029 18:15:52.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.660" endtime="20201029 18:15:52.668"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:52.672" endtime="20201029 18:15:52.691"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.670" endtime="20201029 18:15:52.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.669" endtime="20201029 18:15:52.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.311" endtime="20201029 18:15:52.692"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.311" endtime="20201029 18:15:52.692"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.701" endtime="20201029 18:15:52.716"></status>
</kw>
<msg timestamp="20201029 18:15:52.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.700" endtime="20201029 18:15:52.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:52.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:52.718" endtime="20201029 18:15:52.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.720" endtime="20201029 18:15:52.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.697" endtime="20201029 18:15:52.723"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.695" endtime="20201029 18:15:52.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:52.730" endtime="20201029 18:15:53.017"></status>
</kw>
<msg timestamp="20201029 18:15:53.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:52.728" endtime="20201029 18:15:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022127347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.021" endtime="20201029 18:15:53.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.029" endtime="20201029 18:15:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.726" endtime="20201029 18:15:53.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.724" endtime="20201029 18:15:53.032"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.036" level="INFO">${RESULT} = [{'diff': 2.037499999999956e-05}, {'diff': 2.04029999999987e-05}, {'diff': 1.9777999999998075e-05}, {'diff': 2.036099999999999e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 1.9764000000001974e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:53.033" endtime="20201029 18:15:53.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.041" level="INFO">${ACCURACY} = {'diff': [2.037499999999956e-05, 2.04029999999987e-05, 1.9777999999998075e-05, 2.036099999999999e-05, 2.0986000000000615e-05, 1.9764000000001974e-05, 2.037499999999956e-05, 2.097300000000052e-05, 2.04...</msg>
<status status="PASS" starttime="20201029 18:15:53.037" endtime="20201029 18:15:53.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.045" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.044" endtime="20201029 18:15:53.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.048" level="INFO">VALUE: [2.037499999999956e-05, 2.04029999999987e-05, 1.9777999999998075e-05, 2.036099999999999e-05, 2.0986000000000615e-05, 1.9764000000001974e-05, 2.037499999999956e-05, 2.097300000000052e-05, 2.041699999999827e-05, 2.094500000000138e-05, 2.037500000000303e-05, 2.0444000000001405e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.0986000000000615e-05, 2.038899999999913e-05, 2.0361999999999464e-05, 2.036099999999999e-05, 2.034700000000042e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.0972000000001045e-05, 2.038899999999913e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.038899999999913e-05, 2.034700000000042e-05, 2.037499999999956e-05, 1.976299999999903e-05, 2.0957999999998006e-05, 2.041699999999827e-05, 2.1000000000000185e-05, 2.036099999999999e-05, 2.0986000000000615e-05, 2.03890000000026e-05, 1.9778000000001544e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.034700000000042e-05, 2.037499999999956e-05, 2.036099999999999e-05, 2.037499999999956e-05, 2.041699999999827e-05, 2.094500000000138e-05, 2.036099999999999e-05, 1.9763999999998505e-05, 2.0986000000000615e-05, 2.037499999999956e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.047" endtime="20201029 18:15:53.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.042" endtime="20201029 18:15:53.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.053" endtime="20201029 18:15:53.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.051" endtime="20201029 18:15:53.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.050" endtime="20201029 18:15:53.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.693" endtime="20201029 18:15:53.074"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:52.693" endtime="20201029 18:15:53.074"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.083" endtime="20201029 18:15:53.098"></status>
</kw>
<msg timestamp="20201029 18:15:53.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.081" endtime="20201029 18:15:53.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.099" endtime="20201029 18:15:53.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.102" endtime="20201029 18:15:53.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.078" endtime="20201029 18:15:53.104"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.076" endtime="20201029 18:15:53.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.111" endtime="20201029 18:15:53.405"></status>
</kw>
<msg timestamp="20201029 18:15:53.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02221925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:53.110" endtime="20201029 18:15:53.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022197653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02221925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:15:53.409" endtime="20201029 18:15:53.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.417" endtime="20201029 18:15:53.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.107" endtime="20201029 18:15:53.419"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.105" endtime="20201029 18:15:53.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.424" level="INFO">${RESULT} = [{'diff': 2.15969999999982e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.163900000000038e-05}, {'diff': 2.098700000000009e-05}, {'diff': 2.1598000000001144e-05}, {'diff': 2.0985999999997146e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:53.421" endtime="20201029 18:15:53.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.428" level="INFO">${ACCURACY} = {'diff': [2.15969999999982e-05, 2.0986000000000615e-05, 2.163900000000038e-05, 2.098700000000009e-05, 2.1598000000001144e-05, 2.0985999999997146e-05, 2.0985999999997146e-05, 2.158299999999863e-05, 2.1...</msg>
<status status="PASS" starttime="20201029 18:15:53.425" endtime="20201029 18:15:53.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.433" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.431" endtime="20201029 18:15:53.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.435" level="INFO">VALUE: [2.15969999999982e-05, 2.0986000000000615e-05, 2.163900000000038e-05, 2.098700000000009e-05, 2.1598000000001144e-05, 2.0985999999997146e-05, 2.0985999999997146e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.0986000000000615e-05, 2.156900000000253e-05, 2.159700000000167e-05, 2.0972000000001045e-05, 2.1583999999998105e-05, 2.15969999999982e-05, 2.15969999999982e-05, 2.159700000000167e-05, 2.15969999999982e-05, 2.1583999999998105e-05, 2.1584000000001574e-05, 2.0986000000000615e-05, 2.1583999999998105e-05, 2.0986000000000615e-05, 2.0958000000001475e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.158299999999863e-05, 2.1584000000001574e-05, 2.2236000000001865e-05, 2.2193999999999686e-05, 2.158299999999863e-05, 2.1541999999999395e-05, 2.156899999999906e-05, 2.0972000000001045e-05, 2.1555999999998965e-05, 2.1584000000001574e-05, 2.15830000000021e-05, 2.2194000000003156e-05, 2.0930000000002336e-05, 2.1569999999998535e-05, 2.158299999999863e-05, 2.097300000000052e-05, 2.158299999999863e-05, 2.1541999999999395e-05, 2.0972000000001045e-05, 2.0972000000001045e-05, 2.1569999999998535e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.1583999999998105e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.434" endtime="20201029 18:15:53.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.429" endtime="20201029 18:15:53.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.447" endtime="20201029 18:15:53.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.445" endtime="20201029 18:15:53.466"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.444" endtime="20201029 18:15:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.075" endtime="20201029 18:15:53.467"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.074" endtime="20201029 18:15:53.467"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.476" endtime="20201029 18:15:53.492"></status>
</kw>
<msg timestamp="20201029 18:15:53.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.474" endtime="20201029 18:15:53.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.494" endtime="20201029 18:15:53.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.496" endtime="20201029 18:15:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.472" endtime="20201029 18:15:53.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.470" endtime="20201029 18:15:53.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.505" endtime="20201029 18:15:53.791"></status>
</kw>
<msg timestamp="20201029 18:15:53.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.504" endtime="20201029 18:15:53.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022831014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022853194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.795" endtime="20201029 18:15:53.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.804" endtime="20201029 18:15:53.805"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.501" endtime="20201029 18:15:53.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.499" endtime="20201029 18:15:53.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:53.810" level="INFO">${RESULT} = [{'diff': 2.2180000000000116e-05}, {'diff': 2.2736000000002365e-05}, {'diff': 2.2749999999998466e-05}, {'diff': 2.2806000000000215e-05}, {'diff': 2.2193999999999686e-05}, {'diff': 2.2806000000000215e-...</msg>
<status status="PASS" starttime="20201029 18:15:53.807" endtime="20201029 18:15:53.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:53.814" level="INFO">${ACCURACY} = {'diff': [2.2180000000000116e-05, 2.2736000000002365e-05, 2.2749999999998466e-05, 2.2806000000000215e-05, 2.2193999999999686e-05, 2.2806000000000215e-05, 2.2763999999998036e-05, 2.223699999999787e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:53.811" endtime="20201029 18:15:53.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.819" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 18:15:53.818" endtime="20201029 18:15:53.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.821" level="INFO">VALUE: [2.2180000000000116e-05, 2.2736000000002365e-05, 2.2749999999998466e-05, 2.2806000000000215e-05, 2.2193999999999686e-05, 2.2806000000000215e-05, 2.2763999999998036e-05, 2.223699999999787e-05, 2.2791999999997176e-05, 2.22090000000022e-05, 2.2207999999999256e-05, 2.2792000000000645e-05, 2.218100000000306e-05, 2.2180000000000116e-05, 2.219499999999916e-05, 2.2207999999999256e-05, 2.2166000000000546e-05, 2.2792000000000645e-05, 2.287500000000206e-05, 2.281900000000031e-05, 2.215300000000045e-05, 2.2777999999997606e-05, 2.215300000000045e-05, 2.2792000000000645e-05, 2.219500000000263e-05, 2.2112000000001214e-05, 2.2736000000002365e-05, 2.2791999999997176e-05, 2.2819999999999785e-05, 2.2207999999999256e-05, 2.2791999999997176e-05, 2.2806000000000215e-05, 2.2791999999997176e-05, 2.2791999999997176e-05, 2.2749999999998466e-05, 2.279100000000117e-05, 2.2736000000002365e-05, 2.22090000000022e-05, 2.219499999999916e-05, 2.218099999999959e-05, 2.283299999999988e-05, 2.2792000000000645e-05, 2.2792000000000645e-05, 2.2193999999999686e-05, 2.2806000000000215e-05, 2.213900000000088e-05, 2.2193999999999686e-05, 2.2193999999999686e-05, 2.213900000000088e-05, 2.2776999999998132e-05]</msg>
<status status="PASS" starttime="20201029 18:15:53.820" endtime="20201029 18:15:53.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.815" endtime="20201029 18:15:53.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:53.827" endtime="20201029 18:15:53.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.826" endtime="20201029 18:15:53.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.825" endtime="20201029 18:15:53.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.468" endtime="20201029 18:15:53.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.468" endtime="20201029 18:15:53.848"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.857" endtime="20201029 18:15:53.872"></status>
</kw>
<msg timestamp="20201029 18:15:53.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.855" endtime="20201029 18:15:53.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:53.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:53.874" endtime="20201029 18:15:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.876" endtime="20201029 18:15:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.853" endtime="20201029 18:15:53.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.850" endtime="20201029 18:15:53.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:53.885" endtime="20201029 18:15:54.171"></status>
</kw>
<msg timestamp="20201029 18:15:54.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:53.884" endtime="20201029 18:15:54.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022034181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.175" endtime="20201029 18:15:54.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.184" endtime="20201029 18:15:54.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.881" endtime="20201029 18:15:54.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.879" endtime="20201029 18:15:54.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.190" level="INFO">${RESULT} = [{'diff': 2.2749999999998466e-05}, {'diff': 2.343100000000084e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.338900000000213e-05}, {'diff': 2.2736000000002365e-05}, {'diff': 2.336099999999952e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:54.187" endtime="20201029 18:15:54.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.195" level="INFO">${ACCURACY} = {'diff': [2.2749999999998466e-05, 2.343100000000084e-05, 2.4013999999999286e-05, 2.338900000000213e-05, 2.2736000000002365e-05, 2.336099999999952e-05, 2.340299999999823e-05, 2.2806000000000215e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:54.191" endtime="20201029 18:15:54.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.200" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.199" endtime="20201029 18:15:54.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.202" level="INFO">VALUE: [2.2749999999998466e-05, 2.343100000000084e-05, 2.4013999999999286e-05, 2.338900000000213e-05, 2.2736000000002365e-05, 2.336099999999952e-05, 2.340299999999823e-05, 2.2806000000000215e-05, 2.2749999999998466e-05, 2.2792000000000645e-05, 2.337500000000256e-05, 2.340299999999823e-05, 2.283299999999988e-05, 2.3402000000002227e-05, 2.4068999999998092e-05, 2.3429999999997897e-05, 2.340299999999823e-05, 2.3401999999998757e-05, 2.2778000000001075e-05, 2.336099999999952e-05, 2.34030000000017e-05, 2.393100000000134e-05, 2.4042000000001895e-05, 2.340299999999823e-05, 2.3999999999999716e-05, 2.3429999999997897e-05, 2.338899999999866e-05, 2.3429999999997897e-05, 2.338899999999866e-05, 2.34030000000017e-05, 2.3444000000000936e-05, 2.338899999999866e-05, 2.2778000000001075e-05, 2.34030000000017e-05, 2.3401999999998757e-05, 2.281900000000031e-05, 2.340299999999823e-05, 2.338899999999866e-05, 2.3999999999999716e-05, 2.333300000000038e-05, 2.280500000000074e-05, 2.336099999999952e-05, 2.337499999999909e-05, 2.336099999999952e-05, 2.340299999999823e-05, 2.338900000000213e-05, 2.4013999999999286e-05, 2.4014000000002755e-05, 2.3986000000000146e-05, 2.279100000000117e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.201" endtime="20201029 18:15:54.203"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.196" endtime="20201029 18:15:54.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.207" endtime="20201029 18:15:54.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.206" endtime="20201029 18:15:54.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.205" endtime="20201029 18:15:54.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.849" endtime="20201029 18:15:54.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:53.848" endtime="20201029 18:15:54.228"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.237" endtime="20201029 18:15:54.252"></status>
</kw>
<msg timestamp="20201029 18:15:54.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.235" endtime="20201029 18:15:54.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.254" endtime="20201029 18:15:54.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.256" endtime="20201029 18:15:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.233" endtime="20201029 18:15:54.258"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.230" endtime="20201029 18:15:54.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.265" endtime="20201029 18:15:54.553"></status>
</kw>
<msg timestamp="20201029 18:15:54.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.264" endtime="20201029 18:15:54.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022105611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.557" endtime="20201029 18:15:54.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.565" endtime="20201029 18:15:54.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.261" endtime="20201029 18:15:54.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.259" endtime="20201029 18:15:54.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.572" level="INFO">${RESULT} = [{'diff': 2.458300000000163e-05}, {'diff': 2.461100000000077e-05}, {'diff': 2.45970000000012e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.466699999999905e-05}, {'diff': 2.462500000000034e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:54.568" endtime="20201029 18:15:54.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.576" level="INFO">${ACCURACY} = {'diff': [2.458300000000163e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.466699999999905e-05, 2.462500000000034e-05, 2.3999999999999716e-05, 2.461100000000077e-05, 2.461...</msg>
<status status="PASS" starttime="20201029 18:15:54.573" endtime="20201029 18:15:54.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.581" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.579" endtime="20201029 18:15:54.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.583" level="INFO">VALUE: [2.458300000000163e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4596999999997732e-05, 2.466699999999905e-05, 2.462500000000034e-05, 2.3999999999999716e-05, 2.461100000000077e-05, 2.4610999999997302e-05, 2.3999999999999716e-05, 2.468100000000209e-05, 2.461100000000077e-05, 2.3999999999999716e-05, 2.395900000000048e-05, 2.4014000000002755e-05, 2.398700000000309e-05, 2.4598000000000675e-05, 2.462500000000034e-05, 2.461100000000077e-05, 2.4598000000000675e-05, 2.4570000000001535e-05, 2.3986000000000146e-05, 2.4013999999999286e-05, 2.45970000000012e-05, 2.4598000000000675e-05, 2.4556000000001965e-05, 2.4584000000001105e-05, 2.458300000000163e-05, 2.3986000000000146e-05, 2.4612000000000245e-05, 2.461100000000077e-05, 2.4013999999999286e-05, 2.461100000000077e-05, 2.4027999999998856e-05, 2.4610999999997302e-05, 2.4013999999999286e-05, 2.3999999999999716e-05, 2.3986000000000146e-05, 2.4013999999999286e-05, 2.4582999999998162e-05, 2.4598000000000675e-05, 2.4555999999998496e-05, 2.3999999999999716e-05, 2.461100000000077e-05, 2.45970000000012e-05, 2.4598000000000675e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.462500000000034e-05, 2.4014000000002755e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.582" endtime="20201029 18:15:54.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.577" endtime="20201029 18:15:54.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.588" endtime="20201029 18:15:54.607"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.587" endtime="20201029 18:15:54.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.585" endtime="20201029 18:15:54.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.229" endtime="20201029 18:15:54.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.228" endtime="20201029 18:15:54.609"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.618" endtime="20201029 18:15:54.634"></status>
</kw>
<msg timestamp="20201029 18:15:54.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.616" endtime="20201029 18:15:54.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:54.636" endtime="20201029 18:15:54.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.638" endtime="20201029 18:15:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.614" endtime="20201029 18:15:54.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.611" endtime="20201029 18:15:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.648" endtime="20201029 18:15:54.934"></status>
</kw>
<msg timestamp="20201029 18:15:54.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023355875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.646" endtime="20201029 18:15:54.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023355875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023381694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:54.940" endtime="20201029 18:15:54.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:54.951" endtime="20201029 18:15:54.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.643" endtime="20201029 18:15:54.954"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.642" endtime="20201029 18:15:54.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:54.958" level="INFO">${RESULT} = [{'diff': 2.5818999999999842e-05}, {'diff': 2.519499999999869e-05}, {'diff': 2.5819999999999316e-05}, {'diff': 2.52230000000013e-05}, {'diff': 2.5179999999999647e-05}, {'diff': 2.5820000000002785e-05}...</msg>
<status status="PASS" starttime="20201029 18:15:54.955" endtime="20201029 18:15:54.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:54.963" level="INFO">${ACCURACY} = {'diff': [2.5818999999999842e-05, 2.519499999999869e-05, 2.5819999999999316e-05, 2.52230000000013e-05, 2.5179999999999647e-05, 2.5820000000002785e-05, 2.5832999999999412e-05, 2.520900000000173e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:54.959" endtime="20201029 18:15:54.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.968" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 18:15:54.966" endtime="20201029 18:15:54.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:54.970" level="INFO">VALUE: [2.5818999999999842e-05, 2.519499999999869e-05, 2.5819999999999316e-05, 2.52230000000013e-05, 2.5179999999999647e-05, 2.5820000000002785e-05, 2.5832999999999412e-05, 2.520900000000173e-05, 2.5805000000000272e-05, 2.5806000000003215e-05, 2.5820000000002785e-05, 2.5222000000001826e-05, 2.5832999999999412e-05, 2.5207999999998787e-05, 2.5207999999998787e-05, 2.5832999999999412e-05, 2.5805999999999746e-05, 2.5207999999998787e-05, 2.5805999999999746e-05, 2.5207999999998787e-05, 2.5222000000001826e-05, 2.5236000000001396e-05, 2.5290999999996733e-05, 2.5221999999998357e-05, 2.5832999999999412e-05, 2.5166000000000077e-05, 2.5264000000000536e-05, 2.5805000000000272e-05, 2.5833999999998886e-05, 2.5193999999999217e-05, 2.5221999999998357e-05, 2.5208000000002256e-05, 2.513900000000041e-05, 2.5236000000001396e-05, 2.5208000000002256e-05, 2.5805999999999746e-05, 2.5193999999999217e-05, 2.5804999999996803e-05, 2.5832999999999412e-05, 2.5221999999998357e-05, 2.5818999999999842e-05, 2.5776999999997663e-05, 2.518099999999912e-05, 2.5805000000000272e-05, 2.5221999999998357e-05, 2.5834000000002355e-05, 2.5805999999999746e-05, 2.5193999999999217e-05, 2.5818999999999842e-05, 2.5207999999998787e-05]</msg>
<status status="PASS" starttime="20201029 18:15:54.969" endtime="20201029 18:15:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.964" endtime="20201029 18:15:54.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:54.976" endtime="20201029 18:15:54.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.975" endtime="20201029 18:15:54.996"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.973" endtime="20201029 18:15:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.610" endtime="20201029 18:15:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.609" endtime="20201029 18:15:54.997"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.006" endtime="20201029 18:15:55.023"></status>
</kw>
<msg timestamp="20201029 18:15:55.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.005" endtime="20201029 18:15:55.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.024" endtime="20201029 18:15:55.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.027" endtime="20201029 18:15:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.002" endtime="20201029 18:15:55.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.000" endtime="20201029 18:15:55.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.037" endtime="20201029 18:15:55.340"></status>
</kw>
<msg timestamp="20201029 18:15:55.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.035" endtime="20201029 18:15:55.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022628625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022655014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.344" endtime="20201029 18:15:55.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.353" endtime="20201029 18:15:55.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.032" endtime="20201029 18:15:55.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.030" endtime="20201029 18:15:55.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.360" level="INFO">${RESULT} = [{'diff': 2.638900000000166e-05}, {'diff': 2.5805000000000272e-05}, {'diff': 2.640300000000123e-05}, {'diff': 2.64170000000008e-05}, {'diff': 2.5805999999999746e-05}, {'diff': 2.64170000000008e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:55.356" endtime="20201029 18:15:55.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.365" level="INFO">${ACCURACY} = {'diff': [2.638900000000166e-05, 2.5805000000000272e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.5805999999999746e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.5833999999998886e-05, 2.6415...</msg>
<status status="PASS" starttime="20201029 18:15:55.361" endtime="20201029 18:15:55.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.370" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.369" endtime="20201029 18:15:55.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.372" level="INFO">VALUE: [2.638900000000166e-05, 2.5805000000000272e-05, 2.640300000000123e-05, 2.64170000000008e-05, 2.5805999999999746e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.5833999999998886e-05, 2.6415999999997858e-05, 2.640299999999776e-05, 2.7056000000000996e-05, 2.7069000000001092e-05, 2.64170000000008e-05, 2.5819999999999316e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.6429999999997428e-05, 2.6415999999997858e-05, 2.6458000000000037e-05, 2.64170000000008e-05, 2.7014000000002286e-05, 2.6402000000001757e-05, 2.6416000000001327e-05, 2.6430000000000897e-05, 2.5819999999999316e-05, 2.6416000000001327e-05, 2.6416000000001327e-05, 2.641699999999733e-05, 2.64170000000008e-05, 2.64170000000008e-05, 2.7013999999998817e-05, 2.5819999999999316e-05, 2.640299999999776e-05, 2.6444000000000467e-05, 2.640300000000123e-05, 2.5818999999999842e-05, 2.7028000000001856e-05, 2.6458000000000037e-05, 2.643100000000037e-05, 2.64170000000008e-05, 2.6430000000000897e-05, 2.640300000000123e-05, 2.6430000000000897e-05, 2.641699999999733e-05, 2.7013999999998817e-05, 2.6429999999997428e-05, 2.6416000000001327e-05, 2.7028000000001856e-05, 2.638899999999819e-05, 2.6430000000000897e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.371" endtime="20201029 18:15:55.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.366" endtime="20201029 18:15:55.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.378" endtime="20201029 18:15:55.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.376" endtime="20201029 18:15:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.375" endtime="20201029 18:15:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.998" endtime="20201029 18:15:55.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:54.997" endtime="20201029 18:15:55.399"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.408" endtime="20201029 18:15:55.424"></status>
</kw>
<msg timestamp="20201029 18:15:55.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.406" endtime="20201029 18:15:55.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.426" endtime="20201029 18:15:55.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.428" endtime="20201029 18:15:55.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.404" endtime="20201029 18:15:55.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.401" endtime="20201029 18:15:55.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.438" endtime="20201029 18:15:55.725"></status>
</kw>
<msg timestamp="20201029 18:15:55.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023447278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.436" endtime="20201029 18:15:55.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023419653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023447278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.729" endtime="20201029 18:15:55.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.737" endtime="20201029 18:15:55.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.434" endtime="20201029 18:15:55.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.432" endtime="20201029 18:15:55.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:55.744" level="INFO">${RESULT} = [{'diff': 2.7624999999999872e-05}, {'diff': 2.7027000000002382e-05}, {'diff': 2.7597000000000732e-05}, {'diff': 2.7624999999999872e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7013999999998817e-...</msg>
<status status="PASS" starttime="20201029 18:15:55.740" endtime="20201029 18:15:55.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:55.748" level="INFO">${ACCURACY} = {'diff': [2.7624999999999872e-05, 2.7027000000002382e-05, 2.7597000000000732e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.7013999999998817e-05, 2.7570000000001066e-05, 2.7042000000001426e-05...</msg>
<status status="PASS" starttime="20201029 18:15:55.745" endtime="20201029 18:15:55.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.752" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 18:15:55.751" endtime="20201029 18:15:55.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.755" level="INFO">VALUE: [2.7624999999999872e-05, 2.7027000000002382e-05, 2.7597000000000732e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.7013999999998817e-05, 2.7570000000001066e-05, 2.7042000000001426e-05, 2.7013999999998817e-05, 2.763900000000291e-05, 2.7068999999997623e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.6999999999999247e-05, 2.7026999999998913e-05, 2.7028000000001856e-05, 2.7624999999999872e-05, 2.7666000000002577e-05, 2.7026999999998913e-05, 2.7707999999997818e-05, 2.7070000000000566e-05, 2.6999999999999247e-05, 2.7026999999998913e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7611999999999776e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.7042000000001426e-05, 2.7624999999999872e-05, 2.7598000000000206e-05, 2.7624999999999872e-05, 2.762500000000334e-05, 2.7652999999999012e-05, 2.763900000000291e-05, 2.7027999999998387e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.7083000000000662e-05, 2.7013999999998817e-05, 2.7624999999999872e-05, 2.7013999999998817e-05, 2.7624999999999872e-05, 2.7624999999999872e-05, 2.7638999999999442e-05, 2.694500000000044e-05, 2.7624999999999872e-05]</msg>
<status status="PASS" starttime="20201029 18:15:55.754" endtime="20201029 18:15:55.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.749" endtime="20201029 18:15:55.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:55.760" endtime="20201029 18:15:55.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.758" endtime="20201029 18:15:55.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.757" endtime="20201029 18:15:55.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.399" endtime="20201029 18:15:55.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.399" endtime="20201029 18:15:55.781"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.789" endtime="20201029 18:15:55.806"></status>
</kw>
<msg timestamp="20201029 18:15:55.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.788" endtime="20201029 18:15:55.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:55.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:55.807" endtime="20201029 18:15:55.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.810" endtime="20201029 18:15:55.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.785" endtime="20201029 18:15:55.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.783" endtime="20201029 18:15:55.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:55.819" endtime="20201029 18:15:56.119"></status>
</kw>
<msg timestamp="20201029 18:15:56.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:55.817" endtime="20201029 18:15:56.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022943556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022971778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.126" endtime="20201029 18:15:56.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.134" endtime="20201029 18:15:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.815" endtime="20201029 18:15:56.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.813" endtime="20201029 18:15:56.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.141" level="INFO">${RESULT} = [{'diff': 2.8222000000001357e-05}, {'diff': 2.8236000000000927e-05}, {'diff': 2.8278000000003106e-05}, {'diff': 2.8208000000001787e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.8819999999998847e-...</msg>
<status status="PASS" starttime="20201029 18:15:56.138" endtime="20201029 18:15:56.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.145" level="INFO">${ACCURACY} = {'diff': [2.8222000000001357e-05, 2.8236000000000927e-05, 2.8278000000003106e-05, 2.8208000000001787e-05, 2.8832999999998943e-05, 2.8819999999998847e-05, 2.8818999999999373e-05, 2.8847000000001982e-05...</msg>
<status status="PASS" starttime="20201029 18:15:56.142" endtime="20201029 18:15:56.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.150" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.149" endtime="20201029 18:15:56.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.152" level="INFO">VALUE: [2.8222000000001357e-05, 2.8236000000000927e-05, 2.8278000000003106e-05, 2.8208000000001787e-05, 2.8832999999998943e-05, 2.8819999999998847e-05, 2.8818999999999373e-05, 2.8847000000001982e-05, 2.8236000000000927e-05, 2.7665999999999108e-05, 2.8236000000000927e-05, 2.8819000000002842e-05, 2.8819999999998847e-05, 2.8250000000000497e-05, 2.8833999999998416e-05, 2.8250000000000497e-05, 2.8221999999997888e-05, 2.8888999999997222e-05, 2.8236000000000927e-05, 2.8833999999998416e-05, 2.8820000000002316e-05, 2.8791000000000233e-05, 2.7568999999998123e-05, 2.8236000000000927e-05, 2.888799999999775e-05, 2.8832999999998943e-05, 2.8818999999999373e-05, 2.8847999999997986e-05, 2.82370000000004e-05, 2.8818999999999373e-05, 2.8236000000000927e-05, 2.8193999999998748e-05, 2.8791999999999707e-05, 2.8749999999997528e-05, 2.820900000000126e-05, 2.8221999999997888e-05, 2.8221999999997888e-05, 2.8152000000000038e-05, 2.8236000000000927e-05, 2.8249999999997027e-05, 2.816699999999908e-05, 2.818099999999865e-05, 2.8235999999997458e-05, 2.7624999999999872e-05, 2.8832999999998943e-05, 2.8236000000000927e-05, 2.8250000000000497e-05, 2.7624999999999872e-05, 2.8832999999998943e-05, 2.8236000000000927e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.151" endtime="20201029 18:15:56.154"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.146" endtime="20201029 18:15:56.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.158" endtime="20201029 18:15:56.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.156" endtime="20201029 18:15:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.155" endtime="20201029 18:15:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.781" endtime="20201029 18:15:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:55.781" endtime="20201029 18:15:56.178"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.187" endtime="20201029 18:15:56.203"></status>
</kw>
<msg timestamp="20201029 18:15:56.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.186" endtime="20201029 18:15:56.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.205" endtime="20201029 18:15:56.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.207" endtime="20201029 18:15:56.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.183" endtime="20201029 18:15:56.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.181" endtime="20201029 18:15:56.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.216" endtime="20201029 18:15:56.506"></status>
</kw>
<msg timestamp="20201029 18:15:56.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.215" endtime="20201029 18:15:56.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.510" endtime="20201029 18:15:56.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.518" endtime="20201029 18:15:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.212" endtime="20201029 18:15:56.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.211" endtime="20201029 18:15:56.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.525" level="INFO">${RESULT} = [{'diff': 2.94309999999999e-05}, {'diff': 2.9457999999999568e-05}, {'diff': 2.94309999999999e-05}, {'diff': 3.0054999999997584e-05}, {'diff': 3.0041000000001483e-05}, {'diff': 2.9485999999998708e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:56.521" endtime="20201029 18:15:56.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.530" level="INFO">${ACCURACY} = {'diff': [2.94309999999999e-05, 2.9457999999999568e-05, 2.94309999999999e-05, 3.0054999999997584e-05, 3.0041000000001483e-05, 2.9485999999998708e-05, 2.9443999999999998e-05, 2.8875000000001122e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:15:56.526" endtime="20201029 18:15:56.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.534" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.533" endtime="20201029 18:15:56.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.537" level="INFO">VALUE: [2.94309999999999e-05, 2.9457999999999568e-05, 2.94309999999999e-05, 3.0054999999997584e-05, 3.0041000000001483e-05, 2.9485999999998708e-05, 2.9443999999999998e-05, 2.8875000000001122e-05, 2.9457999999999568e-05, 2.8834000000001886e-05, 2.9514000000001317e-05, 2.9457999999999568e-05, 3.0125000000002372e-05, 2.9389000000001192e-05, 2.9972000000003107e-05, 2.945899999999904e-05, 2.9500000000001747e-05, 3.0083000000000193e-05, 2.8833999999998416e-05, 3.0055000000001053e-05, 2.998699999999868e-05, 2.8832999999998943e-05, 2.9416000000000858e-05, 2.9971999999999638e-05, 2.9457999999999568e-05, 2.8861000000001552e-05, 3.0041000000001483e-05, 3.0041000000001483e-05, 2.944499999999947e-05, 3.0040999999998014e-05, 2.8847999999997986e-05, 2.8834000000001886e-05, 2.9443999999999998e-05, 2.8846999999998513e-05, 2.9513999999997848e-05, 2.8778000000000137e-05, 2.94309999999999e-05, 2.94309999999999e-05, 2.9457999999999568e-05, 2.8875000000001122e-05, 2.944499999999947e-05, 2.9430000000000428e-05, 2.8832999999998943e-05, 2.9458000000003037e-05, 2.9457999999999568e-05, 2.9500000000001747e-05, 2.9430000000000428e-05, 3.0042000000000957e-05, 2.8832999999998943e-05, 2.9375000000001622e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.535" endtime="20201029 18:15:56.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.531" endtime="20201029 18:15:56.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.542" endtime="20201029 18:15:56.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.540" endtime="20201029 18:15:56.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.539" endtime="20201029 18:15:56.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.179" endtime="20201029 18:15:56.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.179" endtime="20201029 18:15:56.562"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.571" endtime="20201029 18:15:56.587"></status>
</kw>
<msg timestamp="20201029 18:15:56.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.569" endtime="20201029 18:15:56.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.589" endtime="20201029 18:15:56.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.591" endtime="20201029 18:15:56.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.567" endtime="20201029 18:15:56.593"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.565" endtime="20201029 18:15:56.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.600" endtime="20201029 18:15:56.892"></status>
</kw>
<msg timestamp="20201029 18:15:56.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.599" endtime="20201029 18:15:56.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021921556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:56.896" endtime="20201029 18:15:56.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.905" endtime="20201029 18:15:56.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.596" endtime="20201029 18:15:56.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.594" endtime="20201029 18:15:56.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:56.912" level="INFO">${RESULT} = [{'diff': 3.0069999999996627e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.065199999999907e-05}, {'diff': 3.065199999999907e-05}, {'diff': 3.0069000000000623e-05}, {'diff': 3.066700000000158e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:56.908" endtime="20201029 18:15:56.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:56.916" level="INFO">${ACCURACY} = {'diff': [3.0069999999996627e-05, 3.063899999999897e-05, 3.065199999999907e-05, 3.065199999999907e-05, 3.0069000000000623e-05, 3.066700000000158e-05, 3.066699999999811e-05, 3.0027999999997917e-05, 3.0...</msg>
<status status="PASS" starttime="20201029 18:15:56.913" endtime="20201029 18:15:56.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.921" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 18:15:56.920" endtime="20201029 18:15:56.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.923" level="INFO">VALUE: [3.0069999999996627e-05, 3.063899999999897e-05, 3.065199999999907e-05, 3.065199999999907e-05, 3.0069000000000623e-05, 3.066700000000158e-05, 3.066699999999811e-05, 3.0027999999997917e-05, 3.063899999999897e-05, 3.062500000000287e-05, 3.061099999999983e-05, 3.0097000000003232e-05, 3.0070000000000097e-05, 3.066700000000158e-05, 3.065299999999854e-05, 3.063900000000244e-05, 3.065299999999854e-05, 3.06379999999995e-05, 3.061099999999983e-05, 3.0096999999999763e-05, 3.0042000000000957e-05, 3.0054999999997584e-05, 3.065199999999907e-05, 3.0026999999998444e-05, 3.065299999999854e-05, 3.06249999999994e-05, 3.0028000000001387e-05, 3.0069999999996627e-05, 3.06379999999995e-05, 3.065299999999854e-05, 3.0041999999997487e-05, 3.065299999999854e-05, 3.0054999999997584e-05, 3.061099999999983e-05, 3.063900000000244e-05, 3.0041000000001483e-05, 3.0056000000000527e-05, 3.06249999999994e-05, 3.0040999999998014e-05, 3.0070000000000097e-05, 3.063899999999897e-05, 3.068100000000115e-05, 3.06249999999994e-05, 3.063899999999897e-05, 3.063899999999897e-05, 3.0000000000002247e-05, 3.063899999999897e-05, 3.059700000000026e-05, 3.0028000000001387e-05, 3.0040999999998014e-05]</msg>
<status status="PASS" starttime="20201029 18:15:56.922" endtime="20201029 18:15:56.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.917" endtime="20201029 18:15:56.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:56.929" endtime="20201029 18:15:56.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.927" endtime="20201029 18:15:56.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.926" endtime="20201029 18:15:56.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.563" endtime="20201029 18:15:56.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.563" endtime="20201029 18:15:56.949"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.958" endtime="20201029 18:15:56.975"></status>
</kw>
<msg timestamp="20201029 18:15:56.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.957" endtime="20201029 18:15:56.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:56.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:56.976" endtime="20201029 18:15:56.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.979" endtime="20201029 18:15:56.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.954" endtime="20201029 18:15:56.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.952" endtime="20201029 18:15:56.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:56.989" endtime="20201029 18:15:57.275"></status>
</kw>
<msg timestamp="20201029 18:15:57.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02329875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:56.987" endtime="20201029 18:15:57.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0232675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02329875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:57.279" endtime="20201029 18:15:57.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.288" endtime="20201029 18:15:57.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.984" endtime="20201029 18:15:57.290"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.982" endtime="20201029 18:15:57.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.295" level="INFO">${RESULT} = [{'diff': 3.125000000000003e-05}, {'diff': 3.125000000000003e-05}, {'diff': 3.1860999999997613e-05}, {'diff': 3.125000000000003e-05}, {'diff': 3.125000000000003e-05}, {'diff': 3.12639999999996e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:15:57.291" endtime="20201029 18:15:57.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.299" level="INFO">${ACCURACY} = {'diff': [3.125000000000003e-05, 3.125000000000003e-05, 3.1860999999997613e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.122300000000036e-05, 3.187500000000065e-05, 3.1318...</msg>
<status status="PASS" starttime="20201029 18:15:57.296" endtime="20201029 18:15:57.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.304" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.303" endtime="20201029 18:15:57.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.306" level="INFO">VALUE: [3.125000000000003e-05, 3.125000000000003e-05, 3.1860999999997613e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.122300000000036e-05, 3.187500000000065e-05, 3.1318999999998404e-05, 3.187500000000065e-05, 3.12639999999996e-05, 3.186100000000108e-05, 3.199999999999731e-05, 3.123699999999993e-05, 3.186100000000108e-05, 3.125000000000003e-05, 3.063899999999897e-05, 3.1263000000000124e-05, 3.069400000000125e-05, 3.1846999999998044e-05, 3.186100000000108e-05, 3.12639999999996e-05, 3.184800000000099e-05, 3.187500000000065e-05, 3.186100000000108e-05, 3.183400000000142e-05, 3.186100000000108e-05, 3.186100000000108e-05, 3.184700000000151e-05, 3.186100000000108e-05, 3.191700000000283e-05, 3.184800000000099e-05, 3.12639999999996e-05, 3.125000000000003e-05, 3.188900000000022e-05, 3.186199999999709e-05, 3.191699999999936e-05, 3.186100000000108e-05, 3.186100000000108e-05, 3.070799999999735e-05, 3.120900000000079e-05, 3.186100000000108e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.125000000000003e-05, 3.1832999999998474e-05, 3.13050000000023e-05, 3.1846999999998044e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.305" endtime="20201029 18:15:57.308"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.300" endtime="20201029 18:15:57.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.312" endtime="20201029 18:15:57.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.311" endtime="20201029 18:15:57.332"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.310" endtime="20201029 18:15:57.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.950" endtime="20201029 18:15:57.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:56.950" endtime="20201029 18:15:57.333"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.342" endtime="20201029 18:15:57.358"></status>
</kw>
<msg timestamp="20201029 18:15:57.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.341" endtime="20201029 18:15:57.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.360" endtime="20201029 18:15:57.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.362" endtime="20201029 18:15:57.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.338" endtime="20201029 18:15:57.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.336" endtime="20201029 18:15:57.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.372" endtime="20201029 18:15:57.659"></status>
</kw>
<msg timestamp="20201029 18:15:57.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.370" endtime="20201029 18:15:57.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.663" endtime="20201029 18:15:57.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.671" endtime="20201029 18:15:57.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.367" endtime="20201029 18:15:57.673"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.366" endtime="20201029 18:15:57.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:57.677" level="INFO">${RESULT} = [{'diff': 3.247199999999867e-05}, {'diff': 3.184800000000099e-05}, {'diff': 3.247199999999867e-05}, {'diff': 3.309800000000224e-05}, {'diff': 3.186100000000108e-05}, {'diff': 3.3055000000000584e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:15:57.674" endtime="20201029 18:15:57.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:57.682" level="INFO">${ACCURACY} = {'diff': [3.247199999999867e-05, 3.184800000000099e-05, 3.247199999999867e-05, 3.309800000000224e-05, 3.186100000000108e-05, 3.3055000000000584e-05, 3.245899999999857e-05, 3.245900000000204e-05, 3.245...</msg>
<status status="PASS" starttime="20201029 18:15:57.678" endtime="20201029 18:15:57.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.687" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 18:15:57.686" endtime="20201029 18:15:57.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.689" level="INFO">VALUE: [3.247199999999867e-05, 3.184800000000099e-05, 3.247199999999867e-05, 3.309800000000224e-05, 3.186100000000108e-05, 3.3055000000000584e-05, 3.245899999999857e-05, 3.245900000000204e-05, 3.245800000000257e-05, 3.248599999999824e-05, 3.248599999999824e-05, 3.247199999999867e-05, 3.244399999999953e-05, 3.24579999999991e-05, 3.1846999999998044e-05, 3.184800000000099e-05, 3.248600000000171e-05, 3.244399999999953e-05, 3.24579999999991e-05, 3.306999999999963e-05, 3.306999999999963e-05, 3.245899999999857e-05, 3.248600000000171e-05, 3.1846999999998044e-05, 3.245800000000257e-05, 3.183300000000194e-05, 3.1846999999998044e-05, 3.1846999999998044e-05, 3.247299999999814e-05, 3.184800000000099e-05, 3.242999999999996e-05, 3.305600000000006e-05, 3.3069000000000154e-05, 3.186100000000108e-05, 3.245899999999857e-05, 3.1763000000000624e-05, 3.245899999999857e-05, 3.251400000000085e-05, 3.241699999999986e-05, 3.186100000000108e-05, 3.247300000000161e-05, 3.183300000000194e-05, 3.2444999999999e-05, 3.300000000000178e-05, 3.244399999999953e-05, 3.245899999999857e-05, 3.248600000000171e-05, 3.186100000000108e-05, 3.1846999999998044e-05, 3.306999999999963e-05]</msg>
<status status="PASS" starttime="20201029 18:15:57.688" endtime="20201029 18:15:57.690"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.683" endtime="20201029 18:15:57.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:57.694" endtime="20201029 18:15:57.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.693" endtime="20201029 18:15:57.714"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.692" endtime="20201029 18:15:57.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.334" endtime="20201029 18:15:57.715"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.334" endtime="20201029 18:15:57.715"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.724" endtime="20201029 18:15:57.740"></status>
</kw>
<msg timestamp="20201029 18:15:57.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.722" endtime="20201029 18:15:57.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:57.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:57.742" endtime="20201029 18:15:57.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.744" endtime="20201029 18:15:57.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.720" endtime="20201029 18:15:57.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.718" endtime="20201029 18:15:57.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:57.754" endtime="20201029 18:15:58.040"></status>
</kw>
<msg timestamp="20201029 18:15:58.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:57.752" endtime="20201029 18:15:58.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022023097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.045" endtime="20201029 18:15:58.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.053" endtime="20201029 18:15:58.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.749" endtime="20201029 18:15:58.055"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.748" endtime="20201029 18:15:58.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.059" level="INFO">${RESULT} = [{'diff': 3.800000000000331e-05}, {'diff': 3.801399999999941e-05}, {'diff': 3.7666999999998174e-05}, {'diff': 3.8152999999999104e-05}, {'diff': 3.755599999999762e-05}, {'diff': 3.724999999999909e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:58.056" endtime="20201029 18:15:58.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.063" level="INFO">${ACCURACY} = {'diff': [3.800000000000331e-05, 3.801399999999941e-05, 3.7666999999998174e-05, 3.8152999999999104e-05, 3.755599999999762e-05, 3.724999999999909e-05, 3.8152999999999104e-05, 3.80980000000003e-05, 3.81...</msg>
<status status="PASS" starttime="20201029 18:15:58.060" endtime="20201029 18:15:58.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.068" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.067" endtime="20201029 18:15:58.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.070" level="INFO">VALUE: [3.800000000000331e-05, 3.801399999999941e-05, 3.7666999999998174e-05, 3.8152999999999104e-05, 3.755599999999762e-05, 3.724999999999909e-05, 3.8152999999999104e-05, 3.80980000000003e-05, 3.815199999999963e-05, 3.8124999999999964e-05, 3.801400000000288e-05, 3.763799999999956e-05, 3.743000000000149e-05, 3.7638999999999034e-05, 3.744400000000106e-05, 3.7804999999998395e-05, 3.7597000000000325e-05, 3.77919999999983e-05, 3.7583000000000755e-05, 3.744400000000106e-05, 3.8083000000001255e-05, 3.752799999999848e-05, 3.7347000000000075e-05, 3.723599999999952e-05, 3.782000000000091e-05, 3.777799999999873e-05, 3.722199999999995e-05, 3.7681000000001214e-05, 3.782000000000091e-05, 3.8111000000000395e-05, 3.749999999999934e-05, 3.780599999999787e-05, 3.7861000000000145e-05, 3.76659999999987e-05, 3.7375000000002684e-05, 3.76659999999987e-05, 3.7833000000001005e-05, 3.801399999999941e-05, 3.7610999999999895e-05, 3.793000000000199e-05, 3.794400000000156e-05, 3.7374999999999214e-05, 3.795800000000113e-05, 3.7916999999998424e-05, 3.7388999999998784e-05, 3.8138999999999534e-05, 3.779200000000177e-05, 3.75979999999998e-05, 3.780600000000134e-05, 3.7402999999998354e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.069" endtime="20201029 18:15:58.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.064" endtime="20201029 18:15:58.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.075" endtime="20201029 18:15:58.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.074" endtime="20201029 18:15:58.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.073" endtime="20201029 18:15:58.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.716" endtime="20201029 18:15:58.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:57.715" endtime="20201029 18:15:58.096"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.105" endtime="20201029 18:15:58.123"></status>
</kw>
<msg timestamp="20201029 18:15:58.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.103" endtime="20201029 18:15:58.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.125" endtime="20201029 18:15:58.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.127" endtime="20201029 18:15:58.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.100" endtime="20201029 18:15:58.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.098" endtime="20201029 18:15:58.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.136" endtime="20201029 18:15:58.422"></status>
</kw>
<msg timestamp="20201029 18:15:58.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.135" endtime="20201029 18:15:58.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023371, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023409819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:15:58.426" endtime="20201029 18:15:58.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.434" endtime="20201029 18:15:58.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.132" endtime="20201029 18:15:58.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.130" endtime="20201029 18:15:58.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.442" level="INFO">${RESULT} = [{'diff': 3.8818999999998965e-05}, {'diff': 3.8540999999999576e-05}, {'diff': 3.872200000000145e-05}, {'diff': 3.826399999999966e-05}, {'diff': 3.869400000000231e-05}, {'diff': 3.899999999999737e-05},...</msg>
<status status="PASS" starttime="20201029 18:15:58.438" endtime="20201029 18:15:58.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.446" level="INFO">${ACCURACY} = {'diff': [3.8818999999998965e-05, 3.8540999999999576e-05, 3.872200000000145e-05, 3.826399999999966e-05, 3.869400000000231e-05, 3.899999999999737e-05, 3.854200000000252e-05, 3.9138999999997065e-05, 3.8...</msg>
<status status="PASS" starttime="20201029 18:15:58.443" endtime="20201029 18:15:58.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.451" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.450" endtime="20201029 18:15:58.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.454" level="INFO">VALUE: [3.8818999999998965e-05, 3.8540999999999576e-05, 3.872200000000145e-05, 3.826399999999966e-05, 3.869400000000231e-05, 3.899999999999737e-05, 3.854200000000252e-05, 3.9138999999997065e-05, 3.8875000000000715e-05, 3.867999999999927e-05, 3.902799999999998e-05, 3.8388999999999784e-05, 3.8596999999997855e-05, 3.82780000000027e-05, 3.902799999999998e-05, 3.857000000000166e-05, 3.8332999999998035e-05, 3.8680999999998744e-05, 3.9082999999998785e-05, 3.901400000000041e-05, 3.9125000000000965e-05, 3.904199999999955e-05, 3.852799999999948e-05, 3.8583000000001755e-05, 3.9194999999998814e-05, 3.8680999999998744e-05, 3.832000000000141e-05, 3.8332999999998035e-05, 3.8582999999998285e-05, 3.895800000000213e-05, 3.826399999999966e-05, 3.9166999999999674e-05, 3.8959000000001603e-05, 3.876400000000016e-05, 3.8958999999998134e-05, 3.8402999999999354e-05, 3.8375000000000214e-05, 3.894400000000256e-05, 3.8416999999998924e-05, 3.869399999999884e-05, 3.867999999999927e-05, 3.9124999999997495e-05, 3.8582999999998285e-05, 3.868000000000274e-05, 3.8611000000000895e-05, 3.880599999999887e-05, 3.8916999999999424e-05, 3.8597000000001325e-05, 3.8430999999998494e-05, 3.826399999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.452" endtime="20201029 18:15:58.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.447" endtime="20201029 18:15:58.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.466" endtime="20201029 18:15:58.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.464" endtime="20201029 18:15:58.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.463" endtime="20201029 18:15:58.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.097" endtime="20201029 18:15:58.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.096" endtime="20201029 18:15:58.486"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.495" endtime="20201029 18:15:58.512"></status>
</kw>
<msg timestamp="20201029 18:15:58.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.494" endtime="20201029 18:15:58.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.514" endtime="20201029 18:15:58.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.516" endtime="20201029 18:15:58.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.491" endtime="20201029 18:15:58.518"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.489" endtime="20201029 18:15:58.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.525" endtime="20201029 18:15:58.811"></status>
</kw>
<msg timestamp="20201029 18:15:58.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.524" endtime="20201029 18:15:58.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022060986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.815" endtime="20201029 18:15:58.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.824" endtime="20201029 18:15:58.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.521" endtime="20201029 18:15:58.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.519" endtime="20201029 18:15:58.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:58.830" level="INFO">${RESULT} = [{'diff': 4.0181000000000244e-05}, {'diff': 3.9540999999997106e-05}, {'diff': 3.9277000000000756e-05}, {'diff': 3.9860999999998675e-05}, {'diff': 3.992999999999705e-05}, {'diff': 3.9791000000000826e-0...</msg>
<status status="PASS" starttime="20201029 18:15:58.827" endtime="20201029 18:15:58.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:58.835" level="INFO">${ACCURACY} = {'diff': [4.0181000000000244e-05, 3.9540999999997106e-05, 3.9277000000000756e-05, 3.9860999999998675e-05, 3.992999999999705e-05, 3.9791000000000826e-05, 4.0069000000000216e-05, 3.9597000000002325e-05,...</msg>
<status status="PASS" starttime="20201029 18:15:58.831" endtime="20201029 18:15:58.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.840" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 18:15:58.839" endtime="20201029 18:15:58.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.842" level="INFO">VALUE: [4.0181000000000244e-05, 3.9540999999997106e-05, 3.9277000000000756e-05, 3.9860999999998675e-05, 3.992999999999705e-05, 3.9791000000000826e-05, 4.0069000000000216e-05, 3.9597000000002325e-05, 4.002800000000098e-05, 4.002799999999751e-05, 4.002800000000098e-05, 4.020799999999991e-05, 4.0110999999998925e-05, 3.9375000000001215e-05, 3.951399999999744e-05, 3.9917000000000424e-05, 3.9597000000002325e-05, 3.9958999999999134e-05, 3.9930999999999994e-05, 3.927799999999676e-05, 4.0153000000001104e-05, 3.972200000000245e-05, 4.001400000000141e-05, 3.999999999999837e-05, 4.0124999999998495e-05, 3.9361000000001645e-05, 3.973600000000202e-05, 3.976399999999769e-05, 3.977799999999726e-05, 3.9624999999997995e-05, 4.0110999999998925e-05, 3.927800000000023e-05, 3.9680999999999744e-05, 3.975000000000159e-05, 3.9973000000002173e-05, 4.011200000000187e-05, 3.9930999999999994e-05, 3.9430999999999494e-05, 3.9375000000001215e-05, 3.9638999999997565e-05, 3.9860999999998675e-05, 3.9527000000001006e-05, 3.991599999999748e-05, 3.9291000000000326e-05, 4.001400000000141e-05, 3.99859999999988e-05, 3.955599999999962e-05, 3.9917000000000424e-05, 3.994400000000009e-05, 4.0082999999999785e-05]</msg>
<status status="PASS" starttime="20201029 18:15:58.841" endtime="20201029 18:15:58.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.836" endtime="20201029 18:15:58.844"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:58.847" endtime="20201029 18:15:58.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.846" endtime="20201029 18:15:58.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.845" endtime="20201029 18:15:58.867"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.487" endtime="20201029 18:15:58.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.487" endtime="20201029 18:15:58.868"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.877" endtime="20201029 18:15:58.894"></status>
</kw>
<msg timestamp="20201029 18:15:58.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.875" endtime="20201029 18:15:58.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:58.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:58.895" endtime="20201029 18:15:58.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.898" endtime="20201029 18:15:58.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.872" endtime="20201029 18:15:58.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.870" endtime="20201029 18:15:58.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:58.907" endtime="20201029 18:15:59.197"></status>
</kw>
<msg timestamp="20201029 18:15:59.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:58.905" endtime="20201029 18:15:59.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021930833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.201" endtime="20201029 18:15:59.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.209" endtime="20201029 18:15:59.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.903" endtime="20201029 18:15:59.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.901" endtime="20201029 18:15:59.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.216" level="INFO">${RESULT} = [{'diff': 4.1026999999999036e-05}, {'diff': 4.0458999999999634e-05}, {'diff': 4.094399999999762e-05}, {'diff': 4.0776999999998786e-05}, {'diff': 4.0291000000001326e-05}, {'diff': 4.0832999999997066e-0...</msg>
<status status="PASS" starttime="20201029 18:15:59.213" endtime="20201029 18:15:59.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.220" level="INFO">${ACCURACY} = {'diff': [4.1026999999999036e-05, 4.0458999999999634e-05, 4.094399999999762e-05, 4.0776999999998786e-05, 4.0291000000001326e-05, 4.0832999999997066e-05, 4.027799999999776e-05, 4.0403000000001354e-05, ...</msg>
<status status="PASS" starttime="20201029 18:15:59.217" endtime="20201029 18:15:59.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.224" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.223" endtime="20201029 18:15:59.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.227" level="INFO">VALUE: [4.1026999999999036e-05, 4.0458999999999634e-05, 4.094399999999762e-05, 4.0776999999998786e-05, 4.0291000000001326e-05, 4.0832999999997066e-05, 4.027799999999776e-05, 4.0403000000001354e-05, 4.047199999999973e-05, 4.094399999999762e-05, 4.077800000000173e-05, 4.0583000000000286e-05, 4.102800000000198e-05, 4.0860999999999675e-05, 4.0931000000000994e-05, 4.0846999999996636e-05, 4.113799999999959e-05, 4.0276999999998286e-05, 4.058399999999976e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.091600000000195e-05, 4.0610999999999425e-05, 4.06799999999978e-05, 4.0596999999999855e-05, 4.049999999999887e-05, 4.0625000000002465e-05, 4.123600000000005e-05, 4.101400000000241e-05, 4.097200000000023e-05, 4.030600000000037e-05, 4.057000000000019e-05, 4.1124999999999495e-05, 4.1138999999999065e-05, 4.076400000000216e-05, 4.102799999999851e-05, 4.123600000000005e-05, 4.0541000000001576e-05, 4.0305000000000896e-05, 4.0888999999998815e-05, 4.026399999999819e-05, 4.074999999999912e-05, 4.1026999999999036e-05, 4.052800000000148e-05, 4.1125000000002965e-05, 4.076399999999869e-05, 4.120800000000091e-05, 4.0653000000001605e-05, 4.076400000000216e-05, 4.0361000000002645e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.225" endtime="20201029 18:15:59.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.221" endtime="20201029 18:15:59.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.232" endtime="20201029 18:15:59.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.230" endtime="20201029 18:15:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.229" endtime="20201029 18:15:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.869" endtime="20201029 18:15:59.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:58.868" endtime="20201029 18:15:59.253"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.261" endtime="20201029 18:15:59.278"></status>
</kw>
<msg timestamp="20201029 18:15:59.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.260" endtime="20201029 18:15:59.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.280" endtime="20201029 18:15:59.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.282" endtime="20201029 18:15:59.284"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.257" endtime="20201029 18:15:59.285"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.255" endtime="20201029 18:15:59.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.292" endtime="20201029 18:15:59.577"></status>
</kw>
<msg timestamp="20201029 18:15:59.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.290" endtime="20201029 18:15:59.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022877444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022919625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.582" endtime="20201029 18:15:59.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.590" endtime="20201029 18:15:59.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.288" endtime="20201029 18:15:59.592"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.286" endtime="20201029 18:15:59.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.596" level="INFO">${RESULT} = [{'diff': 4.2180999999998775e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.175000000000012e-05}, {'diff': 4.222199999999801e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.129199999999833e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:15:59.593" endtime="20201029 18:15:59.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.601" level="INFO">${ACCURACY} = {'diff': [4.2180999999998775e-05, 4.19860000000008e-05, 4.175000000000012e-05, 4.222199999999801e-05, 4.18059999999984e-05, 4.129199999999833e-05, 4.1431000000001494e-05, 4.175000000000012e-05, 4.2027...</msg>
<status status="PASS" starttime="20201029 18:15:59.597" endtime="20201029 18:15:59.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.605" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.604" endtime="20201029 18:15:59.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.607" level="INFO">VALUE: [4.2180999999998775e-05, 4.19860000000008e-05, 4.175000000000012e-05, 4.222199999999801e-05, 4.18059999999984e-05, 4.129199999999833e-05, 4.1431000000001494e-05, 4.175000000000012e-05, 4.202799999999951e-05, 4.144400000000159e-05, 4.1624999999999995e-05, 4.197200000000123e-05, 4.192999999999905e-05, 4.1888999999999815e-05, 4.177800000000273e-05, 4.145799999999769e-05, 4.177799999999926e-05, 4.152799999999901e-05, 4.12920000000018e-05, 4.1917000000002425e-05, 4.226400000000019e-05, 4.1333000000001036e-05, 4.206999999999822e-05, 4.1624999999999995e-05, 4.1526999999999537e-05, 4.2096999999997886e-05, 4.124999999999962e-05, 4.207000000000169e-05, 4.175000000000012e-05, 4.1874999999996776e-05, 4.141599999999898e-05, 4.175000000000012e-05, 4.168000000000227e-05, 4.1790999999999356e-05, 4.1374999999999745e-05, 4.193000000000252e-05, 4.1611000000000425e-05, 4.1666999999998705e-05, 4.194399999999862e-05, 4.177799999999926e-05, 4.154200000000205e-05, 4.176399999999969e-05, 4.1361000000000175e-05, 4.18059999999984e-05, 4.151399999999944e-05, 4.177799999999926e-05, 4.129199999999833e-05, 4.1290999999998856e-05, 4.1554999999998676e-05, 4.1832999999998066e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.606" endtime="20201029 18:15:59.609"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.601" endtime="20201029 18:15:59.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.613" endtime="20201029 18:15:59.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.612" endtime="20201029 18:15:59.633"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.611" endtime="20201029 18:15:59.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.253" endtime="20201029 18:15:59.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.253" endtime="20201029 18:15:59.634"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.643" endtime="20201029 18:15:59.660"></status>
</kw>
<msg timestamp="20201029 18:15:59.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.641" endtime="20201029 18:15:59.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:15:59.662" endtime="20201029 18:15:59.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.664" endtime="20201029 18:15:59.666"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.639" endtime="20201029 18:15:59.667"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.636" endtime="20201029 18:15:59.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.673" endtime="20201029 18:15:59.960"></status>
</kw>
<msg timestamp="20201029 18:15:59.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.672" endtime="20201029 18:15:59.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022381139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022423625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:15:59.964" endtime="20201029 18:15:59.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:15:59.972" endtime="20201029 18:15:59.974"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.669" endtime="20201029 18:15:59.975"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.668" endtime="20201029 18:15:59.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:15:59.979" level="INFO">${RESULT} = [{'diff': 4.248599999999783e-05}, {'diff': 4.2375000000000745e-05}, {'diff': 4.2695000000002314e-05}, {'diff': 4.277800000000026e-05}, {'diff': 4.2375000000000745e-05}, {'diff': 4.3194999999999345e-05...</msg>
<status status="PASS" starttime="20201029 18:15:59.976" endtime="20201029 18:15:59.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:15:59.984" level="INFO">${ACCURACY} = {'diff': [4.248599999999783e-05, 4.2375000000000745e-05, 4.2695000000002314e-05, 4.277800000000026e-05, 4.2375000000000745e-05, 4.3194999999999345e-05, 4.26120000000009e-05, 4.276299999999775e-05, 4.2...</msg>
<status status="PASS" starttime="20201029 18:15:59.980" endtime="20201029 18:15:59.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.988" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 18:15:59.987" endtime="20201029 18:15:59.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:15:59.991" level="INFO">VALUE: [4.248599999999783e-05, 4.2375000000000745e-05, 4.2695000000002314e-05, 4.277800000000026e-05, 4.2375000000000745e-05, 4.3194999999999345e-05, 4.26120000000009e-05, 4.276299999999775e-05, 4.2972999999998235e-05, 4.251400000000044e-05, 4.2611000000001426e-05, 4.293000000000005e-05, 4.3139000000001065e-05, 4.3096999999998886e-05, 4.2931000000002995e-05, 4.277800000000026e-05, 4.2332999999998566e-05, 4.3181000000003245e-05, 4.3096999999998886e-05, 4.3222999999998485e-05, 4.3041000000000607e-05, 4.276400000000069e-05, 4.2694999999998845e-05, 4.2639000000000565e-05, 4.2666999999999705e-05, 4.236200000000065e-05, 4.31800000000003e-05, 4.2347000000001606e-05, 4.316600000000073e-05, 4.2610999999997956e-05, 4.2610999999997956e-05, 4.291600000000048e-05, 4.26799999999998e-05, 4.3153000000000635e-05, 4.3111000000001926e-05, 4.294399999999962e-05, 4.323599999999858e-05, 4.301400000000094e-05, 4.2318999999998996e-05, 4.225000000000062e-05, 4.277800000000026e-05, 4.3055000000000176e-05, 4.2930999999999525e-05, 4.319399999999987e-05, 4.2596999999998386e-05, 4.2180999999998775e-05, 4.2290999999999856e-05, 4.244400000000259e-05, 4.2611000000001426e-05, 4.216599999999973e-05]</msg>
<status status="PASS" starttime="20201029 18:15:59.989" endtime="20201029 18:15:59.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.985" endtime="20201029 18:15:59.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:15:59.996" endtime="20201029 18:16:00.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.994" endtime="20201029 18:16:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.993" endtime="20201029 18:16:00.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.635" endtime="20201029 18:16:00.017"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:59.634" endtime="20201029 18:16:00.017"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.025" endtime="20201029 18:16:00.042"></status>
</kw>
<msg timestamp="20201029 18:16:00.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.024" endtime="20201029 18:16:00.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.044" endtime="20201029 18:16:00.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.046" endtime="20201029 18:16:00.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.021" endtime="20201029 18:16:00.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.019" endtime="20201029 18:16:00.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.055" endtime="20201029 18:16:00.344"></status>
</kw>
<msg timestamp="20201029 18:16:00.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.054" endtime="20201029 18:16:00.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022094611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.348" endtime="20201029 18:16:00.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.357" endtime="20201029 18:16:00.358"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.051" endtime="20201029 18:16:00.359"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.049" endtime="20201029 18:16:00.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.363" level="INFO">${RESULT} = [{'diff': 4.398599999999933e-05}, {'diff': 4.394400000000062e-05}, {'diff': 4.3680999999996806e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.3945000000000095e-05}, {'diff': 4.333399999999904e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:00.360" endtime="20201029 18:16:00.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.367" level="INFO">${ACCURACY} = {'diff': [4.398599999999933e-05, 4.394400000000062e-05, 4.3680999999996806e-05, 4.4195000000000345e-05, 4.3945000000000095e-05, 4.333399999999904e-05, 4.377800000000126e-05, 4.3417000000000455e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:00.364" endtime="20201029 18:16:00.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.372" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.371" endtime="20201029 18:16:00.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.374" level="INFO">VALUE: [4.398599999999933e-05, 4.394400000000062e-05, 4.3680999999996806e-05, 4.4195000000000345e-05, 4.3945000000000095e-05, 4.333399999999904e-05, 4.377800000000126e-05, 4.3417000000000455e-05, 4.3819000000000496e-05, 4.381999999999997e-05, 4.3694999999999845e-05, 4.394400000000062e-05, 4.41800000000013e-05, 4.395800000000019e-05, 4.41800000000013e-05, 4.3667000000000705e-05, 4.3596999999999386e-05, 4.395800000000019e-05, 4.380499999999746e-05, 4.3361000000002176e-05, 4.3360999999998706e-05, 4.420800000000044e-05, 4.4096999999999886e-05, 4.4208999999999915e-05, 4.348599999999883e-05, 4.3819000000000496e-05, 4.381999999999997e-05, 4.370799999999994e-05, 4.325000000000162e-05, 4.3666999999997236e-05, 4.341600000000098e-05, 4.3652999999997666e-05, 4.323599999999858e-05, 4.3625000000001996e-05, 4.325000000000162e-05, 4.3652999999997666e-05, 4.3431000000000025e-05, 4.3444999999999595e-05, 4.355600000000015e-05, 4.3805000000000927e-05, 4.3945000000000095e-05, 4.333399999999904e-05, 4.4138999999998596e-05, 4.334799999999861e-05, 4.4152999999998166e-05, 4.3945000000000095e-05, 4.383399999999954e-05, 4.377699999999832e-05, 4.395800000000019e-05, 4.3624999999998526e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.373" endtime="20201029 18:16:00.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.368" endtime="20201029 18:16:00.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.379" endtime="20201029 18:16:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.378" endtime="20201029 18:16:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.377" endtime="20201029 18:16:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.018" endtime="20201029 18:16:00.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.017" endtime="20201029 18:16:00.400"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.409" endtime="20201029 18:16:00.428"></status>
</kw>
<msg timestamp="20201029 18:16:00.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.407" endtime="20201029 18:16:00.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.429" endtime="20201029 18:16:00.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.432" endtime="20201029 18:16:00.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.404" endtime="20201029 18:16:00.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.402" endtime="20201029 18:16:00.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.441" endtime="20201029 18:16:00.727"></status>
</kw>
<msg timestamp="20201029 18:16:00.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.439" endtime="20201029 18:16:00.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022872583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022917264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:00.731" endtime="20201029 18:16:00.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.739" endtime="20201029 18:16:00.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.437" endtime="20201029 18:16:00.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.435" endtime="20201029 18:16:00.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:00.746" level="INFO">${RESULT} = [{'diff': 4.4681000000001275e-05}, {'diff': 4.451399999999897e-05}, {'diff': 4.5152999999999166e-05}, {'diff': 4.424999999999915e-05}, {'diff': 4.427800000000176e-05}, {'diff': 4.4903000000002385e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:00.743" endtime="20201029 18:16:00.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:00.750" level="INFO">${ACCURACY} = {'diff': [4.4681000000001275e-05, 4.451399999999897e-05, 4.5152999999999166e-05, 4.424999999999915e-05, 4.427800000000176e-05, 4.4903000000002385e-05, 4.4486999999999305e-05, 4.4403000000001885e-05, 4...</msg>
<status status="PASS" starttime="20201029 18:16:00.747" endtime="20201029 18:16:00.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.754" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:00.753" endtime="20201029 18:16:00.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.757" level="INFO">VALUE: [4.4681000000001275e-05, 4.451399999999897e-05, 4.5152999999999166e-05, 4.424999999999915e-05, 4.427800000000176e-05, 4.4903000000002385e-05, 4.4486999999999305e-05, 4.4403000000001885e-05, 4.480499999999846e-05, 4.443000000000155e-05, 4.5111000000000456e-05, 4.501399999999947e-05, 4.445799999999722e-05, 4.495800000000119e-05, 4.4639000000002566e-05, 4.4819000000001497e-05, 4.49999999999999e-05, 4.477799999999879e-05, 4.506999999999775e-05, 4.5152999999999166e-05, 4.4444999999997126e-05, 4.5111000000000456e-05, 4.501399999999947e-05, 4.479199999999836e-05, 4.5125000000000026e-05, 4.48199999999975e-05, 4.483400000000054e-05, 4.49999999999999e-05, 4.5111000000000456e-05, 4.451399999999897e-05, 4.46800000000018e-05, 4.498600000000033e-05, 4.451400000000244e-05, 4.517999999999883e-05, 4.4902999999998916e-05, 4.448599999999983e-05, 4.4416999999997986e-05, 4.4610999999999956e-05, 4.513800000000012e-05, 4.469400000000137e-05, 4.49999999999999e-05, 4.486199999999968e-05, 4.427800000000176e-05, 4.501399999999947e-05, 4.48060000000014e-05, 4.522199999999754e-05, 4.4944999999997626e-05, 4.516599999999926e-05, 4.4624999999999526e-05, 4.479200000000183e-05]</msg>
<status status="PASS" starttime="20201029 18:16:00.756" endtime="20201029 18:16:00.758"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.751" endtime="20201029 18:16:00.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:00.763" endtime="20201029 18:16:00.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.761" endtime="20201029 18:16:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.760" endtime="20201029 18:16:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.401" endtime="20201029 18:16:00.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.400" endtime="20201029 18:16:00.784"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.793" endtime="20201029 18:16:00.810"></status>
</kw>
<msg timestamp="20201029 18:16:00.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.791" endtime="20201029 18:16:00.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:00.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:00.812" endtime="20201029 18:16:00.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.815" endtime="20201029 18:16:00.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.788" endtime="20201029 18:16:00.817"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.786" endtime="20201029 18:16:00.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:00.824" endtime="20201029 18:16:01.111"></status>
</kw>
<msg timestamp="20201029 18:16:01.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:00.823" endtime="20201029 18:16:01.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023137569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02318375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:01.116" endtime="20201029 18:16:01.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.124" endtime="20201029 18:16:01.125"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.820" endtime="20201029 18:16:01.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.818" endtime="20201029 18:16:01.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.130" level="INFO">${RESULT} = [{'diff': 4.6180999999999306e-05}, {'diff': 4.61529999999967e-05}, {'diff': 4.5695000000001845e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.599999999999743e-05}, {'diff': 4.5375000000000276e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:01.127" endtime="20201029 18:16:01.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.135" level="INFO">${ACCURACY} = {'diff': [4.6180999999999306e-05, 4.61529999999967e-05, 4.5695000000001845e-05, 4.525000000000015e-05, 4.599999999999743e-05, 4.5375000000000276e-05, 4.559800000000086e-05, 4.558400000000129e-05, 4.57...</msg>
<status status="PASS" starttime="20201029 18:16:01.131" endtime="20201029 18:16:01.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.140" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.139" endtime="20201029 18:16:01.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.142" level="INFO">VALUE: [4.6180999999999306e-05, 4.61529999999967e-05, 4.5695000000001845e-05, 4.525000000000015e-05, 4.599999999999743e-05, 4.5375000000000276e-05, 4.559800000000086e-05, 4.558400000000129e-05, 4.579099999999989e-05, 4.575000000000065e-05, 4.580499999999946e-05, 4.529200000000233e-05, 4.5388999999999846e-05, 4.544399999999865e-05, 4.617999999999983e-05, 4.597200000000176e-05, 4.575000000000065e-05, 4.5611000000000956e-05, 4.5959000000001665e-05, 4.522200000000101e-05, 4.551399999999997e-05, 4.577799999999979e-05, 4.5875000000000776e-05, 4.592999999999958e-05, 4.523599999999711e-05, 4.53329999999981e-05, 4.6139000000000596e-05, 4.573600000000108e-05, 4.579099999999989e-05, 4.595800000000219e-05, 4.572199999999804e-05, 4.55000000000004e-05, 4.544400000000212e-05, 4.534799999999714e-05, 4.548599999999736e-05, 4.552799999999954e-05, 4.529199999999886e-05, 4.601400000000047e-05, 4.6195000000002345e-05, 4.526400000000319e-05, 4.543000000000255e-05, 4.576400000000022e-05, 4.5611000000000956e-05, 4.559799999999739e-05, 4.5569000000002247e-05, 4.595799999999872e-05, 4.519400000000187e-05, 4.552799999999954e-05, 4.541599999999951e-05, 4.572200000000151e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.141" endtime="20201029 18:16:01.143"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.136" endtime="20201029 18:16:01.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.147" endtime="20201029 18:16:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.146" endtime="20201029 18:16:01.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.145" endtime="20201029 18:16:01.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.785" endtime="20201029 18:16:01.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:00.784" endtime="20201029 18:16:01.168"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.177" endtime="20201029 18:16:01.195"></status>
</kw>
<msg timestamp="20201029 18:16:01.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.176" endtime="20201029 18:16:01.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.196" endtime="20201029 18:16:01.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.199" endtime="20201029 18:16:01.200"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.173" endtime="20201029 18:16:01.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.170" endtime="20201029 18:16:01.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.208" endtime="20201029 18:16:01.494"></status>
</kw>
<msg timestamp="20201029 18:16:01.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.206" endtime="20201029 18:16:01.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022534444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022581292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.498" endtime="20201029 18:16:01.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.506" endtime="20201029 18:16:01.509"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.204" endtime="20201029 18:16:01.510"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.202" endtime="20201029 18:16:01.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.514" level="INFO">${RESULT} = [{'diff': 4.684799999999864e-05}, {'diff': 4.632000000000247e-05}, {'diff': 4.661099999999849e-05}, {'diff': 4.6611000000001956e-05}, {'diff': 4.6445000000002595e-05}, {'diff': 4.7181000000000306e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:01.511" endtime="20201029 18:16:01.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.518" level="INFO">${ACCURACY} = {'diff': [4.684799999999864e-05, 4.632000000000247e-05, 4.661099999999849e-05, 4.6611000000001956e-05, 4.6445000000002595e-05, 4.7181000000000306e-05, 4.676399999999775e-05, 4.6653000000000666e-05, 4....</msg>
<status status="PASS" starttime="20201029 18:16:01.515" endtime="20201029 18:16:01.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.523" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.522" endtime="20201029 18:16:01.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.525" level="INFO">VALUE: [4.684799999999864e-05, 4.632000000000247e-05, 4.661099999999849e-05, 4.6611000000001956e-05, 4.6445000000002595e-05, 4.7181000000000306e-05, 4.676399999999775e-05, 4.6653000000000666e-05, 4.7181000000000306e-05, 4.674999999999818e-05, 4.661099999999849e-05, 4.658299999999935e-05, 4.629199999999986e-05, 4.7013999999998e-05, 4.701400000000147e-05, 4.699999999999843e-05, 4.652800000000054e-05, 4.675000000000165e-05, 4.6445000000002595e-05, 4.7013999999998e-05, 4.708299999999985e-05, 4.651299999999803e-05, 4.6416999999999986e-05, 4.652700000000107e-05, 4.709699999999942e-05, 4.694400000000015e-05, 4.627700000000082e-05, 4.66939999999999e-05, 4.6958999999999196e-05, 4.629199999999986e-05, 4.7167000000000736e-05, 4.6361000000001706e-05, 4.627800000000029e-05, 4.701400000000147e-05, 4.6667000000000236e-05, 4.675000000000165e-05, 4.6416999999999986e-05, 4.7153000000001166e-05, 4.629100000000039e-05, 4.654100000000064e-05, 4.675000000000165e-05, 4.626299999999778e-05, 4.626400000000072e-05, 4.627800000000029e-05, 4.695799999999972e-05, 4.6319000000003e-05, 4.626399999999725e-05, 4.686099999999874e-05, 4.6667000000000236e-05, 4.658299999999935e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.524" endtime="20201029 18:16:01.526"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.519" endtime="20201029 18:16:01.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.530" endtime="20201029 18:16:01.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.529" endtime="20201029 18:16:01.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.527" endtime="20201029 18:16:01.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.169" endtime="20201029 18:16:01.551"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.168" endtime="20201029 18:16:01.551"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.560" endtime="20201029 18:16:01.578"></status>
</kw>
<msg timestamp="20201029 18:16:01.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.558" endtime="20201029 18:16:01.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.579" endtime="20201029 18:16:01.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.582" endtime="20201029 18:16:01.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.556" endtime="20201029 18:16:01.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.553" endtime="20201029 18:16:01.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.592" endtime="20201029 18:16:01.879"></status>
</kw>
<msg timestamp="20201029 18:16:01.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023254514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.590" endtime="20201029 18:16:01.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023254514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.883" endtime="20201029 18:16:01.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.891" endtime="20201029 18:16:01.893"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.588" endtime="20201029 18:16:01.894"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.586" endtime="20201029 18:16:01.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:01.898" level="INFO">${RESULT} = [{'diff': 4.734699999999967e-05}, {'diff': 4.819399999999793e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.763899999999863e-05}, {'diff': 4.815200000000269e-05}, {'diff': 4.808400000000032e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:01.895" endtime="20201029 18:16:01.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:01.902" level="INFO">${ACCURACY} = {'diff': [4.734699999999967e-05, 4.819399999999793e-05, 4.7445000000000126e-05, 4.763899999999863e-05, 4.815200000000269e-05, 4.808400000000032e-05, 4.781900000000103e-05, 4.759800000000286e-05, 4.759...</msg>
<status status="PASS" starttime="20201029 18:16:01.899" endtime="20201029 18:16:01.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.907" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:01.906" endtime="20201029 18:16:01.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.910" level="INFO">VALUE: [4.734699999999967e-05, 4.819399999999793e-05, 4.7445000000000126e-05, 4.763899999999863e-05, 4.815200000000269e-05, 4.808400000000032e-05, 4.781900000000103e-05, 4.759800000000286e-05, 4.759699999999992e-05, 4.758399999999982e-05, 4.730500000000096e-05, 4.731900000000053e-05, 4.780499999999799e-05, 4.808300000000085e-05, 4.777799999999832e-05, 4.729200000000086e-05, 4.798599999999986e-05, 4.759699999999992e-05, 4.75000000000024e-05, 4.779200000000136e-05, 4.7445000000000126e-05, 4.805500000000171e-05, 4.747199999999979e-05, 4.757000000000025e-05, 4.772200000000004e-05, 4.7722999999999516e-05, 4.786099999999974e-05, 4.747199999999979e-05, 4.779100000000189e-05, 4.7403000000001416e-05, 4.802799999999857e-05, 4.8181000000001306e-05, 4.8167000000001736e-05, 4.804200000000161e-05, 4.788899999999888e-05, 4.727800000000129e-05, 4.766699999999777e-05, 4.7445000000000126e-05, 4.816699999999827e-05, 4.802800000000204e-05, 4.816600000000226e-05, 4.783299999999713e-05, 4.743000000000108e-05, 4.730500000000096e-05, 4.772200000000004e-05, 4.7903000000001916e-05, 4.741600000000151e-05, 4.768000000000133e-05, 4.809700000000042e-05, 4.759699999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:16:01.909" endtime="20201029 18:16:01.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.903" endtime="20201029 18:16:01.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:01.916" endtime="20201029 18:16:01.935"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.915" endtime="20201029 18:16:01.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.913" endtime="20201029 18:16:01.936"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.552" endtime="20201029 18:16:01.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.551" endtime="20201029 18:16:01.937"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.945" endtime="20201029 18:16:01.963"></status>
</kw>
<msg timestamp="20201029 18:16:01.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.944" endtime="20201029 18:16:01.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:01.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:01.964" endtime="20201029 18:16:01.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.967" endtime="20201029 18:16:01.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.941" endtime="20201029 18:16:01.969"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.939" endtime="20201029 18:16:01.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:01.976" endtime="20201029 18:16:02.262"></status>
</kw>
<msg timestamp="20201029 18:16:02.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:01.974" endtime="20201029 18:16:02.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022072208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.266" endtime="20201029 18:16:02.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.275" endtime="20201029 18:16:02.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.972" endtime="20201029 18:16:02.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.970" endtime="20201029 18:16:02.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.281" level="INFO">${RESULT} = [{'diff': 4.833400000000057e-05}, {'diff': 4.919399999999893e-05}, {'diff': 4.9208999999997977e-05}, {'diff': 4.8320000000001e-05}, {'diff': 4.833299999999763e-05}, {'diff': 4.85139999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:02.278" endtime="20201029 18:16:02.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.287" level="INFO">${ACCURACY} = {'diff': [4.833400000000057e-05, 4.919399999999893e-05, 4.9208999999997977e-05, 4.8320000000001e-05, 4.833299999999763e-05, 4.85139999999995e-05, 4.829200000000186e-05, 4.909800000000089e-05, 4.830499...</msg>
<status status="PASS" starttime="20201029 18:16:02.282" endtime="20201029 18:16:02.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.291" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.290" endtime="20201029 18:16:02.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.294" level="INFO">VALUE: [4.833400000000057e-05, 4.919399999999893e-05, 4.9208999999997977e-05, 4.8320000000001e-05, 4.833299999999763e-05, 4.85139999999995e-05, 4.829200000000186e-05, 4.909800000000089e-05, 4.830499999999849e-05, 4.898600000000086e-05, 4.91940000000024e-05, 4.834700000000067e-05, 4.919399999999893e-05, 4.85139999999995e-05, 4.830600000000143e-05, 4.909699999999795e-05, 4.854099999999917e-05, 4.849999999999993e-05, 4.848600000000036e-05, 4.912500000000056e-05, 4.858300000000135e-05, 4.834800000000014e-05, 4.852799999999907e-05, 4.909799999999742e-05, 4.877799999999932e-05, 4.888899999999988e-05, 4.829100000000239e-05, 4.844400000000165e-05, 4.909700000000142e-05, 4.843099999999809e-05, 4.849999999999993e-05, 4.8709000000000946e-05, 4.912500000000056e-05, 4.847200000000079e-05, 4.916699999999927e-05, 4.829200000000186e-05, 4.827800000000229e-05, 4.876400000000322e-05, 4.884800000000064e-05, 4.859799999999692e-05, 4.901300000000053e-05, 4.81940000000014e-05, 4.8737000000000086e-05, 4.849999999999993e-05, 4.827799999999882e-05, 4.858300000000135e-05, 4.86529999999992e-05, 4.858300000000135e-05, 4.907000000000175e-05, 4.843099999999809e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.293" endtime="20201029 18:16:02.295"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.288" endtime="20201029 18:16:02.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.299" endtime="20201029 18:16:02.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.298" endtime="20201029 18:16:02.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.297" endtime="20201029 18:16:02.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.938" endtime="20201029 18:16:02.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:01.937" endtime="20201029 18:16:02.320"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.330" endtime="20201029 18:16:02.347"></status>
</kw>
<msg timestamp="20201029 18:16:02.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.328" endtime="20201029 18:16:02.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.349" endtime="20201029 18:16:02.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.351" endtime="20201029 18:16:02.353"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.325" endtime="20201029 18:16:02.354"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.323" endtime="20201029 18:16:02.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.361" endtime="20201029 18:16:02.670"></status>
</kw>
<msg timestamp="20201029 18:16:02.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.359" endtime="20201029 18:16:02.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023256472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.674" endtime="20201029 18:16:02.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.682" endtime="20201029 18:16:02.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.357" endtime="20201029 18:16:02.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.355" endtime="20201029 18:16:02.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:02.689" level="INFO">${RESULT} = [{'diff': 5.0014000000001e-05}, {'diff': 4.947200000000179e-05}, {'diff': 4.922200000000154e-05}, {'diff': 4.994400000000315e-05}, {'diff': 4.988899999999741e-05}, {'diff': 4.944399999999918e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:02.686" endtime="20201029 18:16:02.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:02.693" level="INFO">${ACCURACY} = {'diff': [5.0014000000001e-05, 4.947200000000179e-05, 4.922200000000154e-05, 4.994400000000315e-05, 4.988899999999741e-05, 4.944399999999918e-05, 4.977799999999685e-05, 4.981899999999956e-05, 4.993099...</msg>
<status status="PASS" starttime="20201029 18:16:02.690" endtime="20201029 18:16:02.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.698" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:02.697" endtime="20201029 18:16:02.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.700" level="INFO">VALUE: [5.0014000000001e-05, 4.947200000000179e-05, 4.922200000000154e-05, 4.994400000000315e-05, 4.988899999999741e-05, 4.944399999999918e-05, 4.977799999999685e-05, 4.981899999999956e-05, 4.993099999999959e-05, 5.005600000000318e-05, 4.950000000000093e-05, 5.006999999999928e-05, 4.949999999999746e-05, 4.945799999999875e-05, 4.977699999999738e-05, 5.0165999999997324e-05, 4.938900000000038e-05, 4.977800000000032e-05, 4.980499999999999e-05, 4.945800000000222e-05, 4.949999999999746e-05, 4.943099999999909e-05, 4.993099999999959e-05, 4.96530000000002e-05, 4.976400000000075e-05, 4.950000000000093e-05, 5.0222999999998547e-05, 4.9959000000002196e-05, 5.011100000000199e-05, 4.937499999999734e-05, 4.991700000000002e-05, 5.0165999999997324e-05, 4.976399999999728e-05, 4.963900000000063e-05, 4.967999999999986e-05, 4.962499999999759e-05, 4.997200000000229e-05, 4.929199999999939e-05, 4.923599999999764e-05, 5.012499999999809e-05, 4.993099999999959e-05, 5.0222999999998547e-05, 4.998600000000186e-05, 4.944499999999866e-05, 4.993099999999959e-05, 5.018000000000036e-05, 4.945800000000222e-05, 4.986200000000121e-05, 4.952800000000007e-05, 4.998599999999839e-05]</msg>
<status status="PASS" starttime="20201029 18:16:02.699" endtime="20201029 18:16:02.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.694" endtime="20201029 18:16:02.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:02.705" endtime="20201029 18:16:02.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.704" endtime="20201029 18:16:02.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.703" endtime="20201029 18:16:02.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.321" endtime="20201029 18:16:02.726"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.321" endtime="20201029 18:16:02.726"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.735" endtime="20201029 18:16:02.753"></status>
</kw>
<msg timestamp="20201029 18:16:02.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.733" endtime="20201029 18:16:02.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:02.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:02.755" endtime="20201029 18:16:02.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.757" endtime="20201029 18:16:02.759"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.731" endtime="20201029 18:16:02.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.728" endtime="20201029 18:16:02.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:02.767" endtime="20201029 18:16:03.052"></status>
</kw>
<msg timestamp="20201029 18:16:03.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:02.765" endtime="20201029 18:16:03.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023128944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023179792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.057" endtime="20201029 18:16:03.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.065" endtime="20201029 18:16:03.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.763" endtime="20201029 18:16:03.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.761" endtime="20201029 18:16:03.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.071" level="INFO">${RESULT} = [{'diff': 5.084800000000264e-05}, {'diff': 5.026399999999778e-05}, {'diff': 5.063899999999816e-05}, {'diff': 5.0915999999998074e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.082000000000003e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:03.068" endtime="20201029 18:16:03.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.076" level="INFO">${ACCURACY} = {'diff': [5.084800000000264e-05, 5.026399999999778e-05, 5.063899999999816e-05, 5.0915999999998074e-05, 5.098599999999939e-05, 5.082000000000003e-05, 5.098599999999939e-05, 5.111099999999952e-05, 5.105...</msg>
<status status="PASS" starttime="20201029 18:16:03.073" endtime="20201029 18:16:03.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.080" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.079" endtime="20201029 18:16:03.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.083" level="INFO">VALUE: [5.084800000000264e-05, 5.026399999999778e-05, 5.063899999999816e-05, 5.0915999999998074e-05, 5.098599999999939e-05, 5.082000000000003e-05, 5.098599999999939e-05, 5.111099999999952e-05, 5.105600000000071e-05, 5.029200000000039e-05, 5.1165999999998324e-05, 5.052800000000107e-05, 5.104200000000114e-05, 5.059799999999892e-05, 5.059800000000239e-05, 5.030500000000049e-05, 5.093100000000059e-05, 5.034700000000267e-05, 5.05140000000015e-05, 5.0651999999998254e-05, 5.100000000000243e-05, 5.027699999999788e-05, 5.0943999999997214e-05, 5.08469999999997e-05, 5.026400000000125e-05, 5.095800000000025e-05, 5.081900000000056e-05, 5.108300000000038e-05, 5.086099999999927e-05, 5.112499999999909e-05, 5.122299999999955e-05, 5.024999999999821e-05, 5.077799999999785e-05, 5.033299999999963e-05, 5.026400000000125e-05, 5.029100000000092e-05, 5.045799999999975e-05, 5.054100000000117e-05, 5.059699999999945e-05, 5.027799999999735e-05, 5.0929999999997644e-05, 5.069499999999991e-05, 5.052800000000107e-05, 5.119500000000041e-05, 5.108300000000038e-05, 5.119500000000041e-05, 5.077800000000132e-05, 5.027800000000082e-05, 5.108399999999985e-05, 5.106900000000081e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.081" endtime="20201029 18:16:03.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.077" endtime="20201029 18:16:03.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.089" endtime="20201029 18:16:03.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.087" endtime="20201029 18:16:03.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.086" endtime="20201029 18:16:03.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.727" endtime="20201029 18:16:03.109"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:02.726" endtime="20201029 18:16:03.109"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.118" endtime="20201029 18:16:03.136"></status>
</kw>
<msg timestamp="20201029 18:16:03.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.117" endtime="20201029 18:16:03.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.138" endtime="20201029 18:16:03.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.140" endtime="20201029 18:16:03.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.114" endtime="20201029 18:16:03.142"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.112" endtime="20201029 18:16:03.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.149" endtime="20201029 18:16:03.435"></status>
</kw>
<msg timestamp="20201029 18:16:03.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.148" endtime="20201029 18:16:03.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022617972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022669292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.439" endtime="20201029 18:16:03.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.447" endtime="20201029 18:16:03.449"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.145" endtime="20201029 18:16:03.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.143" endtime="20201029 18:16:03.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.454" level="INFO">${RESULT} = [{'diff': 5.132000000000053e-05}, {'diff': 5.157000000000078e-05}, {'diff': 5.127799999999835e-05}, {'diff': 5.197200000000082e-05}, {'diff': 5.198699999999987e-05}, {'diff': 5.137499999999934e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:03.451" endtime="20201029 18:16:03.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.459" level="INFO">${ACCURACY} = {'diff': [5.132000000000053e-05, 5.157000000000078e-05, 5.127799999999835e-05, 5.197200000000082e-05, 5.198699999999987e-05, 5.137499999999934e-05, 5.2165999999999324e-05, 5.1943999999998214e-05, 5.19...</msg>
<status status="PASS" starttime="20201029 18:16:03.455" endtime="20201029 18:16:03.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.464" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.463" endtime="20201029 18:16:03.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.466" level="INFO">VALUE: [5.132000000000053e-05, 5.157000000000078e-05, 5.127799999999835e-05, 5.197200000000082e-05, 5.198699999999987e-05, 5.137499999999934e-05, 5.2165999999999324e-05, 5.1943999999998214e-05, 5.198600000000039e-05, 5.216700000000227e-05, 5.198600000000039e-05, 5.1415999999998574e-05, 5.212500000000009e-05, 5.165299999999873e-05, 5.201399999999953e-05, 5.211100000000052e-05, 5.1916000000002543e-05, 5.163899999999916e-05, 5.169500000000091e-05, 5.168099999999787e-05, 5.1401999999999004e-05, 5.208400000000085e-05, 5.159700000000045e-05, 5.177799999999885e-05, 5.156900000000131e-05, 5.130500000000149e-05, 5.212500000000009e-05, 5.199999999999996e-05, 5.1943999999998214e-05, 5.181899999999809e-05, 5.16669999999983e-05, 5.163900000000263e-05, 5.186100000000027e-05, 5.186100000000027e-05, 5.1665999999998824e-05, 5.212500000000009e-05, 5.151399999999903e-05, 5.215299999999923e-05, 5.218000000000236e-05, 5.197200000000082e-05, 5.213900000000313e-05, 5.179200000000189e-05, 5.209700000000095e-05, 5.1985999999996924e-05, 5.140299999999848e-05, 5.165299999999873e-05, 5.220899999999751e-05, 5.145900000000023e-05, 5.209700000000095e-05, 5.152800000000207e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.465" endtime="20201029 18:16:03.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.460" endtime="20201029 18:16:03.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.481" endtime="20201029 18:16:03.500"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.479" endtime="20201029 18:16:03.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.478" endtime="20201029 18:16:03.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.110" endtime="20201029 18:16:03.501"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.110" endtime="20201029 18:16:03.501"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.510" endtime="20201029 18:16:03.528"></status>
</kw>
<msg timestamp="20201029 18:16:03.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.509" endtime="20201029 18:16:03.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.529" endtime="20201029 18:16:03.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.532" endtime="20201029 18:16:03.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.506" endtime="20201029 18:16:03.534"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.504" endtime="20201029 18:16:03.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.542" endtime="20201029 18:16:03.831"></status>
</kw>
<msg timestamp="20201029 18:16:03.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.540" endtime="20201029 18:16:03.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022515181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022568347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.835" endtime="20201029 18:16:03.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.844" endtime="20201029 18:16:03.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.537" endtime="20201029 18:16:03.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.535" endtime="20201029 18:16:03.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:03.850" level="INFO">${RESULT} = [{'diff': 5.3166000000000324e-05}, {'diff': 5.261100000000102e-05}, {'diff': 5.301400000000053e-05}, {'diff': 5.312499999999762e-05}, {'diff': 5.295899999999826e-05}, {'diff': 5.280499999999952e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:03.847" endtime="20201029 18:16:03.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:03.854" level="INFO">${ACCURACY} = {'diff': [5.3166000000000324e-05, 5.261100000000102e-05, 5.301400000000053e-05, 5.312499999999762e-05, 5.295899999999826e-05, 5.280499999999952e-05, 5.229200000000239e-05, 5.269500000000191e-05, 5.318...</msg>
<status status="PASS" starttime="20201029 18:16:03.851" endtime="20201029 18:16:03.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.859" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:03.858" endtime="20201029 18:16:03.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.861" level="INFO">VALUE: [5.3166000000000324e-05, 5.261100000000102e-05, 5.301400000000053e-05, 5.312499999999762e-05, 5.295899999999826e-05, 5.280499999999952e-05, 5.229200000000239e-05, 5.269500000000191e-05, 5.318100000000284e-05, 5.297200000000182e-05, 5.258299999999841e-05, 5.272200000000157e-05, 5.272200000000157e-05, 5.227699999999988e-05, 5.2707999999998534e-05, 5.2679999999999394e-05, 5.231899999999859e-05, 5.2680000000002863e-05, 5.254199999999917e-05, 5.227800000000282e-05, 5.238899999999991e-05, 5.259700000000145e-05, 5.244500000000166e-05, 5.231899999999859e-05, 5.283399999999813e-05, 5.295900000000173e-05, 5.312499999999762e-05, 5.2999999999997494e-05, 5.25279999999996e-05, 5.225000000000021e-05, 5.23609999999973e-05, 5.276400000000028e-05, 5.300000000000096e-05, 5.309699999999848e-05, 5.26669999999993e-05, 5.311100000000152e-05, 5.231999999999806e-05, 5.280600000000246e-05, 5.269499999999844e-05, 5.311099999999805e-05, 5.283299999999866e-05, 5.269400000000243e-05, 5.2943999999999214e-05, 5.273600000000114e-05, 5.312500000000109e-05, 5.31669999999998e-05, 5.255599999999874e-05, 5.23470000000012e-05, 5.226399999999978e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201029 18:16:03.860" endtime="20201029 18:16:03.862"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.855" endtime="20201029 18:16:03.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:03.866" endtime="20201029 18:16:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.865" endtime="20201029 18:16:03.886"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.864" endtime="20201029 18:16:03.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.502" endtime="20201029 18:16:03.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.502" endtime="20201029 18:16:03.887"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.896" endtime="20201029 18:16:03.913"></status>
</kw>
<msg timestamp="20201029 18:16:03.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.894" endtime="20201029 18:16:03.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:03.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:03.915" endtime="20201029 18:16:03.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.917" endtime="20201029 18:16:03.919"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.892" endtime="20201029 18:16:03.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.889" endtime="20201029 18:16:03.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:03.927" endtime="20201029 18:16:04.212"></status>
</kw>
<msg timestamp="20201029 18:16:04.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:03.925" endtime="20201029 18:16:04.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022908278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.216" endtime="20201029 18:16:04.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.225" endtime="20201029 18:16:04.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.923" endtime="20201029 18:16:04.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.921" endtime="20201029 18:16:04.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.231" level="INFO">${RESULT} = [{'diff': 5.3749999999998244e-05}, {'diff': 5.409699999999948e-05}, {'diff': 5.408299999999991e-05}, {'diff': 5.36670000000003e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.391700000000055e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.228" endtime="20201029 18:16:04.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.235" level="INFO">${ACCURACY} = {'diff': [5.3749999999998244e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.36670000000003e-05, 5.331899999999959e-05, 5.391700000000055e-05, 5.336100000000177e-05, 5.387500000000184e-05, 5.3860...</msg>
<status status="PASS" starttime="20201029 18:16:04.232" endtime="20201029 18:16:04.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.240" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.239" endtime="20201029 18:16:04.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.242" level="INFO">VALUE: [5.3749999999998244e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.36670000000003e-05, 5.331899999999959e-05, 5.391700000000055e-05, 5.336100000000177e-05, 5.387500000000184e-05, 5.38609999999988e-05, 5.331999999999906e-05, 5.379200000000042e-05, 5.412499999999862e-05, 5.329100000000045e-05, 5.3999999999998494e-05, 5.4137999999998715e-05, 5.38609999999988e-05, 5.40280000000011e-05, 5.3485999999998424e-05, 5.400000000000196e-05, 5.327800000000035e-05, 5.348600000000189e-05, 5.413899999999819e-05, 5.411099999999905e-05, 5.357000000000278e-05, 5.4013999999998064e-05, 5.419499999999994e-05, 5.329199999999992e-05, 5.412499999999862e-05, 5.338900000000091e-05, 5.3930000000000644e-05, 5.409700000000295e-05, 5.35410000000007e-05, 5.4194000000000464e-05, 5.379199999999695e-05, 5.3957999999999784e-05, 5.3277999999996883e-05, 5.368099999999987e-05, 5.397299999999883e-05, 5.39730000000023e-05, 5.327800000000035e-05, 5.401300000000206e-05, 5.348600000000189e-05, 5.344500000000266e-05, 5.386199999999827e-05, 5.3707999999999534e-05, 5.411099999999905e-05, 5.3749999999998244e-05, 5.3707999999999534e-05, 5.3985999999998924e-05, 5.3430000000000144e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.241" endtime="20201029 18:16:04.244"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.236" endtime="20201029 18:16:04.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.248" endtime="20201029 18:16:04.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.247" endtime="20201029 18:16:04.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.246" endtime="20201029 18:16:04.268"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.888" endtime="20201029 18:16:04.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:03.887" endtime="20201029 18:16:04.269"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.278" endtime="20201029 18:16:04.294"></status>
</kw>
<msg timestamp="20201029 18:16:04.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.276" endtime="20201029 18:16:04.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.296" endtime="20201029 18:16:04.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.298" endtime="20201029 18:16:04.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.274" endtime="20201029 18:16:04.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.271" endtime="20201029 18:16:04.301"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.308" endtime="20201029 18:16:04.594"></status>
</kw>
<msg timestamp="20201029 18:16:04.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.306" endtime="20201029 18:16:04.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022061847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022116542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.598" endtime="20201029 18:16:04.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.606" endtime="20201029 18:16:04.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.304" endtime="20201029 18:16:04.608"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.302" endtime="20201029 18:16:04.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.613" level="INFO">${RESULT} = [{'diff': 5.469500000000044e-05}, {'diff': 5.491700000000155e-05}, {'diff': 5.423699999999865e-05}, {'diff': 5.43609999999993e-05}, {'diff': 5.477800000000185e-05}, {'diff': 5.459699999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:04.609" endtime="20201029 18:16:04.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:04.618" level="INFO">${ACCURACY} = {'diff': [5.469500000000044e-05, 5.491700000000155e-05, 5.423699999999865e-05, 5.43609999999993e-05, 5.477800000000185e-05, 5.459699999999998e-05, 5.43609999999993e-05, 5.515299999999876e-05, 5.456900...</msg>
<status status="PASS" starttime="20201029 18:16:04.614" endtime="20201029 18:16:04.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.622" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:04.621" endtime="20201029 18:16:04.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.625" level="INFO">VALUE: [5.469500000000044e-05, 5.491700000000155e-05, 5.423699999999865e-05, 5.43609999999993e-05, 5.477800000000185e-05, 5.459699999999998e-05, 5.43609999999993e-05, 5.515299999999876e-05, 5.456900000000084e-05, 5.451400000000203e-05, 5.4430000000001144e-05, 5.51670000000018e-05, 5.4513999999998564e-05, 5.513899999999919e-05, 5.448600000000289e-05, 5.490299999999851e-05, 5.491699999999808e-05, 5.444500000000019e-05, 5.502699999999916e-05, 5.505600000000124e-05, 5.429099999999798e-05, 5.431900000000059e-05, 5.502699999999916e-05, 5.4722000000000104e-05, 5.512499999999962e-05, 5.4444000000000714e-05, 5.433300000000016e-05, 5.515300000000223e-05, 5.443100000000062e-05, 5.429200000000092e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.4277999999997883e-05, 5.455600000000074e-05, 5.4722000000000104e-05, 5.4263999999998314e-05, 5.458300000000041e-05, 5.5179999999998425e-05, 5.5180000000001894e-05, 5.480500000000152e-05, 5.465300000000173e-05, 5.4929999999998175e-05, 5.494500000000069e-05, 5.515300000000223e-05, 5.426400000000178e-05, 5.473600000000314e-05, 5.4902000000002504e-05, 5.49869999999994e-05, 5.476300000000281e-05, 5.4707999999997065e-05]</msg>
<status status="PASS" starttime="20201029 18:16:04.623" endtime="20201029 18:16:04.626"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.618" endtime="20201029 18:16:04.626"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:04.630" endtime="20201029 18:16:04.649"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.628" endtime="20201029 18:16:04.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.627" endtime="20201029 18:16:04.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.270" endtime="20201029 18:16:04.650"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.269" endtime="20201029 18:16:04.650"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.659" endtime="20201029 18:16:04.677"></status>
</kw>
<msg timestamp="20201029 18:16:04.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.658" endtime="20201029 18:16:04.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:04.678" endtime="20201029 18:16:04.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.681" endtime="20201029 18:16:04.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.655" endtime="20201029 18:16:04.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.653" endtime="20201029 18:16:04.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.690" endtime="20201029 18:16:04.976"></status>
</kw>
<msg timestamp="20201029 18:16:04.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.689" endtime="20201029 18:16:04.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:04.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022163528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022219389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:04.981" endtime="20201029 18:16:04.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:04.989" endtime="20201029 18:16:04.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.686" endtime="20201029 18:16:04.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.684" endtime="20201029 18:16:04.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:04.995" level="INFO">${RESULT} = [{'diff': 5.58610000000008e-05}, {'diff': 5.5763999999999814e-05}, {'diff': 5.568100000000187e-05}, {'diff': 5.5777999999999384e-05}, {'diff': 5.619500000000194e-05}, {'diff': 5.56670000000023e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:04.992" endtime="20201029 18:16:04.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.000" level="INFO">${ACCURACY} = {'diff': [5.58610000000008e-05, 5.5763999999999814e-05, 5.568100000000187e-05, 5.5777999999999384e-05, 5.619500000000194e-05, 5.56670000000023e-05, 5.561100000000055e-05, 5.565299999999926e-05, 5.5611...</msg>
<status status="PASS" starttime="20201029 18:16:04.996" endtime="20201029 18:16:05.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.004" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.003" endtime="20201029 18:16:05.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.007" level="INFO">VALUE: [5.58610000000008e-05, 5.5763999999999814e-05, 5.568100000000187e-05, 5.5777999999999384e-05, 5.619500000000194e-05, 5.56670000000023e-05, 5.561100000000055e-05, 5.565299999999926e-05, 5.561100000000055e-05, 5.54869999999999e-05, 5.562500000000012e-05, 5.533299999999769e-05, 5.588899999999994e-05, 5.611099999999758e-05, 5.5277999999998884e-05, 5.5929999999999175e-05, 5.6041999999999204e-05, 5.5486000000000424e-05, 5.5916000000003074e-05, 5.561100000000055e-05, 5.5472000000000854e-05, 5.5541999999998704e-05, 5.594499999999822e-05, 5.530499999999855e-05, 5.5443999999998245e-05, 5.559700000000098e-05, 5.6179999999999425e-05, 5.559699999999751e-05, 5.530499999999855e-05, 5.5513999999999564e-05, 5.5708000000001534e-05, 5.5527999999999134e-05, 5.562500000000012e-05, 5.6027999999999634e-05, 5.608400000000138e-05, 5.594499999999822e-05, 5.545900000000076e-05, 5.545900000000076e-05, 5.584700000000123e-05, 5.5443999999998245e-05, 5.5444000000001714e-05, 5.5929999999999175e-05, 5.6193999999998995e-05, 5.6207999999998565e-05, 5.6027999999999634e-05, 5.591699999999908e-05, 5.606999999999834e-05, 5.531899999999812e-05, 5.534700000000073e-05, 5.608299999999844e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.005" endtime="20201029 18:16:05.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.001" endtime="20201029 18:16:05.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.012" endtime="20201029 18:16:05.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.010" endtime="20201029 18:16:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.009" endtime="20201029 18:16:05.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.651" endtime="20201029 18:16:05.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:04.651" endtime="20201029 18:16:05.033"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.041" endtime="20201029 18:16:05.060"></status>
</kw>
<msg timestamp="20201029 18:16:05.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.040" endtime="20201029 18:16:05.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.062" endtime="20201029 18:16:05.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.064" endtime="20201029 18:16:05.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.037" endtime="20201029 18:16:05.067"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.035" endtime="20201029 18:16:05.067"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.078" endtime="20201029 18:16:05.366"></status>
</kw>
<msg timestamp="20201029 18:16:05.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.075" endtime="20201029 18:16:05.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023384736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023441069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.370" endtime="20201029 18:16:05.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.378" endtime="20201029 18:16:05.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.072" endtime="20201029 18:16:05.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.068" endtime="20201029 18:16:05.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.385" level="INFO">${RESULT} = [{'diff': 5.633299999999869e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.6679999999999925e-05}, {'diff': 5.636200000000077e-05}, {'diff': 5.627800000000335e-05}, {'diff': 5.6930000000000175e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:05.381" endtime="20201029 18:16:05.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.389" level="INFO">${ACCURACY} = {'diff': [5.633299999999869e-05, 5.6514000000000564e-05, 5.6679999999999925e-05, 5.636200000000077e-05, 5.627800000000335e-05, 5.6930000000000175e-05, 5.7042000000000204e-05, 5.6264000000000314e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:05.386" endtime="20201029 18:16:05.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.393" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.392" endtime="20201029 18:16:05.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.396" level="INFO">VALUE: [5.633299999999869e-05, 5.6514000000000564e-05, 5.6679999999999925e-05, 5.636200000000077e-05, 5.627800000000335e-05, 5.6930000000000175e-05, 5.7042000000000204e-05, 5.6264000000000314e-05, 5.7055999999999774e-05, 5.6277999999999884e-05, 5.6500000000000994e-05, 5.672300000000158e-05, 5.7042000000000204e-05, 5.712499999999815e-05, 5.6457999999998815e-05, 5.6443999999999245e-05, 5.6778000000000384e-05, 5.6971999999998885e-05, 5.6791999999999954e-05, 5.631899999999912e-05, 5.6679999999999925e-05, 5.661099999999808e-05, 5.6736000000001674e-05, 5.691700000000008e-05, 5.6541999999999704e-05, 5.711100000000205e-05, 5.694499999999922e-05, 5.636200000000077e-05, 5.666699999999983e-05, 5.693100000000312e-05, 5.6721999999998635e-05, 5.712500000000162e-05, 5.665300000000026e-05, 5.680500000000005e-05, 5.6986000000001924e-05, 5.688900000000094e-05, 5.6778000000000384e-05, 5.704100000000073e-05, 5.695899999999879e-05, 5.7042000000000204e-05, 5.6458000000002284e-05, 5.6264000000000314e-05, 5.6778000000000384e-05, 5.6500000000000994e-05, 5.687500000000137e-05, 5.661099999999808e-05, 5.6916000000000605e-05, 5.6679999999999925e-05, 5.6485999999997955e-05, 5.6778000000000384e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.394" endtime="20201029 18:16:05.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.390" endtime="20201029 18:16:05.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.401" endtime="20201029 18:16:05.422"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.400" endtime="20201029 18:16:05.423"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.399" endtime="20201029 18:16:05.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.034" endtime="20201029 18:16:05.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.033" endtime="20201029 18:16:05.425"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.443" endtime="20201029 18:16:05.464"></status>
</kw>
<msg timestamp="20201029 18:16:05.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.440" endtime="20201029 18:16:05.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.467" endtime="20201029 18:16:05.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.472" endtime="20201029 18:16:05.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.434" endtime="20201029 18:16:05.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.430" endtime="20201029 18:16:05.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.491" endtime="20201029 18:16:05.780"></status>
</kw>
<msg timestamp="20201029 18:16:05.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035551847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.488" endtime="20201029 18:16:05.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035551847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035609792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.784" endtime="20201029 18:16:05.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.792" endtime="20201029 18:16:05.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.483" endtime="20201029 18:16:05.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.479" endtime="20201029 18:16:05.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:05.799" level="INFO">${RESULT} = [{'diff': 5.794500000000369e-05}, {'diff': 5.7792000000000954e-05}, {'diff': 5.7333999999999163e-05}, {'diff': 5.7943999999997275e-05}, {'diff': 5.733299999999969e-05}, {'diff': 5.777699999999497e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:05.796" endtime="20201029 18:16:05.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:05.804" level="INFO">${ACCURACY} = {'diff': [5.794500000000369e-05, 5.7792000000000954e-05, 5.7333999999999163e-05, 5.7943999999997275e-05, 5.733299999999969e-05, 5.777699999999497e-05, 5.761099999999908e-05, 5.7778000000001384e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:05.800" endtime="20201029 18:16:05.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.809" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:05.808" endtime="20201029 18:16:05.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.811" level="INFO">VALUE: [5.794500000000369e-05, 5.7792000000000954e-05, 5.7333999999999163e-05, 5.7943999999997275e-05, 5.733299999999969e-05, 5.777699999999497e-05, 5.761099999999908e-05, 5.7778000000001384e-05, 5.7264000000001314e-05, 5.7236000000002174e-05, 5.813900000000566e-05, 5.736099999999883e-05, 5.8194999999997e-05, 5.7306000000000024e-05, 5.7806000000000524e-05, 5.734799999999873e-05, 5.743099999999668e-05, 5.811099999999958e-05, 5.754100000000123e-05, 5.734799999999873e-05, 5.730500000000055e-05, 5.733299999999969e-05, 5.7764000000001814e-05, 5.804100000000173e-05, 5.734699999999926e-05, 5.7958000000003784e-05, 5.7472000000002854e-05, 5.761099999999908e-05, 5.8070000000000344e-05, 5.784699999999976e-05, 5.7264000000001314e-05, 5.7638000000005685e-05, 5.8083999999999913e-05, 5.736100000000577e-05, 5.8151999999998816e-05, 5.7943999999997275e-05, 5.7486000000002424e-05, 5.8194000000004464e-05, 5.7764000000001814e-05, 5.763899999999822e-05, 5.7250000000001744e-05, 5.7944000000004214e-05, 5.819500000000394e-05, 5.791700000000455e-05, 5.765300000000473e-05, 5.744499999999625e-05, 5.734699999999926e-05, 5.783299999999325e-05, 5.736099999999883e-05, 5.784699999999976e-05]</msg>
<status status="PASS" starttime="20201029 18:16:05.810" endtime="20201029 18:16:05.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.805" endtime="20201029 18:16:05.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:05.816" endtime="20201029 18:16:05.835"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.815" endtime="20201029 18:16:05.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.813" endtime="20201029 18:16:05.836"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.427" endtime="20201029 18:16:05.837"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.426" endtime="20201029 18:16:05.837"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.845" endtime="20201029 18:16:05.863"></status>
</kw>
<msg timestamp="20201029 18:16:05.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.844" endtime="20201029 18:16:05.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:05.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:05.864" endtime="20201029 18:16:05.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.867" endtime="20201029 18:16:05.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.841" endtime="20201029 18:16:05.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.839" endtime="20201029 18:16:05.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:05.876" endtime="20201029 18:16:06.162"></status>
</kw>
<msg timestamp="20201029 18:16:06.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:05.874" endtime="20201029 18:16:06.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.166" endtime="20201029 18:16:06.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.175" endtime="20201029 18:16:06.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.872" endtime="20201029 18:16:06.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.870" endtime="20201029 18:16:06.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.181" level="INFO">${RESULT} = [{'diff': 5.9179999999998956e-05}, {'diff': 5.8444000000001245e-05}, {'diff': 5.911100000000058e-05}, {'diff': 5.8527999999998664e-05}, {'diff': 5.913900000000319e-05}, {'diff': 5.8541999999998234e-05...</msg>
<status status="PASS" starttime="20201029 18:16:06.178" endtime="20201029 18:16:06.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.185" level="INFO">${ACCURACY} = {'diff': [5.9179999999998956e-05, 5.8444000000001245e-05, 5.911100000000058e-05, 5.8527999999998664e-05, 5.913900000000319e-05, 5.8541999999998234e-05, 5.858300000000094e-05, 5.911100000000058e-05, 5....</msg>
<status status="PASS" starttime="20201029 18:16:06.182" endtime="20201029 18:16:06.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.190" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.189" endtime="20201029 18:16:06.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.192" level="INFO">VALUE: [5.9179999999998956e-05, 5.8444000000001245e-05, 5.911100000000058e-05, 5.8527999999998664e-05, 5.913900000000319e-05, 5.8541999999998234e-05, 5.858300000000094e-05, 5.911100000000058e-05, 5.8736000000000205e-05, 5.8499999999999525e-05, 5.8499999999999525e-05, 5.8957999999997845e-05, 5.838899999999897e-05, 5.8750000000003244e-05, 5.8249999999999275e-05, 5.852699999999919e-05, 5.8555999999997804e-05, 5.8986000000000455e-05, 5.9222000000001135e-05, 5.858300000000094e-05, 5.8444000000001245e-05, 5.8444000000001245e-05, 5.8222000000000135e-05, 5.898699999999993e-05, 5.8334000000000163e-05, 5.879099999999901e-05, 5.891699999999861e-05, 5.909699999999754e-05, 5.8805999999998054e-05, 5.8986000000000455e-05, 5.911100000000058e-05, 5.8527999999998664e-05, 5.913899999999972e-05, 5.8722000000000635e-05, 5.8764000000002814e-05, 5.8777999999998914e-05, 5.894499999999775e-05, 5.8584000000000414e-05, 5.8792000000001954e-05, 5.9112000000000053e-05, 5.884700000000076e-05, 5.9013999999999595e-05, 5.9112000000000053e-05, 5.8665999999998886e-05, 5.9027999999999164e-05, 5.8972000000000885e-05, 5.8986000000000455e-05, 5.884699999999729e-05, 5.8208000000000565e-05, 5.8443999999997776e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.191" endtime="20201029 18:16:06.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.186" endtime="20201029 18:16:06.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.197" endtime="20201029 18:16:06.216"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.196" endtime="20201029 18:16:06.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.194" endtime="20201029 18:16:06.217"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.838" endtime="20201029 18:16:06.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:05.837" endtime="20201029 18:16:06.218"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.226" endtime="20201029 18:16:06.245"></status>
</kw>
<msg timestamp="20201029 18:16:06.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.225" endtime="20201029 18:16:06.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.247" endtime="20201029 18:16:06.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.249" endtime="20201029 18:16:06.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.222" endtime="20201029 18:16:06.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.220" endtime="20201029 18:16:06.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.258" endtime="20201029 18:16:06.543"></status>
</kw>
<msg timestamp="20201029 18:16:06.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.257" endtime="20201029 18:16:06.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023075111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.547" endtime="20201029 18:16:06.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.558" endtime="20201029 18:16:06.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.254" endtime="20201029 18:16:06.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.252" endtime="20201029 18:16:06.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.564" level="INFO">${RESULT} = [{'diff': 5.9679999999999456e-05}, {'diff': 5.9985999999997985e-05}, {'diff': 5.938899999999997e-05}, {'diff': 5.9764000000000345e-05}, {'diff': 5.9263999999999845e-05}, {'diff': 5.969500000000197e-05...</msg>
<status status="PASS" starttime="20201029 18:16:06.561" endtime="20201029 18:16:06.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.568" level="INFO">${ACCURACY} = {'diff': [5.9679999999999456e-05, 5.9985999999997985e-05, 5.938899999999997e-05, 5.9764000000000345e-05, 5.9263999999999845e-05, 5.969500000000197e-05, 5.969500000000197e-05, 6.018099999999943e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:16:06.565" endtime="20201029 18:16:06.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.573" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.572" endtime="20201029 18:16:06.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.575" level="INFO">VALUE: [5.9679999999999456e-05, 5.9985999999997985e-05, 5.938899999999997e-05, 5.9764000000000345e-05, 5.9263999999999845e-05, 5.969500000000197e-05, 5.969500000000197e-05, 6.018099999999943e-05, 6.0028000000000165e-05, 5.981900000000262e-05, 5.9986000000001455e-05, 5.926300000000037e-05, 5.980500000000305e-05, 5.9693999999999026e-05, 5.966699999999936e-05, 5.994499999999875e-05, 5.941700000000258e-05, 6.0000000000001025e-05, 6.0166000000000386e-05, 5.965299999999979e-05, 5.994499999999875e-05, 5.940299999999954e-05, 5.93750000000004e-05, 5.9598000000000984e-05, 6.013900000000072e-05, 5.9679999999999456e-05, 6.011100000000158e-05, 5.959700000000151e-05, 6.012500000000115e-05, 5.966699999999936e-05, 5.991699999999961e-05, 5.961100000000108e-05, 5.994500000000222e-05, 6.009699999999854e-05, 5.943100000000215e-05, 5.986100000000133e-05, 5.9847999999997764e-05, 6.0028000000000165e-05, 5.930500000000255e-05, 6.002700000000069e-05, 6.015299999999682e-05, 5.933300000000169e-05, 5.961100000000108e-05, 6.015300000000029e-05, 5.983300000000219e-05, 5.983299999999872e-05, 5.9847999999997764e-05, 5.9833999999998194e-05, 5.9500000000000525e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.574" endtime="20201029 18:16:06.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.569" endtime="20201029 18:16:06.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.581" endtime="20201029 18:16:06.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.580" endtime="20201029 18:16:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.578" endtime="20201029 18:16:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.219" endtime="20201029 18:16:06.602"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.218" endtime="20201029 18:16:06.602"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.611" endtime="20201029 18:16:06.629"></status>
</kw>
<msg timestamp="20201029 18:16:06.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.610" endtime="20201029 18:16:06.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.630" endtime="20201029 18:16:06.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.633" endtime="20201029 18:16:06.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.607" endtime="20201029 18:16:06.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.605" endtime="20201029 18:16:06.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.642" endtime="20201029 18:16:06.927"></status>
</kw>
<msg timestamp="20201029 18:16:06.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.640" endtime="20201029 18:16:06.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022434278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022495264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:06.931" endtime="20201029 18:16:06.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.939" endtime="20201029 18:16:06.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.638" endtime="20201029 18:16:06.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.636" endtime="20201029 18:16:06.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:06.946" level="INFO">${RESULT} = [{'diff': 6.0986000000002455e-05}, {'diff': 6.086099999999886e-05}, {'diff': 6.097299999999889e-05}, {'diff': 6.0471999999998916e-05}, {'diff': 6.041700000000011e-05}, {'diff': 6.0735999999998735e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:06.943" endtime="20201029 18:16:06.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:06.951" level="INFO">${ACCURACY} = {'diff': [6.0986000000002455e-05, 6.086099999999886e-05, 6.097299999999889e-05, 6.0471999999998916e-05, 6.041700000000011e-05, 6.0735999999998735e-05, 6.081900000000015e-05, 6.0416000000000636e-05, 6....</msg>
<status status="PASS" starttime="20201029 18:16:06.947" endtime="20201029 18:16:06.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.956" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:06.955" endtime="20201029 18:16:06.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:06.958" level="INFO">VALUE: [6.0986000000002455e-05, 6.086099999999886e-05, 6.097299999999889e-05, 6.0471999999998916e-05, 6.041700000000011e-05, 6.0735999999998735e-05, 6.081900000000015e-05, 6.0416000000000636e-05, 6.116599999999792e-05, 6.113900000000172e-05, 6.0749999999998305e-05, 6.061100000000208e-05, 6.062500000000165e-05, 6.0278000000000415e-05, 6.086100000000233e-05, 6.118100000000043e-05, 6.1195e-05, 6.044499999999925e-05, 6.1014000000001595e-05, 6.087499999999843e-05, 6.1013999999998125e-05, 6.0333999999998694e-05, 6.113900000000172e-05, 6.059699999999904e-05, 6.086099999999886e-05, 6.033299999999922e-05, 6.0278000000000415e-05, 6.070899999999907e-05, 6.040300000000054e-05, 6.1013999999998125e-05, 6.06949999999995e-05, 6.0291999999999984e-05, 6.0471999999998916e-05, 6.023699999999771e-05, 6.083299999999972e-05, 6.0499999999998055e-05, 6.061100000000208e-05, 6.0278000000000415e-05, 6.0971999999999416e-05, 6.033300000000269e-05, 6.0957999999999846e-05, 6.0735999999998735e-05, 6.0778000000000915e-05, 6.094499999999975e-05, 6.111100000000258e-05, 6.043099999999968e-05, 6.0348000000001734e-05, 6.045900000000229e-05, 6.0833999999999194e-05, 6.086099999999886e-05]</msg>
<status status="PASS" starttime="20201029 18:16:06.957" endtime="20201029 18:16:06.959"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.952" endtime="20201029 18:16:06.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:06.963" endtime="20201029 18:16:06.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.962" endtime="20201029 18:16:06.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.960" endtime="20201029 18:16:06.983"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.603" endtime="20201029 18:16:06.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.603" endtime="20201029 18:16:06.984"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:06.992" endtime="20201029 18:16:07.010"></status>
</kw>
<msg timestamp="20201029 18:16:07.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:06.991" endtime="20201029 18:16:07.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.011" endtime="20201029 18:16:07.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.014" endtime="20201029 18:16:07.015"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.988" endtime="20201029 18:16:07.016"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.986" endtime="20201029 18:16:07.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.023" endtime="20201029 18:16:07.312"></status>
</kw>
<msg timestamp="20201029 18:16:07.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.021" endtime="20201029 18:16:07.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021928111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.316" endtime="20201029 18:16:07.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.324" endtime="20201029 18:16:07.326"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.019" endtime="20201029 18:16:07.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.017" endtime="20201029 18:16:07.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.331" level="INFO">${RESULT} = [{'diff': 6.151399999999863e-05}, {'diff': 6.159700000000004e-05}, {'diff': 6.18340000000002e-05}, {'diff': 6.165300000000179e-05}, {'diff': 6.180499999999811e-05}, {'diff': 6.172299999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:07.328" endtime="20201029 18:16:07.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.335" level="INFO">${ACCURACY} = {'diff': [6.151399999999863e-05, 6.159700000000004e-05, 6.18340000000002e-05, 6.165300000000179e-05, 6.180499999999811e-05, 6.172299999999964e-05, 6.143100000000068e-05, 6.187499999999943e-05, 6.15970...</msg>
<status status="PASS" starttime="20201029 18:16:07.332" endtime="20201029 18:16:07.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.339" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.338" endtime="20201029 18:16:07.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.342" level="INFO">VALUE: [6.151399999999863e-05, 6.159700000000004e-05, 6.18340000000002e-05, 6.165300000000179e-05, 6.180499999999811e-05, 6.172299999999964e-05, 6.143100000000068e-05, 6.187499999999943e-05, 6.159700000000004e-05, 6.133300000000022e-05, 6.129199999999752e-05, 6.219499999999753e-05, 6.142999999999774e-05, 6.158300000000047e-05, 6.168100000000093e-05, 6.133300000000022e-05, 6.129099999999804e-05, 6.17499999999993e-05, 6.187499999999943e-05, 6.223600000000024e-05, 6.134799999999926e-05, 6.127800000000141e-05, 6.202800000000216e-05, 6.20829999999975e-05, 6.211100000000011e-05, 6.145799999999688e-05, 6.148599999999949e-05, 6.161099999999961e-05, 6.219400000000153e-05, 6.222300000000014e-05, 6.168100000000093e-05, 6.154200000000123e-05, 6.15690000000009e-05, 6.144400000000078e-05, 6.169399999999756e-05, 6.19019999999991e-05, 6.213900000000272e-05, 6.212499999999968e-05, 6.147199999999992e-05, 6.190300000000204e-05, 6.191699999999814e-05, 6.194400000000128e-05, 6.197299999999989e-05, 6.147299999999939e-05, 6.134799999999926e-05, 6.130500000000108e-05, 6.202699999999922e-05, 6.127699999999847e-05, 6.19300000000017e-05, 6.145800000000035e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.341" endtime="20201029 18:16:07.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.336" endtime="20201029 18:16:07.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.347" endtime="20201029 18:16:07.366"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.346" endtime="20201029 18:16:07.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.344" endtime="20201029 18:16:07.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.985" endtime="20201029 18:16:07.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:06.984" endtime="20201029 18:16:07.368"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.376" endtime="20201029 18:16:07.395"></status>
</kw>
<msg timestamp="20201029 18:16:07.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.375" endtime="20201029 18:16:07.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.397" endtime="20201029 18:16:07.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.399" endtime="20201029 18:16:07.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.372" endtime="20201029 18:16:07.401"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.370" endtime="20201029 18:16:07.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.408" endtime="20201029 18:16:07.694"></status>
</kw>
<msg timestamp="20201029 18:16:07.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022983569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02304675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:07.407" endtime="20201029 18:16:07.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022983569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02304675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:07.698" endtime="20201029 18:16:07.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.706" endtime="20201029 18:16:07.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.404" endtime="20201029 18:16:07.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.403" endtime="20201029 18:16:07.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:07.712" level="INFO">${RESULT} = [{'diff': 6.318100000000243e-05}, {'diff': 6.265300000000279e-05}, {'diff': 6.230599999999809e-05}, {'diff': 6.277799999999945e-05}, {'diff': 6.270900000000107e-05}, {'diff': 6.229199999999852e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:07.709" endtime="20201029 18:16:07.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:07.717" level="INFO">${ACCURACY} = {'diff': [6.318100000000243e-05, 6.265300000000279e-05, 6.230599999999809e-05, 6.277799999999945e-05, 6.270900000000107e-05, 6.229199999999852e-05, 6.23889999999995e-05, 6.261100000000061e-05, 6.26659...</msg>
<status status="PASS" starttime="20201029 18:16:07.713" endtime="20201029 18:16:07.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.721" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:07.720" endtime="20201029 18:16:07.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.724" level="INFO">VALUE: [6.318100000000243e-05, 6.265300000000279e-05, 6.230599999999809e-05, 6.277799999999945e-05, 6.270900000000107e-05, 6.229199999999852e-05, 6.23889999999995e-05, 6.261100000000061e-05, 6.266599999999942e-05, 6.295800000000185e-05, 6.248600000000049e-05, 6.280500000000258e-05, 6.261100000000061e-05, 6.32080000000021e-05, 6.268000000000246e-05, 6.248600000000049e-05, 6.248600000000049e-05, 6.304199999999927e-05, 6.263899999999975e-05, 6.245900000000082e-05, 6.316699999999939e-05, 6.290299999999957e-05, 6.254099999999929e-05, 6.229099999999904e-05, 6.291599999999967e-05, 6.236100000000036e-05, 6.29439999999988e-05, 6.30829999999985e-05, 6.261100000000061e-05, 6.286099999999739e-05, 6.227799999999895e-05, 6.244500000000125e-05, 6.251399999999963e-05, 6.309800000000101e-05, 6.259800000000051e-05, 6.317999999999949e-05, 6.280500000000258e-05, 6.281900000000215e-05, 6.252699999999972e-05, 6.230600000000155e-05, 6.290299999999957e-05, 6.251399999999963e-05, 6.279199999999902e-05, 6.287500000000043e-05, 6.261100000000061e-05, 6.231999999999766e-05, 6.306899999999893e-05, 6.22629999999999e-05, 6.311100000000111e-05, 6.277799999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:16:07.722" endtime="20201029 18:16:07.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.717" endtime="20201029 18:16:07.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:07.729" endtime="20201029 18:16:07.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.728" endtime="20201029 18:16:07.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.727" endtime="20201029 18:16:07.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.369" endtime="20201029 18:16:07.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.368" endtime="20201029 18:16:07.750"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.759" endtime="20201029 18:16:07.776"></status>
</kw>
<msg timestamp="20201029 18:16:07.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.757" endtime="20201029 18:16:07.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:07.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:07.778" endtime="20201029 18:16:07.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.780" endtime="20201029 18:16:07.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.754" endtime="20201029 18:16:07.782"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.752" endtime="20201029 18:16:07.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:07.789" endtime="20201029 18:16:08.073"></status>
</kw>
<msg timestamp="20201029 18:16:08.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:07.788" endtime="20201029 18:16:08.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021874708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021938542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.078" endtime="20201029 18:16:08.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.086" endtime="20201029 18:16:08.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.785" endtime="20201029 18:16:08.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.783" endtime="20201029 18:16:08.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.092" level="INFO">${RESULT} = [{'diff': 6.383399999999873e-05}, {'diff': 6.329100000000004e-05}, {'diff': 6.393000000000024e-05}, {'diff': 6.351400000000063e-05}, {'diff': 6.352699999999725e-05}, {'diff': 6.330600000000255e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:08.089" endtime="20201029 18:16:08.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.097" level="INFO">${ACCURACY} = {'diff': [6.383399999999873e-05, 6.329100000000004e-05, 6.393000000000024e-05, 6.351400000000063e-05, 6.352699999999725e-05, 6.330600000000255e-05, 6.373599999999827e-05, 6.381899999999968e-05, 6.3957...</msg>
<status status="PASS" starttime="20201029 18:16:08.093" endtime="20201029 18:16:08.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.102" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.101" endtime="20201029 18:16:08.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.104" level="INFO">VALUE: [6.383399999999873e-05, 6.329100000000004e-05, 6.393000000000024e-05, 6.351400000000063e-05, 6.352699999999725e-05, 6.330600000000255e-05, 6.373599999999827e-05, 6.381899999999968e-05, 6.395799999999938e-05, 6.37500000000013e-05, 6.412500000000168e-05, 6.411100000000211e-05, 6.391700000000014e-05, 6.40829999999995e-05, 6.409800000000201e-05, 6.333399999999823e-05, 6.405499999999689e-05, 6.363900000000075e-05, 6.377799999999698e-05, 6.386100000000186e-05, 6.345799999999888e-05, 6.377799999999698e-05, 6.399999999999809e-05, 6.37639999999974e-05, 6.35280000000002e-05, 6.405599999999984e-05, 6.3889000000001e-05, 6.384800000000176e-05, 6.412500000000168e-05, 6.405500000000036e-05, 6.329100000000004e-05, 6.32500000000008e-05, 6.345799999999888e-05, 6.379200000000002e-05, 6.336100000000136e-05, 6.399999999999809e-05, 6.395900000000232e-05, 6.336100000000136e-05, 6.406899999999993e-05, 6.393099999999971e-05, 6.351400000000063e-05, 6.358300000000247e-05, 6.331900000000265e-05, 6.382000000000262e-05, 6.336100000000136e-05, 6.365300000000032e-05, 6.404200000000027e-05, 6.344499999999878e-05, 6.361100000000161e-05, 6.343100000000268e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.103" endtime="20201029 18:16:08.105"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.098" endtime="20201029 18:16:08.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.109" endtime="20201029 18:16:08.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.108" endtime="20201029 18:16:08.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.106" endtime="20201029 18:16:08.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.751" endtime="20201029 18:16:08.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:07.750" endtime="20201029 18:16:08.130"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.139" endtime="20201029 18:16:08.156"></status>
</kw>
<msg timestamp="20201029 18:16:08.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.137" endtime="20201029 18:16:08.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.157" endtime="20201029 18:16:08.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.160" endtime="20201029 18:16:08.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.134" endtime="20201029 18:16:08.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.132" endtime="20201029 18:16:08.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.169" endtime="20201029 18:16:08.454"></status>
</kw>
<msg timestamp="20201029 18:16:08.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.167" endtime="20201029 18:16:08.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.458" endtime="20201029 18:16:08.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.466" endtime="20201029 18:16:08.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.165" endtime="20201029 18:16:08.468"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.163" endtime="20201029 18:16:08.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.473" level="INFO">${RESULT} = [{'diff': 6.499999999999909e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.519500000000053e-05}, {'diff': 6.476400000000188e-05}, {'diff': 6.494500000000028e-05}, {'diff': 6.465300000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:08.469" endtime="20201029 18:16:08.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.477" level="INFO">${ACCURACY} = {'diff': [6.499999999999909e-05, 6.49440000000008e-05, 6.519500000000053e-05, 6.476400000000188e-05, 6.494500000000028e-05, 6.465300000000132e-05, 6.482000000000016e-05, 6.479099999999807e-05, 6.48750...</msg>
<status status="PASS" starttime="20201029 18:16:08.474" endtime="20201029 18:16:08.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.481" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.480" endtime="20201029 18:16:08.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.484" level="INFO">VALUE: [6.499999999999909e-05, 6.49440000000008e-05, 6.519500000000053e-05, 6.476400000000188e-05, 6.494500000000028e-05, 6.465300000000132e-05, 6.482000000000016e-05, 6.479099999999807e-05, 6.487500000000243e-05, 6.436100000000236e-05, 6.483300000000025e-05, 6.486099999999939e-05, 6.434699999999932e-05, 6.443100000000021e-05, 6.511099999999964e-05, 6.484699999999982e-05, 6.511099999999964e-05, 6.469500000000003e-05, 6.511099999999964e-05, 6.437500000000193e-05, 6.483399999999973e-05, 6.462500000000218e-05, 6.495800000000038e-05, 6.498600000000299e-05, 6.49440000000008e-05, 6.483299999999678e-05, 6.445799999999988e-05, 6.509700000000007e-05, 6.436099999999889e-05, 6.498599999999952e-05, 6.495899999999985e-05, 6.519500000000053e-05, 6.458399999999948e-05, 6.443100000000021e-05, 6.488899999999853e-05, 6.499999999999909e-05, 6.429100000000104e-05, 6.430500000000061e-05, 6.511100000000311e-05, 6.440300000000107e-05, 6.436100000000236e-05, 6.42500000000018e-05, 6.458399999999948e-05, 6.424999999999834e-05, 6.495899999999985e-05, 6.501399999999866e-05, 6.47500000000023e-05, 6.499999999999909e-05, 6.4276999999998e-05, 6.461100000000261e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.482" endtime="20201029 18:16:08.491"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.478" endtime="20201029 18:16:08.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.496" endtime="20201029 18:16:08.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.494" endtime="20201029 18:16:08.515"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.493" endtime="20201029 18:16:08.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.131" endtime="20201029 18:16:08.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.130" endtime="20201029 18:16:08.516"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.525" endtime="20201029 18:16:08.543"></status>
</kw>
<msg timestamp="20201029 18:16:08.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.523" endtime="20201029 18:16:08.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.545" endtime="20201029 18:16:08.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.547" endtime="20201029 18:16:08.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.521" endtime="20201029 18:16:08.550"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.519" endtime="20201029 18:16:08.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.556" endtime="20201029 18:16:08.842"></status>
</kw>
<msg timestamp="20201029 18:16:08.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.555" endtime="20201029 18:16:08.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023139236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.846" endtime="20201029 18:16:08.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.855" endtime="20201029 18:16:08.856"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.552" endtime="20201029 18:16:08.857"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.551" endtime="20201029 18:16:08.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:08.861" level="INFO">${RESULT} = [{'diff': 6.536099999999989e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.532000000000066e-05}, {'diff': 6.615299999999935e-05}, {'diff': 6.544399999999784e-05}, {'diff': 6.595900000000085e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:08.858" endtime="20201029 18:16:08.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:08.866" level="INFO">${ACCURACY} = {'diff': [6.536099999999989e-05, 6.52639999999989e-05, 6.532000000000066e-05, 6.615299999999935e-05, 6.544399999999784e-05, 6.595900000000085e-05, 6.601399999999966e-05, 6.605600000000184e-05, 6.52640...</msg>
<status status="PASS" starttime="20201029 18:16:08.862" endtime="20201029 18:16:08.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.870" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:08.869" endtime="20201029 18:16:08.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.873" level="INFO">VALUE: [6.536099999999989e-05, 6.52639999999989e-05, 6.532000000000066e-05, 6.615299999999935e-05, 6.544399999999784e-05, 6.595900000000085e-05, 6.601399999999966e-05, 6.605600000000184e-05, 6.526400000000238e-05, 6.580499999999864e-05, 6.524999999999934e-05, 6.552700000000272e-05, 6.618000000000249e-05, 6.579099999999907e-05, 6.577799999999898e-05, 6.556900000000143e-05, 6.611100000000064e-05, 6.601399999999966e-05, 6.563899999999928e-05, 6.527799999999848e-05, 6.586100000000039e-05, 6.595900000000085e-05, 6.581999999999769e-05, 6.586100000000039e-05, 6.551299999999968e-05, 6.62220000000012e-05, 6.559700000000057e-05, 6.527799999999848e-05, 6.527800000000195e-05, 6.611099999999717e-05, 6.536099999999989e-05, 6.541700000000164e-05, 6.577799999999898e-05, 6.580499999999864e-05, 6.594500000000128e-05, 6.612500000000021e-05, 6.598699999999999e-05, 6.568100000000146e-05, 6.620800000000163e-05, 6.592999999999877e-05, 6.561100000000014e-05, 6.611100000000064e-05, 6.534700000000032e-05, 6.598600000000052e-05, 6.600000000000009e-05, 6.60700000000014e-05, 6.577800000000245e-05, 6.597300000000042e-05, 6.597199999999748e-05, 6.566599999999895e-05]</msg>
<status status="PASS" starttime="20201029 18:16:08.871" endtime="20201029 18:16:08.874"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.866" endtime="20201029 18:16:08.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:08.878" endtime="20201029 18:16:08.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.877" endtime="20201029 18:16:08.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.876" endtime="20201029 18:16:08.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.517" endtime="20201029 18:16:08.899"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.517" endtime="20201029 18:16:08.899"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.908" endtime="20201029 18:16:08.926"></status>
</kw>
<msg timestamp="20201029 18:16:08.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.906" endtime="20201029 18:16:08.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:08.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:08.928" endtime="20201029 18:16:08.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.930" endtime="20201029 18:16:08.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.904" endtime="20201029 18:16:08.933"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.901" endtime="20201029 18:16:08.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:08.939" endtime="20201029 18:16:09.276"></status>
</kw>
<msg timestamp="20201029 18:16:09.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:08.938" endtime="20201029 18:16:09.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022327083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022393597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.281" endtime="20201029 18:16:09.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.289" endtime="20201029 18:16:09.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.935" endtime="20201029 18:16:09.291"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.934" endtime="20201029 18:16:09.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.296" level="INFO">${RESULT} = [{'diff': 6.651400000000016e-05}, {'diff': 6.694399999999934e-05}, {'diff': 6.676399999999694e-05}, {'diff': 6.661100000000114e-05}, {'diff': 6.632000000000166e-05}, {'diff': 6.668099999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:09.293" endtime="20201029 18:16:09.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.301" level="INFO">${ACCURACY} = {'diff': [6.651400000000016e-05, 6.694399999999934e-05, 6.676399999999694e-05, 6.661100000000114e-05, 6.632000000000166e-05, 6.668099999999899e-05, 6.720899999999863e-05, 6.661099999999767e-05, 6.6972...</msg>
<status status="PASS" starttime="20201029 18:16:09.297" endtime="20201029 18:16:09.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.306" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.305" endtime="20201029 18:16:09.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.308" level="INFO">VALUE: [6.651400000000016e-05, 6.694399999999934e-05, 6.676399999999694e-05, 6.661100000000114e-05, 6.632000000000166e-05, 6.668099999999899e-05, 6.720899999999863e-05, 6.661099999999767e-05, 6.697200000000195e-05, 6.62639999999999e-05, 6.669399999999909e-05, 6.687500000000096e-05, 6.667999999999952e-05, 6.692999999999977e-05, 6.62639999999999e-05, 6.698600000000152e-05, 6.666699999999942e-05, 6.652799999999973e-05, 6.70839999999985e-05, 6.695899999999838e-05, 6.711200000000112e-05, 6.62639999999999e-05, 6.700000000000109e-05, 6.641699999999917e-05, 6.694399999999934e-05, 6.623600000000077e-05, 6.636100000000089e-05, 6.636100000000089e-05, 6.655599999999887e-05, 6.700000000000109e-05, 6.669499999999856e-05, 6.715299999999688e-05, 6.70419999999998e-05, 6.65969999999981e-05, 6.712500000000121e-05, 6.686100000000139e-05, 6.697300000000142e-05, 6.652799999999973e-05, 6.676399999999694e-05, 6.67220000000017e-05, 6.663900000000028e-05, 6.679199999999955e-05, 6.625000000000034e-05, 6.698600000000152e-05, 6.687499999999749e-05, 6.65419999999993e-05, 6.716699999999992e-05, 6.65419999999993e-05, 6.683299999999878e-05, 6.659800000000105e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.307" endtime="20201029 18:16:09.309"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.302" endtime="20201029 18:16:09.310"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.314" endtime="20201029 18:16:09.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.312" endtime="20201029 18:16:09.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.311" endtime="20201029 18:16:09.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.900" endtime="20201029 18:16:09.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:08.899" endtime="20201029 18:16:09.334"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.343" endtime="20201029 18:16:09.362"></status>
</kw>
<msg timestamp="20201029 18:16:09.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.341" endtime="20201029 18:16:09.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.363" endtime="20201029 18:16:09.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.366" endtime="20201029 18:16:09.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.339" endtime="20201029 18:16:09.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.337" endtime="20201029 18:16:09.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.375" endtime="20201029 18:16:09.662"></status>
</kw>
<msg timestamp="20201029 18:16:09.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.374" endtime="20201029 18:16:09.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022513056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022580944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.666" endtime="20201029 18:16:09.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.674" endtime="20201029 18:16:09.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.371" endtime="20201029 18:16:09.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.369" endtime="20201029 18:16:09.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:09.681" level="INFO">${RESULT} = [{'diff': 6.788799999999859e-05}, {'diff': 6.799999999999862e-05}, {'diff': 6.731999999999919e-05}, {'diff': 6.77640000000014e-05}, {'diff': 6.744399999999984e-05}, {'diff': 6.745899999999888e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:09.678" endtime="20201029 18:16:09.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:09.685" level="INFO">${ACCURACY} = {'diff': [6.788799999999859e-05, 6.799999999999862e-05, 6.731999999999919e-05, 6.77640000000014e-05, 6.744399999999984e-05, 6.745899999999888e-05, 6.811099999999917e-05, 6.798600000000252e-05, 6.72780...</msg>
<status status="PASS" starttime="20201029 18:16:09.682" endtime="20201029 18:16:09.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.690" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:09.689" endtime="20201029 18:16:09.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.692" level="INFO">VALUE: [6.788799999999859e-05, 6.799999999999862e-05, 6.731999999999919e-05, 6.77640000000014e-05, 6.744399999999984e-05, 6.745899999999888e-05, 6.811099999999917e-05, 6.798600000000252e-05, 6.727800000000048e-05, 6.802799999999776e-05, 6.80420000000008e-05, 6.819500000000006e-05, 6.813900000000178e-05, 6.811099999999917e-05, 6.743099999999974e-05, 6.786099999999892e-05, 6.787499999999849e-05, 6.776299999999846e-05, 6.779100000000107e-05, 6.744399999999984e-05, 6.802800000000123e-05, 6.817999999999755e-05, 6.744399999999984e-05, 6.820800000000016e-05, 6.795899999999938e-05, 6.72640000000009e-05, 6.784799999999883e-05, 6.759799999999858e-05, 6.786099999999892e-05, 6.801300000000218e-05, 6.786100000000239e-05, 6.769400000000009e-05, 6.72640000000009e-05, 6.768099999999999e-05, 6.811099999999917e-05, 6.791700000000067e-05, 6.744399999999984e-05, 6.775000000000184e-05, 6.748599999999855e-05, 6.776399999999794e-05, 6.727800000000048e-05, 6.819399999999712e-05, 6.819500000000006e-05, 6.813899999999831e-05, 6.765300000000085e-05, 6.770799999999966e-05, 6.769499999999956e-05, 6.744499999999931e-05, 6.769499999999956e-05, 6.727800000000048e-05]</msg>
<status status="PASS" starttime="20201029 18:16:09.691" endtime="20201029 18:16:09.693"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.686" endtime="20201029 18:16:09.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:09.697" endtime="20201029 18:16:09.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.696" endtime="20201029 18:16:09.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.694" endtime="20201029 18:16:09.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.335" endtime="20201029 18:16:09.718"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.335" endtime="20201029 18:16:09.718"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.727" endtime="20201029 18:16:09.746"></status>
</kw>
<msg timestamp="20201029 18:16:09.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.725" endtime="20201029 18:16:09.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:09.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:09.747" endtime="20201029 18:16:09.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.750" endtime="20201029 18:16:09.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.723" endtime="20201029 18:16:09.752"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.720" endtime="20201029 18:16:09.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:09.759" endtime="20201029 18:16:10.044"></status>
</kw>
<msg timestamp="20201029 18:16:10.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:09.757" endtime="20201029 18:16:10.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023104417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023173611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.048" endtime="20201029 18:16:10.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.057" endtime="20201029 18:16:10.058"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.755" endtime="20201029 18:16:10.059"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.753" endtime="20201029 18:16:10.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.063" level="INFO">${RESULT} = [{'diff': 6.919400000000159e-05}, {'diff': 6.904199999999833e-05}, {'diff': 6.865299999999838e-05}, {'diff': 6.894399999999787e-05}, {'diff': 6.861099999999967e-05}, {'diff': 6.834699999999985e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:10.060" endtime="20201029 18:16:10.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.068" level="INFO">${ACCURACY} = {'diff': [6.919400000000159e-05, 6.904199999999833e-05, 6.865299999999838e-05, 6.894399999999787e-05, 6.861099999999967e-05, 6.834699999999985e-05, 6.87640000000024e-05, 6.912499999999974e-05, 6.87500...</msg>
<status status="PASS" starttime="20201029 18:16:10.064" endtime="20201029 18:16:10.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.072" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.071" endtime="20201029 18:16:10.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.075" level="INFO">VALUE: [6.919400000000159e-05, 6.904199999999833e-05, 6.865299999999838e-05, 6.894399999999787e-05, 6.861099999999967e-05, 6.834699999999985e-05, 6.87640000000024e-05, 6.912499999999974e-05, 6.875000000000284e-05, 6.89160000000022e-05, 6.881900000000121e-05, 6.844400000000084e-05, 6.848599999999955e-05, 6.913899999999931e-05, 6.874999999999937e-05, 6.872200000000023e-05, 6.841700000000117e-05, 6.883400000000026e-05, 6.827799999999801e-05, 6.891700000000167e-05, 6.913799999999984e-05, 6.876399999999894e-05, 6.870800000000066e-05, 6.873700000000274e-05, 6.887500000000296e-05, 6.849999999999912e-05, 6.822199999999973e-05, 6.918099999999802e-05, 6.883300000000078e-05, 6.844500000000031e-05, 6.902800000000223e-05, 6.858300000000053e-05, 6.834799999999933e-05, 6.901399999999919e-05, 6.859800000000305e-05, 6.901399999999919e-05, 6.833299999999681e-05, 6.876299999999946e-05, 6.915299999999888e-05, 6.87640000000024e-05, 6.890299999999863e-05, 6.902800000000223e-05, 6.861099999999967e-05, 6.851400000000216e-05, 6.894500000000081e-05, 6.84169999999977e-05, 6.88619999999994e-05, 6.8277000000002e-05, 6.843000000000127e-05, 6.916599999999898e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.073" endtime="20201029 18:16:10.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.068" endtime="20201029 18:16:10.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.081" endtime="20201029 18:16:10.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.079" endtime="20201029 18:16:10.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.078" endtime="20201029 18:16:10.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.719" endtime="20201029 18:16:10.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:09.718" endtime="20201029 18:16:10.101"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.110" endtime="20201029 18:16:10.129"></status>
</kw>
<msg timestamp="20201029 18:16:10.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.108" endtime="20201029 18:16:10.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.131" endtime="20201029 18:16:10.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.134" endtime="20201029 18:16:10.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.106" endtime="20201029 18:16:10.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.104" endtime="20201029 18:16:10.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.143" endtime="20201029 18:16:10.429"></status>
</kw>
<msg timestamp="20201029 18:16:10.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.141" endtime="20201029 18:16:10.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022419444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.433" endtime="20201029 18:16:10.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.441" endtime="20201029 18:16:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.138" endtime="20201029 18:16:10.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.137" endtime="20201029 18:16:10.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.448" level="INFO">${RESULT} = [{'diff': 6.987500000000049e-05}, {'diff': 6.97499999999969e-05}, {'diff': 6.951399999999969e-05}, {'diff': 6.945800000000141e-05}, {'diff': 7.020799999999869e-05}, {'diff': 6.95970000000011e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:10.444" endtime="20201029 18:16:10.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.453" level="INFO">${ACCURACY} = {'diff': [6.987500000000049e-05, 6.97499999999969e-05, 6.951399999999969e-05, 6.945800000000141e-05, 7.020799999999869e-05, 6.95970000000011e-05, 7.025000000000087e-05, 7.00970000000016e-05, 6.9611000...</msg>
<status status="PASS" starttime="20201029 18:16:10.449" endtime="20201029 18:16:10.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.457" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.456" endtime="20201029 18:16:10.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.460" level="INFO">VALUE: [6.987500000000049e-05, 6.97499999999969e-05, 6.951399999999969e-05, 6.945800000000141e-05, 7.020799999999869e-05, 6.95970000000011e-05, 7.025000000000087e-05, 7.00970000000016e-05, 6.961100000000067e-05, 7.001400000000019e-05, 7.00970000000016e-05, 6.932000000000119e-05, 6.931999999999772e-05, 6.966699999999895e-05, 6.945799999999794e-05, 6.981899999999874e-05, 6.99299999999993e-05, 6.977700000000003e-05, 7.00559999999989e-05, 6.965299999999938e-05, 6.930600000000162e-05, 6.962500000000024e-05, 6.982000000000169e-05, 6.950000000000012e-05, 6.97360000000008e-05, 6.927799999999901e-05, 6.944399999999837e-05, 6.975000000000037e-05, 6.931899999999824e-05, 6.987499999999702e-05, 6.927799999999901e-05, 6.929199999999858e-05, 6.976399999999994e-05, 6.933300000000128e-05, 7.00559999999989e-05, 6.932000000000119e-05, 6.968100000000199e-05, 6.957000000000144e-05, 6.998600000000105e-05, 6.926399999999944e-05, 6.991599999999973e-05, 6.969400000000209e-05, 6.965299999999938e-05, 6.997199999999801e-05, 6.961100000000067e-05, 6.930500000000214e-05, 6.966699999999895e-05, 6.979199999999908e-05, 6.98620000000004e-05, 6.97499999999969e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.458" endtime="20201029 18:16:10.461"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.454" endtime="20201029 18:16:10.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.465" endtime="20201029 18:16:10.484"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.463" endtime="20201029 18:16:10.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.462" endtime="20201029 18:16:10.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.102" endtime="20201029 18:16:10.485"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.102" endtime="20201029 18:16:10.486"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.494" endtime="20201029 18:16:10.513"></status>
</kw>
<msg timestamp="20201029 18:16:10.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.493" endtime="20201029 18:16:10.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.515" endtime="20201029 18:16:10.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.517" endtime="20201029 18:16:10.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.490" endtime="20201029 18:16:10.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.488" endtime="20201029 18:16:10.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.526" endtime="20201029 18:16:10.815"></status>
</kw>
<msg timestamp="20201029 18:16:10.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.525" endtime="20201029 18:16:10.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.820" endtime="20201029 18:16:10.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.828" endtime="20201029 18:16:10.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.522" endtime="20201029 18:16:10.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.520" endtime="20201029 18:16:10.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:10.834" level="INFO">${RESULT} = [{'diff': 7.083399999999879e-05}, {'diff': 7.062500000000124e-05}, {'diff': 7.080599999999965e-05}, {'diff': 7.094499999999934e-05}, {'diff': 7.034699999999838e-05}, {'diff': 7.105500000000042e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:10.831" endtime="20201029 18:16:10.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:10.839" level="INFO">${ACCURACY} = {'diff': [7.083399999999879e-05, 7.062500000000124e-05, 7.080599999999965e-05, 7.094499999999934e-05, 7.034699999999838e-05, 7.105500000000042e-05, 7.04299999999998e-05, 7.045800000000241e-05, 7.04590...</msg>
<status status="PASS" starttime="20201029 18:16:10.835" endtime="20201029 18:16:10.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.843" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:10.842" endtime="20201029 18:16:10.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.846" level="INFO">VALUE: [7.083399999999879e-05, 7.062500000000124e-05, 7.080599999999965e-05, 7.094499999999934e-05, 7.034699999999838e-05, 7.105500000000042e-05, 7.04299999999998e-05, 7.045800000000241e-05, 7.045900000000188e-05, 7.077800000000051e-05, 7.081999999999922e-05, 7.109699999999913e-05, 7.084699999999888e-05, 7.075000000000137e-05, 7.111200000000165e-05, 7.047200000000198e-05, 7.099999999999815e-05, 7.102800000000076e-05, 7.047199999999851e-05, 7.06109999999982e-05, 7.044399999999937e-05, 7.108299999999956e-05, 7.104200000000033e-05, 7.079200000000008e-05, 7.063900000000081e-05, 7.088800000000159e-05, 7.10840000000025e-05, 7.034799999999786e-05, 7.108299999999956e-05, 7.031999999999872e-05, 7.07910000000006e-05, 7.118100000000002e-05, 7.026399999999697e-05, 7.026400000000044e-05, 7.045899999999841e-05, 7.045900000000188e-05, 7.059800000000158e-05, 7.09170000000002e-05, 7.122199999999926e-05, 7.05970000000021e-05, 7.044399999999937e-05, 7.047199999999851e-05, 7.073599999999833e-05, 7.047200000000198e-05, 7.063900000000081e-05, 7.081999999999922e-05, 7.036100000000142e-05, 7.10559999999999e-05, 7.06109999999982e-05, 7.077699999999756e-05]</msg>
<status status="PASS" starttime="20201029 18:16:10.844" endtime="20201029 18:16:10.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.839" endtime="20201029 18:16:10.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:10.851" endtime="20201029 18:16:10.870"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.849" endtime="20201029 18:16:10.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.848" endtime="20201029 18:16:10.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.486" endtime="20201029 18:16:10.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.486" endtime="20201029 18:16:10.871"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.880" endtime="20201029 18:16:10.900"></status>
</kw>
<msg timestamp="20201029 18:16:10.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.879" endtime="20201029 18:16:10.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:10.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:10.901" endtime="20201029 18:16:10.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.904" endtime="20201029 18:16:10.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.876" endtime="20201029 18:16:10.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.874" endtime="20201029 18:16:10.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:10.913" endtime="20201029 18:16:11.198"></status>
</kw>
<msg timestamp="20201029 18:16:11.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:10.911" endtime="20201029 18:16:11.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023364306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023436486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.203" endtime="20201029 18:16:11.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.211" endtime="20201029 18:16:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.909" endtime="20201029 18:16:11.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.907" endtime="20201029 18:16:11.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.218" level="INFO">${RESULT} = [{'diff': 7.217999999999808e-05}, {'diff': 7.14439999999969e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.14170000000007e-05}, {'diff': 7.151400000000169e-05}, {'diff': 7.184699999999988e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:11.214" endtime="20201029 18:16:11.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.222" level="INFO">${ACCURACY} = {'diff': [7.217999999999808e-05, 7.14439999999969e-05, 7.21109999999997e-05, 7.14170000000007e-05, 7.151400000000169e-05, 7.184699999999988e-05, 7.181899999999727e-05, 7.180600000000065e-05, 7.1486999...</msg>
<status status="PASS" starttime="20201029 18:16:11.219" endtime="20201029 18:16:11.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.226" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.225" endtime="20201029 18:16:11.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.229" level="INFO">VALUE: [7.217999999999808e-05, 7.14439999999969e-05, 7.21109999999997e-05, 7.14170000000007e-05, 7.151400000000169e-05, 7.184699999999988e-05, 7.181899999999727e-05, 7.180600000000065e-05, 7.148699999999855e-05, 7.187499999999902e-05, 7.127699999999806e-05, 7.194400000000087e-05, 7.151400000000169e-05, 7.136099999999895e-05, 7.165300000000138e-05, 7.198599999999958e-05, 7.21109999999997e-05, 7.170899999999966e-05, 7.127800000000101e-05, 7.179200000000108e-05, 7.198699999999905e-05, 7.207000000000047e-05, 7.205500000000142e-05, 7.127700000000153e-05, 7.21109999999997e-05, 7.222200000000026e-05, 7.122199999999926e-05, 7.209700000000013e-05, 7.152800000000126e-05, 7.151400000000169e-05, 7.155499999999745e-05, 7.202800000000176e-05, 7.194400000000087e-05, 7.198699999999905e-05, 7.165299999999791e-05, 7.194400000000087e-05, 7.202799999999829e-05, 7.127800000000101e-05, 7.126399999999797e-05, 7.194500000000034e-05, 7.199999999999915e-05, 7.194500000000034e-05, 7.134799999999886e-05, 7.131999999999972e-05, 7.161100000000267e-05, 7.195800000000044e-05, 7.136100000000242e-05, 7.144400000000037e-05, 7.21109999999997e-05, 7.166600000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.227" endtime="20201029 18:16:11.230"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.223" endtime="20201029 18:16:11.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.235" endtime="20201029 18:16:11.254"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.233" endtime="20201029 18:16:11.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.232" endtime="20201029 18:16:11.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.872" endtime="20201029 18:16:11.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:10.872" endtime="20201029 18:16:11.255"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.264" endtime="20201029 18:16:11.283"></status>
</kw>
<msg timestamp="20201029 18:16:11.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.263" endtime="20201029 18:16:11.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.284" endtime="20201029 18:16:11.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.287" endtime="20201029 18:16:11.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.260" endtime="20201029 18:16:11.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.258" endtime="20201029 18:16:11.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.296" endtime="20201029 18:16:11.582"></status>
</kw>
<msg timestamp="20201029 18:16:11.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.294" endtime="20201029 18:16:11.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022493403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.586" endtime="20201029 18:16:11.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.594" endtime="20201029 18:16:11.596"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.292" endtime="20201029 18:16:11.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.290" endtime="20201029 18:16:11.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.601" level="INFO">${RESULT} = [{'diff': 7.286099999999698e-05}, {'diff': 7.252799999999879e-05}, {'diff': 7.318099999999855e-05}, {'diff': 7.315199999999994e-05}, {'diff': 7.252700000000278e-05}, {'diff': 7.281900000000174e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.598" endtime="20201029 18:16:11.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.606" level="INFO">${ACCURACY} = {'diff': [7.286099999999698e-05, 7.252799999999879e-05, 7.318099999999855e-05, 7.315199999999994e-05, 7.252700000000278e-05, 7.281900000000174e-05, 7.298599999999711e-05, 7.265299999999891e-05, 7.3125...</msg>
<status status="PASS" starttime="20201029 18:16:11.602" endtime="20201029 18:16:11.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.611" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.610" endtime="20201029 18:16:11.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.613" level="INFO">VALUE: [7.286099999999698e-05, 7.252799999999879e-05, 7.318099999999855e-05, 7.315199999999994e-05, 7.252700000000278e-05, 7.281900000000174e-05, 7.298599999999711e-05, 7.265299999999891e-05, 7.312500000000027e-05, 7.298600000000058e-05, 7.269399999999815e-05, 7.251399999999922e-05, 7.280600000000165e-05, 7.320900000000116e-05, 7.312500000000027e-05, 7.234700000000038e-05, 7.277699999999956e-05, 7.276399999999947e-05, 7.259700000000063e-05, 7.263900000000281e-05, 7.255499999999845e-05, 7.262499999999977e-05, 7.29309999999983e-05, 7.287500000000002e-05, 7.27499999999999e-05, 7.259800000000011e-05, 7.28049999999987e-05, 7.258399999999707e-05, 7.262499999999977e-05, 7.26110000000002e-05, 7.297200000000101e-05, 7.267999999999858e-05, 7.298600000000058e-05, 7.283299999999784e-05, 7.282000000000122e-05, 7.295899999999744e-05, 7.281900000000174e-05, 7.31110000000007e-05, 7.268100000000152e-05, 7.287500000000002e-05, 7.316699999999898e-05, 7.302799999999929e-05, 7.280500000000217e-05, 7.236099999999995e-05, 7.26110000000002e-05, 7.277800000000251e-05, 7.313899999999984e-05, 7.252799999999879e-05, 7.258300000000106e-05, 7.22499999999994e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.612" endtime="20201029 18:16:11.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.607" endtime="20201029 18:16:11.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:11.618" endtime="20201029 18:16:11.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.617" endtime="20201029 18:16:11.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.616" endtime="20201029 18:16:11.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.256" endtime="20201029 18:16:11.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.256" endtime="20201029 18:16:11.639"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.648" endtime="20201029 18:16:11.666"></status>
</kw>
<msg timestamp="20201029 18:16:11.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.646" endtime="20201029 18:16:11.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:11.667" endtime="20201029 18:16:11.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.670" endtime="20201029 18:16:11.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.644" endtime="20201029 18:16:11.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.641" endtime="20201029 18:16:11.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.679" endtime="20201029 18:16:11.966"></status>
</kw>
<msg timestamp="20201029 18:16:11.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.678" endtime="20201029 18:16:11.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022141986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:11.971" endtime="20201029 18:16:11.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:11.979" endtime="20201029 18:16:11.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.675" endtime="20201029 18:16:11.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.674" endtime="20201029 18:16:11.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:11.986" level="INFO">${RESULT} = [{'diff': 7.399999999999768e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.327799999999954e-05}, {'diff': 7.419499999999912e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.404100000000038e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:11.982" endtime="20201029 18:16:11.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:11.990" level="INFO">${ACCURACY} = {'diff': [7.399999999999768e-05, 7.413900000000084e-05, 7.327799999999954e-05, 7.419499999999912e-05, 7.412500000000127e-05, 7.404100000000038e-05, 7.386100000000145e-05, 7.366600000000001e-05, 7.3847...</msg>
<status status="PASS" starttime="20201029 18:16:11.987" endtime="20201029 18:16:11.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.994" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:11.993" endtime="20201029 18:16:11.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:11.997" level="INFO">VALUE: [7.399999999999768e-05, 7.413900000000084e-05, 7.327799999999954e-05, 7.419499999999912e-05, 7.412500000000127e-05, 7.404100000000038e-05, 7.386100000000145e-05, 7.366600000000001e-05, 7.384700000000188e-05, 7.397199999999854e-05, 7.401400000000072e-05, 7.384699999999841e-05, 7.363900000000034e-05, 7.37370000000008e-05, 7.331999999999825e-05, 7.327799999999954e-05, 7.420900000000216e-05, 7.326399999999997e-05, 7.386200000000093e-05, 7.420799999999922e-05, 7.38049999999997e-05, 7.330599999999868e-05, 7.386099999999798e-05, 7.348600000000108e-05, 7.37500000000009e-05, 7.395900000000191e-05, 7.319500000000159e-05, 7.35560000000024e-05, 7.379199999999961e-05, 7.397300000000148e-05, 7.401400000000072e-05, 7.369400000000262e-05, 7.418000000000008e-05, 7.41249999999978e-05, 7.366699999999948e-05, 7.320800000000169e-05, 7.332000000000172e-05, 7.391699999999973e-05, 7.376400000000047e-05, 7.326399999999997e-05, 7.400000000000115e-05, 7.32500000000004e-05, 7.352699999999684e-05, 7.366600000000001e-05, 7.358300000000206e-05, 7.36110000000012e-05, 7.36110000000012e-05, 7.329199999999911e-05, 7.412500000000127e-05, 7.354199999999936e-05]</msg>
<status status="PASS" starttime="20201029 18:16:11.995" endtime="20201029 18:16:11.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.991" endtime="20201029 18:16:11.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.002" endtime="20201029 18:16:12.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.000" endtime="20201029 18:16:12.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.999" endtime="20201029 18:16:12.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.640" endtime="20201029 18:16:12.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:11.639" endtime="20201029 18:16:12.023"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.031" endtime="20201029 18:16:12.051"></status>
</kw>
<msg timestamp="20201029 18:16:12.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.030" endtime="20201029 18:16:12.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.053" endtime="20201029 18:16:12.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.055" endtime="20201029 18:16:12.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.027" endtime="20201029 18:16:12.057"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.025" endtime="20201029 18:16:12.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.064" endtime="20201029 18:16:12.350"></status>
</kw>
<msg timestamp="20201029 18:16:12.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.063" endtime="20201029 18:16:12.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023097861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023172542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.354" endtime="20201029 18:16:12.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.362" endtime="20201029 18:16:12.364"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.060" endtime="20201029 18:16:12.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.058" endtime="20201029 18:16:12.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.369" level="INFO">${RESULT} = [{'diff': 7.468100000000005e-05}, {'diff': 7.44309999999998e-05}, {'diff': 7.433399999999882e-05}, {'diff': 7.461199999999821e-05}, {'diff': 7.461099999999873e-05}, {'diff': 7.49440000000004e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:12.366" endtime="20201029 18:16:12.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.373" level="INFO">${ACCURACY} = {'diff': [7.468100000000005e-05, 7.44309999999998e-05, 7.433399999999882e-05, 7.461199999999821e-05, 7.461099999999873e-05, 7.49440000000004e-05, 7.492999999999736e-05, 7.44439999999999e-05, 7.4721999...</msg>
<status status="PASS" starttime="20201029 18:16:12.370" endtime="20201029 18:16:12.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.378" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.377" endtime="20201029 18:16:12.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.380" level="INFO">VALUE: [7.468100000000005e-05, 7.44309999999998e-05, 7.433399999999882e-05, 7.461199999999821e-05, 7.461099999999873e-05, 7.49440000000004e-05, 7.492999999999736e-05, 7.44439999999999e-05, 7.472199999999929e-05, 7.516699999999751e-05, 7.501400000000172e-05, 7.451399999999775e-05, 7.44309999999998e-05, 7.518100000000055e-05, 7.437500000000152e-05, 7.44439999999999e-05, 7.519399999999718e-05, 7.495799999999997e-05, 7.46110000000022e-05, 7.520800000000022e-05, 7.443000000000033e-05, 7.455599999999993e-05, 7.429200000000011e-05, 7.448599999999861e-05, 7.427800000000054e-05, 7.469400000000015e-05, 7.49440000000004e-05, 7.44439999999999e-05, 7.519400000000065e-05, 7.43050000000002e-05, 7.468000000000058e-05, 7.511099999999923e-05, 7.438900000000109e-05, 7.486099999999898e-05, 7.448599999999861e-05, 7.461099999999873e-05, 7.42639999999975e-05, 7.469400000000015e-05, 7.458400000000254e-05, 7.486099999999898e-05, 7.469400000000015e-05, 7.491600000000126e-05, 7.477799999999757e-05, 7.495800000000344e-05, 7.459699999999916e-05, 7.472199999999929e-05, 7.501400000000172e-05, 7.498699999999858e-05, 7.488899999999812e-05, 7.44309999999998e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.379" endtime="20201029 18:16:12.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.374" endtime="20201029 18:16:12.383"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.387" endtime="20201029 18:16:12.406"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.385" endtime="20201029 18:16:12.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.384" endtime="20201029 18:16:12.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.024" endtime="20201029 18:16:12.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.023" endtime="20201029 18:16:12.408"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.418" endtime="20201029 18:16:12.436"></status>
</kw>
<msg timestamp="20201029 18:16:12.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.416" endtime="20201029 18:16:12.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.438" endtime="20201029 18:16:12.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.440" endtime="20201029 18:16:12.442"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.413" endtime="20201029 18:16:12.443"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.411" endtime="20201029 18:16:12.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.450" endtime="20201029 18:16:12.736"></status>
</kw>
<msg timestamp="20201029 18:16:12.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.449" endtime="20201029 18:16:12.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023293083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023368944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:12.741" endtime="20201029 18:16:12.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.749" endtime="20201029 18:16:12.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.446" endtime="20201029 18:16:12.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.444" endtime="20201029 18:16:12.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:12.756" level="INFO">${RESULT} = [{'diff': 7.586099999999998e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.59029999999987e-05}, {'diff': 7.547200000000004e-05}, {'diff': 7.5457999999997e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:12.752" endtime="20201029 18:16:12.756"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:12.761" level="INFO">${ACCURACY} = {'diff': [7.586099999999998e-05, 7.611100000000023e-05, 7.561099999999973e-05, 7.59029999999987e-05, 7.547200000000004e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.532000000000025e-05, 7.6013999...</msg>
<status status="PASS" starttime="20201029 18:16:12.757" endtime="20201029 18:16:12.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.765" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:12.764" endtime="20201029 18:16:12.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.768" level="INFO">VALUE: [7.586099999999998e-05, 7.611100000000023e-05, 7.561099999999973e-05, 7.59029999999987e-05, 7.547200000000004e-05, 7.5457999999997e-05, 7.545800000000047e-05, 7.532000000000025e-05, 7.601399999999925e-05, 7.586099999999998e-05, 7.613900000000284e-05, 7.559800000000311e-05, 7.58050000000017e-05, 7.6070000000001e-05, 7.559700000000016e-05, 7.598600000000011e-05, 7.568000000000158e-05, 7.522199999999979e-05, 7.556899999999755e-05, 7.568100000000105e-05, 7.609700000000066e-05, 7.61249999999998e-05, 7.558400000000007e-05, 7.587499999999955e-05, 7.527700000000206e-05, 7.57500000000029e-05, 7.58890000000026e-05, 7.58189999999978e-05, 7.559700000000016e-05, 7.604200000000186e-05, 7.618100000000155e-05, 7.561099999999973e-05, 7.561099999999973e-05, 7.590199999999922e-05, 7.599999999999968e-05, 7.527700000000206e-05, 7.529099999999816e-05, 7.592999999999836e-05, 7.580499999999823e-05, 7.559700000000016e-05, 7.533300000000034e-05, 7.615299999999894e-05, 7.609700000000066e-05, 7.613899999999937e-05, 7.543099999999733e-05, 7.566700000000148e-05, 7.577800000000204e-05, 7.559799999999964e-05, 7.570800000000072e-05, 7.590300000000216e-05]</msg>
<status status="PASS" starttime="20201029 18:16:12.766" endtime="20201029 18:16:12.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.761" endtime="20201029 18:16:12.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:12.773" endtime="20201029 18:16:12.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.771" endtime="20201029 18:16:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.770" endtime="20201029 18:16:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.409" endtime="20201029 18:16:12.793"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.408" endtime="20201029 18:16:12.794"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.802" endtime="20201029 18:16:12.821"></status>
</kw>
<msg timestamp="20201029 18:16:12.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.801" endtime="20201029 18:16:12.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:12.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:12.823" endtime="20201029 18:16:12.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.825" endtime="20201029 18:16:12.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.798" endtime="20201029 18:16:12.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.796" endtime="20201029 18:16:12.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:12.834" endtime="20201029 18:16:13.121"></status>
</kw>
<msg timestamp="20201029 18:16:13.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:12.833" endtime="20201029 18:16:13.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022276097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:13.126" endtime="20201029 18:16:13.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.134" endtime="20201029 18:16:13.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.830" endtime="20201029 18:16:13.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.828" endtime="20201029 18:16:13.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.140" level="INFO">${RESULT} = [{'diff': 7.665299999999944e-05}, {'diff': 7.711100000000123e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.695900000000144e-05}, {'diff': 7.711099999999776e-05}, {'diff': 7.645800000000147e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:13.137" endtime="20201029 18:16:13.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.145" level="INFO">${ACCURACY} = {'diff': [7.665299999999944e-05, 7.711100000000123e-05, 7.711099999999776e-05, 7.695900000000144e-05, 7.711099999999776e-05, 7.645800000000147e-05, 7.631900000000177e-05, 7.63189999999983e-05, 7.70419...</msg>
<status status="PASS" starttime="20201029 18:16:13.141" endtime="20201029 18:16:13.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.149" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.148" endtime="20201029 18:16:13.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.152" level="INFO">VALUE: [7.665299999999944e-05, 7.711100000000123e-05, 7.711099999999776e-05, 7.695900000000144e-05, 7.711099999999776e-05, 7.645800000000147e-05, 7.631900000000177e-05, 7.63189999999983e-05, 7.704199999999939e-05, 7.647200000000104e-05, 7.669400000000215e-05, 7.661099999999726e-05, 7.701400000000025e-05, 7.659800000000064e-05, 7.701400000000025e-05, 7.629100000000263e-05, 7.62769999999996e-05, 7.675000000000043e-05, 7.702799999999982e-05, 7.629199999999864e-05, 7.6764e-05, 7.683299999999837e-05, 7.62639999999995e-05, 7.70969999999982e-05, 7.679199999999914e-05, 7.670900000000119e-05, 7.6764e-05, 7.633400000000082e-05, 7.686100000000098e-05, 7.630599999999821e-05, 7.627800000000254e-05, 7.661100000000073e-05, 7.669500000000162e-05, 7.65830000000016e-05, 7.686100000000098e-05, 7.675000000000043e-05, 7.701400000000025e-05, 7.677799999999957e-05, 7.668099999999858e-05, 7.645800000000147e-05, 7.717999999999961e-05, 7.711100000000123e-05, 7.659700000000116e-05, 7.640300000000266e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.687500000000055e-05, 7.629199999999864e-05, 7.659800000000064e-05, 7.632000000000125e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.150" endtime="20201029 18:16:13.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.145" endtime="20201029 18:16:13.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.157" endtime="20201029 18:16:13.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.155" endtime="20201029 18:16:13.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.154" endtime="20201029 18:16:13.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.794" endtime="20201029 18:16:13.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:12.794" endtime="20201029 18:16:13.177"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.186" endtime="20201029 18:16:13.206"></status>
</kw>
<msg timestamp="20201029 18:16:13.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.185" endtime="20201029 18:16:13.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.208" endtime="20201029 18:16:13.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.210" endtime="20201029 18:16:13.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.182" endtime="20201029 18:16:13.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.180" endtime="20201029 18:16:13.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.219" endtime="20201029 18:16:13.505"></status>
</kw>
<msg timestamp="20201029 18:16:13.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.218" endtime="20201029 18:16:13.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023110458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.509" endtime="20201029 18:16:13.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.518" endtime="20201029 18:16:13.519"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.215" endtime="20201029 18:16:13.520"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.213" endtime="20201029 18:16:13.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.524" level="INFO">${RESULT} = [{'diff': 7.784799999999842e-05}, {'diff': 7.811100000000223e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.788900000000112e-05}, {'diff': 7.773600000000186e-05}, {'diff': 7.78189999999998e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:13.521" endtime="20201029 18:16:13.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.529" level="INFO">${ACCURACY} = {'diff': [7.784799999999842e-05, 7.811100000000223e-05, 7.787500000000155e-05, 7.788900000000112e-05, 7.773600000000186e-05, 7.78189999999998e-05, 7.747199999999857e-05, 7.808299999999962e-05, 7.80559...</msg>
<status status="PASS" starttime="20201029 18:16:13.525" endtime="20201029 18:16:13.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.533" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.532" endtime="20201029 18:16:13.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.536" level="INFO">VALUE: [7.784799999999842e-05, 7.811100000000223e-05, 7.787500000000155e-05, 7.788900000000112e-05, 7.773600000000186e-05, 7.78189999999998e-05, 7.747199999999857e-05, 7.808299999999962e-05, 7.805599999999996e-05, 7.777800000000057e-05, 7.819400000000018e-05, 7.72640000000005e-05, 7.7764000000001e-05, 7.784700000000241e-05, 7.741699999999976e-05, 7.812499999999833e-05, 7.805599999999996e-05, 7.761100000000173e-05, 7.745899999999847e-05, 7.729200000000311e-05, 7.74449999999989e-05, 7.758400000000207e-05, 7.76250000000013e-05, 7.791700000000026e-05, 7.816600000000104e-05, 7.738900000000062e-05, 7.802700000000135e-05, 7.769399999999968e-05, 7.811100000000223e-05, 7.755599999999946e-05, 7.816699999999704e-05, 7.743099999999933e-05, 7.76250000000013e-05, 7.811199999999824e-05, 7.822199999999932e-05, 7.747300000000151e-05, 7.786099999999851e-05, 7.794399999999993e-05, 7.804200000000039e-05, 7.773600000000186e-05, 7.805599999999996e-05, 7.777800000000057e-05, 7.819499999999965e-05, 7.806999999999953e-05, 7.823600000000236e-05, 7.752800000000032e-05, 7.751300000000128e-05, 7.823599999999889e-05, 7.763900000000087e-05, 7.822200000000279e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.534" endtime="20201029 18:16:13.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.529" endtime="20201029 18:16:13.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.548" endtime="20201029 18:16:13.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.547" endtime="20201029 18:16:13.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.546" endtime="20201029 18:16:13.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.178" endtime="20201029 18:16:13.569"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.178" endtime="20201029 18:16:13.569"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.578" endtime="20201029 18:16:13.597"></status>
</kw>
<msg timestamp="20201029 18:16:13.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.576" endtime="20201029 18:16:13.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.599" endtime="20201029 18:16:13.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.601" endtime="20201029 18:16:13.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.574" endtime="20201029 18:16:13.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.572" endtime="20201029 18:16:13.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.611" endtime="20201029 18:16:13.899"></status>
</kw>
<msg timestamp="20201029 18:16:13.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:13.609" endtime="20201029 18:16:13.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02227425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:13.903" endtime="20201029 18:16:13.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.911" endtime="20201029 18:16:13.913"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.606" endtime="20201029 18:16:13.914"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.605" endtime="20201029 18:16:13.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:13.918" level="INFO">${RESULT} = [{'diff': 7.919399999999771e-05}, {'diff': 7.882000000000028e-05}, {'diff': 7.82640000000015e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.845899999999947e-05}, {'diff': 7.893100000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:13.915" endtime="20201029 18:16:13.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:13.924" level="INFO">${ACCURACY} = {'diff': [7.919399999999771e-05, 7.882000000000028e-05, 7.82640000000015e-05, 7.827800000000107e-05, 7.845899999999947e-05, 7.893100000000083e-05, 7.882000000000028e-05, 7.887499999999908e-05, 7.91249...</msg>
<status status="PASS" starttime="20201029 18:16:13.919" endtime="20201029 18:16:13.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.928" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:13.927" endtime="20201029 18:16:13.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.931" level="INFO">VALUE: [7.919399999999771e-05, 7.882000000000028e-05, 7.82640000000015e-05, 7.827800000000107e-05, 7.845899999999947e-05, 7.893100000000083e-05, 7.882000000000028e-05, 7.887499999999908e-05, 7.912499999999933e-05, 7.900000000000268e-05, 7.822199999999932e-05, 7.883300000000037e-05, 7.86389999999984e-05, 7.841700000000076e-05, 7.847199999999957e-05, 7.865300000000144e-05, 7.883300000000037e-05, 7.82640000000015e-05, 7.826399999999803e-05, 7.82779999999976e-05, 7.874999999999896e-05, 7.915200000000247e-05, 7.844400000000043e-05, 7.841600000000129e-05, 7.862499999999883e-05, 7.90970000000002e-05, 7.884799999999942e-05, 7.852800000000132e-05, 7.874999999999896e-05, 7.876399999999853e-05, 7.827699999999813e-05, 7.880500000000124e-05, 7.898599999999964e-05, 7.8458e-05, 7.911099999999976e-05, 7.848600000000261e-05, 7.836099999999901e-05, 7.833299999999987e-05, 7.83190000000003e-05, 7.845899999999947e-05, 7.87770000000021e-05, 7.841700000000076e-05, 7.826399999999803e-05, 7.82770000000016e-05, 7.911099999999976e-05, 7.886099999999951e-05, 7.912499999999933e-05, 7.851400000000175e-05, 7.870800000000025e-05, 7.847199999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:16:13.929" endtime="20201029 18:16:13.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.924" endtime="20201029 18:16:13.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:13.936" endtime="20201029 18:16:13.955"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.934" endtime="20201029 18:16:13.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.933" endtime="20201029 18:16:13.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.570" endtime="20201029 18:16:13.957"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.569" endtime="20201029 18:16:13.957"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.966" endtime="20201029 18:16:13.985"></status>
</kw>
<msg timestamp="20201029 18:16:13.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.964" endtime="20201029 18:16:13.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:13.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:13.986" endtime="20201029 18:16:13.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.989" endtime="20201029 18:16:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.962" endtime="20201029 18:16:13.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.959" endtime="20201029 18:16:13.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:13.999" endtime="20201029 18:16:14.304"></status>
</kw>
<msg timestamp="20201029 18:16:14.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:13.997" endtime="20201029 18:16:14.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022561069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022640597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.308" endtime="20201029 18:16:14.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.317" endtime="20201029 18:16:14.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.994" endtime="20201029 18:16:14.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.992" endtime="20201029 18:16:14.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.324" level="INFO">${RESULT} = [{'diff': 7.952799999999885e-05}, {'diff': 7.968100000000158e-05}, {'diff': 8.016699999999904e-05}, {'diff': 7.934799999999992e-05}, {'diff': 7.938899999999915e-05}, {'diff': 7.995900000000097e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:14.320" endtime="20201029 18:16:14.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.328" level="INFO">${ACCURACY} = {'diff': [7.952799999999885e-05, 7.968100000000158e-05, 8.016699999999904e-05, 7.934799999999992e-05, 7.938899999999915e-05, 7.995900000000097e-05, 7.981999999999781e-05, 7.951400000000275e-05, 7.9540...</msg>
<status status="PASS" starttime="20201029 18:16:14.325" endtime="20201029 18:16:14.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.333" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.332" endtime="20201029 18:16:14.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.335" level="INFO">VALUE: [7.952799999999885e-05, 7.968100000000158e-05, 8.016699999999904e-05, 7.934799999999992e-05, 7.938899999999915e-05, 7.995900000000097e-05, 7.981999999999781e-05, 7.951400000000275e-05, 7.954099999999895e-05, 8.011100000000076e-05, 7.983300000000138e-05, 7.998600000000064e-05, 7.926399999999903e-05, 7.997200000000107e-05, 7.968099999999811e-05, 8.01389999999999e-05, 7.92640000000025e-05, 7.922200000000032e-05, 7.945900000000047e-05, 7.92779999999986e-05, 7.991600000000279e-05, 8.016599999999957e-05, 7.981899999999834e-05, 7.9458000000001e-05, 7.929200000000164e-05, 7.944400000000143e-05, 7.97779999999991e-05, 7.919400000000118e-05, 8.002799999999935e-05, 7.979199999999867e-05, 8.011100000000076e-05, 8.000000000000021e-05, 7.938899999999915e-05, 7.951399999999928e-05, 7.974999999999996e-05, 7.943000000000186e-05, 7.934700000000044e-05, 7.99580000000015e-05, 7.98329999999979e-05, 7.934799999999992e-05, 8.011200000000024e-05, 8.015299999999947e-05, 7.944399999999796e-05, 7.945799999999753e-05, 7.96389999999994e-05, 7.993000000000236e-05, 7.979199999999867e-05, 7.99719999999976e-05, 7.97779999999991e-05, 7.991700000000226e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.334" endtime="20201029 18:16:14.336"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.329" endtime="20201029 18:16:14.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.340" endtime="20201029 18:16:14.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.339" endtime="20201029 18:16:14.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.338" endtime="20201029 18:16:14.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.958" endtime="20201029 18:16:14.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:13.957" endtime="20201029 18:16:14.361"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.370" endtime="20201029 18:16:14.391"></status>
</kw>
<msg timestamp="20201029 18:16:14.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.369" endtime="20201029 18:16:14.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.393" endtime="20201029 18:16:14.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.395" endtime="20201029 18:16:14.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.366" endtime="20201029 18:16:14.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.364" endtime="20201029 18:16:14.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.405" endtime="20201029 18:16:14.691"></status>
</kw>
<msg timestamp="20201029 18:16:14.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.403" endtime="20201029 18:16:14.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023461514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023541833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.695" endtime="20201029 18:16:14.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.704" endtime="20201029 18:16:14.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.401" endtime="20201029 18:16:14.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.399" endtime="20201029 18:16:14.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:14.711" level="INFO">${RESULT} = [{'diff': 8.03190000000023e-05}, {'diff': 8.092999999999989e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.030600000000221e-05}, {'diff': 8.051400000000028e-05}, {'diff': 8.059699999999823e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:14.708" endtime="20201029 18:16:14.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:14.716" level="INFO">${ACCURACY} = {'diff': [8.03190000000023e-05, 8.092999999999989e-05, 8.109699999999873e-05, 8.030600000000221e-05, 8.051400000000028e-05, 8.059699999999823e-05, 8.09589999999985e-05, 8.074999999999749e-05, 8.112500...</msg>
<status status="PASS" starttime="20201029 18:16:14.713" endtime="20201029 18:16:14.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.721" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:14.720" endtime="20201029 18:16:14.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.724" level="INFO">VALUE: [8.03190000000023e-05, 8.092999999999989e-05, 8.109699999999873e-05, 8.030600000000221e-05, 8.051400000000028e-05, 8.059699999999823e-05, 8.09589999999985e-05, 8.074999999999749e-05, 8.112500000000133e-05, 8.1152999999997e-05, 8.120799999999928e-05, 8.094399999999946e-05, 8.025000000000046e-05, 8.1152000000001e-05, 8.080599999999924e-05, 8.094399999999946e-05, 8.043099999999886e-05, 8.056899999999909e-05, 8.083400000000185e-05, 8.083400000000185e-05, 8.123600000000189e-05, 8.038900000000015e-05, 8.116700000000004e-05, 8.026300000000056e-05, 8.086100000000151e-05, 8.06390000000004e-05, 8.052799999999985e-05, 8.112499999999787e-05, 8.108399999999863e-05, 8.0458999999998e-05, 8.066699999999954e-05, 8.081999999999881e-05, 8.102700000000088e-05, 8.070800000000225e-05, 8.102800000000035e-05, 8.056899999999909e-05, 8.08329999999989e-05, 8.050000000000071e-05, 8.09169999999998e-05, 8.043100000000233e-05, 8.068099999999911e-05, 8.083399999999838e-05, 8.054099999999995e-05, 8.02779999999996e-05, 8.120799999999928e-05, 8.11390000000009e-05, 8.11659999999971e-05, 8.086100000000151e-05, 8.086099999999805e-05, 8.044399999999896e-05]</msg>
<status status="PASS" starttime="20201029 18:16:14.722" endtime="20201029 18:16:14.725"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.717" endtime="20201029 18:16:14.726"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:14.730" endtime="20201029 18:16:14.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.728" endtime="20201029 18:16:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.727" endtime="20201029 18:16:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.362" endtime="20201029 18:16:14.750"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.362" endtime="20201029 18:16:14.751"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.760" endtime="20201029 18:16:14.779"></status>
</kw>
<msg timestamp="20201029 18:16:14.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.758" endtime="20201029 18:16:14.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:14.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:14.780" endtime="20201029 18:16:14.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.783" endtime="20201029 18:16:14.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.755" endtime="20201029 18:16:14.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.753" endtime="20201029 18:16:14.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:14.793" endtime="20201029 18:16:15.077"></status>
</kw>
<msg timestamp="20201029 18:16:15.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:14.791" endtime="20201029 18:16:15.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022577083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.081" endtime="20201029 18:16:15.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.090" endtime="20201029 18:16:15.091"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.788" endtime="20201029 18:16:15.092"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.786" endtime="20201029 18:16:15.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.097" level="INFO">${RESULT} = [{'diff': 8.154100000000095e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.15970000000027e-05}, {'diff': 8.162499999999837e-05}, {'diff': 8.195800000000003e-05}, {'diff': 8.193000000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:15.093" endtime="20201029 18:16:15.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.102" level="INFO">${ACCURACY} = {'diff': [8.154100000000095e-05, 8.198599999999917e-05, 8.15970000000027e-05, 8.162499999999837e-05, 8.195800000000003e-05, 8.193000000000089e-05, 8.213899999999844e-05, 8.19170000000008e-05, 8.197299...</msg>
<status status="PASS" starttime="20201029 18:16:15.098" endtime="20201029 18:16:15.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.107" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.106" endtime="20201029 18:16:15.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.109" level="INFO">VALUE: [8.154100000000095e-05, 8.198599999999917e-05, 8.15970000000027e-05, 8.162499999999837e-05, 8.195800000000003e-05, 8.193000000000089e-05, 8.213899999999844e-05, 8.19170000000008e-05, 8.197299999999907e-05, 8.12780000000006e-05, 8.201399999999831e-05, 8.151299999999834e-05, 8.175000000000196e-05, 8.213899999999844e-05, 8.143000000000039e-05, 8.218000000000114e-05, 8.170799999999978e-05, 8.181999999999981e-05, 8.134699999999898e-05, 8.216700000000104e-05, 8.172299999999882e-05, 8.166700000000054e-05, 8.127700000000113e-05, 8.2152999999998e-05, 8.134700000000245e-05, 8.144399999999996e-05, 8.187500000000208e-05, 8.216700000000104e-05, 8.14170000000003e-05, 8.159699999999923e-05, 8.218100000000061e-05, 8.176399999999806e-05, 8.176400000000153e-05, 8.155599999999999e-05, 8.209699999999973e-05, 8.141600000000082e-05, 8.151399999999781e-05, 8.143000000000039e-05, 8.218100000000061e-05, 8.138900000000115e-05, 8.143099999999986e-05, 8.136099999999855e-05, 8.144499999999943e-05, 8.143000000000039e-05, 8.172199999999935e-05, 8.21390000000019e-05, 8.175000000000196e-05, 8.180600000000024e-05, 8.195800000000003e-05, 8.14170000000003e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.108" endtime="20201029 18:16:15.110"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.103" endtime="20201029 18:16:15.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.115" endtime="20201029 18:16:15.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.113" endtime="20201029 18:16:15.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.112" endtime="20201029 18:16:15.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.752" endtime="20201029 18:16:15.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:14.751" endtime="20201029 18:16:15.135"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.145" endtime="20201029 18:16:15.164"></status>
</kw>
<msg timestamp="20201029 18:16:15.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.143" endtime="20201029 18:16:15.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.166" endtime="20201029 18:16:15.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.169" endtime="20201029 18:16:15.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.140" endtime="20201029 18:16:15.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.138" endtime="20201029 18:16:15.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.178" endtime="20201029 18:16:15.465"></status>
</kw>
<msg timestamp="20201029 18:16:15.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.177" endtime="20201029 18:16:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.470" endtime="20201029 18:16:15.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.478" endtime="20201029 18:16:15.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.174" endtime="20201029 18:16:15.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.172" endtime="20201029 18:16:15.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.485" level="INFO">${RESULT} = [{'diff': 8.236099999999955e-05}, {'diff': 8.248599999999967e-05}, {'diff': 8.286100000000005e-05}, {'diff': 8.258300000000066e-05}, {'diff': 8.283399999999691e-05}, {'diff': 8.241600000000182e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.482" endtime="20201029 18:16:15.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.489" level="INFO">${ACCURACY} = {'diff': [8.236099999999955e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.258300000000066e-05, 8.283399999999691e-05, 8.241600000000182e-05, 8.318000000000214e-05, 8.266700000000154e-05, 8.2945...</msg>
<status status="PASS" starttime="20201029 18:16:15.486" endtime="20201029 18:16:15.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.494" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.493" endtime="20201029 18:16:15.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.497" level="INFO">VALUE: [8.236099999999955e-05, 8.248599999999967e-05, 8.286100000000005e-05, 8.258300000000066e-05, 8.283399999999691e-05, 8.241600000000182e-05, 8.318000000000214e-05, 8.266700000000154e-05, 8.294500000000093e-05, 8.322300000000032e-05, 8.24720000000001e-05, 8.248600000000314e-05, 8.259700000000023e-05, 8.274999999999949e-05, 8.227799999999813e-05, 8.244500000000043e-05, 8.266699999999808e-05, 8.244500000000043e-05, 8.233399999999988e-05, 8.249999999999924e-05, 8.298600000000017e-05, 8.248599999999967e-05, 8.226399999999856e-05, 8.299999999999974e-05, 8.308299999999769e-05, 8.229200000000117e-05, 8.232000000000031e-05, 8.254200000000142e-05, 8.30980000000002e-05, 8.276399999999906e-05, 8.276399999999906e-05, 8.244400000000096e-05, 8.250000000000271e-05, 8.294400000000146e-05, 8.277799999999863e-05, 8.230599999999727e-05, 8.249999999999924e-05, 8.27780000000021e-05, 8.29309999999979e-05, 8.276399999999906e-05, 8.244400000000096e-05, 8.301399999999931e-05, 8.290300000000222e-05, 8.250000000000271e-05, 8.270800000000078e-05, 8.230599999999727e-05, 8.298600000000017e-05, 8.244500000000043e-05, 8.248599999999967e-05, 8.273599999999992e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.495" endtime="20201029 18:16:15.498"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.490" endtime="20201029 18:16:15.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.502" endtime="20201029 18:16:15.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.500" endtime="20201029 18:16:15.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.499" endtime="20201029 18:16:15.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.136" endtime="20201029 18:16:15.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.136" endtime="20201029 18:16:15.523"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.532" endtime="20201029 18:16:15.553"></status>
</kw>
<msg timestamp="20201029 18:16:15.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.530" endtime="20201029 18:16:15.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.554" endtime="20201029 18:16:15.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.557" endtime="20201029 18:16:15.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.528" endtime="20201029 18:16:15.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.525" endtime="20201029 18:16:15.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.567" endtime="20201029 18:16:15.854"></status>
</kw>
<msg timestamp="20201029 18:16:15.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.565" endtime="20201029 18:16:15.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023430319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023514167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.858" endtime="20201029 18:16:15.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.867" endtime="20201029 18:16:15.868"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.562" endtime="20201029 18:16:15.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.560" endtime="20201029 18:16:15.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:15.874" level="INFO">${RESULT} = [{'diff': 8.384799999999748e-05}, {'diff': 8.362500000000037e-05}, {'diff': 8.419399999999924e-05}, {'diff': 8.407000000000206e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.394399999999899e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:15.870" endtime="20201029 18:16:15.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:15.878" level="INFO">${ACCURACY} = {'diff': [8.384799999999748e-05, 8.362500000000037e-05, 8.419399999999924e-05, 8.407000000000206e-05, 8.409699999999826e-05, 8.394399999999899e-05, 8.324999999999999e-05, 8.32780000000026e-05, 8.40970...</msg>
<status status="PASS" starttime="20201029 18:16:15.875" endtime="20201029 18:16:15.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.883" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:15.881" endtime="20201029 18:16:15.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.885" level="INFO">VALUE: [8.384799999999748e-05, 8.362500000000037e-05, 8.419399999999924e-05, 8.407000000000206e-05, 8.409699999999826e-05, 8.394399999999899e-05, 8.324999999999999e-05, 8.32780000000026e-05, 8.409700000000173e-05, 8.3459000000001e-05, 8.363899999999994e-05, 8.41110000000013e-05, 8.326399999999956e-05, 8.326300000000009e-05, 8.359700000000123e-05, 8.401400000000031e-05, 8.390200000000028e-05, 8.422199999999838e-05, 8.390300000000323e-05, 8.390299999999976e-05, 8.362500000000037e-05, 8.39309999999989e-05, 8.408400000000163e-05, 8.41110000000013e-05, 8.347199999999763e-05, 8.34720000000011e-05, 8.419400000000271e-05, 8.350000000000024e-05, 8.36110000000008e-05, 8.347199999999763e-05, 8.395800000000203e-05, 8.326400000000303e-05, 8.34859999999972e-05, 8.40980000000012e-05, 8.359799999999723e-05, 8.402799999999988e-05, 8.390200000000028e-05, 8.352699999999991e-05, 8.409700000000173e-05, 8.398600000000117e-05, 8.362500000000037e-05, 8.402799999999988e-05, 8.362500000000037e-05, 8.350000000000024e-05, 8.419500000000218e-05, 8.367999999999917e-05, 8.413900000000044e-05, 8.33049999999988e-05, 8.359699999999776e-05, 8.331900000000184e-05]</msg>
<status status="PASS" starttime="20201029 18:16:15.884" endtime="20201029 18:16:15.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.879" endtime="20201029 18:16:15.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:15.891" endtime="20201029 18:16:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.890" endtime="20201029 18:16:15.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.889" endtime="20201029 18:16:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.524" endtime="20201029 18:16:15.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.523" endtime="20201029 18:16:15.912"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.921" endtime="20201029 18:16:15.940"></status>
</kw>
<msg timestamp="20201029 18:16:15.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.920" endtime="20201029 18:16:15.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:15.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:15.942" endtime="20201029 18:16:15.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.945" endtime="20201029 18:16:15.946"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.917" endtime="20201029 18:16:15.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.915" endtime="20201029 18:16:15.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:15.954" endtime="20201029 18:16:16.241"></status>
</kw>
<msg timestamp="20201029 18:16:16.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:15.953" endtime="20201029 18:16:16.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022673667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.245" endtime="20201029 18:16:16.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.253" endtime="20201029 18:16:16.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.950" endtime="20201029 18:16:16.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.948" endtime="20201029 18:16:16.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.260" level="INFO">${RESULT} = [{'diff': 8.43469999999985e-05}, {'diff': 8.518100000000015e-05}, {'diff': 8.45980000000017e-05}, {'diff': 8.461099999999833e-05}, {'diff': 8.490299999999729e-05}, {'diff': 8.477800000000063e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:16.257" endtime="20201029 18:16:16.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.265" level="INFO">${ACCURACY} = {'diff': [8.43469999999985e-05, 8.518100000000015e-05, 8.45980000000017e-05, 8.461099999999833e-05, 8.490299999999729e-05, 8.477800000000063e-05, 8.491600000000085e-05, 8.486100000000205e-05, 8.476400...</msg>
<status status="PASS" starttime="20201029 18:16:16.261" endtime="20201029 18:16:16.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.270" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.269" endtime="20201029 18:16:16.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.273" level="INFO">VALUE: [8.43469999999985e-05, 8.518100000000015e-05, 8.45980000000017e-05, 8.461099999999833e-05, 8.490299999999729e-05, 8.477800000000063e-05, 8.491600000000085e-05, 8.486100000000205e-05, 8.476400000000106e-05, 8.433299999999894e-05, 8.466700000000008e-05, 8.490299999999729e-05, 8.425000000000099e-05, 8.44729999999981e-05, 8.50980000000022e-05, 8.452800000000038e-05, 8.494399999999999e-05, 8.501399999999784e-05, 8.461099999999833e-05, 8.426399999999709e-05, 8.513900000000144e-05, 8.47920000000002e-05, 8.508299999999969e-05, 8.425000000000099e-05, 8.49590000000025e-05, 8.505499999999708e-05, 8.462500000000137e-05, 8.492999999999695e-05, 8.469399999999974e-05, 8.493000000000042e-05, 8.488899999999772e-05, 8.419399999999924e-05, 8.42919999999997e-05, 8.427800000000013e-05, 8.480600000000324e-05, 8.451399999999734e-05, 8.468099999999965e-05, 8.44720000000021e-05, 8.445799999999906e-05, 8.477800000000063e-05, 8.425000000000099e-05, 8.466700000000008e-05, 8.436099999999808e-05, 8.469499999999922e-05, 8.481999999999934e-05, 8.486099999999858e-05, 8.487500000000162e-05, 8.523600000000242e-05, 8.477700000000116e-05, 8.463900000000094e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.271" endtime="20201029 18:16:16.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.266" endtime="20201029 18:16:16.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.278" endtime="20201029 18:16:16.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.276" endtime="20201029 18:16:16.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.275" endtime="20201029 18:16:16.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.913" endtime="20201029 18:16:16.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:15.912" endtime="20201029 18:16:16.299"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.308" endtime="20201029 18:16:16.327"></status>
</kw>
<msg timestamp="20201029 18:16:16.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.306" endtime="20201029 18:16:16.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.329" endtime="20201029 18:16:16.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.332" endtime="20201029 18:16:16.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.304" endtime="20201029 18:16:16.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.301" endtime="20201029 18:16:16.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.341" endtime="20201029 18:16:16.627"></status>
</kw>
<msg timestamp="20201029 18:16:16.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.340" endtime="20201029 18:16:16.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022603917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022689264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:16.631" endtime="20201029 18:16:16.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.640" endtime="20201029 18:16:16.641"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.337" endtime="20201029 18:16:16.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.335" endtime="20201029 18:16:16.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:16.647" level="INFO">${RESULT} = [{'diff': 8.53469999999995e-05}, {'diff': 8.619499999999725e-05}, {'diff': 8.527799999999766e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.565200000000203e-05}, {'diff': 8.526400000000156e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:16.643" endtime="20201029 18:16:16.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:16.651" level="INFO">${ACCURACY} = {'diff': [8.53469999999995e-05, 8.619499999999725e-05, 8.527799999999766e-05, 8.557000000000009e-05, 8.565200000000203e-05, 8.526400000000156e-05, 8.524999999999852e-05, 8.58050000000013e-05, 8.599999...</msg>
<status status="PASS" starttime="20201029 18:16:16.648" endtime="20201029 18:16:16.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.656" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:16.655" endtime="20201029 18:16:16.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.658" level="INFO">VALUE: [8.53469999999995e-05, 8.619499999999725e-05, 8.527799999999766e-05, 8.557000000000009e-05, 8.565200000000203e-05, 8.526400000000156e-05, 8.524999999999852e-05, 8.58050000000013e-05, 8.599999999999927e-05, 8.527700000000166e-05, 8.527800000000113e-05, 8.594400000000099e-05, 8.536099999999908e-05, 8.549999999999877e-05, 8.59859999999997e-05, 8.533299999999994e-05, 8.577699999999869e-05, 8.519400000000024e-05, 8.54720000000031e-05, 8.541700000000083e-05, 8.594400000000099e-05, 8.569400000000074e-05, 8.570800000000031e-05, 8.563900000000194e-05, 8.541700000000083e-05, 8.526400000000156e-05, 8.57920000000012e-05, 8.533299999999994e-05, 8.527699999999819e-05, 8.611099999999983e-05, 8.570799999999684e-05, 8.547199999999963e-05, 8.529199999999723e-05, 8.565299999999804e-05, 8.5944999999997e-05, 8.56530000000015e-05, 8.584799999999948e-05, 8.527799999999766e-05, 8.548600000000267e-05, 8.577800000000163e-05, 8.608300000000069e-05, 8.533299999999994e-05, 8.533299999999994e-05, 8.527800000000113e-05, 8.580600000000077e-05, 8.533399999999941e-05, 8.57370000000024e-05, 8.597200000000013e-05, 8.563899999999847e-05, 8.554100000000148e-05]</msg>
<status status="PASS" starttime="20201029 18:16:16.657" endtime="20201029 18:16:16.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.652" endtime="20201029 18:16:16.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:16.664" endtime="20201029 18:16:16.683"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.662" endtime="20201029 18:16:16.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.661" endtime="20201029 18:16:16.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.300" endtime="20201029 18:16:16.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.299" endtime="20201029 18:16:16.684"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.693" endtime="20201029 18:16:16.713"></status>
</kw>
<msg timestamp="20201029 18:16:16.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.692" endtime="20201029 18:16:16.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:16.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:16.715" endtime="20201029 18:16:16.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.717" endtime="20201029 18:16:16.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.689" endtime="20201029 18:16:16.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.687" endtime="20201029 18:16:16.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:16.727" endtime="20201029 18:16:17.015"></status>
</kw>
<msg timestamp="20201029 18:16:17.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02348925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023575944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:16.725" endtime="20201029 18:16:17.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02348925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023575944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:17.019" endtime="20201029 18:16:17.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.027" endtime="20201029 18:16:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.723" endtime="20201029 18:16:17.029"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.721" endtime="20201029 18:16:17.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.034" level="INFO">${RESULT} = [{'diff': 8.669400000000174e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.630600000000127e-05}, {'diff': 8.652799999999891e-05}, {'diff': 8.702799999999941e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:17.031" endtime="20201029 18:16:17.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.038" level="INFO">${ACCURACY} = {'diff': [8.669400000000174e-05, 8.71669999999991e-05, 8.687500000000015e-05, 8.630600000000127e-05, 8.652799999999891e-05, 8.702799999999941e-05, 8.673600000000045e-05, 8.676399999999959e-05, 8.64029...</msg>
<status status="PASS" starttime="20201029 18:16:17.035" endtime="20201029 18:16:17.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.043" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.042" endtime="20201029 18:16:17.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.046" level="INFO">VALUE: [8.669400000000174e-05, 8.71669999999991e-05, 8.687500000000015e-05, 8.630600000000127e-05, 8.652799999999891e-05, 8.702799999999941e-05, 8.673600000000045e-05, 8.676399999999959e-05, 8.640299999999879e-05, 8.626399999999909e-05, 8.708399999999769e-05, 8.669400000000174e-05, 8.713800000000049e-05, 8.698599999999723e-05, 8.68189999999984e-05, 8.71669999999991e-05, 8.66249999999999e-05, 8.634699999999704e-05, 8.62920000000017e-05, 8.666599999999913e-05, 8.709800000000073e-05, 8.71799999999992e-05, 8.71250000000004e-05, 8.636100000000008e-05, 8.626400000000256e-05, 8.6847000000001e-05, 8.627799999999866e-05, 8.644400000000149e-05, 8.697200000000113e-05, 8.668100000000165e-05, 8.654099999999901e-05, 8.658300000000119e-05, 8.66249999999999e-05, 8.636100000000008e-05, 8.629099999999876e-05, 8.665299999999904e-05, 8.656899999999815e-05, 8.697200000000113e-05, 8.67920000000022e-05, 8.686099999999711e-05, 8.647200000000063e-05, 8.701399999999984e-05, 8.645900000000054e-05, 8.644500000000097e-05, 8.697199999999766e-05, 8.715200000000006e-05, 8.69860000000007e-05, 8.66669999999986e-05, 8.694399999999852e-05, 8.670800000000131e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.044" endtime="20201029 18:16:17.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.039" endtime="20201029 18:16:17.048"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.052" endtime="20201029 18:16:17.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.050" endtime="20201029 18:16:17.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.049" endtime="20201029 18:16:17.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.685" endtime="20201029 18:16:17.073"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:16.685" endtime="20201029 18:16:17.073"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.082" endtime="20201029 18:16:17.101"></status>
</kw>
<msg timestamp="20201029 18:16:17.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.080" endtime="20201029 18:16:17.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.103" endtime="20201029 18:16:17.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.105" endtime="20201029 18:16:17.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.078" endtime="20201029 18:16:17.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.075" endtime="20201029 18:16:17.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.115" endtime="20201029 18:16:17.401"></status>
</kw>
<msg timestamp="20201029 18:16:17.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.113" endtime="20201029 18:16:17.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022553278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.405" endtime="20201029 18:16:17.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.414" endtime="20201029 18:16:17.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.110" endtime="20201029 18:16:17.416"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.109" endtime="20201029 18:16:17.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.421" level="INFO">${RESULT} = [{'diff': 8.776400000000059e-05}, {'diff': 8.779199999999973e-05}, {'diff': 8.730499999999933e-05}, {'diff': 8.813900000000097e-05}, {'diff': 8.784699999999854e-05}, {'diff': 8.751400000000034e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:17.417" endtime="20201029 18:16:17.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.426" level="INFO">${ACCURACY} = {'diff': [8.776400000000059e-05, 8.779199999999973e-05, 8.730499999999933e-05, 8.813900000000097e-05, 8.784699999999854e-05, 8.751400000000034e-05, 8.761099999999786e-05, 8.794500000000247e-05, 8.7943...</msg>
<status status="PASS" starttime="20201029 18:16:17.422" endtime="20201029 18:16:17.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.431" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.430" endtime="20201029 18:16:17.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.433" level="INFO">VALUE: [8.776400000000059e-05, 8.779199999999973e-05, 8.730499999999933e-05, 8.813900000000097e-05, 8.784699999999854e-05, 8.751400000000034e-05, 8.761099999999786e-05, 8.794500000000247e-05, 8.794399999999952e-05, 8.776400000000059e-05, 8.73189999999989e-05, 8.801300000000137e-05, 8.804199999999998e-05, 8.792999999999995e-05, 8.794399999999952e-05, 8.7944999999999e-05, 8.795899999999857e-05, 8.776400000000059e-05, 8.740299999999979e-05, 8.780499999999983e-05, 8.729099999999976e-05, 8.754100000000001e-05, 8.795799999999909e-05, 8.726400000000009e-05, 8.73059999999988e-05, 8.726400000000009e-05, 8.800000000000127e-05, 8.804100000000051e-05, 8.78059999999993e-05, 8.743000000000292e-05, 8.787500000000115e-05, 8.765200000000056e-05, 8.770799999999884e-05, 8.784700000000201e-05, 8.815300000000054e-05, 8.820799999999934e-05, 8.776400000000059e-05, 8.727800000000313e-05, 8.794500000000247e-05, 8.763900000000047e-05, 8.787499999999768e-05, 8.786099999999811e-05, 8.773600000000145e-05, 8.815200000000106e-05, 8.820799999999934e-05, 8.797199999999866e-05, 8.776399999999712e-05, 8.793099999999943e-05, 8.761100000000133e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.432" endtime="20201029 18:16:17.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.427" endtime="20201029 18:16:17.435"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.439" endtime="20201029 18:16:17.458"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.437" endtime="20201029 18:16:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.436" endtime="20201029 18:16:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.074" endtime="20201029 18:16:17.459"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.073" endtime="20201029 18:16:17.459"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.468" endtime="20201029 18:16:17.489"></status>
</kw>
<msg timestamp="20201029 18:16:17.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.467" endtime="20201029 18:16:17.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.490" endtime="20201029 18:16:17.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.493" endtime="20201029 18:16:17.494"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.464" endtime="20201029 18:16:17.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.462" endtime="20201029 18:16:17.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.502" endtime="20201029 18:16:17.791"></status>
</kw>
<msg timestamp="20201029 18:16:17.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.501" endtime="20201029 18:16:17.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022960125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:17.796" endtime="20201029 18:16:17.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.804" endtime="20201029 18:16:17.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.498" endtime="20201029 18:16:17.806"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.496" endtime="20201029 18:16:17.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:17.811" level="INFO">${RESULT} = [{'diff': 8.919400000000077e-05}, {'diff': 8.91800000000012e-05}, {'diff': 8.861099999999886e-05}, {'diff': 8.875000000000202e-05}, {'diff': 8.895900000000304e-05}, {'diff': 8.827800000000066e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:17.808" endtime="20201029 18:16:17.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:17.815" level="INFO">${ACCURACY} = {'diff': [8.919400000000077e-05, 8.91800000000012e-05, 8.861099999999886e-05, 8.875000000000202e-05, 8.895900000000304e-05, 8.827800000000066e-05, 8.901300000000237e-05, 8.897199999999966e-05, 8.83189...</msg>
<status status="PASS" starttime="20201029 18:16:17.812" endtime="20201029 18:16:17.815"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.820" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:17.819" endtime="20201029 18:16:17.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.823" level="INFO">VALUE: [8.919400000000077e-05, 8.91800000000012e-05, 8.861099999999886e-05, 8.875000000000202e-05, 8.895900000000304e-05, 8.827800000000066e-05, 8.901300000000237e-05, 8.897199999999966e-05, 8.83189999999999e-05, 8.829200000000023e-05, 8.901400000000184e-05, 8.887500000000215e-05, 8.84860000000022e-05, 8.895900000000304e-05, 8.8945e-05, 8.829200000000023e-05, 8.85129999999984e-05, 8.890300000000129e-05, 8.89999999999988e-05, 8.91389999999985e-05, 8.897199999999966e-05, 8.895800000000009e-05, 8.827800000000066e-05, 8.833299999999947e-05, 8.862499999999843e-05, 8.859699999999929e-05, 8.897199999999966e-05, 8.909699999999979e-05, 8.843000000000045e-05, 8.904199999999751e-05, 8.837500000000165e-05, 8.86250000000019e-05, 8.826400000000109e-05, 8.83189999999999e-05, 8.91389999999985e-05, 8.859799999999876e-05, 8.855500000000058e-05, 8.840300000000079e-05, 8.887500000000215e-05, 8.88190000000004e-05, 8.876400000000159e-05, 8.898599999999923e-05, 8.858299999999972e-05, 8.838900000000122e-05, 8.876400000000159e-05, 8.845900000000254e-05, 8.856899999999668e-05, 8.826400000000109e-05, 8.836099999999861e-05, 8.897199999999966e-05]</msg>
<status status="PASS" starttime="20201029 18:16:17.821" endtime="20201029 18:16:17.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.816" endtime="20201029 18:16:17.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:17.828" endtime="20201029 18:16:17.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.826" endtime="20201029 18:16:17.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.825" endtime="20201029 18:16:17.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.460" endtime="20201029 18:16:17.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.460" endtime="20201029 18:16:17.849"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.858" endtime="20201029 18:16:17.878"></status>
</kw>
<msg timestamp="20201029 18:16:17.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.856" endtime="20201029 18:16:17.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:17.880" endtime="20201029 18:16:17.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.882" endtime="20201029 18:16:17.884"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.853" endtime="20201029 18:16:17.885"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.851" endtime="20201029 18:16:17.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:17.892" endtime="20201029 18:16:18.178"></status>
</kw>
<msg timestamp="20201029 18:16:18.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02361275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:17.890" endtime="20201029 18:16:18.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023522625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02361275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:18.182" endtime="20201029 18:16:18.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.190" endtime="20201029 18:16:18.192"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.888" endtime="20201029 18:16:18.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.886" endtime="20201029 18:16:18.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.197" level="INFO">${RESULT} = [{'diff': 9.012499999999993e-05}, {'diff': 9.01670000000021e-05}, {'diff': 8.951399999999887e-05}, {'diff': 8.995900000000057e-05}, {'diff': 8.933300000000047e-05}, {'diff': 8.984700000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:18.194" endtime="20201029 18:16:18.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.202" level="INFO">${ACCURACY} = {'diff': [9.012499999999993e-05, 9.01670000000021e-05, 8.951399999999887e-05, 8.995900000000057e-05, 8.933300000000047e-05, 8.984700000000054e-05, 8.959699999999682e-05, 9.002799999999894e-05, 8.94859...</msg>
<status status="PASS" starttime="20201029 18:16:18.198" endtime="20201029 18:16:18.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.206" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.205" endtime="20201029 18:16:18.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.209" level="INFO">VALUE: [9.012499999999993e-05, 9.01670000000021e-05, 8.951399999999887e-05, 8.995900000000057e-05, 8.933300000000047e-05, 8.984700000000054e-05, 8.959699999999682e-05, 9.002799999999894e-05, 8.948599999999973e-05, 8.959699999999682e-05, 8.970900000000032e-05, 8.976399999999912e-05, 8.970900000000032e-05, 8.994399999999805e-05, 8.945900000000007e-05, 8.933399999999994e-05, 8.929100000000176e-05, 8.98060000000013e-05, 8.973599999999998e-05, 8.937499999999918e-05, 8.944400000000102e-05, 8.968100000000118e-05, 8.990299999999882e-05, 9.009799999999679e-05, 8.973599999999998e-05, 8.956900000000115e-05, 8.929199999999776e-05, 8.943000000000145e-05, 9.015299999999907e-05, 9.001399999999937e-05, 8.94450000000005e-05, 9.019499999999778e-05, 8.933300000000047e-05, 8.9945000000001e-05, 8.94450000000005e-05, 8.934799999999951e-05, 8.94999999999993e-05, 8.965299999999857e-05, 8.998600000000023e-05, 8.977799999999869e-05, 8.961099999999986e-05, 8.957000000000062e-05, 8.958400000000019e-05, 8.938899999999875e-05, 8.941700000000136e-05, 8.969400000000127e-05, 8.976299999999965e-05, 9.017999999999873e-05, 9.004199999999851e-05, 9.01800000000022e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.208" endtime="20201029 18:16:18.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.203" endtime="20201029 18:16:18.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.215" endtime="20201029 18:16:18.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.213" endtime="20201029 18:16:18.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.212" endtime="20201029 18:16:18.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.849" endtime="20201029 18:16:18.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:17.849" endtime="20201029 18:16:18.236"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.245" endtime="20201029 18:16:18.264"></status>
</kw>
<msg timestamp="20201029 18:16:18.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.243" endtime="20201029 18:16:18.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.266" endtime="20201029 18:16:18.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.268" endtime="20201029 18:16:18.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.241" endtime="20201029 18:16:18.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.238" endtime="20201029 18:16:18.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.278" endtime="20201029 18:16:18.563"></status>
</kw>
<msg timestamp="20201029 18:16:18.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.276" endtime="20201029 18:16:18.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022401639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022492514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.568" endtime="20201029 18:16:18.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.577" endtime="20201029 18:16:18.579"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.273" endtime="20201029 18:16:18.580"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.271" endtime="20201029 18:16:18.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.585" level="INFO">${RESULT} = [{'diff': 9.087500000000068e-05}, {'diff': 9.062500000000043e-05}, {'diff': 9.118099999999921e-05}, {'diff': 9.04450000000015e-05}, {'diff': 9.062500000000043e-05}, {'diff': 9.077799999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:18.581" endtime="20201029 18:16:18.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.590" level="INFO">${ACCURACY} = {'diff': [9.087500000000068e-05, 9.062500000000043e-05, 9.118099999999921e-05, 9.04450000000015e-05, 9.062500000000043e-05, 9.077799999999969e-05, 9.066699999999914e-05, 9.104100000000004e-05, 9.10410...</msg>
<status status="PASS" starttime="20201029 18:16:18.586" endtime="20201029 18:16:18.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.595" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.594" endtime="20201029 18:16:18.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.597" level="INFO">VALUE: [9.087500000000068e-05, 9.062500000000043e-05, 9.118099999999921e-05, 9.04450000000015e-05, 9.062500000000043e-05, 9.077799999999969e-05, 9.066699999999914e-05, 9.104100000000004e-05, 9.104100000000004e-05, 9.047199999999769e-05, 9.066699999999914e-05, 9.03060000000018e-05, 9.074999999999708e-05, 9.102799999999994e-05, 9.027799999999919e-05, 9.048600000000073e-05, 9.076400000000012e-05, 9.086099999999764e-05, 9.108299999999875e-05, 9.077700000000022e-05, 9.105600000000255e-05, 9.065299999999957e-05, 9.0945000000002e-05, 9.077799999999969e-05, 9.087500000000068e-05, 9.109799999999779e-05, 9.045799999999812e-05, 9.065299999999957e-05, 9.047200000000116e-05, 9.087500000000068e-05, 9.077799999999969e-05, 9.120799999999887e-05, 9.119500000000225e-05, 9.099999999999733e-05, 9.061100000000086e-05, 9.102700000000047e-05, 9.062500000000043e-05, 9.101400000000037e-05, 9.091599999999991e-05, 9.105499999999961e-05, 9.0639e-05, 9.062500000000043e-05, 9.051399999999987e-05, 9.030499999999886e-05, 9.027800000000266e-05, 9.109799999999779e-05, 9.055600000000205e-05, 9.11939999999993e-05, 9.102799999999994e-05, 9.076400000000012e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.596" endtime="20201029 18:16:18.598"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.591" endtime="20201029 18:16:18.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.603" endtime="20201029 18:16:18.622"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.601" endtime="20201029 18:16:18.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.600" endtime="20201029 18:16:18.623"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.237" endtime="20201029 18:16:18.624"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.236" endtime="20201029 18:16:18.624"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.633" endtime="20201029 18:16:18.653"></status>
</kw>
<msg timestamp="20201029 18:16:18.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.631" endtime="20201029 18:16:18.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:18.655" endtime="20201029 18:16:18.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.657" endtime="20201029 18:16:18.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.628" endtime="20201029 18:16:18.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.626" endtime="20201029 18:16:18.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.667" endtime="20201029 18:16:18.953"></status>
</kw>
<msg timestamp="20201029 18:16:18.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.665" endtime="20201029 18:16:18.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022958278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:18.958" endtime="20201029 18:16:18.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:18.966" endtime="20201029 18:16:18.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.662" endtime="20201029 18:16:18.968"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.660" endtime="20201029 18:16:18.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:18.973" level="INFO">${RESULT} = [{'diff': 9.143099999999946e-05}, {'diff': 9.168099999999971e-05}, {'diff': 9.211200000000183e-05}, {'diff': 9.208299999999975e-05}, {'diff': 9.14719999999987e-05}, {'diff': 9.162499999999796e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:18.970" endtime="20201029 18:16:18.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:18.977" level="INFO">${ACCURACY} = {'diff': [9.143099999999946e-05, 9.168099999999971e-05, 9.211200000000183e-05, 9.208299999999975e-05, 9.14719999999987e-05, 9.162499999999796e-05, 9.126399999999715e-05, 9.13199999999989e-05, 9.126400...</msg>
<status status="PASS" starttime="20201029 18:16:18.974" endtime="20201029 18:16:18.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.982" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:18.981" endtime="20201029 18:16:18.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:18.985" level="INFO">VALUE: [9.143099999999946e-05, 9.168099999999971e-05, 9.211200000000183e-05, 9.208299999999975e-05, 9.14719999999987e-05, 9.162499999999796e-05, 9.126399999999715e-05, 9.13199999999989e-05, 9.126400000000062e-05, 9.212500000000193e-05, 9.179200000000026e-05, 9.202799999999747e-05, 9.193000000000048e-05, 9.136099999999814e-05, 9.168000000000023e-05, 9.148599999999826e-05, 9.144399999999955e-05, 9.209699999999932e-05, 9.193000000000048e-05, 9.191700000000039e-05, 9.175000000000155e-05, 9.129199999999976e-05, 9.125000000000105e-05, 9.179100000000079e-05, 9.224999999999858e-05, 9.177800000000069e-05, 9.134699999999857e-05, 9.137500000000118e-05, 9.18329999999995e-05, 9.187499999999821e-05, 9.209699999999932e-05, 9.177800000000069e-05, 9.198699999999824e-05, 9.158300000000272e-05, 9.162499999999796e-05, 9.223600000000248e-05, 9.184699999999907e-05, 9.130599999999933e-05, 9.18329999999995e-05, 9.219499999999978e-05, 9.155600000000305e-05, 9.143099999999946e-05, 9.144399999999955e-05, 9.190199999999787e-05, 9.18329999999995e-05, 9.213899999999803e-05, 9.129199999999976e-05, 9.209699999999932e-05, 9.16939999999998e-05, 9.177800000000069e-05]</msg>
<status status="PASS" starttime="20201029 18:16:18.983" endtime="20201029 18:16:18.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.978" endtime="20201029 18:16:18.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:18.990" endtime="20201029 18:16:19.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.988" endtime="20201029 18:16:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.987" endtime="20201029 18:16:19.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.625" endtime="20201029 18:16:19.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:18.624" endtime="20201029 18:16:19.011"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.020" endtime="20201029 18:16:19.041"></status>
</kw>
<msg timestamp="20201029 18:16:19.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.018" endtime="20201029 18:16:19.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.043" endtime="20201029 18:16:19.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.045" endtime="20201029 18:16:19.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.016" endtime="20201029 18:16:19.047"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.013" endtime="20201029 18:16:19.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.055" endtime="20201029 18:16:19.341"></status>
</kw>
<msg timestamp="20201029 18:16:19.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023840417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023933097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.053" endtime="20201029 18:16:19.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023840417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023933097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.345" endtime="20201029 18:16:19.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.353" endtime="20201029 18:16:19.355"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.050" endtime="20201029 18:16:19.356"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.048" endtime="20201029 18:16:19.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.360" level="INFO">${RESULT} = [{'diff': 9.268000000000123e-05}, {'diff': 9.323600000000001e-05}, {'diff': 9.220799999999987e-05}, {'diff': 9.309700000000032e-05}, {'diff': 9.286099999999964e-05}, {'diff': 9.245800000000012e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:19.357" endtime="20201029 18:16:19.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.365" level="INFO">${ACCURACY} = {'diff': [9.268000000000123e-05, 9.323600000000001e-05, 9.220799999999987e-05, 9.309700000000032e-05, 9.286099999999964e-05, 9.245800000000012e-05, 9.243100000000046e-05, 9.311099999999989e-05, 9.2708...</msg>
<status status="PASS" starttime="20201029 18:16:19.361" endtime="20201029 18:16:19.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.369" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.368" endtime="20201029 18:16:19.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.372" level="INFO">VALUE: [9.268000000000123e-05, 9.323600000000001e-05, 9.220799999999987e-05, 9.309700000000032e-05, 9.286099999999964e-05, 9.245800000000012e-05, 9.243100000000046e-05, 9.311099999999989e-05, 9.270800000000037e-05, 9.29720000000002e-05, 9.252800000000144e-05, 9.319500000000078e-05, 9.29590000000001e-05, 9.268100000000071e-05, 9.283399999999997e-05, 9.265199999999862e-05, 9.277699999999875e-05, 9.279099999999832e-05, 9.275000000000255e-05, 9.279200000000126e-05, 9.309700000000032e-05, 9.25139999999984e-05, 9.251400000000187e-05, 9.236199999999861e-05, 9.31529999999986e-05, 9.226399999999815e-05, 9.263899999999853e-05, 9.225000000000205e-05, 9.311099999999989e-05, 9.286099999999964e-05, 9.295799999999715e-05, 9.268100000000071e-05, 9.320899999999688e-05, 9.277799999999822e-05, 9.24719999999997e-05, 9.311099999999989e-05, 9.311099999999989e-05, 9.309699999999685e-05, 9.267999999999776e-05, 9.262499999999896e-05, 9.311099999999989e-05, 9.26940000000008e-05, 9.279200000000126e-05, 9.263899999999853e-05, 9.236199999999861e-05, 9.302799999999847e-05, 9.247200000000316e-05, 9.262499999999896e-05, 9.243000000000098e-05, 9.298600000000323e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.370" endtime="20201029 18:16:19.374"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.366" endtime="20201029 18:16:19.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.378" endtime="20201029 18:16:19.397"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.376" endtime="20201029 18:16:19.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.375" endtime="20201029 18:16:19.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.012" endtime="20201029 18:16:19.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.011" endtime="20201029 18:16:19.399"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.412" endtime="20201029 18:16:19.433"></status>
</kw>
<msg timestamp="20201029 18:16:19.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.410" endtime="20201029 18:16:19.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.434" endtime="20201029 18:16:19.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.437" endtime="20201029 18:16:19.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.406" endtime="20201029 18:16:19.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.403" endtime="20201029 18:16:19.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.446" endtime="20201029 18:16:19.732"></status>
</kw>
<msg timestamp="20201029 18:16:19.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027096958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.445" endtime="20201029 18:16:19.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027002944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027096958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.736" endtime="20201029 18:16:19.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.745" endtime="20201029 18:16:19.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.442" endtime="20201029 18:16:19.747"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.440" endtime="20201029 18:16:19.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:19.751" level="INFO">${RESULT} = [{'diff': 9.40139999999999e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.368100000000171e-05}, {'diff': 9.337499999999971e-05}, {'diff': 9.356899999999821e-05}, {'diff': 9.411100000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:19.748" endtime="20201029 18:16:19.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:19.757" level="INFO">${ACCURACY} = {'diff': [9.40139999999999e-05, 9.398600000000076e-05, 9.368100000000171e-05, 9.337499999999971e-05, 9.356899999999821e-05, 9.411100000000089e-05, 9.38339999999975e-05, 9.3333000000001e-05, 9.41799999...</msg>
<status status="PASS" starttime="20201029 18:16:19.752" endtime="20201029 18:16:19.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.761" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:19.760" endtime="20201029 18:16:19.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.764" level="INFO">VALUE: [9.40139999999999e-05, 9.398600000000076e-05, 9.368100000000171e-05, 9.337499999999971e-05, 9.356899999999821e-05, 9.411100000000089e-05, 9.38339999999975e-05, 9.3333000000001e-05, 9.417999999999926e-05, 9.39720000000012e-05, 9.358300000000125e-05, 9.34720000000007e-05, 9.376399999999965e-05, 9.412500000000046e-05, 9.368099999999824e-05, 9.384800000000054e-05, 9.384799999999707e-05, 9.369500000000128e-05, 9.387500000000021e-05, 9.380499999999889e-05, 9.320800000000087e-05, 9.40139999999999e-05, 9.363899999999953e-05, 9.340300000000232e-05, 9.362499999999996e-05, 9.359700000000082e-05, 9.40139999999999e-05, 9.423600000000101e-05, 9.326400000000262e-05, 9.345800000000112e-05, 9.363899999999953e-05, 9.327800000000219e-05, 9.395800000000162e-05, 9.327799999999872e-05, 9.391700000000239e-05, 9.41529999999996e-05, 9.380499999999889e-05, 9.343000000000198e-05, 9.397199999999772e-05, 9.344400000000502e-05, 9.362499999999996e-05, 9.327799999999525e-05, 9.362499999999996e-05, 9.341699999999842e-05, 9.34450000000045e-05, 9.395899999999763e-05, 9.330500000000186e-05, 9.395799999999815e-05, 9.33059999999944e-05, 9.422199999999797e-05]</msg>
<status status="PASS" starttime="20201029 18:16:19.763" endtime="20201029 18:16:19.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.758" endtime="20201029 18:16:19.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:19.769" endtime="20201029 18:16:19.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.768" endtime="20201029 18:16:19.789"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.766" endtime="20201029 18:16:19.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.400" endtime="20201029 18:16:19.790"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.399" endtime="20201029 18:16:19.790"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.800" endtime="20201029 18:16:19.819"></status>
</kw>
<msg timestamp="20201029 18:16:19.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.798" endtime="20201029 18:16:19.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:19.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:19.821" endtime="20201029 18:16:19.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.823" endtime="20201029 18:16:19.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.796" endtime="20201029 18:16:19.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.793" endtime="20201029 18:16:19.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:19.833" endtime="20201029 18:16:20.119"></status>
</kw>
<msg timestamp="20201029 18:16:20.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:19.831" endtime="20201029 18:16:20.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023282903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023377431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.124" endtime="20201029 18:16:20.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.132" endtime="20201029 18:16:20.134"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.829" endtime="20201029 18:16:20.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.827" endtime="20201029 18:16:20.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.139" level="INFO">${RESULT} = [{'diff': 9.452799999999997e-05}, {'diff': 9.493000000000001e-05}, {'diff': 9.493000000000001e-05}, {'diff': 9.442999999999951e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.48339999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:20.136" endtime="20201029 18:16:20.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.144" level="INFO">${ACCURACY} = {'diff': [9.452799999999997e-05, 9.493000000000001e-05, 9.493000000000001e-05, 9.442999999999951e-05, 9.438900000000028e-05, 9.48339999999985e-05, 9.462500000000096e-05, 9.491699999999992e-05, 9.44169...</msg>
<status status="PASS" starttime="20201029 18:16:20.140" endtime="20201029 18:16:20.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.148" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.147" endtime="20201029 18:16:20.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.151" level="INFO">VALUE: [9.452799999999997e-05, 9.493000000000001e-05, 9.493000000000001e-05, 9.442999999999951e-05, 9.438900000000028e-05, 9.48339999999985e-05, 9.462500000000096e-05, 9.491699999999992e-05, 9.441699999999942e-05, 9.48339999999985e-05, 9.486100000000164e-05, 9.437500000000071e-05, 9.474999999999761e-05, 9.444399999999908e-05, 9.461100000000139e-05, 9.477800000000022e-05, 9.483299999999903e-05, 9.473599999999804e-05, 9.461100000000139e-05, 9.518000000000026e-05, 9.43200000000019e-05, 9.494399999999958e-05, 9.458300000000225e-05, 9.427700000000025e-05, 9.455599999999911e-05, 9.45140000000004e-05, 9.476400000000065e-05, 9.444499999999856e-05, 9.490300000000035e-05, 9.44720000000017e-05, 9.459700000000182e-05, 9.434700000000157e-05, 9.500000000000133e-05, 9.509700000000232e-05, 9.473599999999804e-05, 9.495799999999915e-05, 9.476400000000065e-05, 9.498699999999777e-05, 9.491699999999992e-05, 9.512500000000146e-05, 9.422299999999745e-05, 9.45270000000005e-05, 9.459699999999835e-05, 9.456899999999921e-05, 9.480599999999936e-05, 9.443099999999899e-05, 9.493000000000001e-05, 9.433400000000147e-05, 9.494499999999906e-05, 9.511099999999842e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.149" endtime="20201029 18:16:20.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.144" endtime="20201029 18:16:20.152"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.156" endtime="20201029 18:16:20.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.154" endtime="20201029 18:16:20.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.153" endtime="20201029 18:16:20.176"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.791" endtime="20201029 18:16:20.177"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:19.791" endtime="20201029 18:16:20.177"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.186" endtime="20201029 18:16:20.207"></status>
</kw>
<msg timestamp="20201029 18:16:20.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.184" endtime="20201029 18:16:20.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.209" endtime="20201029 18:16:20.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.211" endtime="20201029 18:16:20.213"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.181" endtime="20201029 18:16:20.214"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.179" endtime="20201029 18:16:20.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.221" endtime="20201029 18:16:20.507"></status>
</kw>
<msg timestamp="20201029 18:16:20.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02382525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.219" endtime="20201029 18:16:20.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02382525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023921111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.511" endtime="20201029 18:16:20.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.520" endtime="20201029 18:16:20.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.216" endtime="20201029 18:16:20.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.215" endtime="20201029 18:16:20.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.527" level="INFO">${RESULT} = [{'diff': 9.586099999999917e-05}, {'diff': 9.533299999999953e-05}, {'diff': 9.613899999999856e-05}, {'diff': 9.594500000000006e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.577800000000122e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:20.523" endtime="20201029 18:16:20.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.531" level="INFO">${ACCURACY} = {'diff': [9.586099999999917e-05, 9.533299999999953e-05, 9.613899999999856e-05, 9.594500000000006e-05, 9.577800000000122e-05, 9.577800000000122e-05, 9.576399999999818e-05, 9.527800000000072e-05, 9.5471...</msg>
<status status="PASS" starttime="20201029 18:16:20.528" endtime="20201029 18:16:20.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.536" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.535" endtime="20201029 18:16:20.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.538" level="INFO">VALUE: [9.586099999999917e-05, 9.533299999999953e-05, 9.613899999999856e-05, 9.594500000000006e-05, 9.577800000000122e-05, 9.577800000000122e-05, 9.576399999999818e-05, 9.527800000000072e-05, 9.547199999999922e-05, 9.544400000000008e-05, 9.601399999999843e-05, 9.569400000000033e-05, 9.559699999999935e-05, 9.556999999999968e-05, 9.574999999999861e-05, 9.561099999999892e-05, 9.527800000000072e-05, 9.534800000000204e-05, 9.544400000000008e-05, 9.602699999999853e-05, 9.587499999999874e-05, 9.533299999999953e-05, 9.522199999999897e-05, 9.58469999999996e-05, 9.61530000000016e-05, 9.618100000000074e-05, 9.611099999999942e-05, 9.55270000000015e-05, 9.612500000000246e-05, 9.575000000000208e-05, 9.527799999999725e-05, 9.619400000000083e-05, 9.597199999999972e-05, 9.558299999999978e-05, 9.618100000000074e-05, 9.61660000000017e-05, 9.59019999999984e-05, 9.613899999999856e-05, 9.527800000000072e-05, 9.599999999999886e-05, 9.583300000000003e-05, 9.543099999999999e-05, 9.551399999999793e-05, 9.543099999999999e-05, 9.529200000000029e-05, 9.597199999999972e-05, 9.590300000000135e-05, 9.561099999999892e-05, 9.620899999999988e-05, 9.591700000000092e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.537" endtime="20201029 18:16:20.540"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.532" endtime="20201029 18:16:20.541"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.545" endtime="20201029 18:16:20.564"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.543" endtime="20201029 18:16:20.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.542" endtime="20201029 18:16:20.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.178" endtime="20201029 18:16:20.565"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.177" endtime="20201029 18:16:20.565"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.574" endtime="20201029 18:16:20.594"></status>
</kw>
<msg timestamp="20201029 18:16:20.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.573" endtime="20201029 18:16:20.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.596" endtime="20201029 18:16:20.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.598" endtime="20201029 18:16:20.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.570" endtime="20201029 18:16:20.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.568" endtime="20201029 18:16:20.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.608" endtime="20201029 18:16:20.895"></status>
</kw>
<msg timestamp="20201029 18:16:20.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.606" endtime="20201029 18:16:20.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02255725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022654278, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:20.899" endtime="20201029 18:16:20.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.907" endtime="20201029 18:16:20.909"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.603" endtime="20201029 18:16:20.910"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.602" endtime="20201029 18:16:20.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:20.914" level="INFO">${RESULT} = [{'diff': 9.7027999999999e-05}, {'diff': 9.63059999999974e-05}, {'diff': 9.672299999999995e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.656899999999774e-05}, {'diff': 9.647200000000022e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:20.911" endtime="20201029 18:16:20.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:20.920" level="INFO">${ACCURACY} = {'diff': [9.7027999999999e-05, 9.63059999999974e-05, 9.672299999999995e-05, 9.674999999999961e-05, 9.656899999999774e-05, 9.647200000000022e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.68610000...</msg>
<status status="PASS" starttime="20201029 18:16:20.915" endtime="20201029 18:16:20.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.924" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:20.923" endtime="20201029 18:16:20.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.927" level="INFO">VALUE: [9.7027999999999e-05, 9.63059999999974e-05, 9.672299999999995e-05, 9.674999999999961e-05, 9.656899999999774e-05, 9.647200000000022e-05, 9.68470000000006e-05, 9.659700000000035e-05, 9.686100000000017e-05, 9.659699999999688e-05, 9.636099999999967e-05, 9.644500000000056e-05, 9.651399999999893e-05, 9.692999999999855e-05, 9.694400000000158e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.67920000000018e-05, 9.625000000000258e-05, 9.716700000000217e-05, 9.704199999999857e-05, 9.701399999999943e-05, 9.694500000000106e-05, 9.661099999999992e-05, 9.719400000000183e-05, 9.636099999999967e-05, 9.655500000000164e-05, 9.7027999999999e-05, 9.718099999999827e-05, 9.656900000000121e-05, 9.62920000000013e-05, 9.654199999999807e-05, 9.661200000000286e-05, 9.636099999999967e-05, 9.695799999999768e-05, 9.662499999999949e-05, 9.687499999999974e-05, 9.701399999999943e-05, 9.693099999999802e-05, 9.63470000000001e-05, 9.702699999999953e-05, 9.642999999999805e-05, 9.650000000000283e-05, 9.658300000000078e-05, 9.63470000000001e-05, 9.694400000000158e-05, 9.644400000000108e-05, 9.668100000000124e-05, 9.644500000000056e-05, 9.69730000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:16:20.926" endtime="20201029 18:16:20.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.920" endtime="20201029 18:16:20.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:20.932" endtime="20201029 18:16:20.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.931" endtime="20201029 18:16:20.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.929" endtime="20201029 18:16:20.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.566" endtime="20201029 18:16:20.953"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.566" endtime="20201029 18:16:20.953"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.963" endtime="20201029 18:16:20.983"></status>
</kw>
<msg timestamp="20201029 18:16:20.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.961" endtime="20201029 18:16:20.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:20.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:20.985" endtime="20201029 18:16:20.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.987" endtime="20201029 18:16:20.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.958" endtime="20201029 18:16:20.990"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.956" endtime="20201029 18:16:20.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:20.997" endtime="20201029 18:16:21.287"></status>
</kw>
<msg timestamp="20201029 18:16:21.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023265639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:20.995" endtime="20201029 18:16:21.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023265639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023362972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.291" endtime="20201029 18:16:21.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.300" endtime="20201029 18:16:21.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.993" endtime="20201029 18:16:21.302"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.991" endtime="20201029 18:16:21.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.307" level="INFO">${RESULT} = [{'diff': 9.733299999999806e-05}, {'diff': 9.819399999999937e-05}, {'diff': 9.787500000000074e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.745900000000113e-05}, {'diff': 9.732000000000143e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:21.303" endtime="20201029 18:16:21.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.311" level="INFO">${ACCURACY} = {'diff': [9.733299999999806e-05, 9.819399999999937e-05, 9.787500000000074e-05, 9.809699999999838e-05, 9.745900000000113e-05, 9.732000000000143e-05, 9.730600000000186e-05, 9.765299999999963e-05, 9.7250...</msg>
<status status="PASS" starttime="20201029 18:16:21.308" endtime="20201029 18:16:21.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.315" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.314" endtime="20201029 18:16:21.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.318" level="INFO">VALUE: [9.733299999999806e-05, 9.819399999999937e-05, 9.787500000000074e-05, 9.809699999999838e-05, 9.745900000000113e-05, 9.732000000000143e-05, 9.730600000000186e-05, 9.765299999999963e-05, 9.725000000000011e-05, 9.762500000000049e-05, 9.736200000000014e-05, 9.786100000000117e-05, 9.774999999999714e-05, 9.762500000000049e-05, 9.806999999999871e-05, 9.781899999999899e-05, 9.808300000000228e-05, 9.781899999999899e-05, 9.797200000000172e-05, 9.747199999999775e-05, 9.730499999999892e-05, 9.750000000000036e-05, 9.761099999999745e-05, 9.792999999999955e-05, 9.74019999999999e-05, 9.81669999999997e-05, 9.792999999999955e-05, 9.729099999999935e-05, 9.792999999999955e-05, 9.805600000000261e-05, 9.754199999999907e-05, 9.820900000000188e-05, 9.819499999999884e-05, 9.819400000000283e-05, 9.744399999999862e-05, 9.763900000000006e-05, 9.766599999999973e-05, 9.79860000000013e-05, 9.77920000000028e-05, 9.751399999999993e-05, 9.811100000000142e-05, 9.761100000000092e-05, 9.751399999999993e-05, 9.794500000000206e-05, 9.787500000000074e-05, 9.761100000000092e-05, 9.73470000000011e-05, 9.77080000000019e-05, 9.729199999999882e-05, 9.762500000000049e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.317" endtime="20201029 18:16:21.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.312" endtime="20201029 18:16:21.319"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.323" endtime="20201029 18:16:21.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.322" endtime="20201029 18:16:21.343"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.320" endtime="20201029 18:16:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.954" endtime="20201029 18:16:21.344"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:20.954" endtime="20201029 18:16:21.344"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.353" endtime="20201029 18:16:21.374"></status>
</kw>
<msg timestamp="20201029 18:16:21.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.352" endtime="20201029 18:16:21.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.376" endtime="20201029 18:16:21.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.379" endtime="20201029 18:16:21.380"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.349" endtime="20201029 18:16:21.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.347" endtime="20201029 18:16:21.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.388" endtime="20201029 18:16:21.675"></status>
</kw>
<msg timestamp="20201029 18:16:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023749542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:21.386" endtime="20201029 18:16:21.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0236505, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023749542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:21.679" endtime="20201029 18:16:21.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.687" endtime="20201029 18:16:21.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.384" endtime="20201029 18:16:21.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.382" endtime="20201029 18:16:21.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:21.694" level="INFO">${RESULT} = [{'diff': 9.90419999999971e-05}, {'diff': 9.891700000000045e-05}, {'diff': 9.884800000000207e-05}, {'diff': 9.876400000000118e-05}, {'diff': 9.919400000000037e-05}, {'diff': 9.877799999999728e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:21.691" endtime="20201029 18:16:21.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:21.698" level="INFO">${ACCURACY} = {'diff': [9.90419999999971e-05, 9.891700000000045e-05, 9.884800000000207e-05, 9.876400000000118e-05, 9.919400000000037e-05, 9.877799999999728e-05, 9.847200000000222e-05, 9.881899999999999e-05, 9.88749...</msg>
<status status="PASS" starttime="20201029 18:16:21.695" endtime="20201029 18:16:21.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.703" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 18:16:21.702" endtime="20201029 18:16:21.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.706" level="INFO">VALUE: [9.90419999999971e-05, 9.891700000000045e-05, 9.884800000000207e-05, 9.876400000000118e-05, 9.919400000000037e-05, 9.877799999999728e-05, 9.847200000000222e-05, 9.881899999999999e-05, 9.887499999999827e-05, 9.83470000000021e-05, 9.870900000000238e-05, 9.893100000000002e-05, 9.888799999999837e-05, 9.845800000000265e-05, 9.909699999999938e-05, 9.920799999999994e-05, 9.84860000000018e-05, 9.858399999999878e-05, 9.86670000000002e-05, 9.876399999999771e-05, 9.869500000000281e-05, 9.913799999999862e-05, 9.877800000000075e-05, 9.886100000000217e-05, 9.879100000000085e-05, 9.91670000000007e-05, 9.820799999999894e-05, 9.832000000000243e-05, 9.861099999999845e-05, 9.908399999999928e-05, 9.829199999999982e-05, 9.854200000000007e-05, 9.894400000000012e-05, 9.905500000000067e-05, 9.84860000000018e-05, 9.909699999999938e-05, 9.890300000000088e-05, 9.9028000000001e-05, 9.85280000000005e-05, 9.870900000000238e-05, 9.834800000000157e-05, 9.88479999999986e-05, 9.91670000000007e-05, 9.877800000000075e-05, 9.917999999999733e-05, 9.826399999999721e-05, 9.91670000000007e-05, 9.838900000000081e-05, 9.844499999999909e-05, 9.859700000000235e-05]</msg>
<status status="PASS" starttime="20201029 18:16:21.704" endtime="20201029 18:16:21.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.699" endtime="20201029 18:16:21.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:21.712" endtime="20201029 18:16:21.731"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.710" endtime="20201029 18:16:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.709" endtime="20201029 18:16:21.732"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.345" endtime="20201029 18:16:21.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.345" endtime="20201029 18:16:21.733"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.742" endtime="20201029 18:16:21.762"></status>
</kw>
<msg timestamp="20201029 18:16:21.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.740" endtime="20201029 18:16:21.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:21.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:21.763" endtime="20201029 18:16:21.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.766" endtime="20201029 18:16:21.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.737" endtime="20201029 18:16:21.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.735" endtime="20201029 18:16:21.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:21.776" endtime="20201029 18:16:22.061"></status>
</kw>
<msg timestamp="20201029 18:16:22.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:21.774" endtime="20201029 18:16:22.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022435306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022534639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.066" endtime="20201029 18:16:22.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.074" endtime="20201029 18:16:22.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.771" endtime="20201029 18:16:22.076"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.769" endtime="20201029 18:16:22.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.081" level="INFO">${RESULT} = [{'diff': 9.933300000000006e-05}, {'diff': 9.998599999999983e-05}, {'diff': 9.945899999999966e-05}, {'diff': 9.976399999999871e-05}, {'diff': 9.926400000000168e-05}, {'diff': 9.980499999999795e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:22.078" endtime="20201029 18:16:22.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.086" level="INFO">${ACCURACY} = {'diff': [9.933300000000006e-05, 9.998599999999983e-05, 9.945899999999966e-05, 9.976399999999871e-05, 9.926400000000168e-05, 9.980499999999795e-05, 0.00010015200000000266, 9.934699999999963e-05, 9.977...</msg>
<status status="PASS" starttime="20201029 18:16:22.082" endtime="20201029 18:16:22.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.091" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.090" endtime="20201029 18:16:22.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.094" level="INFO">VALUE: [9.933300000000006e-05, 9.998599999999983e-05, 9.945899999999966e-05, 9.976399999999871e-05, 9.926400000000168e-05, 9.980499999999795e-05, 0.00010015200000000266, 9.934699999999963e-05, 9.977799999999828e-05, 0.00010011099999999995, 9.96809999999973e-05, 0.00010007000000000071, 9.944500000000009e-05, 9.994500000000059e-05, 0.00010001299999999949, 9.994400000000112e-05, 0.00010001399999999896, 9.963900000000206e-05, 9.92219999999995e-05, 9.979199999999785e-05, 9.965299999999816e-05, 9.937499999999877e-05, 9.965300000000163e-05, 9.947199999999976e-05, 9.93609999999992e-05, 9.980499999999795e-05, 0.00010004200000000157, 9.926400000000168e-05, 9.977799999999828e-05, 0.00010013899999999909, 9.997299999999973e-05, 9.951399999999846e-05, 9.962499999999902e-05, 9.952699999999856e-05, 9.998599999999983e-05, 9.974999999999914e-05, 9.994400000000112e-05, 9.965299999999816e-05, 9.982000000000046e-05, 0.00010011099999999995, 0.00010022299999999998, 0.00010009799999999985, 9.96800000000013e-05, 0.00010020800000000094, 9.93060000000004e-05, 9.944400000000062e-05, 9.976400000000218e-05, 9.977799999999828e-05, 9.994499999999712e-05, 0.00010013899999999909]</msg>
<status status="PASS" starttime="20201029 18:16:22.092" endtime="20201029 18:16:22.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.087" endtime="20201029 18:16:22.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.099" endtime="20201029 18:16:22.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.097" endtime="20201029 18:16:22.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.096" endtime="20201029 18:16:22.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.734" endtime="20201029 18:16:22.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:21.733" endtime="20201029 18:16:22.120"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.129" endtime="20201029 18:16:22.149"></status>
</kw>
<msg timestamp="20201029 18:16:22.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.127" endtime="20201029 18:16:22.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.151" endtime="20201029 18:16:22.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.153" endtime="20201029 18:16:22.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.124" endtime="20201029 18:16:22.155"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.122" endtime="20201029 18:16:22.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.163" endtime="20201029 18:16:22.450"></status>
</kw>
<msg timestamp="20201029 18:16:22.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.161" endtime="20201029 18:16:22.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023012347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.454" endtime="20201029 18:16:22.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.463" endtime="20201029 18:16:22.464"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.158" endtime="20201029 18:16:22.465"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.157" endtime="20201029 18:16:22.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.469" level="INFO">${RESULT} = [{'diff': 0.0001010000000000004}, {'diff': 0.00010027800000000225}, {'diff': 0.00010061099999999698}, {'diff': 0.00010057000000000121}, {'diff': 0.00010079199999999885}, {'diff': 0.0001011110000000009...</msg>
<status status="PASS" starttime="20201029 18:16:22.466" endtime="20201029 18:16:22.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.474" level="INFO">${ACCURACY} = {'diff': [0.0001010000000000004, 0.00010027800000000225, 0.00010061099999999698, 0.00010057000000000121, 0.00010079199999999885, 0.00010111100000000095, 0.00010115299999999966, 0.00010104099999999963,...</msg>
<status status="PASS" starttime="20201029 18:16:22.470" endtime="20201029 18:16:22.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.478" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.477" endtime="20201029 18:16:22.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.481" level="INFO">VALUE: [0.0001010000000000004, 0.00010027800000000225, 0.00010061099999999698, 0.00010057000000000121, 0.00010079199999999885, 0.00010111100000000095, 0.00010115299999999966, 0.00010104099999999963, 0.00010083300000000156, 0.0001010410000000031, 0.00010097200000000126, 0.00010051400000000293, 0.00010111100000000095, 0.0001010549999999992, 0.00010038799999999987, 0.0001008610000000007, 0.00010034700000000063, 0.00010045800000000119, 0.00010080499999999895, 0.00010112500000000052, 0.0001006809999999983, 0.00010068100000000177, 0.00010116699999999923, 0.00010029199999999835, 0.0001010000000000004, 0.00010115299999999966, 0.00010111100000000095, 0.00010117999999999933, 0.00010029199999999835, 0.00010097200000000126, 0.00010052799999999903, 0.00010109800000000085, 0.0001004999999999999, 0.00010024999999999964, 0.00010104099999999963, 0.00010077800000000275, 0.00010027799999999878, 0.00010040299999999891, 0.0001004999999999999, 0.00010026399999999921, 0.00010065299999999916, 0.0001010419999999991, 0.00010026399999999921, 0.00010063899999999959, 0.00010094399999999865, 0.00010061100000000045, 0.00010026399999999921, 0.00010111100000000095, 0.0001003610000000002, 0.00010057000000000121]</msg>
<status status="PASS" starttime="20201029 18:16:22.479" endtime="20201029 18:16:22.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.475" endtime="20201029 18:16:22.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.486" endtime="20201029 18:16:22.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.485" endtime="20201029 18:16:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.483" endtime="20201029 18:16:22.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.121" endtime="20201029 18:16:22.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.120" endtime="20201029 18:16:22.507"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.516" endtime="20201029 18:16:22.537"></status>
</kw>
<msg timestamp="20201029 18:16:22.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.514" endtime="20201029 18:16:22.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.539" endtime="20201029 18:16:22.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.541" endtime="20201029 18:16:22.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.512" endtime="20201029 18:16:22.544"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.509" endtime="20201029 18:16:22.544"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.551" endtime="20201029 18:16:22.838"></status>
</kw>
<msg timestamp="20201029 18:16:22.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.550" endtime="20201029 18:16:22.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023607028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023708403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.843" endtime="20201029 18:16:22.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.851" endtime="20201029 18:16:22.853"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.547" endtime="20201029 18:16:22.854"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.545" endtime="20201029 18:16:22.854"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:22.858" level="INFO">${RESULT} = [{'diff': 0.00010137500000000077}, {'diff': 0.00010211099999999848}, {'diff': 0.00010194499999999912}, {'diff': 0.00010149999999999743}, {'diff': 0.0001015549999999997}, {'diff': 0.0001013329999999985...</msg>
<status status="PASS" starttime="20201029 18:16:22.855" endtime="20201029 18:16:22.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:22.862" level="INFO">${ACCURACY} = {'diff': [0.00010137500000000077, 0.00010211099999999848, 0.00010194499999999912, 0.00010149999999999743, 0.0001015549999999997, 0.00010133299999999859, 0.00010213899999999762, 0.00010216700000000023,...</msg>
<status status="PASS" starttime="20201029 18:16:22.859" endtime="20201029 18:16:22.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.867" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 18:16:22.866" endtime="20201029 18:16:22.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.869" level="INFO">VALUE: [0.00010137500000000077, 0.00010211099999999848, 0.00010194499999999912, 0.00010149999999999743, 0.0001015549999999997, 0.00010133299999999859, 0.00010213899999999762, 0.00010216700000000023, 0.00010154200000000307, 0.00010184699999999866, 0.0001020000000000014, 0.0001021809999999998, 0.00010126400000000021, 0.00010202800000000053, 0.00010125000000000065, 0.00010218000000000033, 0.00010213900000000109, 0.00010198600000000183, 0.00010152800000000003, 0.00010213900000000109, 0.00010174999999999768, 0.00010213799999999815, 0.00010184700000000213, 0.00010133299999999859, 0.00010129100000000335, 0.000101722000000002, 0.0001013610000000012, 0.00010161100000000145, 0.00010147199999999829, 0.00010215300000000066, 0.00010175000000000115, 0.0001020139999999975, 0.00010144399999999915, 0.00010194499999999912, 0.00010187500000000127, 0.0001016939999999994, 0.00010158300000000231, 0.00010211099999999848, 0.00010177800000000028, 0.00010198600000000183, 0.00010155599999999917, 0.00010161200000000092, 0.00010194399999999965, 0.00010195799999999922, 0.00010137500000000077, 0.00010170799999999897, 0.000101513999999997, 0.00010141699999999948, 0.00010165300000000016, 0.00010216700000000023]</msg>
<status status="PASS" starttime="20201029 18:16:22.868" endtime="20201029 18:16:22.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.863" endtime="20201029 18:16:22.872"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:22.876" endtime="20201029 18:16:22.895"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.874" endtime="20201029 18:16:22.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.873" endtime="20201029 18:16:22.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.508" endtime="20201029 18:16:22.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.507" endtime="20201029 18:16:22.896"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.906" endtime="20201029 18:16:22.926"></status>
</kw>
<msg timestamp="20201029 18:16:22.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.904" endtime="20201029 18:16:22.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:22.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:22.927" endtime="20201029 18:16:22.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.930" endtime="20201029 18:16:22.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.901" endtime="20201029 18:16:22.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.899" endtime="20201029 18:16:22.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:22.939" endtime="20201029 18:16:23.225"></status>
</kw>
<msg timestamp="20201029 18:16:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:22.938" endtime="20201029 18:16:23.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022585847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.229" endtime="20201029 18:16:23.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.237" endtime="20201029 18:16:23.239"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.935" endtime="20201029 18:16:23.240"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.933" endtime="20201029 18:16:23.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.244" level="INFO">${RESULT} = [{'diff': 0.00010317999999999786}, {'diff': 0.00010270799999999997}, {'diff': 0.00010231900000000002}, {'diff': 0.0001023199999999995}, {'diff': 0.00010319500000000037}, {'diff': 0.0001028330000000000...</msg>
<status status="PASS" starttime="20201029 18:16:23.241" endtime="20201029 18:16:23.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.249" level="INFO">${ACCURACY} = {'diff': [0.00010317999999999786, 0.00010270799999999997, 0.00010231900000000002, 0.0001023199999999995, 0.00010319500000000037, 0.00010283300000000009, 0.00010225000000000165, 0.00010251300000000199,...</msg>
<status status="PASS" starttime="20201029 18:16:23.245" endtime="20201029 18:16:23.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.254" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.253" endtime="20201029 18:16:23.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.257" level="INFO">VALUE: [0.00010317999999999786, 0.00010270799999999997, 0.00010231900000000002, 0.0001023199999999995, 0.00010319500000000037, 0.00010283300000000009, 0.00010225000000000165, 0.00010251300000000199, 0.00010274999999999868, 0.00010295800000000022, 0.00010311099999999948, 0.00010227800000000078, 0.0001030420000000011, 0.00010286099999999923, 0.00010311099999999948, 0.00010291700000000098, 0.00010229200000000035, 0.00010234699999999916, 0.00010279099999999791, 0.00010315300000000166, 0.00010244400000000015, 0.0001030139999999985, 0.00010233399999999906, 0.00010245900000000266, 0.0001027359999999991, 0.00010233399999999906, 0.00010247200000000276, 0.00010287500000000227, 0.00010319399999999743, 0.00010252799999999757, 0.00010256900000000027, 0.00010255600000000017, 0.00010291700000000098, 0.00010277800000000128, 0.00010279200000000085, 0.00010297199999999979, 0.00010274999999999868, 0.00010280499999999748, 0.00010261100000000245, 0.00010297200000000326, 0.00010293100000000055, 0.00010227799999999732, 0.00010315299999999819, 0.00010295899999999969, 0.0001026940000000004, 0.00010301400000000197, 0.0001030139999999985, 0.0001026810000000003, 0.00010291700000000098, 0.00010312499999999905]</msg>
<status status="PASS" starttime="20201029 18:16:23.255" endtime="20201029 18:16:23.257"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.250" endtime="20201029 18:16:23.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.262" endtime="20201029 18:16:23.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.260" endtime="20201029 18:16:23.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.259" endtime="20201029 18:16:23.282"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.897" endtime="20201029 18:16:23.283"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:22.897" endtime="20201029 18:16:23.283"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.292" endtime="20201029 18:16:23.312"></status>
</kw>
<msg timestamp="20201029 18:16:23.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.290" endtime="20201029 18:16:23.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.313" endtime="20201029 18:16:23.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.316" endtime="20201029 18:16:23.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.287" endtime="20201029 18:16:23.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.285" endtime="20201029 18:16:23.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.325" endtime="20201029 18:16:23.613"></status>
</kw>
<msg timestamp="20201029 18:16:23.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.324" endtime="20201029 18:16:23.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022569042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.617" endtime="20201029 18:16:23.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.625" endtime="20201029 18:16:23.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.321" endtime="20201029 18:16:23.627"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.319" endtime="20201029 18:16:23.628"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:23.632" level="INFO">${RESULT} = [{'diff': 0.00010383299999999762}, {'diff': 0.00010325000000000265}, {'diff': 0.00010334700000000016}, {'diff': 0.0001037360000000001}, {'diff': 0.00010358300000000084}, {'diff': 0.0001038749999999998...</msg>
<status status="PASS" starttime="20201029 18:16:23.628" endtime="20201029 18:16:23.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:23.636" level="INFO">${ACCURACY} = {'diff': [0.00010383299999999762, 0.00010325000000000265, 0.00010334700000000016, 0.0001037360000000001, 0.00010358300000000084, 0.0001038749999999998, 0.00010345900000000019, 0.00010399999999999993, ...</msg>
<status status="PASS" starttime="20201029 18:16:23.633" endtime="20201029 18:16:23.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.641" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 18:16:23.639" endtime="20201029 18:16:23.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.643" level="INFO">VALUE: [0.00010383299999999762, 0.00010325000000000265, 0.00010334700000000016, 0.0001037360000000001, 0.00010358300000000084, 0.0001038749999999998, 0.00010345900000000019, 0.00010399999999999993, 0.00010329099999999841, 0.00010352800000000204, 0.00010402699999999959, 0.0001040139999999995, 0.00010329200000000135, 0.00010392999999999861, 0.00010359700000000041, 0.00010334700000000016, 0.00010343100000000105, 0.00010330599999999746, 0.00010344499999999715, 0.0001033200000000005, 0.00010391599999999904, 0.00010343000000000158, 0.00010331900000000102, 0.0001040139999999995, 0.00010397200000000079, 0.00010344500000000062, 0.0001038749999999998, 0.00010359799999999988, 0.00010333400000000006, 0.00010377699999999934, 0.00010412500000000005, 0.00010392999999999861, 0.00010329200000000135, 0.00010418099999999833, 0.00010363899999999912, 0.00010330600000000092, 0.00010419399999999843, 0.00010418000000000233, 0.0001040139999999995, 0.00010344400000000115, 0.00010333299999999712, 0.00010419399999999843, 0.00010334700000000016, 0.00010343099999999758, 0.0001040550000000022, 0.00010417999999999886, 0.00010365299999999869, 0.00010392999999999861, 0.00010344400000000115, 0.00010370800000000097]</msg>
<status status="PASS" starttime="20201029 18:16:23.642" endtime="20201029 18:16:23.651"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.637" endtime="20201029 18:16:23.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:23.655" endtime="20201029 18:16:23.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.654" endtime="20201029 18:16:23.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.652" endtime="20201029 18:16:23.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.284" endtime="20201029 18:16:23.676"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.283" endtime="20201029 18:16:23.676"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.685" endtime="20201029 18:16:23.706"></status>
</kw>
<msg timestamp="20201029 18:16:23.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.684" endtime="20201029 18:16:23.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:23.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:23.708" endtime="20201029 18:16:23.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.711" endtime="20201029 18:16:23.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.681" endtime="20201029 18:16:23.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.679" endtime="20201029 18:16:23.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:23.720" endtime="20201029 18:16:24.008"></status>
</kw>
<msg timestamp="20201029 18:16:24.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:23.718" endtime="20201029 18:16:24.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023592417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.012" endtime="20201029 18:16:24.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.020" endtime="20201029 18:16:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.716" endtime="20201029 18:16:24.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.714" endtime="20201029 18:16:24.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.027" level="INFO">${RESULT} = [{'diff': 0.00010486100000000123}, {'diff': 0.00010427800000000279}, {'diff': 0.00010475000000000068}, {'diff': 0.00010486100000000123}, {'diff': 0.00010444399999999868}, {'diff': 0.000104929999999999...</msg>
<status status="PASS" starttime="20201029 18:16:24.024" endtime="20201029 18:16:24.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.031" level="INFO">${ACCURACY} = {'diff': [0.00010486100000000123, 0.00010427800000000279, 0.00010475000000000068, 0.00010486100000000123, 0.00010444399999999868, 0.00010492999999999961, 0.0001051940000000029, 0.00010434700000000116,...</msg>
<status status="PASS" starttime="20201029 18:16:24.028" endtime="20201029 18:16:24.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.036" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.035" endtime="20201029 18:16:24.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.038" level="INFO">VALUE: [0.00010486100000000123, 0.00010427800000000279, 0.00010475000000000068, 0.00010486100000000123, 0.00010444399999999868, 0.00010492999999999961, 0.0001051940000000029, 0.00010434700000000116, 0.0001045559999999987, 0.00010512499999999758, 0.00010462500000000055, 0.00010502800000000007, 0.00010427699999999984, 0.00010445800000000172, 0.00010443000000000258, 0.00010508299999999887, 0.00010430600000000192, 0.00010445900000000119, 0.00010509700000000191, 0.00010477799999999982, 0.0001043750000000003, 0.00010477799999999982, 0.0001048889999999969, 0.00010427799999999932, 0.0001050689999999993, 0.00010459700000000141, 0.00010433299999999812, 0.00010472200000000154, 0.00010508299999999887, 0.00010493099999999908, 0.00010447199999999782, 0.00010516600000000029, 0.00010444399999999868, 0.00010461100000000098, 0.00010448600000000086, 0.00010470800000000197, 0.00010461100000000098, 0.00010480599999999896, 0.00010429199999999889, 0.00010491699999999951, 0.0001050689999999993, 0.00010500000000000093, 0.00010476400000000025, 0.00010502800000000007, 0.00010511099999999801, 0.00010493099999999908, 0.00010462500000000055, 0.0001048620000000007, 0.00010494400000000265, 0.00010438899999999987]</msg>
<status status="PASS" starttime="20201029 18:16:24.037" endtime="20201029 18:16:24.040"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.032" endtime="20201029 18:16:24.041"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.045" endtime="20201029 18:16:24.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.043" endtime="20201029 18:16:24.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.042" endtime="20201029 18:16:24.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.677" endtime="20201029 18:16:24.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:23.677" endtime="20201029 18:16:24.065"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.074" endtime="20201029 18:16:24.095"></status>
</kw>
<msg timestamp="20201029 18:16:24.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.073" endtime="20201029 18:16:24.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.096" endtime="20201029 18:16:24.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.099" endtime="20201029 18:16:24.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.070" endtime="20201029 18:16:24.101"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.068" endtime="20201029 18:16:24.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.108" endtime="20201029 18:16:24.395"></status>
</kw>
<msg timestamp="20201029 18:16:24.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.107" endtime="20201029 18:16:24.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022446181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022551694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.399" endtime="20201029 18:16:24.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.407" endtime="20201029 18:16:24.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.104" endtime="20201029 18:16:24.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.102" endtime="20201029 18:16:24.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.414" level="INFO">${RESULT} = [{'diff': 0.00010551300000000152}, {'diff': 0.00010606899999999683}, {'diff': 0.00010525000000000118}, {'diff': 0.00010545799999999925}, {'diff': 0.00010584699999999919}, {'diff': 0.000106181000000000...</msg>
<status status="PASS" starttime="20201029 18:16:24.411" endtime="20201029 18:16:24.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.419" level="INFO">${ACCURACY} = {'diff': [0.00010551300000000152, 0.00010606899999999683, 0.00010525000000000118, 0.00010545799999999925, 0.00010584699999999919, 0.00010618100000000033, 0.00010526399999999728, 0.00010594499999999965...</msg>
<status status="PASS" starttime="20201029 18:16:24.415" endtime="20201029 18:16:24.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.424" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.423" endtime="20201029 18:16:24.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.426" level="INFO">VALUE: [0.00010551300000000152, 0.00010606899999999683, 0.00010525000000000118, 0.00010545799999999925, 0.00010584699999999919, 0.00010618100000000033, 0.00010526399999999728, 0.00010594499999999965, 0.00010568099999999983, 0.00010530499999999998, 0.00010545799999999925, 0.00010593000000000061, 0.00010534699999999869, 0.00010551399999999753, 0.0001058889999999979, 0.00010580500000000048, 0.00010618000000000086, 0.00010577799999999735, 0.00010599999999999846, 0.00010613900000000162, 0.00010545800000000272, 0.00010526400000000075, 0.00010612499999999858, 0.00010530599999999946, 0.0001052499999999977, 0.000105514000000001, 0.00010593000000000061, 0.00010601399999999803, 0.00010566700000000026, 0.00010577800000000082, 0.00010565300000000069, 0.0001062360000000026, 0.00010536099999999826, 0.00010551399999999753, 0.00010538900000000087, 0.00010605500000000073, 0.00010593000000000061, 0.00010584700000000266, 0.00010529199999999989, 0.00010597300000000226, 0.00010533299999999912, 0.00010534700000000216, 0.0001055689999999998, 0.00010534800000000163, 0.00010551299999999805, 0.00010530599999999946, 0.00010594400000000018, 0.00010611099999999901, 0.00010609699999999944, 0.00010608299999999987]</msg>
<status status="PASS" starttime="20201029 18:16:24.425" endtime="20201029 18:16:24.427"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.420" endtime="20201029 18:16:24.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.432" endtime="20201029 18:16:24.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.430" endtime="20201029 18:16:24.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.429" endtime="20201029 18:16:24.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.066" endtime="20201029 18:16:24.452"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.066" endtime="20201029 18:16:24.452"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.462" endtime="20201029 18:16:24.482"></status>
</kw>
<msg timestamp="20201029 18:16:24.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.460" endtime="20201029 18:16:24.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.484" endtime="20201029 18:16:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.486" endtime="20201029 18:16:24.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.457" endtime="20201029 18:16:24.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.455" endtime="20201029 18:16:24.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.496" endtime="20201029 18:16:24.785"></status>
</kw>
<msg timestamp="20201029 18:16:24.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.494" endtime="20201029 18:16:24.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022950375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023056875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.789" endtime="20201029 18:16:24.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.797" endtime="20201029 18:16:24.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.492" endtime="20201029 18:16:24.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.490" endtime="20201029 18:16:24.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:24.804" level="INFO">${RESULT} = [{'diff': 0.00010650000000000243}, {'diff': 0.00010701399999999903}, {'diff': 0.00010661099999999951}, {'diff': 0.00010694499999999718}, {'diff': 0.00010716599999999882}, {'diff': 0.000106985999999999...</msg>
<status status="PASS" starttime="20201029 18:16:24.800" endtime="20201029 18:16:24.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:24.808" level="INFO">${ACCURACY} = {'diff': [0.00010650000000000243, 0.00010701399999999903, 0.00010661099999999951, 0.00010694499999999718, 0.00010716599999999882, 0.00010698599999999989, 0.00010684700000000019, 0.00010632000000000003...</msg>
<status status="PASS" starttime="20201029 18:16:24.805" endtime="20201029 18:16:24.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.813" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 18:16:24.812" endtime="20201029 18:16:24.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.815" level="INFO">VALUE: [0.00010650000000000243, 0.00010701399999999903, 0.00010661099999999951, 0.00010694499999999718, 0.00010716599999999882, 0.00010698599999999989, 0.00010684700000000019, 0.00010632000000000003, 0.00010650000000000243, 0.00010627800000000132, 0.00010682000000000053, 0.00010698599999999989, 0.00010629199999999742, 0.00010647199999999982, 0.00010701399999999903, 0.00010681899999999758, 0.0001070560000000012, 0.00010706899999999783, 0.00010681900000000105, 0.00010709700000000044, 0.00010636100000000273, 0.0001068340000000001, 0.00010645800000000025, 0.0001062360000000026, 0.00010658300000000037, 0.00010709700000000044, 0.00010719499999999743, 0.00010677800000000182, 0.00010677800000000182, 0.00010694499999999718, 0.00010666699999999779, 0.00010636099999999926, 0.00010716599999999882, 0.00010695800000000075, 0.00010636100000000273, 0.00010683300000000062, 0.0001066950000000004, 0.00010711100000000001, 0.00010684799999999967, 0.00010627799999999785, 0.00010713899999999915, 0.00010655499999999776, 0.00010636099999999926, 0.00010634699999999969, 0.00010697200000000032, 0.00010679200000000139, 0.00010713899999999915, 0.00010627800000000132, 0.00010680500000000148, 0.00010677700000000234]</msg>
<status status="PASS" starttime="20201029 18:16:24.814" endtime="20201029 18:16:24.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.809" endtime="20201029 18:16:24.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:24.820" endtime="20201029 18:16:24.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.819" endtime="20201029 18:16:24.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.818" endtime="20201029 18:16:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.453" endtime="20201029 18:16:24.841"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.453" endtime="20201029 18:16:24.841"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.850" endtime="20201029 18:16:24.872"></status>
</kw>
<msg timestamp="20201029 18:16:24.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.849" endtime="20201029 18:16:24.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:24.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:24.873" endtime="20201029 18:16:24.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.876" endtime="20201029 18:16:24.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.846" endtime="20201029 18:16:24.878"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.844" endtime="20201029 18:16:24.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:24.886" endtime="20201029 18:16:25.171"></status>
</kw>
<msg timestamp="20201029 18:16:25.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:24.884" endtime="20201029 18:16:25.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023519222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023627361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.176" endtime="20201029 18:16:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.184" endtime="20201029 18:16:25.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.881" endtime="20201029 18:16:25.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.879" endtime="20201029 18:16:25.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.191" level="INFO">${RESULT} = [{'diff': 0.00010813900000000015}, {'diff': 0.00010786100000000076}, {'diff': 0.00010777799999999935}, {'diff': 0.00010781899999999858}, {'diff': 0.00010737499999999983}, {'diff': 0.000107263999999999...</msg>
<status status="PASS" starttime="20201029 18:16:25.188" endtime="20201029 18:16:25.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.195" level="INFO">${ACCURACY} = {'diff': [0.00010813900000000015, 0.00010786100000000076, 0.00010777799999999935, 0.00010781899999999858, 0.00010737499999999983, 0.00010726399999999928, 0.00010743000000000211, 0.00010797200000000132...</msg>
<status status="PASS" starttime="20201029 18:16:25.192" endtime="20201029 18:16:25.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.200" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.199" endtime="20201029 18:16:25.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.202" level="INFO">VALUE: [0.00010813900000000015, 0.00010786100000000076, 0.00010777799999999935, 0.00010781899999999858, 0.00010737499999999983, 0.00010726399999999928, 0.00010743000000000211, 0.00010797200000000132, 0.00010781900000000205, 0.00010767999999999889, 0.00010783299999999815, 0.0001082500000000007, 0.00010740299999999897, 0.00010744399999999821, 0.0001080699999999983, 0.00010784700000000119, 0.00010802700000000012, 0.00010797199999999785, 0.00010791699999999904, 0.00010768099999999836, 0.00010822299999999757, 0.00010812500000000058, 0.00010781999999999806, 0.00010784700000000119, 0.00010754099999999919, 0.00010797200000000132, 0.00010763899999999965, 0.00010743100000000158, 0.00010787500000000033, 0.00010734699999999722, 0.00010727799999999885, 0.00010777699999999987, 0.00010777699999999987, 0.00010794399999999871, 0.00010744400000000168, 0.00010727800000000232, 0.00010779200000000239, 0.00010758300000000137, 0.00010808400000000135, 0.00010816700000000276, 0.00010727799999999885, 0.0001072629999999998, 0.00010758300000000137, 0.00010812500000000058, 0.00010751399999999953, 0.00010726399999999928, 0.00010809699999999797, 0.00010784700000000119, 0.0001082219999999981, 0.00010741699999999854]</msg>
<status status="PASS" starttime="20201029 18:16:25.201" endtime="20201029 18:16:25.204"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.196" endtime="20201029 18:16:25.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.208" endtime="20201029 18:16:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.207" endtime="20201029 18:16:25.228"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.205" endtime="20201029 18:16:25.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.842" endtime="20201029 18:16:25.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:24.842" endtime="20201029 18:16:25.229"></status>
</kw>
<status status="PASS" starttime="20201029 18:15:46.427" endtime="20201029 18:16:25.229"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:15:46.359" endtime="20201029 18:16:25.230" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.237" endtime="20201029 18:16:25.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.235" endtime="20201029 18:16:25.257"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.270" endtime="20201029 18:16:25.285"></status>
</kw>
<msg timestamp="20201029 18:16:25.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.269" endtime="20201029 18:16:25.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.286" endtime="20201029 18:16:25.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.291" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:16:25.289" endtime="20201029 18:16:25.291"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:25.266" endtime="20201029 18:16:25.292"></status>
</kw>
<status status="FAIL" starttime="20201029 18:16:25.264" endtime="20201029 18:16:25.293"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.262" endtime="20201029 18:16:25.293"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:16:25.297" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:16:25.296" endtime="20201029 18:16:25.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.294" endtime="20201029 18:16:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.261" endtime="20201029 18:16:25.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.261" endtime="20201029 18:16:25.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.299" endtime="20201029 18:16:25.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.259" endtime="20201029 18:16:25.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.258" endtime="20201029 18:16:25.301"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.234" endtime="20201029 18:16:25.302"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.313" endtime="20201029 18:16:25.327"></status>
</kw>
<msg timestamp="20201029 18:16:25.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.311" endtime="20201029 18:16:25.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.329" endtime="20201029 18:16:25.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.332" endtime="20201029 18:16:25.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.307" endtime="20201029 18:16:25.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.305" endtime="20201029 18:16:25.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.341" endtime="20201029 18:16:25.627"></status>
</kw>
<msg timestamp="20201029 18:16:25.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068576014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.340" endtime="20201029 18:16:25.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068566972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068576014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.631" endtime="20201029 18:16:25.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.640" endtime="20201029 18:16:25.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.337" endtime="20201029 18:16:25.642"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.335" endtime="20201029 18:16:25.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:25.647" level="INFO">${RESULT} = [{'diff': 9.042000000000772e-06}, {'diff': 9.597000000000078e-06}, {'diff': 9.611000000006586e-06}, {'diff': 9.513999999988254e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.610999999992709e-06}, {...</msg>
<status status="PASS" starttime="20201029 18:16:25.644" endtime="20201029 18:16:25.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:25.651" level="INFO">${ACCURACY} = {'diff': [9.042000000000772e-06, 9.597000000000078e-06, 9.611000000006586e-06, 9.513999999988254e-06, 9.624999999999218e-06, 9.610999999992709e-06, 8.999999999995123e-06, 9.597000000000078e-06, 9.6249...</msg>
<status status="PASS" starttime="20201029 18:16:25.648" endtime="20201029 18:16:25.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.657" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 18:16:25.656" endtime="20201029 18:16:25.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.659" level="INFO">VALUE: [9.042000000000772e-06, 9.597000000000078e-06, 9.611000000006586e-06, 9.513999999988254e-06, 9.624999999999218e-06, 9.610999999992709e-06, 8.999999999995123e-06, 9.597000000000078e-06, 9.624999999999218e-06, 9.638999999991849e-06, 9.597999999999551e-06, 9.624999999999218e-06, 9.611000000006586e-06, 8.986000000002492e-06, 9.597000000000078e-06, 9.583999999993043e-06, 8.986000000002492e-06, 9.694000000004532e-06, 9.610999999992709e-06, 9.624999999999218e-06, 9.666999999990988e-06, 9.042000000000772e-06, 9.597000000000078e-06, 9.083999999992542e-06, 9.597000000000078e-06, 8.971999999995983e-06, 9.583000000007447e-06, 8.999999999995123e-06, 9.013000000002158e-06, 8.986000000002492e-06, 9.624999999999218e-06, 8.986000000002492e-06, 8.986000000002492e-06, 9.624999999999218e-06, 9.000000000009e-06, 8.999999999995123e-06, 9.014000000001632e-06, 9.610999999992709e-06, 9.597999999999551e-06, 9.624999999999218e-06, 9.610999999992709e-06, 9.597000000000078e-06, 8.999999999995123e-06, 8.959000000002826e-06, 8.986000000002492e-06, 9.624999999999218e-06, 8.999999999995123e-06, 9.597000000000078e-06, 9.597000000000078e-06, 8.999999999995123e-06]</msg>
<status status="PASS" starttime="20201029 18:16:25.658" endtime="20201029 18:16:25.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.652" endtime="20201029 18:16:25.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:25.664" endtime="20201029 18:16:25.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.663" endtime="20201029 18:16:25.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.661" endtime="20201029 18:16:25.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.303" endtime="20201029 18:16:25.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.303" endtime="20201029 18:16:25.685"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.694" endtime="20201029 18:16:25.710"></status>
</kw>
<msg timestamp="20201029 18:16:25.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.693" endtime="20201029 18:16:25.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:25.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:25.711" endtime="20201029 18:16:25.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.714" endtime="20201029 18:16:25.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.690" endtime="20201029 18:16:25.716"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.688" endtime="20201029 18:16:25.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:25.724" endtime="20201029 18:16:26.011"></status>
</kw>
<msg timestamp="20201029 18:16:26.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:25.722" endtime="20201029 18:16:26.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023009514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023020319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.015" endtime="20201029 18:16:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.024" endtime="20201029 18:16:26.025"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.719" endtime="20201029 18:16:26.026"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.717" endtime="20201029 18:16:26.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.031" level="INFO">${RESULT} = [{'diff': 1.0805000000002618e-05}, {'diff': 1.0207999999997663e-05}, {'diff': 1.0137999999999814e-05}, {'diff': 1.0223000000000176e-05}, {'diff': 1.0195000000001037e-05}, {'diff': 1.0209000000000606e-...</msg>
<status status="PASS" starttime="20201029 18:16:26.027" endtime="20201029 18:16:26.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.036" level="INFO">${ACCURACY} = {'diff': [1.0805000000002618e-05, 1.0207999999997663e-05, 1.0137999999999814e-05, 1.0223000000000176e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0208999999997137e-05...</msg>
<status status="PASS" starttime="20201029 18:16:26.032" endtime="20201029 18:16:26.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.041" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.040" endtime="20201029 18:16:26.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.043" level="INFO">VALUE: [1.0805000000002618e-05, 1.0207999999997663e-05, 1.0137999999999814e-05, 1.0223000000000176e-05, 1.0195000000001037e-05, 1.0209000000000606e-05, 1.0193999999998093e-05, 1.0208999999997137e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0208000000001133e-05, 1.0804999999999149e-05, 1.0832999999998288e-05, 1.0249999999999843e-05, 1.0208000000001133e-05, 1.0818999999998719e-05, 1.0208999999997137e-05, 1.0818999999998719e-05, 1.0209000000000606e-05, 1.0221999999997233e-05, 9.610999999999648e-06, 1.0804999999999149e-05, 1.0804999999999149e-05, 1.0209000000000606e-05, 1.0222000000000703e-05, 1.0806000000002092e-05, 1.0193999999998093e-05, 1.0818999999998719e-05, 1.0209000000000606e-05, 1.0223000000000176e-05, 1.0208000000001133e-05, 1.0195000000001037e-05, 1.0263999999999412e-05, 1.0194999999997567e-05, 1.0208000000001133e-05, 1.0792000000002522e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.0819000000002188e-05, 1.0833000000001758e-05, 1.0194999999997567e-05, 9.597999999999551e-06, 1.0195000000001037e-05, 1.0805000000002618e-05, 1.0887999999997094e-05, 1.0223000000000176e-05, 1.0221999999997233e-05, 1.0208000000001133e-05, 1.0208000000001133e-05, 1.0208000000001133e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.042" endtime="20201029 18:16:26.044"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.037" endtime="20201029 18:16:26.044"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.048" endtime="20201029 18:16:26.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.047" endtime="20201029 18:16:26.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.045" endtime="20201029 18:16:26.068"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.686" endtime="20201029 18:16:26.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.685" endtime="20201029 18:16:26.069"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.079" endtime="20201029 18:16:26.094"></status>
</kw>
<msg timestamp="20201029 18:16:26.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.077" endtime="20201029 18:16:26.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.095" endtime="20201029 18:16:26.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.098" endtime="20201029 18:16:26.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.074" endtime="20201029 18:16:26.100"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.071" endtime="20201029 18:16:26.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.107" endtime="20201029 18:16:26.394"></status>
</kw>
<msg timestamp="20201029 18:16:26.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023542167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.106" endtime="20201029 18:16:26.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023542167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.398" endtime="20201029 18:16:26.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.407" endtime="20201029 18:16:26.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.103" endtime="20201029 18:16:26.409"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.101" endtime="20201029 18:16:26.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.414" level="INFO">${RESULT} = [{'diff': 1.1458999999998387e-05}, {'diff': 1.1417000000003147e-05}, {'diff': 1.0790999999999579e-05}, {'diff': 1.2055999999999872e-05}, {'diff': 1.0806000000002092e-05}, {'diff': 1.1416999999999677e-...</msg>
<status status="PASS" starttime="20201029 18:16:26.410" endtime="20201029 18:16:26.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.418" level="INFO">${ACCURACY} = {'diff': [1.1458999999998387e-05, 1.1417000000003147e-05, 1.0790999999999579e-05, 1.2055999999999872e-05, 1.0806000000002092e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1429999999999774e-05...</msg>
<status status="PASS" starttime="20201029 18:16:26.415" endtime="20201029 18:16:26.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.423" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.422" endtime="20201029 18:16:26.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.425" level="INFO">VALUE: [1.1458999999998387e-05, 1.1417000000003147e-05, 1.0790999999999579e-05, 1.2055999999999872e-05, 1.0806000000002092e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1429999999999774e-05, 1.2028000000000733e-05, 1.0818999999998719e-05, 1.1430999999999247e-05, 1.0805999999998622e-05, 1.1416999999999677e-05, 1.2028000000000733e-05, 1.0778000000002952e-05, 1.1457999999998913e-05, 1.1416999999999677e-05, 1.2014000000001163e-05, 1.0805999999998622e-05, 1.0832999999998288e-05, 1.1444000000002813e-05, 1.1403000000000107e-05, 1.1445000000002287e-05, 1.1416000000000204e-05, 1.1471999999998483e-05, 1.0875000000000468e-05, 1.1416999999999677e-05, 1.1944999999999317e-05, 1.1431000000002717e-05, 1.1416999999999677e-05, 1.1403000000000107e-05, 1.0820000000001662e-05, 1.1375000000000968e-05, 1.1429999999999774e-05, 1.0889000000000038e-05, 1.1430999999999247e-05, 1.0790999999999579e-05, 1.0805999999998622e-05, 1.1416999999999677e-05, 1.0861000000000898e-05, 1.0848000000000801e-05, 1.1417000000003147e-05, 1.1417000000003147e-05, 1.1445000000002287e-05, 1.0833999999997762e-05, 1.1430999999999247e-05, 1.1401999999997164e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.2013000000001689e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.424" endtime="20201029 18:16:26.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.419" endtime="20201029 18:16:26.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.430" endtime="20201029 18:16:26.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.428" endtime="20201029 18:16:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.427" endtime="20201029 18:16:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.070" endtime="20201029 18:16:26.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.069" endtime="20201029 18:16:26.451"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.463" endtime="20201029 18:16:26.479"></status>
</kw>
<msg timestamp="20201029 18:16:26.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.460" endtime="20201029 18:16:26.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.481" endtime="20201029 18:16:26.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.484" endtime="20201029 18:16:26.486"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.456" endtime="20201029 18:16:26.487"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.454" endtime="20201029 18:16:26.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.494" endtime="20201029 18:16:26.780"></status>
</kw>
<msg timestamp="20201029 18:16:26.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026015681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026027694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.492" endtime="20201029 18:16:26.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026015681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026027694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.785" endtime="20201029 18:16:26.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.796" endtime="20201029 18:16:26.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.489" endtime="20201029 18:16:26.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.488" endtime="20201029 18:16:26.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:26.805" level="INFO">${RESULT} = [{'diff': 1.2013000000001689e-05}, {'diff': 1.1959000000002357e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2625000000002218e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2625000000002218e-...</msg>
<status status="PASS" starttime="20201029 18:16:26.801" endtime="20201029 18:16:26.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:26.810" level="INFO">${ACCURACY} = {'diff': [1.2013000000001689e-05, 1.1959000000002357e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2028000000000733e-05, 1.2000000000001593e-05...</msg>
<status status="PASS" starttime="20201029 18:16:26.806" endtime="20201029 18:16:26.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.816" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 18:16:26.815" endtime="20201029 18:16:26.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.819" level="INFO">VALUE: [1.2013000000001689e-05, 1.1959000000002357e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.2028000000000733e-05, 1.2000000000001593e-05, 1.2610999999999178e-05, 1.2027999999997263e-05, 1.2694000000000594e-05, 1.2624999999998748e-05, 1.2680000000001024e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2568999999997e-05, 1.2610999999999178e-05, 1.2583000000000039e-05, 1.2028000000000733e-05, 1.1943999999999844e-05, 1.1999999999998123e-05, 1.1999999999998123e-05, 1.2041999999996833e-05, 1.2638999999998318e-05, 1.2098000000002052e-05, 1.2612000000002122e-05, 1.2652000000001884e-05, 1.2610999999999178e-05, 1.2695000000000067e-05, 1.2028000000000733e-05, 1.2597999999999082e-05, 1.2653000000001358e-05, 1.2014000000001163e-05, 1.2610999999999178e-05, 1.2028000000000733e-05, 1.2013999999997693e-05, 1.2624999999998748e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2625000000002218e-05, 1.2637999999998845e-05, 1.2013999999997693e-05, 1.2624999999998748e-05, 1.2014000000001163e-05, 1.2027000000001259e-05, 1.2624999999998748e-05, 1.202699999999779e-05, 1.2569000000000469e-05, 1.1957999999999414e-05]</msg>
<status status="PASS" starttime="20201029 18:16:26.818" endtime="20201029 18:16:26.821"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.812" endtime="20201029 18:16:26.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:26.825" endtime="20201029 18:16:26.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.824" endtime="20201029 18:16:26.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.822" endtime="20201029 18:16:26.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.452" endtime="20201029 18:16:26.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.452" endtime="20201029 18:16:26.846"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.855" endtime="20201029 18:16:26.870"></status>
</kw>
<msg timestamp="20201029 18:16:26.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.854" endtime="20201029 18:16:26.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:26.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:26.872" endtime="20201029 18:16:26.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.875" endtime="20201029 18:16:26.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.851" endtime="20201029 18:16:26.877"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.849" endtime="20201029 18:16:26.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:26.884" endtime="20201029 18:16:27.170"></status>
</kw>
<msg timestamp="20201029 18:16:27.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:26.883" endtime="20201029 18:16:27.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022646681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022659903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.175" endtime="20201029 18:16:27.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.185" endtime="20201029 18:16:27.187"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.880" endtime="20201029 18:16:27.188"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.878" endtime="20201029 18:16:27.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.194" level="INFO">${RESULT} = [{'diff': 1.3222000000000234e-05}, {'diff': 1.383299999999782e-05}, {'diff': 1.3249999999999373e-05}, {'diff': 1.3222000000000234e-05}, {'diff': 1.2639000000001788e-05}, {'diff': 1.2625000000002218e-0...</msg>
<status status="PASS" starttime="20201029 18:16:27.190" endtime="20201029 18:16:27.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.202" level="INFO">${ACCURACY} = {'diff': [1.3222000000000234e-05, 1.383299999999782e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.3222000000000234e-05, 1.3195000000000567e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:27.196" endtime="20201029 18:16:27.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.208" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.206" endtime="20201029 18:16:27.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.210" level="INFO">VALUE: [1.3222000000000234e-05, 1.383299999999782e-05, 1.3249999999999373e-05, 1.3222000000000234e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.3222000000000234e-05, 1.3195000000000567e-05, 1.3833000000001289e-05, 1.3847000000000859e-05, 1.3791000000002579e-05, 1.3222000000000234e-05, 1.3848000000000332e-05, 1.3306000000001122e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3221999999996764e-05, 1.3763999999999443e-05, 1.3833000000001289e-05, 1.3847999999996863e-05, 1.3222000000000234e-05, 1.3235999999999803e-05, 1.3222000000000234e-05, 1.3806000000001623e-05, 1.3222000000000234e-05, 1.3222000000000234e-05, 1.2611000000002648e-05, 1.3222999999999707e-05, 1.2638999999998318e-05, 1.326299999999947e-05, 1.3861000000000429e-05, 1.381899999999825e-05, 1.3208000000000664e-05, 1.383299999999782e-05, 1.3235999999999803e-05, 1.3194000000001094e-05, 1.3833000000001289e-05, 1.3209000000000137e-05, 1.384699999999739e-05, 1.2611000000002648e-05, 1.3847000000000859e-05, 1.3235999999999803e-05, 1.2583999999999512e-05, 1.3250000000002843e-05, 1.3820000000001192e-05, 1.3222000000000234e-05, 1.3222999999999707e-05, 1.3235999999999803e-05, 1.2624999999998748e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.209" endtime="20201029 18:16:27.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.203" endtime="20201029 18:16:27.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.216" endtime="20201029 18:16:27.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.214" endtime="20201029 18:16:27.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.213" endtime="20201029 18:16:27.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.847" endtime="20201029 18:16:27.236"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:26.846" endtime="20201029 18:16:27.236"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.246" endtime="20201029 18:16:27.261"></status>
</kw>
<msg timestamp="20201029 18:16:27.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.244" endtime="20201029 18:16:27.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.263" endtime="20201029 18:16:27.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.265" endtime="20201029 18:16:27.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.241" endtime="20201029 18:16:27.267"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.239" endtime="20201029 18:16:27.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.275" endtime="20201029 18:16:27.560"></status>
</kw>
<msg timestamp="20201029 18:16:27.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227455, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:27.273" endtime="20201029 18:16:27.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0227455, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:27.564" endtime="20201029 18:16:27.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.573" endtime="20201029 18:16:27.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.270" endtime="20201029 18:16:27.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.269" endtime="20201029 18:16:27.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.580" level="INFO">${RESULT} = [{'diff': 1.4457999999998444e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.4415999999999735e-05}, {'diff': 1.4457999999998444e-05}, {'diff': 1.4388999999996599e-05}, {'diff': 1.5028000000000263e-...</msg>
<status status="PASS" starttime="20201029 18:16:27.577" endtime="20201029 18:16:27.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.584" level="INFO">${ACCURACY} = {'diff': [1.4457999999998444e-05, 1.4430999999998778e-05, 1.4415999999999735e-05, 1.4457999999998444e-05, 1.4388999999996599e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.4457999999998444e-05...</msg>
<status status="PASS" starttime="20201029 18:16:27.581" endtime="20201029 18:16:27.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.590" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.589" endtime="20201029 18:16:27.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.594" level="INFO">VALUE: [1.4457999999998444e-05, 1.4430999999998778e-05, 1.4415999999999735e-05, 1.4457999999998444e-05, 1.4388999999996599e-05, 1.5028000000000263e-05, 1.4972000000001984e-05, 1.4457999999998444e-05, 1.4457999999998444e-05, 1.3833000000001289e-05, 1.4443999999998874e-05, 1.383299999999782e-05, 1.4445000000001817e-05, 1.4430000000002774e-05, 1.4444999999998348e-05, 1.381899999999825e-05, 1.4429999999999304e-05, 1.4430999999998778e-05, 1.3847000000000859e-05, 1.4444999999998348e-05, 1.4402999999999638e-05, 1.4444999999998348e-05, 1.4430000000002774e-05, 1.380499999999868e-05, 1.4389000000000068e-05, 1.3805999999998153e-05, 1.3834000000000762e-05, 1.4415999999999735e-05, 1.5014000000000693e-05, 1.4443999999998874e-05, 1.4416999999999208e-05, 1.4459000000001387e-05, 1.505499999999993e-05, 1.4459000000001387e-05, 1.3847999999996863e-05, 1.3834000000000762e-05, 1.3819000000001719e-05, 1.4389000000000068e-05, 1.504100000000036e-05, 1.3833000000001289e-05, 1.4444000000002344e-05, 1.4431000000002248e-05, 1.4444999999998348e-05, 1.4443999999998874e-05, 1.4457999999998444e-05, 1.5041999999999833e-05, 1.3778000000002483e-05, 1.3833000000001289e-05, 1.4457999999998444e-05, 1.4389000000000068e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.592" endtime="20201029 18:16:27.594"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.585" endtime="20201029 18:16:27.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:27.599" endtime="20201029 18:16:27.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.597" endtime="20201029 18:16:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.596" endtime="20201029 18:16:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.237" endtime="20201029 18:16:27.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.237" endtime="20201029 18:16:27.620"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.629" endtime="20201029 18:16:27.646"></status>
</kw>
<msg timestamp="20201029 18:16:27.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.627" endtime="20201029 18:16:27.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:27.647" endtime="20201029 18:16:27.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.651" endtime="20201029 18:16:27.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.624" endtime="20201029 18:16:27.654"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.622" endtime="20201029 18:16:27.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.665" endtime="20201029 18:16:27.963"></status>
</kw>
<msg timestamp="20201029 18:16:27.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.662" endtime="20201029 18:16:27.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024083042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024098736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:27.967" endtime="20201029 18:16:27.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:27.976" endtime="20201029 18:16:27.977"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.659" endtime="20201029 18:16:27.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.656" endtime="20201029 18:16:27.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:27.983" level="INFO">${RESULT} = [{'diff': 1.5694000000000125e-05}, {'diff': 1.5111999999997683e-05}, {'diff': 1.566700000000046e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.5638000000001845e-05}, {'diff': 1.561099999999871e-05...</msg>
<status status="PASS" starttime="20201029 18:16:27.979" endtime="20201029 18:16:27.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:27.987" level="INFO">${ACCURACY} = {'diff': [1.5694000000000125e-05, 1.5111999999997683e-05, 1.566700000000046e-05, 1.5028000000000263e-05, 1.5638000000001845e-05, 1.561099999999871e-05, 1.5055999999999403e-05, 1.562500000000175e-05, 1...</msg>
<status status="PASS" starttime="20201029 18:16:27.984" endtime="20201029 18:16:27.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.992" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 18:16:27.990" endtime="20201029 18:16:27.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:27.994" level="INFO">VALUE: [1.5694000000000125e-05, 1.5111999999997683e-05, 1.566700000000046e-05, 1.5028000000000263e-05, 1.5638000000001845e-05, 1.561099999999871e-05, 1.5055999999999403e-05, 1.562500000000175e-05, 1.563899999999785e-05, 1.5041999999999833e-05, 1.5097000000002109e-05, 1.565299999999742e-05, 1.566700000000046e-05, 1.4985999999998084e-05, 1.4971999999998514e-05, 1.566700000000046e-05, 1.504100000000036e-05, 1.563900000000132e-05, 1.563900000000132e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.5652000000001415e-05, 1.563899999999785e-05, 1.504099999999689e-05, 1.563900000000132e-05, 1.504100000000036e-05, 1.504100000000036e-05, 1.5652000000001415e-05, 1.504100000000036e-05, 1.5708999999999168e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.5041999999999833e-05, 1.563899999999785e-05, 1.566700000000046e-05, 1.5652000000001415e-05, 1.504100000000036e-05, 1.563900000000132e-05, 1.504100000000036e-05, 1.563899999999785e-05, 1.5652000000001415e-05, 1.555500000000043e-05, 1.4986000000001554e-05, 1.563899999999785e-05, 1.4986000000001554e-05, 1.562500000000175e-05, 1.5028000000000263e-05, 1.5070000000002443e-05, 1.563899999999785e-05, 1.565300000000089e-05]</msg>
<status status="PASS" starttime="20201029 18:16:27.993" endtime="20201029 18:16:27.998"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.988" endtime="20201029 18:16:27.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.003" endtime="20201029 18:16:28.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.001" endtime="20201029 18:16:28.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.000" endtime="20201029 18:16:28.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.621" endtime="20201029 18:16:28.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:27.620" endtime="20201029 18:16:28.024"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.033" endtime="20201029 18:16:28.048"></status>
</kw>
<msg timestamp="20201029 18:16:28.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.031" endtime="20201029 18:16:28.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.049" endtime="20201029 18:16:28.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.052" endtime="20201029 18:16:28.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.028" endtime="20201029 18:16:28.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.026" endtime="20201029 18:16:28.055"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.061" endtime="20201029 18:16:28.346"></status>
</kw>
<msg timestamp="20201029 18:16:28.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:28.060" endtime="20201029 18:16:28.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022701361, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:28.350" endtime="20201029 18:16:28.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.359" endtime="20201029 18:16:28.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.057" endtime="20201029 18:16:28.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.055" endtime="20201029 18:16:28.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.366" level="INFO">${RESULT} = [{'diff': 1.686099999999996e-05}, {'diff': 1.684700000000039e-05}, {'diff': 1.687499999999953e-05}, {'diff': 1.684700000000039e-05}, {'diff': 1.6194000000000625e-05}, {'diff': 1.6235999999999334e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:28.362" endtime="20201029 18:16:28.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.418" level="INFO">${ACCURACY} = {'diff': [1.686099999999996e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.6194000000000625e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.686099999999996e-05, 1.6...</msg>
<status status="PASS" starttime="20201029 18:16:28.367" endtime="20201029 18:16:28.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.422" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.421" endtime="20201029 18:16:28.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.425" level="INFO">VALUE: [1.686099999999996e-05, 1.684700000000039e-05, 1.687499999999953e-05, 1.684700000000039e-05, 1.6194000000000625e-05, 1.6235999999999334e-05, 1.6235999999999334e-05, 1.686099999999996e-05, 1.684700000000039e-05, 1.631900000000075e-05, 1.6235999999999334e-05, 1.6221999999999764e-05, 1.6235999999999334e-05, 1.688900000000257e-05, 1.6320000000000223e-05, 1.687499999999953e-05, 1.6235999999999334e-05, 1.6263999999998474e-05, 1.6820000000000723e-05, 1.565300000000089e-05, 1.6249999999998904e-05, 1.563900000000132e-05, 1.684700000000039e-05, 1.6834000000000293e-05, 1.6250000000002374e-05, 1.6235999999999334e-05, 1.6847999999999863e-05, 1.6263999999998474e-05, 1.6235999999999334e-05, 1.683300000000082e-05, 1.6181000000000528e-05, 1.6834000000000293e-05, 1.6249999999998904e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.6235999999999334e-05, 1.6249999999998904e-05, 1.6277999999998044e-05, 1.6221999999999764e-05, 1.563900000000132e-05, 1.6263999999998474e-05, 1.6250000000002374e-05, 1.6277999999998044e-05, 1.565299999999742e-05, 1.6195000000000098e-05, 1.684700000000039e-05, 1.686099999999996e-05, 1.5611999999998183e-05, 1.686099999999996e-05, 1.563899999999785e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.423" endtime="20201029 18:16:28.426"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.419" endtime="20201029 18:16:28.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.430" endtime="20201029 18:16:28.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.429" endtime="20201029 18:16:28.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.427" endtime="20201029 18:16:28.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.024" endtime="20201029 18:16:28.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.024" endtime="20201029 18:16:28.451"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.460" endtime="20201029 18:16:28.475"></status>
</kw>
<msg timestamp="20201029 18:16:28.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.458" endtime="20201029 18:16:28.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.477" endtime="20201029 18:16:28.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.480" endtime="20201029 18:16:28.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.456" endtime="20201029 18:16:28.483"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.454" endtime="20201029 18:16:28.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.490" endtime="20201029 18:16:28.776"></status>
</kw>
<msg timestamp="20201029 18:16:28.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.488" endtime="20201029 18:16:28.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022472306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022489764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.781" endtime="20201029 18:16:28.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.789" endtime="20201029 18:16:28.791"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.486" endtime="20201029 18:16:28.792"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.484" endtime="20201029 18:16:28.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:28.796" level="INFO">${RESULT} = [{'diff': 1.7457999999997975e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.7459000000000918e-05}, {'diff': 1.7473000000000488e-05}, {'diff': 1.684700000000039e-05}, {'diff': 1.8070000000001973e-0...</msg>
<status status="PASS" starttime="20201029 18:16:28.793" endtime="20201029 18:16:28.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:28.800" level="INFO">${ACCURACY} = {'diff': [1.7457999999997975e-05, 1.7472000000001014e-05, 1.7459000000000918e-05, 1.7473000000000488e-05, 1.684700000000039e-05, 1.8070000000001973e-05, 1.7459000000000918e-05, 1.7459000000000918e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:28.797" endtime="20201029 18:16:28.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.806" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 18:16:28.804" endtime="20201029 18:16:28.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.809" level="INFO">VALUE: [1.7457999999997975e-05, 1.7472000000001014e-05, 1.7459000000000918e-05, 1.7473000000000488e-05, 1.684700000000039e-05, 1.8070000000001973e-05, 1.7459000000000918e-05, 1.7459000000000918e-05, 1.7500000000000154e-05, 1.684700000000039e-05, 1.7444000000001875e-05, 1.6777999999998544e-05, 1.740299999999917e-05, 1.690299999999867e-05, 1.684700000000039e-05, 1.804099999999989e-05, 1.745899999999745e-05, 1.7457999999997975e-05, 1.7513999999999724e-05, 1.690299999999867e-05, 1.806899999999903e-05, 1.684699999999692e-05, 1.684700000000039e-05, 1.7472000000001014e-05, 1.7458000000001445e-05, 1.7443999999998405e-05, 1.7443999999998405e-05, 1.7472000000001014e-05, 1.6861999999999433e-05, 1.737500000000003e-05, 1.7458000000001445e-05, 1.687499999999953e-05, 1.7458000000001445e-05, 1.744500000000135e-05, 1.7458000000001445e-05, 1.7458000000001445e-05, 1.7457999999997975e-05, 1.687499999999953e-05, 1.686099999999996e-05, 1.7486000000000584e-05, 1.740299999999917e-05, 1.7458000000001445e-05, 1.8042000000002834e-05, 1.740300000000264e-05, 1.7458000000001445e-05, 1.7459000000000918e-05, 1.744499999999788e-05, 1.686099999999996e-05, 1.7458000000001445e-05, 1.7443999999998405e-05]</msg>
<status status="PASS" starttime="20201029 18:16:28.807" endtime="20201029 18:16:28.818"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.801" endtime="20201029 18:16:28.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:28.823" endtime="20201029 18:16:28.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.821" endtime="20201029 18:16:28.844"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.820" endtime="20201029 18:16:28.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.452" endtime="20201029 18:16:28.845"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.451" endtime="20201029 18:16:28.846"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.861" endtime="20201029 18:16:28.877"></status>
</kw>
<msg timestamp="20201029 18:16:28.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.858" endtime="20201029 18:16:28.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:28.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:28.878" endtime="20201029 18:16:28.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.881" endtime="20201029 18:16:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.854" endtime="20201029 18:16:28.883"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.850" endtime="20201029 18:16:28.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:28.890" endtime="20201029 18:16:29.175"></status>
</kw>
<msg timestamp="20201029 18:16:29.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030894722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030912764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:28.889" endtime="20201029 18:16:29.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030894722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030912764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.180" endtime="20201029 18:16:29.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.188" endtime="20201029 18:16:29.190"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.886" endtime="20201029 18:16:29.191"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.884" endtime="20201029 18:16:29.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.195" level="INFO">${RESULT} = [{'diff': 1.8041999999999364e-05}, {'diff': 1.806899999999903e-05}, {'diff': 1.805499999999946e-05}, {'diff': 1.806899999999903e-05}, {'diff': 1.869499999999913e-05}, {'diff': 1.806899999999903e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:29.192" endtime="20201029 18:16:29.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.200" level="INFO">${ACCURACY} = {'diff': [1.8041999999999364e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.869499999999913e-05, 1.806899999999903e-05, 1.866699999999999e-05, 1.8041999999999364e-05, 1.86...</msg>
<status status="PASS" starttime="20201029 18:16:29.196" endtime="20201029 18:16:29.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.205" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.204" endtime="20201029 18:16:29.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.208" level="INFO">VALUE: [1.8041999999999364e-05, 1.806899999999903e-05, 1.805499999999946e-05, 1.806899999999903e-05, 1.869499999999913e-05, 1.806899999999903e-05, 1.866699999999999e-05, 1.8041999999999364e-05, 1.868099999999956e-05, 1.8680000000000085e-05, 1.805500000000293e-05, 1.8056000000002403e-05, 1.809700000000164e-05, 1.808300000000207e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.805500000000293e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.8666000000000516e-05, 1.8666000000000516e-05, 1.8666000000000516e-05, 1.8042000000002834e-05, 1.8084000000001543e-05, 1.80690000000025e-05, 1.80690000000025e-05, 1.805499999999599e-05, 1.865300000000042e-05, 1.8666000000000516e-05, 1.865300000000042e-05, 1.869499999999913e-05, 1.809700000000164e-05, 1.8680000000000085e-05, 1.8652000000000946e-05, 1.8666000000000516e-05, 1.865300000000042e-05, 1.8070000000001973e-05, 1.812500000000078e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.865300000000042e-05, 1.8042000000002834e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.866699999999999e-05, 1.806899999999556e-05, 1.862500000000128e-05, 1.865300000000042e-05, 1.808299999999513e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.206" endtime="20201029 18:16:29.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.201" endtime="20201029 18:16:29.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.213" endtime="20201029 18:16:29.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.211" endtime="20201029 18:16:29.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.210" endtime="20201029 18:16:29.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.847" endtime="20201029 18:16:29.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:28.846" endtime="20201029 18:16:29.234"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.243" endtime="20201029 18:16:29.259"></status>
</kw>
<msg timestamp="20201029 18:16:29.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.241" endtime="20201029 18:16:29.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.260" endtime="20201029 18:16:29.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.263" endtime="20201029 18:16:29.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.239" endtime="20201029 18:16:29.265"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.236" endtime="20201029 18:16:29.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.273" endtime="20201029 18:16:29.558"></status>
</kw>
<msg timestamp="20201029 18:16:29.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.271" endtime="20201029 18:16:29.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02264825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022666931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:29.563" endtime="20201029 18:16:29.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.571" endtime="20201029 18:16:29.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.268" endtime="20201029 18:16:29.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.266" endtime="20201029 18:16:29.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.578" level="INFO">${RESULT} = [{'diff': 1.868099999999956e-05}, {'diff': 1.993100000000081e-05}, {'diff': 1.9887999999999156e-05}, {'diff': 1.983300000000035e-05}, {'diff': 1.9278000000001044e-05}, {'diff': 1.866699999999999e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:29.575" endtime="20201029 18:16:29.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.582" level="INFO">${ACCURACY} = {'diff': [1.868099999999956e-05, 1.993100000000081e-05, 1.9887999999999156e-05, 1.983300000000035e-05, 1.9278000000001044e-05, 1.866699999999999e-05, 1.988899999999863e-05, 1.927700000000157e-05, 1.86...</msg>
<status status="PASS" starttime="20201029 18:16:29.579" endtime="20201029 18:16:29.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.587" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.586" endtime="20201029 18:16:29.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.590" level="INFO">VALUE: [1.868099999999956e-05, 1.993100000000081e-05, 1.9887999999999156e-05, 1.983300000000035e-05, 1.9278000000001044e-05, 1.866699999999999e-05, 1.988899999999863e-05, 1.927700000000157e-05, 1.866699999999999e-05, 1.9306000000000184e-05, 1.868099999999956e-05, 1.987499999999906e-05, 1.9278000000001044e-05, 1.8680000000000085e-05, 1.987499999999906e-05, 1.9263999999998005e-05, 1.930500000000071e-05, 1.929100000000114e-05, 1.9277999999997575e-05, 1.9278000000001044e-05, 1.9306000000000184e-05, 1.9277999999997575e-05, 1.987500000000253e-05, 1.9277999999997575e-05, 1.868099999999956e-05, 1.927700000000157e-05, 1.9306000000000184e-05, 1.987499999999906e-05, 1.9277999999997575e-05, 1.92089999999992e-05, 1.987499999999906e-05, 1.9249999999998435e-05, 1.9264000000001474e-05, 1.986099999999949e-05, 1.987499999999906e-05, 1.987499999999906e-05, 1.990300000000167e-05, 1.9833999999999824e-05, 1.987499999999906e-05, 1.9861999999998964e-05, 1.8721999999998795e-05, 1.9250000000001904e-05, 1.987499999999906e-05, 1.9264000000001474e-05, 1.986099999999949e-05, 1.9264000000001474e-05, 1.9278000000001044e-05, 1.9277999999997575e-05, 1.9235999999998865e-05, 1.9291999999997145e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.588" endtime="20201029 18:16:29.590"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.583" endtime="20201029 18:16:29.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.595" endtime="20201029 18:16:29.614"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.593" endtime="20201029 18:16:29.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.592" endtime="20201029 18:16:29.615"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.235" endtime="20201029 18:16:29.616"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.234" endtime="20201029 18:16:29.616"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.631" endtime="20201029 18:16:29.649"></status>
</kw>
<msg timestamp="20201029 18:16:29.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.628" endtime="20201029 18:16:29.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:29.651" endtime="20201029 18:16:29.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.654" endtime="20201029 18:16:29.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.624" endtime="20201029 18:16:29.656"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.621" endtime="20201029 18:16:29.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.663" endtime="20201029 18:16:29.951"></status>
</kw>
<msg timestamp="20201029 18:16:29.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031337264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031357139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.661" endtime="20201029 18:16:29.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031337264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031357139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:29.955" endtime="20201029 18:16:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:29.964" endtime="20201029 18:16:29.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.659" endtime="20201029 18:16:29.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.657" endtime="20201029 18:16:29.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:29.971" level="INFO">${RESULT} = [{'diff': 1.987500000000253e-05}, {'diff': 1.988899999999516e-05}, {'diff': 1.987500000000253e-05}, {'diff': 2.047300000000002e-05}, {'diff': 2.045900000000045e-05}, {'diff': 1.991700000000124e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:29.967" endtime="20201029 18:16:29.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:29.975" level="INFO">${ACCURACY} = {'diff': [1.987500000000253e-05, 1.988899999999516e-05, 1.987500000000253e-05, 2.047300000000002e-05, 2.045900000000045e-05, 1.991700000000124e-05, 2.0486000000000115e-05, 2.0458000000000975e-05, 2.04...</msg>
<status status="PASS" starttime="20201029 18:16:29.972" endtime="20201029 18:16:29.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.980" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 18:16:29.979" endtime="20201029 18:16:29.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:29.983" level="INFO">VALUE: [1.987500000000253e-05, 1.988899999999516e-05, 1.987500000000253e-05, 2.047300000000002e-05, 2.045900000000045e-05, 1.991700000000124e-05, 2.0486000000000115e-05, 2.0458000000000975e-05, 2.041700000000174e-05, 2.0486000000000115e-05, 2.0542000000005334e-05, 1.987499999999559e-05, 2.0486000000000115e-05, 1.987500000000253e-05, 2.044500000000088e-05, 2.047300000000002e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.043100000000131e-05, 2.0472000000000545e-05, 2.048699999999959e-05, 2.0500000000006624e-05, 2.108299999999813e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0472000000000545e-05, 2.0499999999999685e-05, 2.048699999999959e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0555999999997965e-05, 1.987500000000253e-05, 2.045900000000045e-05, 2.0486000000000115e-05, 1.9847999999995924e-05, 1.986099999999602e-05, 2.0485999999993176e-05, 1.988899999999516e-05, 2.0486000000000115e-05, 2.044500000000088e-05, 2.0471999999993606e-05, 1.98890000000021e-05, 2.0499999999999685e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0485999999993176e-05, 2.0458000000000975e-05, 1.987500000000253e-05, 2.048699999999959e-05, 1.987500000000253e-05]</msg>
<status status="PASS" starttime="20201029 18:16:29.981" endtime="20201029 18:16:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.976" endtime="20201029 18:16:29.985"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:29.989" endtime="20201029 18:16:30.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.987" endtime="20201029 18:16:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.986" endtime="20201029 18:16:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.618" endtime="20201029 18:16:30.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:29.617" endtime="20201029 18:16:30.010"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.019" endtime="20201029 18:16:30.035"></status>
</kw>
<msg timestamp="20201029 18:16:30.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.017" endtime="20201029 18:16:30.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.037" endtime="20201029 18:16:30.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.040" endtime="20201029 18:16:30.041"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.015" endtime="20201029 18:16:30.042"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.012" endtime="20201029 18:16:30.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.049" endtime="20201029 18:16:30.335"></status>
</kw>
<msg timestamp="20201029 18:16:30.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023340278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.048" endtime="20201029 18:16:30.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023340278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.340" endtime="20201029 18:16:30.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.348" endtime="20201029 18:16:30.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.045" endtime="20201029 18:16:30.350"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.043" endtime="20201029 18:16:30.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.355" level="INFO">${RESULT} = [{'diff': 2.1083999999997605e-05}, {'diff': 2.10969999999977e-05}, {'diff': 2.1693999999999186e-05}, {'diff': 2.106900000000203e-05}, {'diff': 2.1069999999998035e-05}, {'diff': 2.1083999999997605e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:30.352" endtime="20201029 18:16:30.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.360" level="INFO">${ACCURACY} = {'diff': [2.1083999999997605e-05, 2.10969999999977e-05, 2.1693999999999186e-05, 2.106900000000203e-05, 2.1069999999998035e-05, 2.1083999999997605e-05, 2.1000000000000185e-05, 2.1069999999998035e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:30.356" endtime="20201029 18:16:30.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.365" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.364" endtime="20201029 18:16:30.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.367" level="INFO">VALUE: [2.1083999999997605e-05, 2.10969999999977e-05, 2.1693999999999186e-05, 2.106900000000203e-05, 2.1069999999998035e-05, 2.1083999999997605e-05, 2.1000000000000185e-05, 2.1069999999998035e-05, 2.10830000000016e-05, 2.111100000000074e-05, 2.1679999999999616e-05, 2.172300000000127e-05, 2.10830000000016e-05, 2.1694000000002656e-05, 2.1693999999999186e-05, 2.1680000000003086e-05, 2.1098000000000644e-05, 2.106900000000203e-05, 2.108299999999813e-05, 2.108299999999813e-05, 2.1693999999999186e-05, 2.10830000000016e-05, 2.108299999999813e-05, 2.104099999999942e-05, 2.10830000000016e-05, 2.17090000000017e-05, 2.109700000000117e-05, 2.1083999999997605e-05, 2.106899999999856e-05, 2.1679999999999616e-05, 2.1098000000000644e-05, 2.1693999999999186e-05, 2.168100000000256e-05, 2.10830000000016e-05, 2.1721999999998326e-05, 2.1693999999999186e-05, 2.1084000000001074e-05, 2.10830000000016e-05, 2.10830000000016e-05, 2.168099999999909e-05, 2.1084000000001074e-05, 2.166699999999952e-05, 2.109700000000117e-05, 2.108299999999813e-05, 2.111100000000074e-05, 2.109700000000117e-05, 2.1041999999998895e-05, 2.109700000000117e-05, 2.10830000000016e-05, 2.163900000000038e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.366" endtime="20201029 18:16:30.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.361" endtime="20201029 18:16:30.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.373" endtime="20201029 18:16:30.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.371" endtime="20201029 18:16:30.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.370" endtime="20201029 18:16:30.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.011" endtime="20201029 18:16:30.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.010" endtime="20201029 18:16:30.393"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.403" endtime="20201029 18:16:30.418"></status>
</kw>
<msg timestamp="20201029 18:16:30.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.401" endtime="20201029 18:16:30.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.420" endtime="20201029 18:16:30.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.422" endtime="20201029 18:16:30.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.398" endtime="20201029 18:16:30.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.396" endtime="20201029 18:16:30.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.432" endtime="20201029 18:16:30.719"></status>
</kw>
<msg timestamp="20201029 18:16:30.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.430" endtime="20201029 18:16:30.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022718861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022741153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.723" endtime="20201029 18:16:30.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.732" endtime="20201029 18:16:30.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.427" endtime="20201029 18:16:30.734"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.426" endtime="20201029 18:16:30.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:30.739" level="INFO">${RESULT} = [{'diff': 2.2292000000000145e-05}, {'diff': 2.1693999999999186e-05}, {'diff': 2.169499999999866e-05}, {'diff': 2.2292000000000145e-05}, {'diff': 2.290299999999773e-05}, {'diff': 2.2334000000002324e-05...</msg>
<status status="PASS" starttime="20201029 18:16:30.736" endtime="20201029 18:16:30.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:30.743" level="INFO">${ACCURACY} = {'diff': [2.2292000000000145e-05, 2.1693999999999186e-05, 2.169499999999866e-05, 2.2292000000000145e-05, 2.290299999999773e-05, 2.2334000000002324e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:30.740" endtime="20201029 18:16:30.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.748" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 18:16:30.747" endtime="20201029 18:16:30.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.751" level="INFO">VALUE: [2.2292000000000145e-05, 2.1693999999999186e-05, 2.169499999999866e-05, 2.2292000000000145e-05, 2.290299999999773e-05, 2.2334000000002324e-05, 2.2319999999999285e-05, 2.2319999999999285e-05, 2.2901999999998257e-05, 2.2278000000000575e-05, 2.293100000000034e-05, 2.2292000000000145e-05, 2.291700000000077e-05, 2.2278000000000575e-05, 2.2292000000000145e-05, 2.284699999999945e-05, 2.229100000000067e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.291700000000077e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.2305999999999715e-05, 2.2290999999997202e-05, 2.2292000000000145e-05, 2.222300000000177e-05, 2.1693999999999186e-05, 2.2901999999998257e-05, 2.2292000000000145e-05, 2.2305999999999715e-05, 2.29030000000012e-05, 2.2305999999999715e-05, 2.2320000000002754e-05, 2.2305999999999715e-05, 2.1694000000002656e-05, 2.2305999999999715e-05, 2.2847999999998925e-05, 2.29030000000012e-05, 2.2292000000000145e-05, 2.2264000000001005e-05, 2.2292000000000145e-05, 2.229100000000067e-05, 2.2278000000000575e-05, 2.2277999999997106e-05, 2.2292000000000145e-05, 2.288899999999816e-05, 2.2292000000000145e-05, 2.1749999999997466e-05, 2.236099999999852e-05, 2.2305999999999715e-05]</msg>
<status status="PASS" starttime="20201029 18:16:30.749" endtime="20201029 18:16:30.751"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.744" endtime="20201029 18:16:30.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:30.756" endtime="20201029 18:16:30.775"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.754" endtime="20201029 18:16:30.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.753" endtime="20201029 18:16:30.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.394" endtime="20201029 18:16:30.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.394" endtime="20201029 18:16:30.777"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.786" endtime="20201029 18:16:30.804"></status>
</kw>
<msg timestamp="20201029 18:16:30.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.785" endtime="20201029 18:16:30.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:30.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:30.805" endtime="20201029 18:16:30.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.808" endtime="20201029 18:16:30.809"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.782" endtime="20201029 18:16:30.810"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.779" endtime="20201029 18:16:30.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:30.817" endtime="20201029 18:16:31.104"></status>
</kw>
<msg timestamp="20201029 18:16:31.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:30.816" endtime="20201029 18:16:31.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024264556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024287458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.108" endtime="20201029 18:16:31.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.117" endtime="20201029 18:16:31.118"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.813" endtime="20201029 18:16:31.119"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.811" endtime="20201029 18:16:31.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.124" level="INFO">${RESULT} = [{'diff': 2.2902000000001727e-05}, {'diff': 2.2901999999998257e-05}, {'diff': 2.3513999999998786e-05}, {'diff': 2.3514000000002255e-05}, {'diff': 2.3458000000000506e-05}, {'diff': 2.2819999999999785e-...</msg>
<status status="PASS" starttime="20201029 18:16:31.120" endtime="20201029 18:16:31.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.128" level="INFO">${ACCURACY} = {'diff': [2.2902000000001727e-05, 2.2901999999998257e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3458000000000506e-05, 2.2819999999999785e-05, 2.3513999999998786e-05, 2.2902000000001727e-05...</msg>
<status status="PASS" starttime="20201029 18:16:31.125" endtime="20201029 18:16:31.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.133" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.132" endtime="20201029 18:16:31.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.136" level="INFO">VALUE: [2.2902000000001727e-05, 2.2901999999998257e-05, 2.3513999999998786e-05, 2.3514000000002255e-05, 2.3458000000000506e-05, 2.2819999999999785e-05, 2.3513999999998786e-05, 2.2902000000001727e-05, 2.3499999999999216e-05, 2.29030000000012e-05, 2.29030000000012e-05, 2.3499999999999216e-05, 2.3485999999999646e-05, 2.3499999999999216e-05, 2.288900000000163e-05, 2.293100000000034e-05, 2.3513999999998786e-05, 2.348700000000259e-05, 2.3500000000002685e-05, 2.3472000000000076e-05, 2.4096999999997232e-05, 2.2958000000000006e-05, 2.3458000000000506e-05, 2.288900000000163e-05, 2.288900000000163e-05, 2.290299999999773e-05, 2.3527999999998356e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.2848000000002394e-05, 2.29030000000012e-05, 2.291700000000077e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.290299999999773e-05, 2.347299999999955e-05, 2.290299999999773e-05, 2.288899999999816e-05, 2.412499999999984e-05, 2.3500000000002685e-05, 2.412499999999984e-05, 2.29030000000012e-05, 2.3514000000002255e-05, 2.3485999999999646e-05, 2.3485999999999646e-05, 2.3513999999998786e-05, 2.3499999999999216e-05, 2.3499999999999216e-05, 2.365299999999848e-05, 2.3499999999999216e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.134" endtime="20201029 18:16:31.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.129" endtime="20201029 18:16:31.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.142" endtime="20201029 18:16:31.161"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.140" endtime="20201029 18:16:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.139" endtime="20201029 18:16:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.778" endtime="20201029 18:16:31.162"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:30.777" endtime="20201029 18:16:31.163"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.172" endtime="20201029 18:16:31.187"></status>
</kw>
<msg timestamp="20201029 18:16:31.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.170" endtime="20201029 18:16:31.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.189" endtime="20201029 18:16:31.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.191" endtime="20201029 18:16:31.193"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.167" endtime="20201029 18:16:31.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.165" endtime="20201029 18:16:31.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.201" endtime="20201029 18:16:31.488"></status>
</kw>
<msg timestamp="20201029 18:16:31.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.199" endtime="20201029 18:16:31.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022800125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022824208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.492" endtime="20201029 18:16:31.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.501" endtime="20201029 18:16:31.502"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.197" endtime="20201029 18:16:31.503"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.195" endtime="20201029 18:16:31.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.507" level="INFO">${RESULT} = [{'diff': 2.4082999999997662e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.411100000000027e-05}, {'diff': 2.4082999999997662e-05}, {'diff': 2.413899999999941e-05}, {'diff': 2.4111999999999745e-05...</msg>
<status status="PASS" starttime="20201029 18:16:31.504" endtime="20201029 18:16:31.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.513" level="INFO">${ACCURACY} = {'diff': [2.4082999999997662e-05, 2.4707999999998287e-05, 2.411100000000027e-05, 2.4082999999997662e-05, 2.413899999999941e-05, 2.4111999999999745e-05, 2.40970000000007e-05, 2.4721999999997857e-05, 2....</msg>
<status status="PASS" starttime="20201029 18:16:31.508" endtime="20201029 18:16:31.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.517" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.516" endtime="20201029 18:16:31.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.520" level="INFO">VALUE: [2.4082999999997662e-05, 2.4707999999998287e-05, 2.411100000000027e-05, 2.4082999999997662e-05, 2.413899999999941e-05, 2.4111999999999745e-05, 2.40970000000007e-05, 2.4721999999997857e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.47230000000008e-05, 2.411100000000027e-05, 2.4112000000003214e-05, 2.469500000000166e-05, 2.470900000000123e-05, 2.4194000000001686e-05, 2.40970000000007e-05, 2.4708000000001756e-05, 2.4098000000000175e-05, 2.4722000000001326e-05, 2.4707999999998287e-05, 2.4763999999996567e-05, 2.4722000000001326e-05, 2.411100000000027e-05, 2.412499999999984e-05, 2.40970000000007e-05, 2.4708000000001756e-05, 2.4096999999997232e-05, 2.408300000000113e-05, 2.4708000000001756e-05, 2.4708000000001756e-05, 2.4694000000002186e-05, 2.466700000000252e-05, 2.413899999999941e-05, 2.4721999999997857e-05, 2.413899999999941e-05, 2.412499999999984e-05, 2.412499999999984e-05, 2.4735999999997427e-05, 2.413899999999941e-05, 2.4722000000001326e-05, 2.413899999999941e-05, 2.4721999999997857e-05, 2.4707999999998287e-05, 2.40970000000007e-05, 2.4111999999999745e-05, 2.408300000000113e-05, 2.4166000000002547e-05, 2.4097999999996705e-05, 2.412499999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.518" endtime="20201029 18:16:31.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.514" endtime="20201029 18:16:31.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.525" endtime="20201029 18:16:31.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.524" endtime="20201029 18:16:31.545"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.522" endtime="20201029 18:16:31.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.163" endtime="20201029 18:16:31.546"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.163" endtime="20201029 18:16:31.546"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.555" endtime="20201029 18:16:31.571"></status>
</kw>
<msg timestamp="20201029 18:16:31.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.554" endtime="20201029 18:16:31.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.572" endtime="20201029 18:16:31.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.575" endtime="20201029 18:16:31.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.551" endtime="20201029 18:16:31.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.549" endtime="20201029 18:16:31.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.584" endtime="20201029 18:16:31.874"></status>
</kw>
<msg timestamp="20201029 18:16:31.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.583" endtime="20201029 18:16:31.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023188708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023214611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.879" endtime="20201029 18:16:31.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.887" endtime="20201029 18:16:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.580" endtime="20201029 18:16:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.578" endtime="20201029 18:16:31.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:31.894" level="INFO">${RESULT} = [{'diff': 2.590300000000073e-05}, {'diff': 2.5916000000000827e-05}, {'diff': 2.47230000000008e-05}, {'diff': 2.530500000000324e-05}, {'diff': 2.4708000000001756e-05}, {'diff': 2.4707999999998287e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:31.891" endtime="20201029 18:16:31.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:31.899" level="INFO">${ACCURACY} = {'diff': [2.590300000000073e-05, 2.5916000000000827e-05, 2.47230000000008e-05, 2.530500000000324e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.534700000000195e-05, 2.4708000000001756e-05, 2.5...</msg>
<status status="PASS" starttime="20201029 18:16:31.895" endtime="20201029 18:16:31.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.903" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 18:16:31.902" endtime="20201029 18:16:31.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.906" level="INFO">VALUE: [2.590300000000073e-05, 2.5916000000000827e-05, 2.47230000000008e-05, 2.530500000000324e-05, 2.4708000000001756e-05, 2.4707999999998287e-05, 2.534700000000195e-05, 2.4708000000001756e-05, 2.5332999999998912e-05, 2.5332999999998912e-05, 2.4721999999997857e-05, 2.5264000000000536e-05, 2.5319999999998816e-05, 2.59170000000003e-05, 2.5930000000000397e-05, 2.530500000000324e-05, 2.4722000000001326e-05, 2.5360999999998052e-05, 2.4708000000001756e-05, 2.5306000000002715e-05, 2.5304999999999772e-05, 2.5320000000002285e-05, 2.59170000000003e-05, 2.5235999999997927e-05, 2.4708000000001756e-05, 2.5334000000001855e-05, 2.536100000000152e-05, 2.5291000000000202e-05, 2.470899999999776e-05, 2.5305999999999246e-05, 2.531900000000281e-05, 2.5318999999999342e-05, 2.5362000000000995e-05, 2.5318999999999342e-05, 2.472299999999733e-05, 2.5305999999999246e-05, 2.5305999999999246e-05, 2.5319999999998816e-05, 2.5319999999998816e-05, 2.5320000000002285e-05, 2.4707999999998287e-05, 2.5334000000001855e-05, 2.5304999999999772e-05, 2.5332999999998912e-05, 2.59170000000003e-05, 2.5291999999999676e-05, 2.59170000000003e-05, 2.5291999999999676e-05, 2.5278000000000106e-05, 2.4736000000000896e-05]</msg>
<status status="PASS" starttime="20201029 18:16:31.904" endtime="20201029 18:16:31.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.899" endtime="20201029 18:16:31.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:31.911" endtime="20201029 18:16:31.930"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.910" endtime="20201029 18:16:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.908" endtime="20201029 18:16:31.931"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.547" endtime="20201029 18:16:31.932"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.546" endtime="20201029 18:16:31.932"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.941" endtime="20201029 18:16:31.959"></status>
</kw>
<msg timestamp="20201029 18:16:31.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.939" endtime="20201029 18:16:31.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:31.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:31.961" endtime="20201029 18:16:31.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.964" endtime="20201029 18:16:31.965"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.937" endtime="20201029 18:16:31.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.934" endtime="20201029 18:16:31.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:31.974" endtime="20201029 18:16:32.261"></status>
</kw>
<msg timestamp="20201029 18:16:32.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024165583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:31.972" endtime="20201029 18:16:32.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024165583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024192097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.265" endtime="20201029 18:16:32.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.273" endtime="20201029 18:16:32.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.969" endtime="20201029 18:16:32.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.967" endtime="20201029 18:16:32.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.280" level="INFO">${RESULT} = [{'diff': 2.6513999999998317e-05}, {'diff': 2.6513999999998317e-05}, {'diff': 2.6514000000001786e-05}, {'diff': 2.6514000000001786e-05}, {'diff': 2.594499999999944e-05}, {'diff': 2.6527999999997887e-0...</msg>
<status status="PASS" starttime="20201029 18:16:32.277" endtime="20201029 18:16:32.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.285" level="INFO">${ACCURACY} = {'diff': [2.6513999999998317e-05, 2.6513999999998317e-05, 2.6514000000001786e-05, 2.6514000000001786e-05, 2.594499999999944e-05, 2.6527999999997887e-05, 2.5874999999998122e-05, 2.648700000000212e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:32.281" endtime="20201029 18:16:32.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.289" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.288" endtime="20201029 18:16:32.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.292" level="INFO">VALUE: [2.6513999999998317e-05, 2.6513999999998317e-05, 2.6514000000001786e-05, 2.6514000000001786e-05, 2.594499999999944e-05, 2.6527999999997887e-05, 2.5874999999998122e-05, 2.648700000000212e-05, 2.6583999999999636e-05, 2.6513999999998317e-05, 2.593099999999987e-05, 2.59170000000003e-05, 2.6500000000002216e-05, 2.590299999999726e-05, 2.6513999999998317e-05, 2.6528000000001356e-05, 2.7097000000000232e-05, 2.6485999999999177e-05, 2.6527999999997887e-05, 2.590300000000073e-05, 2.6541000000001452e-05, 2.5901999999997788e-05, 2.6513999999998317e-05, 2.5901999999997788e-05, 2.6526999999998413e-05, 2.6513999999998317e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.590300000000073e-05, 2.5930000000000397e-05, 2.6528000000001356e-05, 2.593099999999987e-05, 2.6527999999997887e-05, 2.6542000000000926e-05, 2.6499999999998747e-05, 2.7110999999999802e-05, 2.6526999999998413e-05, 2.6527999999997887e-05, 2.6513999999998317e-05, 2.6528000000001356e-05, 2.6555000000001022e-05, 2.6527000000001882e-05, 2.5916000000000827e-05, 2.6528000000001356e-05, 2.6540999999997983e-05, 2.6528000000001356e-05, 2.6514000000001786e-05, 2.6528000000001356e-05, 2.5930000000000397e-05, 2.5930000000000397e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.290" endtime="20201029 18:16:32.294"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.286" endtime="20201029 18:16:32.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.298" endtime="20201029 18:16:32.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.297" endtime="20201029 18:16:32.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.295" endtime="20201029 18:16:32.318"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.933" endtime="20201029 18:16:32.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:31.932" endtime="20201029 18:16:32.319"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.328" endtime="20201029 18:16:32.345"></status>
</kw>
<msg timestamp="20201029 18:16:32.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.326" endtime="20201029 18:16:32.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.347" endtime="20201029 18:16:32.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.349" endtime="20201029 18:16:32.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.324" endtime="20201029 18:16:32.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.321" endtime="20201029 18:16:32.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.359" endtime="20201029 18:16:32.645"></status>
</kw>
<msg timestamp="20201029 18:16:32.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.357" endtime="20201029 18:16:32.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022650056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022677167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.649" endtime="20201029 18:16:32.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.658" endtime="20201029 18:16:32.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.354" endtime="20201029 18:16:32.661"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.352" endtime="20201029 18:16:32.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:32.665" level="INFO">${RESULT} = [{'diff': 2.711100000000327e-05}, {'diff': 2.7124999999999372e-05}, {'diff': 2.7112000000002745e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.7708000000001287e-0...</msg>
<status status="PASS" starttime="20201029 18:16:32.662" endtime="20201029 18:16:32.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:32.670" level="INFO">${ACCURACY} = {'diff': [2.711100000000327e-05, 2.7124999999999372e-05, 2.7112000000002745e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.7151999999999038e-05, 2.7736000000000427e-05,...</msg>
<status status="PASS" starttime="20201029 18:16:32.666" endtime="20201029 18:16:32.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.675" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 18:16:32.674" endtime="20201029 18:16:32.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.678" level="INFO">VALUE: [2.711100000000327e-05, 2.7124999999999372e-05, 2.7112000000002745e-05, 2.7736000000000427e-05, 2.7736000000000427e-05, 2.7708000000001287e-05, 2.7151999999999038e-05, 2.7736000000000427e-05, 2.7138999999998942e-05, 2.7721999999997388e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.773700000000337e-05, 2.7084000000000136e-05, 2.7694000000001717e-05, 2.7138999999998942e-05, 2.7110999999999802e-05, 2.7707999999997818e-05, 2.7736000000000427e-05, 2.773700000000337e-05, 2.7194000000001217e-05, 2.7124999999999372e-05, 2.712500000000284e-05, 2.7749999999999997e-05, 2.7736000000000427e-05, 2.7138999999998942e-05, 2.7749999999999997e-05, 2.7124999999999372e-05, 2.715300000000198e-05, 2.7722000000000857e-05, 2.715300000000198e-05, 2.7097999999999706e-05, 2.772300000000033e-05, 2.7110999999999802e-05, 2.7124999999999372e-05, 2.7722000000000857e-05, 2.7875000000000122e-05, 2.7736000000000427e-05, 2.718100000000112e-05, 2.7124999999999372e-05, 2.715300000000198e-05, 2.7749999999999997e-05, 2.7110999999999802e-05, 2.7708000000001287e-05, 2.7124999999999372e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.7124999999999372e-05, 2.7736000000000427e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201029 18:16:32.676" endtime="20201029 18:16:32.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.671" endtime="20201029 18:16:32.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:32.683" endtime="20201029 18:16:32.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.681" endtime="20201029 18:16:32.703"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.680" endtime="20201029 18:16:32.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.320" endtime="20201029 18:16:32.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.319" endtime="20201029 18:16:32.704"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.713" endtime="20201029 18:16:32.730"></status>
</kw>
<msg timestamp="20201029 18:16:32.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.712" endtime="20201029 18:16:32.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:32.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:32.731" endtime="20201029 18:16:32.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.734" endtime="20201029 18:16:32.735"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.709" endtime="20201029 18:16:32.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.707" endtime="20201029 18:16:32.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:32.743" endtime="20201029 18:16:33.033"></status>
</kw>
<msg timestamp="20201029 18:16:33.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:32.742" endtime="20201029 18:16:33.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023009694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.037" endtime="20201029 18:16:33.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.046" endtime="20201029 18:16:33.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.739" endtime="20201029 18:16:33.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.737" endtime="20201029 18:16:33.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.053" level="INFO">${RESULT} = [{'diff': 2.8875000000001122e-05}, {'diff': 2.8277999999999637e-05}, {'diff': 2.7736000000000427e-05}, {'diff': 2.8347000000001482e-05}, {'diff': 2.8333000000001912e-05}, {'diff': 2.8332999999998443e-...</msg>
<status status="PASS" starttime="20201029 18:16:33.049" endtime="20201029 18:16:33.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.057" level="INFO">${ACCURACY} = {'diff': [2.8875000000001122e-05, 2.8277999999999637e-05, 2.7736000000000427e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8346999999998013e-05, 2.8333999999997916e-05...</msg>
<status status="PASS" starttime="20201029 18:16:33.054" endtime="20201029 18:16:33.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.062" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.061" endtime="20201029 18:16:33.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.064" level="INFO">VALUE: [2.8875000000001122e-05, 2.8277999999999637e-05, 2.7736000000000427e-05, 2.8347000000001482e-05, 2.8333000000001912e-05, 2.8332999999998443e-05, 2.8346999999998013e-05, 2.8333999999997916e-05, 2.7693999999998248e-05, 2.8957999999999068e-05, 2.8304999999999303e-05, 2.8319000000002342e-05, 2.8318999999998873e-05, 2.8333000000001912e-05, 2.8348000000000956e-05, 2.7722000000000857e-05, 2.8985999999998208e-05, 2.8305999999998777e-05, 2.8333999999997916e-05, 2.894500000000244e-05, 2.7763999999999567e-05, 2.8971999999998638e-05, 2.8333000000001912e-05, 2.8334000000001386e-05, 2.7722000000000857e-05, 2.7791999999998707e-05, 2.8916999999999832e-05, 2.8348000000000956e-05, 2.8346999999998013e-05, 2.8319999999998346e-05, 2.89309999999994e-05, 2.8290999999999733e-05, 2.8874999999997653e-05, 2.8375000000000622e-05, 2.8361000000001052e-05, 2.7708000000001287e-05, 2.8332999999998443e-05, 2.8943999999999498e-05, 2.8929999999999928e-05, 2.8971999999998638e-05, 2.8346999999998013e-05, 2.8929999999999928e-05, 2.7763999999999567e-05, 2.8333000000001912e-05, 2.8348000000000956e-05, 2.8320000000001816e-05, 2.8346999999998013e-05, 2.772300000000033e-05, 2.7736000000000427e-05, 2.8305999999998777e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.063" endtime="20201029 18:16:33.065"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.058" endtime="20201029 18:16:33.066"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.070" endtime="20201029 18:16:33.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.068" endtime="20201029 18:16:33.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.067" endtime="20201029 18:16:33.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.705" endtime="20201029 18:16:33.090"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:32.704" endtime="20201029 18:16:33.090"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.100" endtime="20201029 18:16:33.117"></status>
</kw>
<msg timestamp="20201029 18:16:33.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.098" endtime="20201029 18:16:33.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.118" endtime="20201029 18:16:33.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.121" endtime="20201029 18:16:33.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.095" endtime="20201029 18:16:33.123"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.093" endtime="20201029 18:16:33.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.131" endtime="20201029 18:16:33.417"></status>
</kw>
<msg timestamp="20201029 18:16:33.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.129" endtime="20201029 18:16:33.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023567125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.421" endtime="20201029 18:16:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.430" endtime="20201029 18:16:33.431"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.126" endtime="20201029 18:16:33.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.124" endtime="20201029 18:16:33.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.437" level="INFO">${RESULT} = [{'diff': 2.9528000000000887e-05}, {'diff': 2.8943999999999498e-05}, {'diff': 2.894499999999897e-05}, {'diff': 2.9527999999997417e-05}, {'diff': 2.9528000000000887e-05}, {'diff': 2.9542000000000457e-0...</msg>
<status status="PASS" starttime="20201029 18:16:33.433" endtime="20201029 18:16:33.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.441" level="INFO">${ACCURACY} = {'diff': [2.9528000000000887e-05, 2.8943999999999498e-05, 2.894499999999897e-05, 2.9527999999997417e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.89170000000033e-05, 2.8943999999999498e-05, 2...</msg>
<status status="PASS" starttime="20201029 18:16:33.438" endtime="20201029 18:16:33.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.446" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.445" endtime="20201029 18:16:33.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.448" level="INFO">VALUE: [2.9528000000000887e-05, 2.8943999999999498e-05, 2.894499999999897e-05, 2.9527999999997417e-05, 2.9528000000000887e-05, 2.9542000000000457e-05, 2.89170000000033e-05, 2.8943999999999498e-05, 2.9556000000000027e-05, 2.89309999999994e-05, 2.8916999999999832e-05, 2.9542000000000457e-05, 2.8929999999999928e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9556000000000027e-05, 2.8943999999999498e-05, 2.9500000000001747e-05, 2.8943999999999498e-05, 2.9542000000000457e-05, 2.89309999999994e-05, 2.8957999999999068e-05, 2.9528000000000887e-05, 2.8986000000001677e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.8943999999999498e-05, 2.8943999999999498e-05, 2.9542000000000457e-05, 2.8929999999999928e-05, 2.9542000000000457e-05, 2.9527999999997417e-05, 2.9013999999997347e-05, 2.9541000000000983e-05, 2.9499999999998278e-05, 2.894499999999897e-05, 2.895899999999854e-05, 2.8875000000001122e-05, 2.9542000000000457e-05, 2.9542000000000457e-05, 2.9555000000000553e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.8943999999999498e-05, 2.8971999999998638e-05, 2.894499999999897e-05, 2.8985999999998208e-05, 2.8916999999999832e-05, 2.9542000000000457e-05, 2.9542000000000457e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.447" endtime="20201029 18:16:33.450"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.442" endtime="20201029 18:16:33.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.454" endtime="20201029 18:16:33.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.453" endtime="20201029 18:16:33.474"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.451" endtime="20201029 18:16:33.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.091" endtime="20201029 18:16:33.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.091" endtime="20201029 18:16:33.475"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.484" endtime="20201029 18:16:33.500"></status>
</kw>
<msg timestamp="20201029 18:16:33.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.483" endtime="20201029 18:16:33.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.502" endtime="20201029 18:16:33.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.504" endtime="20201029 18:16:33.506"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.480" endtime="20201029 18:16:33.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.478" endtime="20201029 18:16:33.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.514" endtime="20201029 18:16:33.800"></status>
</kw>
<msg timestamp="20201029 18:16:33.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.512" endtime="20201029 18:16:33.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.805" endtime="20201029 18:16:33.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.813" endtime="20201029 18:16:33.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.510" endtime="20201029 18:16:33.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.508" endtime="20201029 18:16:33.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:33.820" level="INFO">${RESULT} = [{'diff': 3.015199999999857e-05}, {'diff': 3.0153000000001512e-05}, {'diff': 3.0153000000001512e-05}, {'diff': 3.073599999999996e-05}, {'diff': 3.07639999999991e-05}, {'diff': 3.074999999999953e-05}, ...</msg>
<status status="PASS" starttime="20201029 18:16:33.817" endtime="20201029 18:16:33.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:33.826" level="INFO">${ACCURACY} = {'diff': [3.015199999999857e-05, 3.0153000000001512e-05, 3.0153000000001512e-05, 3.073599999999996e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0139000000001942e-05, 3.07639999999991e-05, 3.019...</msg>
<status status="PASS" starttime="20201029 18:16:33.821" endtime="20201029 18:16:33.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.830" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 18:16:33.829" endtime="20201029 18:16:33.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.833" level="INFO">VALUE: [3.015199999999857e-05, 3.0153000000001512e-05, 3.0153000000001512e-05, 3.073599999999996e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0139000000001942e-05, 3.07639999999991e-05, 3.0194000000000748e-05, 3.074999999999953e-05, 3.0152999999998042e-05, 3.0152000000002038e-05, 3.074999999999953e-05, 3.0166999999997612e-05, 3.0153000000001512e-05, 3.0166999999997612e-05, 3.0750000000003e-05, 3.074999999999953e-05, 3.066700000000158e-05, 3.016599999999814e-05, 3.074999999999953e-05, 3.0152999999998042e-05, 3.07639999999991e-05, 3.07639999999991e-05, 3.074999999999953e-05, 3.0124999999998903e-05, 3.0153000000001512e-05, 3.076400000000257e-05, 3.074999999999953e-05, 3.0750000000003e-05, 3.0137999999999e-05, 3.072200000000039e-05, 3.073599999999996e-05, 3.0152999999998042e-05, 3.0139000000001942e-05, 3.07639999999991e-05, 3.0152999999998042e-05, 3.0166999999997612e-05, 3.0152000000002038e-05, 3.0153000000001512e-05, 3.0125000000002372e-05, 3.073699999999943e-05, 3.0194000000000748e-05, 3.017999999999771e-05, 3.0181000000000652e-05, 3.074999999999953e-05, 3.079200000000171e-05, 3.0138999999998473e-05, 3.0152000000002038e-05, 3.0138999999998473e-05]</msg>
<status status="PASS" starttime="20201029 18:16:33.831" endtime="20201029 18:16:33.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.827" endtime="20201029 18:16:33.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:33.845" endtime="20201029 18:16:33.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.843" endtime="20201029 18:16:33.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.842" endtime="20201029 18:16:33.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.476" endtime="20201029 18:16:33.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.475" endtime="20201029 18:16:33.866"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.875" endtime="20201029 18:16:33.891"></status>
</kw>
<msg timestamp="20201029 18:16:33.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.873" endtime="20201029 18:16:33.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:33.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:33.893" endtime="20201029 18:16:33.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.895" endtime="20201029 18:16:33.897"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.870" endtime="20201029 18:16:33.898"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.868" endtime="20201029 18:16:33.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:33.905" endtime="20201029 18:16:34.190"></status>
</kw>
<msg timestamp="20201029 18:16:34.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:33.903" endtime="20201029 18:16:34.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022798278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.195" endtime="20201029 18:16:34.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.203" endtime="20201029 18:16:34.205"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.901" endtime="20201029 18:16:34.206"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.899" endtime="20201029 18:16:34.206"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.210" level="INFO">${RESULT} = [{'diff': 3.195900000000154e-05}, {'diff': 3.133400000000092e-05}, {'diff': 3.077800000000214e-05}, {'diff': 3.073699999999943e-05}, {'diff': 3.141699999999886e-05}, {'diff': 3.19579999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:34.207" endtime="20201029 18:16:34.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.215" level="INFO">${ACCURACY} = {'diff': [3.195900000000154e-05, 3.133400000000092e-05, 3.077800000000214e-05, 3.073699999999943e-05, 3.141699999999886e-05, 3.19579999999986e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.19590...</msg>
<status status="PASS" starttime="20201029 18:16:34.211" endtime="20201029 18:16:34.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.219" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.218" endtime="20201029 18:16:34.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.222" level="INFO">VALUE: [3.195900000000154e-05, 3.133400000000092e-05, 3.077800000000214e-05, 3.073699999999943e-05, 3.141699999999886e-05, 3.19579999999986e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.195900000000154e-05, 3.1348000000000487e-05, 3.074999999999953e-05, 3.130600000000178e-05, 3.133300000000144e-05, 3.197199999999817e-05, 3.134700000000101e-05, 3.134700000000101e-05, 3.076400000000257e-05, 3.074999999999953e-05, 3.136100000000058e-05, 3.07639999999991e-05, 3.133300000000144e-05, 3.1348000000000487e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.130599999999831e-05, 3.137500000000015e-05, 3.138899999999972e-05, 3.199999999999731e-05, 3.074999999999953e-05, 3.134700000000101e-05, 3.137500000000015e-05, 3.1360999999997113e-05, 3.137500000000015e-05, 3.072299999999986e-05, 3.197200000000164e-05, 3.07639999999991e-05, 3.19449999999985e-05, 3.133300000000144e-05, 3.136100000000058e-05, 3.136100000000058e-05, 3.129199999999874e-05, 3.136100000000058e-05, 3.195900000000154e-05, 3.074999999999953e-05, 3.136100000000058e-05, 3.134700000000101e-05, 3.197200000000164e-05, 3.137500000000015e-05, 3.136100000000058e-05, 3.136100000000058e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.220" endtime="20201029 18:16:34.223"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.216" endtime="20201029 18:16:34.223"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.227" endtime="20201029 18:16:34.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.226" endtime="20201029 18:16:34.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.224" endtime="20201029 18:16:34.247"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.866" endtime="20201029 18:16:34.248"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:33.866" endtime="20201029 18:16:34.248"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.257" endtime="20201029 18:16:34.275"></status>
</kw>
<msg timestamp="20201029 18:16:34.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.255" endtime="20201029 18:16:34.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.276" endtime="20201029 18:16:34.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.279" endtime="20201029 18:16:34.280"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.253" endtime="20201029 18:16:34.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.250" endtime="20201029 18:16:34.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.288" endtime="20201029 18:16:34.576"></status>
</kw>
<msg timestamp="20201029 18:16:34.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023973611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.287" endtime="20201029 18:16:34.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023941042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023973611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:34.581" endtime="20201029 18:16:34.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.589" endtime="20201029 18:16:34.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.284" endtime="20201029 18:16:34.591"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.282" endtime="20201029 18:16:34.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.596" level="INFO">${RESULT} = [{'diff': 3.2568999999999654e-05}, {'diff': 3.2568999999999654e-05}, {'diff': 3.19449999999985e-05}, {'diff': 3.2568999999999654e-05}, {'diff': 3.2568999999999654e-05}, {'diff': 3.2582999999999224e-05...</msg>
<status status="PASS" starttime="20201029 18:16:34.592" endtime="20201029 18:16:34.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:34.600" level="INFO">${ACCURACY} = {'diff': [3.2568999999999654e-05, 3.2568999999999654e-05, 3.19449999999985e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:34.597" endtime="20201029 18:16:34.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.604" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 18:16:34.603" endtime="20201029 18:16:34.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.610" level="INFO">VALUE: [3.2568999999999654e-05, 3.2568999999999654e-05, 3.19449999999985e-05, 3.2568999999999654e-05, 3.2568999999999654e-05, 3.2582999999999224e-05, 3.2555000000000084e-05, 3.2582999999999224e-05, 3.2568999999999654e-05, 3.2555000000000084e-05, 3.258300000000269e-05, 3.256900000000312e-05, 3.2610999999998364e-05, 3.19440000000025e-05, 3.195800000000207e-05, 3.195899999999807e-05, 3.194399999999903e-05, 3.2582999999999224e-05, 3.197200000000164e-05, 3.2555000000000084e-05, 3.258300000000269e-05, 3.2554999999996614e-05, 3.197200000000164e-05, 3.194399999999903e-05, 3.194500000000197e-05, 3.25700000000026e-05, 3.19579999999986e-05, 3.25839999999987e-05, 3.2568999999999654e-05, 3.252800000000042e-05, 3.200000000000078e-05, 3.19440000000025e-05, 3.195900000000154e-05, 3.195800000000207e-05, 3.256999999999913e-05, 3.2555000000000084e-05, 3.194399999999903e-05, 3.19579999999986e-05, 3.2568999999999654e-05, 3.2555000000000084e-05, 3.200000000000078e-05, 3.255599999999956e-05, 3.197199999999817e-05, 3.2582999999999224e-05, 3.197300000000111e-05, 3.2555000000000084e-05, 3.197300000000111e-05, 3.25839999999987e-05, 3.195800000000207e-05, 3.19579999999986e-05]</msg>
<status status="PASS" starttime="20201029 18:16:34.606" endtime="20201029 18:16:34.611"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.601" endtime="20201029 18:16:34.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:34.618" endtime="20201029 18:16:34.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.616" endtime="20201029 18:16:34.639"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.614" endtime="20201029 18:16:34.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.249" endtime="20201029 18:16:34.640"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.248" endtime="20201029 18:16:34.640"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.654" endtime="20201029 18:16:34.671"></status>
</kw>
<msg timestamp="20201029 18:16:34.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.651" endtime="20201029 18:16:34.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:34.673" endtime="20201029 18:16:34.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.677" endtime="20201029 18:16:34.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.648" endtime="20201029 18:16:34.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.644" endtime="20201029 18:16:34.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.691" endtime="20201029 18:16:34.977"></status>
</kw>
<msg timestamp="20201029 18:16:34.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028309, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028342167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:34.688" endtime="20201029 18:16:34.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:34.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028309, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028342167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 18:16:34.981" endtime="20201029 18:16:34.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:34.990" endtime="20201029 18:16:34.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.685" endtime="20201029 18:16:34.992"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.682" endtime="20201029 18:16:34.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:34.996" level="INFO">${RESULT} = [{'diff': 3.316700000000061e-05}, {'diff': 3.315300000000104e-05}, {'diff': 3.316700000000061e-05}, {'diff': 3.375000000000253e-05}, {'diff': 3.379199999999777e-05}, {'diff': 3.376399999999863e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:34.993" endtime="20201029 18:16:34.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.001" level="INFO">${ACCURACY} = {'diff': [3.316700000000061e-05, 3.315300000000104e-05, 3.316700000000061e-05, 3.375000000000253e-05, 3.379199999999777e-05, 3.376399999999863e-05, 3.3790999999998295e-05, 3.373599999999949e-05, 3.379...</msg>
<status status="PASS" starttime="20201029 18:16:34.997" endtime="20201029 18:16:35.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.006" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.005" endtime="20201029 18:16:35.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.009" level="INFO">VALUE: [3.316700000000061e-05, 3.315300000000104e-05, 3.316700000000061e-05, 3.375000000000253e-05, 3.379199999999777e-05, 3.376399999999863e-05, 3.3790999999998295e-05, 3.373599999999949e-05, 3.379200000000124e-05, 3.315299999999757e-05, 3.316700000000061e-05, 3.318100000000018e-05, 3.316700000000061e-05, 3.316700000000061e-05, 3.3777000000002194e-05, 3.316700000000061e-05, 3.37779999999982e-05, 3.316700000000061e-05, 3.315299999999757e-05, 3.37640000000021e-05, 3.382000000000038e-05, 3.319400000000028e-05, 3.376399999999863e-05, 3.318100000000018e-05, 3.372200000000339e-05, 3.3776999999998725e-05, 3.315300000000104e-05, 3.3776999999998725e-05, 3.319400000000028e-05, 3.316600000000114e-05, 3.37779999999982e-05, 3.316700000000061e-05, 3.318000000000071e-05, 3.382000000000038e-05, 3.377800000000167e-05, 3.379200000000124e-05, 3.316699999999714e-05, 3.316700000000061e-05, 3.319400000000028e-05, 3.315200000000157e-05, 3.3804999999997865e-05, 3.316700000000061e-05, 3.322299999999889e-05, 3.374999999999906e-05, 3.377800000000167e-05, 3.318000000000071e-05, 3.316700000000061e-05, 3.3776999999998725e-05, 3.256999999999913e-05, 3.37779999999982e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.007" endtime="20201029 18:16:35.010"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.002" endtime="20201029 18:16:35.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.014" endtime="20201029 18:16:35.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.013" endtime="20201029 18:16:35.034"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.011" endtime="20201029 18:16:35.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.642" endtime="20201029 18:16:35.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:34.641" endtime="20201029 18:16:35.035"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.044" endtime="20201029 18:16:35.060"></status>
</kw>
<msg timestamp="20201029 18:16:35.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.042" endtime="20201029 18:16:35.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.061" endtime="20201029 18:16:35.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.064" endtime="20201029 18:16:35.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.040" endtime="20201029 18:16:35.066"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.038" endtime="20201029 18:16:35.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.073" endtime="20201029 18:16:35.362"></status>
</kw>
<msg timestamp="20201029 18:16:35.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.071" endtime="20201029 18:16:35.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022332556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022366917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.366" endtime="20201029 18:16:35.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.375" endtime="20201029 18:16:35.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.069" endtime="20201029 18:16:35.377"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.067" endtime="20201029 18:16:35.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.381" level="INFO">${RESULT} = [{'diff': 3.4361000000000114e-05}, {'diff': 3.497200000000117e-05}, {'diff': 3.4888999999999754e-05}, {'diff': 3.497200000000117e-05}, {'diff': 3.438900000000272e-05}, {'diff': 3.4374999999999684e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:35.378" endtime="20201029 18:16:35.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.385" level="INFO">${ACCURACY} = {'diff': [3.4361000000000114e-05, 3.497200000000117e-05, 3.4888999999999754e-05, 3.497200000000117e-05, 3.438900000000272e-05, 3.4374999999999684e-05, 3.436199999999959e-05, 3.4402999999998823e-05, 3....</msg>
<status status="PASS" starttime="20201029 18:16:35.382" endtime="20201029 18:16:35.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.390" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.389" endtime="20201029 18:16:35.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.392" level="INFO">VALUE: [3.4361000000000114e-05, 3.497200000000117e-05, 3.4888999999999754e-05, 3.497200000000117e-05, 3.438900000000272e-05, 3.4374999999999684e-05, 3.436199999999959e-05, 3.4402999999998823e-05, 3.438900000000272e-05, 3.3762999999999155e-05, 3.3791000000001764e-05, 3.377800000000167e-05, 3.440200000000282e-05, 3.4402999999998823e-05, 3.437500000000315e-05, 3.4361000000000114e-05, 3.498600000000074e-05, 3.4361000000000114e-05, 3.4374999999999684e-05, 3.430599999999784e-05, 3.501399999999988e-05, 3.37640000000021e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.430599999999784e-05, 3.497200000000117e-05, 3.443100000000143e-05, 3.377800000000167e-05, 3.498600000000074e-05, 3.437500000000315e-05, 3.372199999999992e-05, 3.377800000000167e-05, 3.377800000000167e-05, 3.4374999999999684e-05, 3.4388999999999253e-05, 3.441600000000239e-05, 3.4374999999999684e-05, 3.4374999999999684e-05, 3.498600000000074e-05, 3.4374999999999684e-05, 3.501399999999988e-05, 3.3833000000000474e-05, 3.4388999999999253e-05, 3.4374999999999684e-05, 3.374999999999906e-05, 3.49719999999977e-05, 3.440199999999935e-05, 3.4388999999999253e-05, 3.4374999999999684e-05, 3.4388999999999253e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.391" endtime="20201029 18:16:35.393"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.386" endtime="20201029 18:16:35.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.397" endtime="20201029 18:16:35.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.396" endtime="20201029 18:16:35.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.395" endtime="20201029 18:16:35.417"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.036" endtime="20201029 18:16:35.418"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.036" endtime="20201029 18:16:35.418"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.427" endtime="20201029 18:16:35.445"></status>
</kw>
<msg timestamp="20201029 18:16:35.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.425" endtime="20201029 18:16:35.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.447" endtime="20201029 18:16:35.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.449" endtime="20201029 18:16:35.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.422" endtime="20201029 18:16:35.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.420" endtime="20201029 18:16:35.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.458" endtime="20201029 18:16:35.742"></status>
</kw>
<msg timestamp="20201029 18:16:35.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.457" endtime="20201029 18:16:35.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023632792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023667792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.747" endtime="20201029 18:16:35.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.755" endtime="20201029 18:16:35.756"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.454" endtime="20201029 18:16:35.757"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.452" endtime="20201029 18:16:35.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:35.761" level="INFO">${RESULT} = [{'diff': 3.500000000000031e-05}, {'diff': 3.5582999999998755e-05}, {'diff': 3.495900000000107e-05}, {'diff': 3.5596999999998324e-05}, {'diff': 3.500000000000031e-05}, {'diff': 3.5596999999998324e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:35.758" endtime="20201029 18:16:35.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:35.765" level="INFO">${ACCURACY} = {'diff': [3.500000000000031e-05, 3.5582999999998755e-05, 3.495900000000107e-05, 3.5596999999998324e-05, 3.500000000000031e-05, 3.5596999999998324e-05, 3.498599999999727e-05, 3.497300000000064e-05, 3.4...</msg>
<status status="PASS" starttime="20201029 18:16:35.762" endtime="20201029 18:16:35.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.770" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 18:16:35.769" endtime="20201029 18:16:35.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.772" level="INFO">VALUE: [3.500000000000031e-05, 3.5582999999998755e-05, 3.495900000000107e-05, 3.5596999999998324e-05, 3.500000000000031e-05, 3.5596999999998324e-05, 3.498599999999727e-05, 3.497300000000064e-05, 3.497299999999717e-05, 3.5597000000001794e-05, 3.498600000000074e-05, 3.49580000000016e-05, 3.5583000000002224e-05, 3.497200000000117e-05, 3.497300000000064e-05, 3.556999999999866e-05, 3.49719999999977e-05, 3.5625000000000934e-05, 3.559800000000127e-05, 3.498600000000074e-05, 3.5639000000000504e-05, 3.5568999999999185e-05, 3.5568999999999185e-05, 3.504200000000249e-05, 3.5596999999998324e-05, 3.498600000000074e-05, 3.5596999999998324e-05, 3.498600000000074e-05, 3.559800000000127e-05, 3.5582999999998755e-05, 3.504199999999902e-05, 3.5596999999998324e-05, 3.5582999999998755e-05, 3.5582999999998755e-05, 3.494399999999856e-05, 3.5582999999998755e-05, 3.5568999999999185e-05, 3.498600000000074e-05, 3.557000000000213e-05, 3.568100000000268e-05, 3.498700000000021e-05, 3.55840000000017e-05, 3.5583000000002224e-05, 3.5026999999999975e-05, 3.559800000000127e-05, 3.56520000000006e-05, 3.5582999999998755e-05, 3.497300000000064e-05, 3.559800000000127e-05, 3.55840000000017e-05]</msg>
<status status="PASS" starttime="20201029 18:16:35.771" endtime="20201029 18:16:35.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.766" endtime="20201029 18:16:35.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:35.778" endtime="20201029 18:16:35.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.777" endtime="20201029 18:16:35.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.776" endtime="20201029 18:16:35.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.419" endtime="20201029 18:16:35.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.418" endtime="20201029 18:16:35.799"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.807" endtime="20201029 18:16:35.824"></status>
</kw>
<msg timestamp="20201029 18:16:35.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.806" endtime="20201029 18:16:35.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:35.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:35.826" endtime="20201029 18:16:35.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.828" endtime="20201029 18:16:35.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.803" endtime="20201029 18:16:35.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.801" endtime="20201029 18:16:35.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:35.837" endtime="20201029 18:16:36.124"></status>
</kw>
<msg timestamp="20201029 18:16:36.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:35.836" endtime="20201029 18:16:36.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022033847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.128" endtime="20201029 18:16:36.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.136" endtime="20201029 18:16:36.138"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.833" endtime="20201029 18:16:36.139"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.831" endtime="20201029 18:16:36.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.143" level="INFO">${RESULT} = [{'diff': 3.620900000000232e-05}, {'diff': 3.679200000000077e-05}, {'diff': 3.6805000000000865e-05}, {'diff': 3.6790999999997825e-05}, {'diff': 3.618100000000318e-05}, {'diff': 3.619399999999981e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:36.140" endtime="20201029 18:16:36.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.148" level="INFO">${ACCURACY} = {'diff': [3.620900000000232e-05, 3.679200000000077e-05, 3.6805000000000865e-05, 3.6790999999997825e-05, 3.618100000000318e-05, 3.619399999999981e-05, 3.6180999999999713e-05, 3.623599999999852e-05, 3.6...</msg>
<status status="PASS" starttime="20201029 18:16:36.144" endtime="20201029 18:16:36.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.152" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.151" endtime="20201029 18:16:36.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.155" level="INFO">VALUE: [3.620900000000232e-05, 3.679200000000077e-05, 3.6805000000000865e-05, 3.6790999999997825e-05, 3.618100000000318e-05, 3.619399999999981e-05, 3.6180999999999713e-05, 3.623599999999852e-05, 3.618000000000024e-05, 3.619499999999928e-05, 3.619399999999981e-05, 3.67780000000012e-05, 3.6791000000001295e-05, 3.6805000000000865e-05, 3.619499999999928e-05, 3.67780000000012e-05, 3.619500000000275e-05, 3.617999999999677e-05, 3.619399999999981e-05, 3.6791000000001295e-05, 3.670899999999935e-05, 3.6167000000000143e-05, 3.6125000000001434e-05, 3.680600000000034e-05, 3.619399999999981e-05, 3.6805000000000865e-05, 3.618000000000024e-05, 3.680600000000034e-05, 3.622200000000242e-05, 3.620799999999938e-05, 3.620799999999938e-05, 3.6819000000000435e-05, 3.623599999999852e-05, 3.6819000000000435e-05, 3.679200000000077e-05, 3.618000000000024e-05, 3.619499999999928e-05, 3.618000000000024e-05, 3.618000000000024e-05, 3.6110999999998394e-05, 3.680600000000034e-05, 3.6167000000000143e-05, 3.677799999999773e-05, 3.680600000000034e-05, 3.6805000000000865e-05, 3.680600000000034e-05, 3.6833000000000005e-05, 3.6166999999996674e-05, 3.6138999999997534e-05, 3.6818999999996965e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.154" endtime="20201029 18:16:36.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.149" endtime="20201029 18:16:36.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.160" endtime="20201029 18:16:36.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.158" endtime="20201029 18:16:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.157" endtime="20201029 18:16:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.800" endtime="20201029 18:16:36.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:35.799" endtime="20201029 18:16:36.181"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.189" endtime="20201029 18:16:36.206"></status>
</kw>
<msg timestamp="20201029 18:16:36.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.188" endtime="20201029 18:16:36.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.207" endtime="20201029 18:16:36.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.210" endtime="20201029 18:16:36.211"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.185" endtime="20201029 18:16:36.212"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.183" endtime="20201029 18:16:36.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.219" endtime="20201029 18:16:36.507"></status>
</kw>
<msg timestamp="20201029 18:16:36.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.217" endtime="20201029 18:16:36.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022067611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022104403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.511" endtime="20201029 18:16:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.520" endtime="20201029 18:16:36.521"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.214" endtime="20201029 18:16:36.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.213" endtime="20201029 18:16:36.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.526" level="INFO">${RESULT} = [{'diff': 3.679200000000077e-05}, {'diff': 3.7388999999998784e-05}, {'diff': 3.7374999999999214e-05}, {'diff': 3.7403000000001824e-05}, {'diff': 3.7403000000001824e-05}, {'diff': 3.7403000000001824e-0...</msg>
<status status="PASS" starttime="20201029 18:16:36.523" endtime="20201029 18:16:36.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.530" level="INFO">${ACCURACY} = {'diff': [3.679200000000077e-05, 3.7388999999998784e-05, 3.7374999999999214e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7389000000002254e-05, 3.801399999999941e-05, ...</msg>
<status status="PASS" starttime="20201029 18:16:36.527" endtime="20201029 18:16:36.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.535" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.534" endtime="20201029 18:16:36.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.537" level="INFO">VALUE: [3.679200000000077e-05, 3.7388999999998784e-05, 3.7374999999999214e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7403000000001824e-05, 3.7389000000002254e-05, 3.801399999999941e-05, 3.67780000000012e-05, 3.74590000000001e-05, 3.679200000000077e-05, 3.6819000000000435e-05, 3.7402999999998354e-05, 3.799999999999984e-05, 3.742999999999802e-05, 3.7403000000001824e-05, 3.7402999999998354e-05, 3.679200000000077e-05, 3.7388999999998784e-05, 3.741600000000192e-05, 3.679200000000077e-05, 3.799999999999984e-05, 3.7402999999998354e-05, 3.7402999999998354e-05, 3.740199999999888e-05, 3.7403000000001824e-05, 3.7388999999998784e-05, 3.799999999999984e-05, 3.7403000000001824e-05, 3.740199999999888e-05, 3.6819000000000435e-05, 3.734799999999955e-05, 3.7389000000002254e-05, 3.740199999999888e-05, 3.7347000000000075e-05, 3.7388999999998784e-05, 3.799999999999984e-05, 3.7403000000001824e-05, 3.67780000000012e-05, 3.7403000000001824e-05, 3.6791000000001295e-05, 3.7388999999998784e-05, 3.7403000000001824e-05, 3.7417000000001394e-05, 3.7402999999998354e-05, 3.799999999999984e-05, 3.7402999999998354e-05, 3.7389000000002254e-05, 3.7402999999998354e-05, 3.6777000000001725e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.536" endtime="20201029 18:16:36.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.531" endtime="20201029 18:16:36.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.542" endtime="20201029 18:16:36.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.541" endtime="20201029 18:16:36.562"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.540" endtime="20201029 18:16:36.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.181" endtime="20201029 18:16:36.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.181" endtime="20201029 18:16:36.563"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.572" endtime="20201029 18:16:36.591"></status>
</kw>
<msg timestamp="20201029 18:16:36.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.570" endtime="20201029 18:16:36.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.593" endtime="20201029 18:16:36.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.595" endtime="20201029 18:16:36.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.568" endtime="20201029 18:16:36.597"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.566" endtime="20201029 18:16:36.598"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.607" endtime="20201029 18:16:36.893"></status>
</kw>
<msg timestamp="20201029 18:16:36.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.604" endtime="20201029 18:16:36.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023147181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023204056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.897" endtime="20201029 18:16:36.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.905" endtime="20201029 18:16:36.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.600" endtime="20201029 18:16:36.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.598" endtime="20201029 18:16:36.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:36.912" level="INFO">${RESULT} = [{'diff': 5.687500000000137e-05}, {'diff': 5.6277999999999884e-05}, {'diff': 5.630499999999955e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.6388000000000965e-05}, {'diff': 5.6471999999998385e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:36.909" endtime="20201029 18:16:36.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:36.916" level="INFO">${ACCURACY} = {'diff': [5.687500000000137e-05, 5.6277999999999884e-05, 5.630499999999955e-05, 5.612500000000062e-05, 5.6388000000000965e-05, 5.6471999999998385e-05, 5.663900000000069e-05, 5.663900000000069e-05, 5.6...</msg>
<status status="PASS" starttime="20201029 18:16:36.913" endtime="20201029 18:16:36.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.921" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 18:16:36.920" endtime="20201029 18:16:36.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.923" level="INFO">VALUE: [5.687500000000137e-05, 5.6277999999999884e-05, 5.630499999999955e-05, 5.612500000000062e-05, 5.6388000000000965e-05, 5.6471999999998385e-05, 5.663900000000069e-05, 5.663900000000069e-05, 5.6457999999998815e-05, 5.666699999999983e-05, 5.6777999999996914e-05, 5.6291999999999454e-05, 5.6291999999999454e-05, 5.594499999999822e-05, 5.613900000000019e-05, 5.59870000000004e-05, 5.613900000000019e-05, 5.6277999999999884e-05, 5.613900000000019e-05, 5.595899999999779e-05, 5.6486000000001424e-05, 5.663900000000069e-05, 5.629099999999998e-05, 5.612500000000062e-05, 5.629099999999998e-05, 5.680500000000005e-05, 5.5957999999998315e-05, 5.6764000000000814e-05, 5.5943999999998745e-05, 5.682000000000256e-05, 5.5971999999997885e-05, 5.647300000000133e-05, 5.6319999999998593e-05, 5.6791999999999954e-05, 5.613900000000019e-05, 5.595899999999779e-05, 5.631899999999912e-05, 5.612500000000062e-05, 5.613900000000019e-05, 5.629099999999998e-05, 5.630500000000302e-05, 5.6443999999999245e-05, 5.611100000000105e-05, 5.6791999999999954e-05, 5.6499999999997524e-05, 5.5972000000001354e-05, 5.6791999999999954e-05, 5.662499999999765e-05, 5.6791999999999954e-05, 5.647300000000133e-05]</msg>
<status status="PASS" starttime="20201029 18:16:36.922" endtime="20201029 18:16:36.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.917" endtime="20201029 18:16:36.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:36.929" endtime="20201029 18:16:36.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.927" endtime="20201029 18:16:36.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.926" endtime="20201029 18:16:36.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.564" endtime="20201029 18:16:36.949"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.564" endtime="20201029 18:16:36.950"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.958" endtime="20201029 18:16:36.976"></status>
</kw>
<msg timestamp="20201029 18:16:36.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.957" endtime="20201029 18:16:36.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:36.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:36.977" endtime="20201029 18:16:36.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.980" endtime="20201029 18:16:36.981"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.954" endtime="20201029 18:16:36.982"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.952" endtime="20201029 18:16:36.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:36.989" endtime="20201029 18:16:37.274"></status>
</kw>
<msg timestamp="20201029 18:16:37.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:36.987" endtime="20201029 18:16:37.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022171306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022228986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.279" endtime="20201029 18:16:37.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.287" endtime="20201029 18:16:37.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.985" endtime="20201029 18:16:37.289"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.983" endtime="20201029 18:16:37.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.293" level="INFO">${RESULT} = [{'diff': 5.7679999999997456e-05}, {'diff': 5.788899999999847e-05}, {'diff': 5.7791999999997484e-05}, {'diff': 5.6971999999998885e-05}, {'diff': 5.743100000000015e-05}, {'diff': 5.765300000000126e-05}...</msg>
<status status="PASS" starttime="20201029 18:16:37.290" endtime="20201029 18:16:37.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.298" level="INFO">${ACCURACY} = {'diff': [5.7679999999997456e-05, 5.788899999999847e-05, 5.7791999999997484e-05, 5.6971999999998885e-05, 5.743100000000015e-05, 5.765300000000126e-05, 5.745899999999929e-05, 5.743100000000015e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 18:16:37.294" endtime="20201029 18:16:37.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.303" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.302" endtime="20201029 18:16:37.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.305" level="INFO">VALUE: [5.7679999999997456e-05, 5.788899999999847e-05, 5.7791999999997484e-05, 5.6971999999998885e-05, 5.743100000000015e-05, 5.765300000000126e-05, 5.745899999999929e-05, 5.743100000000015e-05, 5.7151999999997816e-05, 5.694499999999922e-05, 5.7137999999998246e-05, 5.6958000000002784e-05, 5.7457999999999815e-05, 5.6943999999999745e-05, 5.7485999999998955e-05, 5.762500000000212e-05, 5.7471999999999385e-05, 5.7472000000002854e-05, 5.7292000000000454e-05, 5.7806000000000524e-05, 5.712499999999815e-05, 5.763900000000169e-05, 5.712499999999815e-05, 5.7306000000000024e-05, 5.7777999999997914e-05, 5.762499999999865e-05, 5.762500000000212e-05, 5.711100000000205e-05, 5.780500000000105e-05, 5.730499999999708e-05, 5.779100000000148e-05, 5.6957999999999315e-05, 5.7806000000000524e-05, 5.763900000000169e-05, 5.7805999999997054e-05, 5.7306000000000024e-05, 5.7750000000002244e-05, 5.6971999999998885e-05, 5.7292000000000454e-05, 5.7319999999999593e-05, 5.695900000000226e-05, 5.7637999999998746e-05, 5.712500000000162e-05, 5.780500000000105e-05, 5.762500000000212e-05, 5.7457999999999815e-05, 5.762499999999865e-05, 5.783300000000019e-05, 5.713900000000119e-05, 5.712500000000162e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.304" endtime="20201029 18:16:37.306"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.299" endtime="20201029 18:16:37.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.310" endtime="20201029 18:16:37.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.309" endtime="20201029 18:16:37.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.308" endtime="20201029 18:16:37.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.951" endtime="20201029 18:16:37.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:36.950" endtime="20201029 18:16:37.331"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.340" endtime="20201029 18:16:37.356"></status>
</kw>
<msg timestamp="20201029 18:16:37.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.338" endtime="20201029 18:16:37.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.358" endtime="20201029 18:16:37.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.360" endtime="20201029 18:16:37.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.336" endtime="20201029 18:16:37.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.333" endtime="20201029 18:16:37.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.369" endtime="20201029 18:16:37.657"></status>
</kw>
<msg timestamp="20201029 18:16:37.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.368" endtime="20201029 18:16:37.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022139167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.661" endtime="20201029 18:16:37.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.670" endtime="20201029 18:16:37.671"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.365" endtime="20201029 18:16:37.672"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.364" endtime="20201029 18:16:37.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:37.676" level="INFO">${RESULT} = [{'diff': 5.8693999999998026e-05}, {'diff': 5.830499999999808e-05}, {'diff': 5.862499999999965e-05}, {'diff': 5.8458000000000815e-05}, {'diff': 5.8291999999997984e-05}, {'diff': 5.8485999999999955e-05...</msg>
<status status="PASS" starttime="20201029 18:16:37.673" endtime="20201029 18:16:37.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:37.680" level="INFO">${ACCURACY} = {'diff': [5.8693999999998026e-05, 5.830499999999808e-05, 5.862499999999965e-05, 5.8458000000000815e-05, 5.8291999999997984e-05, 5.8485999999999955e-05, 5.8292000000001454e-05, 5.812500000000262e-05, 5...</msg>
<status status="PASS" starttime="20201029 18:16:37.677" endtime="20201029 18:16:37.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.685" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 18:16:37.684" endtime="20201029 18:16:37.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.687" level="INFO">VALUE: [5.8693999999998026e-05, 5.830499999999808e-05, 5.862499999999965e-05, 5.8458000000000815e-05, 5.8291999999997984e-05, 5.8485999999999955e-05, 5.8292000000001454e-05, 5.812500000000262e-05, 5.813899999999872e-05, 5.8291999999997984e-05, 5.813899999999872e-05, 5.812500000000262e-05, 5.7971999999999885e-05, 5.862500000000312e-05, 5.7916000000001605e-05, 5.815299999999829e-05, 5.812499999999915e-05, 5.865299999999879e-05, 5.8472000000000385e-05, 5.815300000000176e-05, 5.7958000000000315e-05, 5.7971999999999885e-05, 5.7958000000000315e-05, 5.813899999999872e-05, 5.8806000000001524e-05, 5.845900000000029e-05, 5.8138000000002715e-05, 5.881900000000162e-05, 5.861100000000008e-05, 5.879100000000248e-05, 5.813899999999872e-05, 5.8472000000000385e-05, 5.829099999999851e-05, 5.866700000000183e-05, 5.812499999999915e-05, 5.8806000000001524e-05, 5.8472000000000385e-05, 5.8306000000001024e-05, 5.8736000000000205e-05, 5.8070000000000344e-05, 5.8806000000001524e-05, 5.8042000000001204e-05, 5.8792000000001954e-05, 5.862499999999965e-05, 5.85550000000018e-05, 5.834700000000026e-05, 5.8457999999997345e-05, 5.7985999999999455e-05, 5.830500000000155e-05, 5.863899999999922e-05]</msg>
<status status="PASS" starttime="20201029 18:16:37.686" endtime="20201029 18:16:37.688"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.681" endtime="20201029 18:16:37.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:37.692" endtime="20201029 18:16:37.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.691" endtime="20201029 18:16:37.712"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.690" endtime="20201029 18:16:37.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.332" endtime="20201029 18:16:37.713"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.331" endtime="20201029 18:16:37.713"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.722" endtime="20201029 18:16:37.740"></status>
</kw>
<msg timestamp="20201029 18:16:37.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.720" endtime="20201029 18:16:37.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:37.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:37.742" endtime="20201029 18:16:37.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.744" endtime="20201029 18:16:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.717" endtime="20201029 18:16:37.746"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.715" endtime="20201029 18:16:37.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:37.753" endtime="20201029 18:16:38.038"></status>
</kw>
<msg timestamp="20201029 18:16:38.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:37.752" endtime="20201029 18:16:38.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023498292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023557472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.043" endtime="20201029 18:16:38.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.051" endtime="20201029 18:16:38.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.749" endtime="20201029 18:16:38.054"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.747" endtime="20201029 18:16:38.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.058" level="INFO">${RESULT} = [{'diff': 5.9179999999998956e-05}, {'diff': 5.96949999999985e-05}, {'diff': 5.9791999999999484e-05}, {'diff': 5.911100000000058e-05}, {'diff': 5.966700000000283e-05}, {'diff': 5.8972000000000885e-05},...</msg>
<status status="PASS" starttime="20201029 18:16:38.055" endtime="20201029 18:16:38.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.063" level="INFO">${ACCURACY} = {'diff': [5.9179999999998956e-05, 5.96949999999985e-05, 5.9791999999999484e-05, 5.911100000000058e-05, 5.966700000000283e-05, 5.8972000000000885e-05, 5.9834000000001664e-05, 5.911100000000058e-05, 5.9...</msg>
<status status="PASS" starttime="20201029 18:16:38.059" endtime="20201029 18:16:38.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.067" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.066" endtime="20201029 18:16:38.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.071" level="INFO">VALUE: [5.9179999999998956e-05, 5.96949999999985e-05, 5.9791999999999484e-05, 5.911100000000058e-05, 5.966700000000283e-05, 5.8972000000000885e-05, 5.9834000000001664e-05, 5.911100000000058e-05, 5.9305999999998554e-05, 5.9612000000000553e-05, 5.962500000000065e-05, 5.894499999999775e-05, 5.9458000000001815e-05, 5.962500000000065e-05, 5.9471999999997915e-05, 5.979100000000001e-05, 5.9472000000001385e-05, 5.965299999999979e-05, 5.9500000000000525e-05, 5.9028000000002634e-05, 5.916699999999886e-05, 5.9320000000001594e-05, 5.909700000000101e-05, 5.965299999999979e-05, 5.9791999999999484e-05, 5.911100000000058e-05, 5.912500000000015e-05, 5.9638000000000746e-05, 5.936100000000083e-05, 5.977700000000044e-05, 5.959699999999804e-05, 5.8944000000001745e-05, 5.929099999999951e-05, 5.9471999999997915e-05, 5.911100000000058e-05, 5.918099999999843e-05, 5.9791999999999484e-05, 5.9806000000002524e-05, 5.901300000000012e-05, 5.9277999999999414e-05, 5.963900000000022e-05, 5.9305999999998554e-05, 5.93750000000004e-05, 5.9805999999999054e-05, 5.911099999999711e-05, 5.9486000000000955e-05, 5.962500000000065e-05, 5.8972000000000885e-05, 5.9458000000001815e-05, 5.959699999999804e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.068" endtime="20201029 18:16:38.071"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.064" endtime="20201029 18:16:38.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.076" endtime="20201029 18:16:38.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.074" endtime="20201029 18:16:38.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.073" endtime="20201029 18:16:38.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.714" endtime="20201029 18:16:38.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:37.713" endtime="20201029 18:16:38.096"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.105" endtime="20201029 18:16:38.123"></status>
</kw>
<msg timestamp="20201029 18:16:38.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.104" endtime="20201029 18:16:38.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.124" endtime="20201029 18:16:38.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.127" endtime="20201029 18:16:38.128"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.101" endtime="20201029 18:16:38.129"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.099" endtime="20201029 18:16:38.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.136" endtime="20201029 18:16:38.422"></status>
</kw>
<msg timestamp="20201029 18:16:38.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.134" endtime="20201029 18:16:38.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.426" endtime="20201029 18:16:38.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.434" endtime="20201029 18:16:38.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.131" endtime="20201029 18:16:38.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.130" endtime="20201029 18:16:38.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.441" level="INFO">${RESULT} = [{'diff': 6.004099999999679e-05}, {'diff': 6.033299999999922e-05}, {'diff': 6.084700000000276e-05}, {'diff': 6.016699999999986e-05}, {'diff': 6.079099999999754e-05}, {'diff': 6.030500000000008e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:38.438" endtime="20201029 18:16:38.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.446" level="INFO">${ACCURACY} = {'diff': [6.004099999999679e-05, 6.033299999999922e-05, 6.084700000000276e-05, 6.016699999999986e-05, 6.079099999999754e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.0443999999999776e-05, 6.047...</msg>
<status status="PASS" starttime="20201029 18:16:38.442" endtime="20201029 18:16:38.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.450" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.449" endtime="20201029 18:16:38.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.453" level="INFO">VALUE: [6.004099999999679e-05, 6.033299999999922e-05, 6.084700000000276e-05, 6.016699999999986e-05, 6.079099999999754e-05, 6.030500000000008e-05, 6.029100000000051e-05, 6.0443999999999776e-05, 6.0471999999998916e-05, 5.9957999999998846e-05, 6.0000000000001025e-05, 6.0457999999999346e-05, 6.0485999999998485e-05, 6.0834000000002664e-05, 6.0777999999997445e-05, 6.0806000000000054e-05, 6.0806000000000054e-05, 6.081900000000015e-05, 6.084699999999929e-05, 6.0430000000000206e-05, 6.079099999999754e-05, 6.0763999999997875e-05, 6.015300000000029e-05, 6.083299999999972e-05, 5.993099999999918e-05, 6.065300000000079e-05, 6.0471999999998916e-05, 6.0291999999999984e-05, 6.0763999999997875e-05, 6.0319999999999124e-05, 6.045899999999882e-05, 6.063900000000122e-05, 6.0291999999999984e-05, 6.012500000000115e-05, 6.0457999999999346e-05, 6.0486000000001955e-05, 5.9944000000002745e-05, 6.012500000000115e-05, 5.9957999999998846e-05, 6.0806000000000054e-05, 6.012500000000115e-05, 6.0319999999999124e-05, 5.9958000000002315e-05, 6.0291999999999984e-05, 6.084699999999929e-05, 6.0792000000000485e-05, 5.997299999999789e-05, 6.0207999999999096e-05, 5.9985999999997985e-05, 6.0457999999999346e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.452" endtime="20201029 18:16:38.454"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.447" endtime="20201029 18:16:38.454"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.458" endtime="20201029 18:16:38.477"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.456" endtime="20201029 18:16:38.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.455" endtime="20201029 18:16:38.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.097" endtime="20201029 18:16:38.478"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.097" endtime="20201029 18:16:38.479"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.487" endtime="20201029 18:16:38.505"></status>
</kw>
<msg timestamp="20201029 18:16:38.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.486" endtime="20201029 18:16:38.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.507" endtime="20201029 18:16:38.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.509" endtime="20201029 18:16:38.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.483" endtime="20201029 18:16:38.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.481" endtime="20201029 18:16:38.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.518" endtime="20201029 18:16:38.808"></status>
</kw>
<msg timestamp="20201029 18:16:38.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.517" endtime="20201029 18:16:38.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.813" endtime="20201029 18:16:38.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.821" endtime="20201029 18:16:38.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.514" endtime="20201029 18:16:38.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.512" endtime="20201029 18:16:38.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:38.828" level="INFO">${RESULT} = [{'diff': 6.10690000000004e-05}, {'diff': 6.111099999999911e-05}, {'diff': 6.148699999999896e-05}, {'diff': 6.112499999999868e-05}, {'diff': 6.162500000000265e-05}, {'diff': 6.136100000000283e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:38.825" endtime="20201029 18:16:38.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:38.833" level="INFO">${ACCURACY} = {'diff': [6.10690000000004e-05, 6.111099999999911e-05, 6.148699999999896e-05, 6.112499999999868e-05, 6.162500000000265e-05, 6.136100000000283e-05, 6.112499999999868e-05, 6.112500000000215e-05, 6.08750...</msg>
<status status="PASS" starttime="20201029 18:16:38.829" endtime="20201029 18:16:38.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.837" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 18:16:38.836" endtime="20201029 18:16:38.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.840" level="INFO">VALUE: [6.10690000000004e-05, 6.111099999999911e-05, 6.148699999999896e-05, 6.112499999999868e-05, 6.162500000000265e-05, 6.136100000000283e-05, 6.112499999999868e-05, 6.112500000000215e-05, 6.08750000000019e-05, 6.0971999999999416e-05, 6.130500000000108e-05, 6.163900000000222e-05, 6.166699999999789e-05, 6.179199999999802e-05, 6.130600000000055e-05, 6.179200000000148e-05, 6.0999999999998555e-05, 6.126399999999838e-05, 6.179199999999802e-05, 6.129199999999752e-05, 6.111099999999911e-05, 6.144400000000078e-05, 6.111099999999911e-05, 6.0971999999999416e-05, 6.147199999999992e-05, 6.177799999999845e-05, 6.162499999999918e-05, 6.17360000000032e-05, 6.0957999999999846e-05, 6.148599999999949e-05, 6.129200000000098e-05, 6.115299999999782e-05, 6.095900000000279e-05, 6.176399999999888e-05, 6.129200000000098e-05, 6.133300000000022e-05, 6.180500000000158e-05, 6.161099999999961e-05, 6.161099999999961e-05, 6.115300000000129e-05, 6.180600000000105e-05, 6.131900000000065e-05, 6.127800000000141e-05, 6.180599999999759e-05, 6.129200000000098e-05, 6.129200000000098e-05, 6.158399999999994e-05, 6.182000000000062e-05, 6.119400000000053e-05, 6.094499999999975e-05]</msg>
<status status="PASS" starttime="20201029 18:16:38.838" endtime="20201029 18:16:38.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.833" endtime="20201029 18:16:38.847"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:38.851" endtime="20201029 18:16:38.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.850" endtime="20201029 18:16:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.848" endtime="20201029 18:16:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.479" endtime="20201029 18:16:38.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.479" endtime="20201029 18:16:38.872"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.881" endtime="20201029 18:16:38.900"></status>
</kw>
<msg timestamp="20201029 18:16:38.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.880" endtime="20201029 18:16:38.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:38.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:38.902" endtime="20201029 18:16:38.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.904" endtime="20201029 18:16:38.906"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.877" endtime="20201029 18:16:38.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.875" endtime="20201029 18:16:38.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:38.916" endtime="20201029 18:16:39.219"></status>
</kw>
<msg timestamp="20201029 18:16:39.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:38.912" endtime="20201029 18:16:39.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023906319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023968361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.223" endtime="20201029 18:16:39.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.232" endtime="20201029 18:16:39.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.910" endtime="20201029 18:16:39.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.908" endtime="20201029 18:16:39.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.239" level="INFO">${RESULT} = [{'diff': 6.204200000000173e-05}, {'diff': 6.233300000000122e-05}, {'diff': 6.197200000000042e-05}, {'diff': 6.266699999999889e-05}, {'diff': 6.213899999999925e-05}, {'diff': 6.227800000000241e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:39.235" endtime="20201029 18:16:39.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.243" level="INFO">${ACCURACY} = {'diff': [6.204200000000173e-05, 6.233300000000122e-05, 6.197200000000042e-05, 6.266699999999889e-05, 6.213899999999925e-05, 6.227800000000241e-05, 6.243099999999821e-05, 6.276399999999988e-05, 6.2306...</msg>
<status status="PASS" starttime="20201029 18:16:39.240" endtime="20201029 18:16:39.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.247" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.246" endtime="20201029 18:16:39.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.250" level="INFO">VALUE: [6.204200000000173e-05, 6.233300000000122e-05, 6.197200000000042e-05, 6.266699999999889e-05, 6.213899999999925e-05, 6.227800000000241e-05, 6.243099999999821e-05, 6.276399999999988e-05, 6.230600000000155e-05, 6.212499999999968e-05, 6.263899999999975e-05, 6.277799999999945e-05, 6.212499999999968e-05, 6.230499999999861e-05, 6.229100000000251e-05, 6.245799999999788e-05, 6.276399999999988e-05, 6.247200000000092e-05, 6.263899999999975e-05, 6.245799999999788e-05, 6.197200000000042e-05, 6.226399999999938e-05, 6.213899999999925e-05, 6.280599999999859e-05, 6.279200000000248e-05, 6.230599999999809e-05, 6.248600000000049e-05, 6.195900000000032e-05, 6.197200000000042e-05, 6.263899999999975e-05, 6.262500000000018e-05, 6.248600000000049e-05, 6.19439999999978e-05, 6.190299999999857e-05, 6.286200000000033e-05, 6.213899999999925e-05, 6.262500000000018e-05, 6.283399999999773e-05, 6.263899999999975e-05, 6.258399999999747e-05, 6.234700000000079e-05, 6.190300000000204e-05, 6.195900000000032e-05, 6.229199999999852e-05, 6.244400000000178e-05, 6.230499999999861e-05, 6.213899999999925e-05, 6.248599999999702e-05, 6.197200000000042e-05, 6.195800000000085e-05]</msg>
<status status="PASS" starttime="20201029 18:16:39.249" endtime="20201029 18:16:39.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.244" endtime="20201029 18:16:39.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.256" endtime="20201029 18:16:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.255" endtime="20201029 18:16:39.276"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.253" endtime="20201029 18:16:39.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.873" endtime="20201029 18:16:39.277"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:38.873" endtime="20201029 18:16:39.277"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.286" endtime="20201029 18:16:39.304"></status>
</kw>
<msg timestamp="20201029 18:16:39.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.285" endtime="20201029 18:16:39.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.306" endtime="20201029 18:16:39.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.308" endtime="20201029 18:16:39.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.282" endtime="20201029 18:16:39.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.280" endtime="20201029 18:16:39.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.318" endtime="20201029 18:16:39.603"></status>
</kw>
<msg timestamp="20201029 18:16:39.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.316" endtime="20201029 18:16:39.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022775931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.607" endtime="20201029 18:16:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.618" endtime="20201029 18:16:39.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.313" endtime="20201029 18:16:39.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.311" endtime="20201029 18:16:39.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:39.625" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.298599999999752e-05}, {'diff': 6.312500000000068e-05}, {'diff': 6.348599999999802e-05}, {'diff': 6.331999999999866e-05}, {'diff': 6.383299999999925e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:39.621" endtime="20201029 18:16:39.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:39.630" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.298599999999752e-05, 6.312500000000068e-05, 6.348599999999802e-05, 6.331999999999866e-05, 6.383299999999925e-05, 6.334700000000179e-05, 6.297200000000142e-05, 6.3138...</msg>
<status status="PASS" starttime="20201029 18:16:39.626" endtime="20201029 18:16:39.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.635" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 18:16:39.634" endtime="20201029 18:16:39.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.637" level="INFO">VALUE: [6.370799999999913e-05, 6.298599999999752e-05, 6.312500000000068e-05, 6.348599999999802e-05, 6.331999999999866e-05, 6.383299999999925e-05, 6.334700000000179e-05, 6.297200000000142e-05, 6.313800000000078e-05, 6.362500000000118e-05, 6.295800000000185e-05, 6.313900000000025e-05, 6.350000000000106e-05, 6.383300000000272e-05, 6.380599999999959e-05, 6.362500000000118e-05, 6.347199999999845e-05, 6.312500000000068e-05, 6.381999999999916e-05, 6.379200000000002e-05, 6.312500000000068e-05, 6.312500000000068e-05, 6.383299999999925e-05, 6.329100000000004e-05, 6.312499999999721e-05, 6.345799999999888e-05, 6.32500000000008e-05, 6.32089999999981e-05, 6.312500000000068e-05, 6.311100000000111e-05, 6.295800000000185e-05, 6.298600000000099e-05, 6.362499999999771e-05, 6.347300000000139e-05, 6.327799999999995e-05, 6.345900000000182e-05, 6.381899999999968e-05, 6.295900000000132e-05, 6.313799999999731e-05, 6.362500000000118e-05, 6.34020000000006e-05, 6.309699999999807e-05, 6.34439999999993e-05, 6.362499999999771e-05, 6.363899999999728e-05, 6.34439999999993e-05, 6.330599999999909e-05, 6.345800000000235e-05, 6.363900000000075e-05, 6.379200000000002e-05]</msg>
<status status="PASS" starttime="20201029 18:16:39.636" endtime="20201029 18:16:39.638"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.631" endtime="20201029 18:16:39.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:39.643" endtime="20201029 18:16:39.662"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.641" endtime="20201029 18:16:39.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.640" endtime="20201029 18:16:39.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.278" endtime="20201029 18:16:39.663"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.277" endtime="20201029 18:16:39.663"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.673" endtime="20201029 18:16:39.690"></status>
</kw>
<msg timestamp="20201029 18:16:39.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.671" endtime="20201029 18:16:39.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:39.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:39.692" endtime="20201029 18:16:39.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.694" endtime="20201029 18:16:39.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.668" endtime="20201029 18:16:39.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.666" endtime="20201029 18:16:39.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:39.704" endtime="20201029 18:16:39.991"></status>
</kw>
<msg timestamp="20201029 18:16:39.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.702" endtime="20201029 18:16:39.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022852486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022916667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:39.996" endtime="20201029 18:16:40.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.005" endtime="20201029 18:16:40.006"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.700" endtime="20201029 18:16:40.007"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.698" endtime="20201029 18:16:40.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.011" level="INFO">${RESULT} = [{'diff': 6.418099999999996e-05}, {'diff': 6.462500000000218e-05}, {'diff': 6.413799999999831e-05}, {'diff': 6.487500000000243e-05}, {'diff': 6.463899999999828e-05}, {'diff': 6.462499999999871e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:40.008" endtime="20201029 18:16:40.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.016" level="INFO">${ACCURACY} = {'diff': [6.418099999999996e-05, 6.462500000000218e-05, 6.413799999999831e-05, 6.487500000000243e-05, 6.463899999999828e-05, 6.462499999999871e-05, 6.411099999999864e-05, 6.463900000000175e-05, 6.4778...</msg>
<status status="PASS" starttime="20201029 18:16:40.013" endtime="20201029 18:16:40.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.020" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.019" endtime="20201029 18:16:40.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.023" level="INFO">VALUE: [6.418099999999996e-05, 6.462500000000218e-05, 6.413799999999831e-05, 6.487500000000243e-05, 6.463899999999828e-05, 6.462499999999871e-05, 6.411099999999864e-05, 6.463900000000175e-05, 6.477800000000145e-05, 6.415299999999735e-05, 6.397199999999895e-05, 6.440300000000107e-05, 6.462499999999871e-05, 6.444499999999978e-05, 6.447300000000239e-05, 6.445899999999935e-05, 6.42500000000018e-05, 6.481900000000068e-05, 6.462499999999871e-05, 6.413900000000125e-05, 6.479099999999807e-05, 6.477799999999798e-05, 6.397199999999895e-05, 6.462499999999871e-05, 6.429200000000052e-05, 6.448599999999902e-05, 6.409699999999907e-05, 6.465299999999785e-05, 6.462500000000218e-05, 6.427800000000095e-05, 6.431899999999671e-05, 6.482000000000016e-05, 6.465199999999838e-05, 6.461099999999914e-05, 6.413899999999778e-05, 6.430500000000061e-05, 6.393000000000024e-05, 6.397199999999895e-05, 6.413900000000125e-05, 6.432000000000312e-05, 6.463900000000175e-05, 6.430600000000009e-05, 6.480600000000059e-05, 6.395899999999885e-05, 6.479199999999755e-05, 6.402799999999723e-05, 6.427800000000095e-05, 6.463799999999881e-05, 6.479100000000154e-05, 6.40829999999995e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.022" endtime="20201029 18:16:40.024"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.017" endtime="20201029 18:16:40.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.029" endtime="20201029 18:16:40.048"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.027" endtime="20201029 18:16:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.026" endtime="20201029 18:16:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.664" endtime="20201029 18:16:40.049"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:39.664" endtime="20201029 18:16:40.049"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.058" endtime="20201029 18:16:40.077"></status>
</kw>
<msg timestamp="20201029 18:16:40.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.057" endtime="20201029 18:16:40.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.079" endtime="20201029 18:16:40.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.082" endtime="20201029 18:16:40.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.054" endtime="20201029 18:16:40.084"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.052" endtime="20201029 18:16:40.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.092" endtime="20201029 18:16:40.379"></status>
</kw>
<msg timestamp="20201029 18:16:40.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023901639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.090" endtime="20201029 18:16:40.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023836597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023901639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.383" endtime="20201029 18:16:40.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.392" endtime="20201029 18:16:40.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.087" endtime="20201029 18:16:40.394"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.085" endtime="20201029 18:16:40.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.399" level="INFO">${RESULT} = [{'diff': 6.50419999999978e-05}, {'diff': 6.570800000000113e-05}, {'diff': 6.497199999999995e-05}, {'diff': 6.580599999999812e-05}, {'diff': 6.513899999999878e-05}, {'diff': 6.545900000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:40.395" endtime="20201029 18:16:40.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.403" level="INFO">${ACCURACY} = {'diff': [6.50419999999978e-05, 6.570800000000113e-05, 6.497199999999995e-05, 6.580599999999812e-05, 6.513899999999878e-05, 6.545900000000035e-05, 6.547200000000045e-05, 6.55700000000009e-05, 6.565199...</msg>
<status status="PASS" starttime="20201029 18:16:40.400" endtime="20201029 18:16:40.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.408" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.407" endtime="20201029 18:16:40.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.410" level="INFO">VALUE: [6.50419999999978e-05, 6.570800000000113e-05, 6.497199999999995e-05, 6.580599999999812e-05, 6.513899999999878e-05, 6.545900000000035e-05, 6.547200000000045e-05, 6.55700000000009e-05, 6.565199999999938e-05, 6.497199999999995e-05, 6.512499999999921e-05, 6.563899999999928e-05, 6.515299999999835e-05, 6.49440000000008e-05, 6.509700000000007e-05, 6.577799999999898e-05, 6.547200000000045e-05, 6.512499999999921e-05, 6.495899999999985e-05, 6.580600000000159e-05, 6.513899999999878e-05, 6.580599999999812e-05, 6.516600000000192e-05, 6.563899999999928e-05, 6.563900000000275e-05, 6.524999999999934e-05, 6.530500000000161e-05, 6.515299999999835e-05, 6.568100000000146e-05, 6.513899999999878e-05, 6.580600000000159e-05, 6.579200000000202e-05, 6.512500000000268e-05, 6.573600000000027e-05, 6.533299999999728e-05, 6.562499999999971e-05, 6.547199999999698e-05, 6.580499999999864e-05, 6.529099999999857e-05, 6.511099999999964e-05, 6.565299999999885e-05, 6.50830000000005e-05, 6.530500000000161e-05, 6.515300000000182e-05, 6.527799999999848e-05, 6.563899999999928e-05, 6.527799999999848e-05, 6.573600000000027e-05, 6.512499999999921e-05, 6.581899999999821e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.409" endtime="20201029 18:16:40.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.404" endtime="20201029 18:16:40.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.417" endtime="20201029 18:16:40.436"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.415" endtime="20201029 18:16:40.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.414" endtime="20201029 18:16:40.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.050" endtime="20201029 18:16:40.437"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.050" endtime="20201029 18:16:40.437"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.446" endtime="20201029 18:16:40.463"></status>
</kw>
<msg timestamp="20201029 18:16:40.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.445" endtime="20201029 18:16:40.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.465" endtime="20201029 18:16:40.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.468" endtime="20201029 18:16:40.469"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.442" endtime="20201029 18:16:40.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.440" endtime="20201029 18:16:40.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.477" endtime="20201029 18:16:40.765"></status>
</kw>
<msg timestamp="20201029 18:16:40.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.476" endtime="20201029 18:16:40.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022776139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022842681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.769" endtime="20201029 18:16:40.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.778" endtime="20201029 18:16:40.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.473" endtime="20201029 18:16:40.780"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.471" endtime="20201029 18:16:40.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:40.785" level="INFO">${RESULT} = [{'diff': 6.65419999999993e-05}, {'diff': 6.613899999999978e-05}, {'diff': 6.631899999999871e-05}, {'diff': 6.647199999999798e-05}, {'diff': 6.649999999999712e-05}, {'diff': 6.625000000000034e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:40.781" endtime="20201029 18:16:40.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:40.790" level="INFO">${ACCURACY} = {'diff': [6.65419999999993e-05, 6.613899999999978e-05, 6.631899999999871e-05, 6.647199999999798e-05, 6.649999999999712e-05, 6.625000000000034e-05, 6.613899999999978e-05, 6.612500000000021e-05, 6.66250...</msg>
<status status="PASS" starttime="20201029 18:16:40.786" endtime="20201029 18:16:40.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.795" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 18:16:40.793" endtime="20201029 18:16:40.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.797" level="INFO">VALUE: [6.65419999999993e-05, 6.613899999999978e-05, 6.631899999999871e-05, 6.647199999999798e-05, 6.649999999999712e-05, 6.625000000000034e-05, 6.613899999999978e-05, 6.612500000000021e-05, 6.662500000000071e-05, 6.647299999999745e-05, 6.680599999999912e-05, 6.613899999999978e-05, 6.594499999999781e-05, 6.684699999999835e-05, 6.662500000000071e-05, 6.633300000000175e-05, 6.680599999999912e-05, 6.645899999999788e-05, 6.681899999999921e-05, 6.634700000000132e-05, 6.680500000000311e-05, 6.629099999999957e-05, 6.602799999999923e-05, 6.629199999999905e-05, 6.630599999999862e-05, 6.662499999999724e-05, 6.612500000000021e-05, 6.609700000000107e-05, 6.630599999999862e-05, 6.611100000000064e-05, 6.663899999999681e-05, 6.629199999999905e-05, 6.598599999999705e-05, 6.612500000000021e-05, 6.613899999999978e-05, 6.60419999999988e-05, 6.684700000000182e-05, 6.680499999999964e-05, 6.680599999999912e-05, 6.623600000000077e-05, 6.630599999999862e-05, 6.662500000000071e-05, 6.612500000000021e-05, 6.613899999999978e-05, 6.631899999999871e-05, 6.612500000000021e-05, 6.630499999999914e-05, 6.679100000000007e-05, 6.663900000000028e-05, 6.592999999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:16:40.796" endtime="20201029 18:16:40.798"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.791" endtime="20201029 18:16:40.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:40.802" endtime="20201029 18:16:40.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.801" endtime="20201029 18:16:40.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.800" endtime="20201029 18:16:40.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.438" endtime="20201029 18:16:40.824"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.438" endtime="20201029 18:16:40.824"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.834" endtime="20201029 18:16:40.852"></status>
</kw>
<msg timestamp="20201029 18:16:40.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.832" endtime="20201029 18:16:40.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:40.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:40.854" endtime="20201029 18:16:40.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.856" endtime="20201029 18:16:40.858"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.829" endtime="20201029 18:16:40.859"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.826" endtime="20201029 18:16:40.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:40.866" endtime="20201029 18:16:41.152"></status>
</kw>
<msg timestamp="20201029 18:16:41.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023970444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:40.864" endtime="20201029 18:16:41.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023970444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024038278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.157" endtime="20201029 18:16:41.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.165" endtime="20201029 18:16:41.167"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.861" endtime="20201029 18:16:41.168"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.860" endtime="20201029 18:16:41.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.172" level="INFO">${RESULT} = [{'diff': 6.783399999999926e-05}, {'diff': 6.729200000000005e-05}, {'diff': 6.713899999999731e-05}, {'diff': 6.779200000000055e-05}, {'diff': 6.697199999999848e-05}, {'diff': 6.713900000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:41.169" endtime="20201029 18:16:41.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.177" level="INFO">${ACCURACY} = {'diff': [6.783399999999926e-05, 6.729200000000005e-05, 6.713899999999731e-05, 6.779200000000055e-05, 6.697199999999848e-05, 6.713900000000078e-05, 6.745799999999941e-05, 6.77909999999976e-05, 6.76809...</msg>
<status status="PASS" starttime="20201029 18:16:41.173" endtime="20201029 18:16:41.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.181" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.180" endtime="20201029 18:16:41.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.184" level="INFO">VALUE: [6.783399999999926e-05, 6.729200000000005e-05, 6.713899999999731e-05, 6.779200000000055e-05, 6.697199999999848e-05, 6.713900000000078e-05, 6.745799999999941e-05, 6.77909999999976e-05, 6.768099999999999e-05, 6.779199999999708e-05, 6.763900000000128e-05, 6.727800000000048e-05, 6.743099999999974e-05, 6.766699999999695e-05, 6.694499999999881e-05, 6.781999999999969e-05, 6.712499999999774e-05, 6.745899999999888e-05, 6.730500000000014e-05, 6.697199999999848e-05, 6.697200000000195e-05, 6.762500000000171e-05, 6.763899999999781e-05, 6.788800000000206e-05, 6.777800000000098e-05, 6.713900000000078e-05, 6.712500000000121e-05, 6.70969999999986e-05, 6.784699999999935e-05, 6.697300000000142e-05, 6.695899999999838e-05, 6.731899999999971e-05, 6.75969999999991e-05, 6.779100000000107e-05, 6.763900000000128e-05, 6.765300000000085e-05, 6.761099999999867e-05, 6.701400000000066e-05, 6.768099999999999e-05, 6.761100000000214e-05, 6.698599999999805e-05, 6.725000000000134e-05, 6.762499999999824e-05, 6.747300000000192e-05, 6.779200000000055e-05, 6.729200000000005e-05, 6.781900000000021e-05, 6.730500000000014e-05, 6.762499999999824e-05, 6.740299999999713e-05]</msg>
<status status="PASS" starttime="20201029 18:16:41.182" endtime="20201029 18:16:41.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.178" endtime="20201029 18:16:41.185"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.189" endtime="20201029 18:16:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.188" endtime="20201029 18:16:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.186" endtime="20201029 18:16:41.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.825" endtime="20201029 18:16:41.210"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:40.824" endtime="20201029 18:16:41.210"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.220" endtime="20201029 18:16:41.239"></status>
</kw>
<msg timestamp="20201029 18:16:41.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.218" endtime="20201029 18:16:41.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.241" endtime="20201029 18:16:41.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.243" endtime="20201029 18:16:41.245"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.215" endtime="20201029 18:16:41.246"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.213" endtime="20201029 18:16:41.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.253" endtime="20201029 18:16:41.542"></status>
</kw>
<msg timestamp="20201029 18:16:41.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.251" endtime="20201029 18:16:41.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024742514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024811222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:41.547" endtime="20201029 18:16:41.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.555" endtime="20201029 18:16:41.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.248" endtime="20201029 18:16:41.557"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.247" endtime="20201029 18:16:41.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.562" level="INFO">${RESULT} = [{'diff': 6.870800000000066e-05}, {'diff': 6.794400000000034e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.830500000000114e-05}, {'diff': 6.845800000000041e-05}, {'diff': 6.813900000000178e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:41.559" endtime="20201029 18:16:41.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.566" level="INFO">${ACCURACY} = {'diff': [6.870800000000066e-05, 6.794400000000034e-05, 6.845800000000041e-05, 6.830500000000114e-05, 6.845800000000041e-05, 6.813900000000178e-05, 6.795799999999991e-05, 6.862499999999924e-05, 6.7985...</msg>
<status status="PASS" starttime="20201029 18:16:41.563" endtime="20201029 18:16:41.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.571" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.570" endtime="20201029 18:16:41.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.574" level="INFO">VALUE: [6.870800000000066e-05, 6.794400000000034e-05, 6.845800000000041e-05, 6.830500000000114e-05, 6.845800000000041e-05, 6.813900000000178e-05, 6.795799999999991e-05, 6.862499999999924e-05, 6.798599999999905e-05, 6.884700000000035e-05, 6.812499999999874e-05, 6.879200000000155e-05, 6.862499999999924e-05, 6.797199999999948e-05, 6.847199999999998e-05, 6.848599999999955e-05, 6.863899999999881e-05, 6.843000000000127e-05, 6.843000000000127e-05, 6.848599999999955e-05, 6.797199999999948e-05, 6.851400000000216e-05, 6.800000000000209e-05, 6.829200000000105e-05, 6.863900000000228e-05, 6.813900000000178e-05, 6.829199999999758e-05, 6.845800000000041e-05, 6.862499999999924e-05, 6.812499999999874e-05, 6.795799999999991e-05, 6.797200000000295e-05, 6.811100000000264e-05, 6.832000000000019e-05, 6.829200000000105e-05, 6.797199999999948e-05, 6.884700000000035e-05, 6.87640000000024e-05, 6.827799999999801e-05, 6.847300000000292e-05, 6.845899999999988e-05, 6.865200000000238e-05, 6.829100000000157e-05, 6.863899999999881e-05, 6.863899999999881e-05, 6.802799999999776e-05, 6.847199999999998e-05, 6.815300000000135e-05, 6.829199999999758e-05, 6.880600000000112e-05]</msg>
<status status="PASS" starttime="20201029 18:16:41.572" endtime="20201029 18:16:41.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.567" endtime="20201029 18:16:41.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.580" endtime="20201029 18:16:41.599"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.578" endtime="20201029 18:16:41.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.577" endtime="20201029 18:16:41.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.211" endtime="20201029 18:16:41.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.210" endtime="20201029 18:16:41.601"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.610" endtime="20201029 18:16:41.628"></status>
</kw>
<msg timestamp="20201029 18:16:41.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.608" endtime="20201029 18:16:41.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.630" endtime="20201029 18:16:41.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.632" endtime="20201029 18:16:41.634"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.605" endtime="20201029 18:16:41.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.603" endtime="20201029 18:16:41.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.642" endtime="20201029 18:16:41.928"></status>
</kw>
<msg timestamp="20201029 18:16:41.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:41.640" endtime="20201029 18:16:41.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022760542, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:41.932" endtime="20201029 18:16:41.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.940" endtime="20201029 18:16:41.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.638" endtime="20201029 18:16:41.943"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.636" endtime="20201029 18:16:41.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:41.947" level="INFO">${RESULT} = [{'diff': 6.90420000000018e-05}, {'diff': 6.965299999999938e-05}, {'diff': 6.931899999999824e-05}, {'diff': 6.930600000000162e-05}, {'diff': 6.97909999999996e-05}, {'diff': 6.961100000000067e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:41.944" endtime="20201029 18:16:41.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:41.952" level="INFO">${ACCURACY} = {'diff': [6.90420000000018e-05, 6.965299999999938e-05, 6.931899999999824e-05, 6.930600000000162e-05, 6.97909999999996e-05, 6.961100000000067e-05, 6.916700000000192e-05, 6.962500000000024e-05, 6.894399...</msg>
<status status="PASS" starttime="20201029 18:16:41.948" endtime="20201029 18:16:41.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.957" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 18:16:41.956" endtime="20201029 18:16:41.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:41.960" level="INFO">VALUE: [6.90420000000018e-05, 6.965299999999938e-05, 6.931899999999824e-05, 6.930600000000162e-05, 6.97909999999996e-05, 6.961100000000067e-05, 6.916700000000192e-05, 6.962500000000024e-05, 6.894399999999787e-05, 6.944400000000184e-05, 6.912499999999974e-05, 6.943099999999827e-05, 6.913899999999931e-05, 6.945900000000088e-05, 6.962500000000024e-05, 6.965300000000285e-05, 6.979200000000255e-05, 6.895899999999691e-05, 6.965199999999991e-05, 6.891599999999873e-05, 6.929100000000257e-05, 6.987499999999702e-05, 6.927799999999901e-05, 6.980500000000264e-05, 6.963899999999981e-05, 6.944399999999837e-05, 6.962500000000024e-05, 6.982000000000169e-05, 6.961100000000067e-05, 6.897299999999995e-05, 6.931899999999824e-05, 6.94169999999987e-05, 6.947200000000098e-05, 6.94299999999988e-05, 6.92909999999991e-05, 6.945800000000141e-05, 6.933400000000076e-05, 6.933400000000076e-05, 6.898600000000005e-05, 6.927799999999901e-05, 6.962500000000024e-05, 6.912499999999974e-05, 6.961100000000067e-05, 6.945899999999741e-05, 6.947300000000045e-05, 6.927799999999901e-05, 6.931900000000171e-05, 6.97909999999996e-05, 6.97909999999996e-05, 6.963899999999981e-05]</msg>
<status status="PASS" starttime="20201029 18:16:41.958" endtime="20201029 18:16:41.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.953" endtime="20201029 18:16:41.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:41.965" endtime="20201029 18:16:41.984"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.964" endtime="20201029 18:16:41.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.962" endtime="20201029 18:16:41.985"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.602" endtime="20201029 18:16:41.986"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.601" endtime="20201029 18:16:41.986"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:41.995" endtime="20201029 18:16:42.013"></status>
</kw>
<msg timestamp="20201029 18:16:42.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:41.993" endtime="20201029 18:16:42.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.014" endtime="20201029 18:16:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.017" endtime="20201029 18:16:42.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.991" endtime="20201029 18:16:42.019"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.988" endtime="20201029 18:16:42.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.027" endtime="20201029 18:16:42.316"></status>
</kw>
<msg timestamp="20201029 18:16:42.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.025" endtime="20201029 18:16:42.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022839722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.320" endtime="20201029 18:16:42.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.329" endtime="20201029 18:16:42.330"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.022" endtime="20201029 18:16:42.331"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.020" endtime="20201029 18:16:42.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.336" level="INFO">${RESULT} = [{'diff': 7.017999999999955e-05}, {'diff': 7.040300000000013e-05}, {'diff': 7.061100000000167e-05}, {'diff': 6.995799999999844e-05}, {'diff': 7.045799999999894e-05}, {'diff': 7.012500000000074e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:42.332" endtime="20201029 18:16:42.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.340" level="INFO">${ACCURACY} = {'diff': [7.017999999999955e-05, 7.040300000000013e-05, 7.061100000000167e-05, 6.995799999999844e-05, 7.045799999999894e-05, 7.012500000000074e-05, 7.048599999999808e-05, 7.079200000000008e-05, 7.0473...</msg>
<status status="PASS" starttime="20201029 18:16:42.337" endtime="20201029 18:16:42.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.345" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.344" endtime="20201029 18:16:42.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.347" level="INFO">VALUE: [7.017999999999955e-05, 7.040300000000013e-05, 7.061100000000167e-05, 6.995799999999844e-05, 7.045799999999894e-05, 7.012500000000074e-05, 7.048599999999808e-05, 7.079200000000008e-05, 7.047300000000145e-05, 6.995900000000138e-05, 7.012500000000074e-05, 7.07910000000006e-05, 7.030499999999967e-05, 7.08049999999967e-05, 7.012500000000074e-05, 7.047200000000198e-05, 7.063900000000081e-05, 7.036099999999795e-05, 7.045799999999894e-05, 7.047199999999851e-05, 6.997300000000095e-05, 7.016599999999998e-05, 7.012499999999727e-05, 7.062499999999777e-05, 7.063900000000081e-05, 6.997199999999801e-05, 7.02910000000001e-05, 7.027800000000001e-05, 7.033300000000228e-05, 7.081999999999922e-05, 7.027800000000001e-05, 7.015299999999988e-05, 7.080599999999965e-05, 7.079200000000008e-05, 7.002799999999976e-05, 6.997300000000095e-05, 6.993100000000224e-05, 7.047200000000198e-05, 7.016699999999945e-05, 7.013900000000031e-05, 7.030499999999967e-05, 7.040300000000013e-05, 7.054199999999983e-05, 7.081999999999922e-05, 7.045799999999894e-05, 7.063900000000081e-05, 7.047199999999851e-05, 7.026400000000044e-05, 7.047299999999798e-05, 6.998600000000105e-05]</msg>
<status status="PASS" starttime="20201029 18:16:42.346" endtime="20201029 18:16:42.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.341" endtime="20201029 18:16:42.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.352" endtime="20201029 18:16:42.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.351" endtime="20201029 18:16:42.372"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.350" endtime="20201029 18:16:42.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.987" endtime="20201029 18:16:42.373"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:41.986" endtime="20201029 18:16:42.373"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.382" endtime="20201029 18:16:42.401"></status>
</kw>
<msg timestamp="20201029 18:16:42.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.381" endtime="20201029 18:16:42.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.405" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.403" endtime="20201029 18:16:42.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.406" endtime="20201029 18:16:42.407"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.378" endtime="20201029 18:16:42.408"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.376" endtime="20201029 18:16:42.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.415" endtime="20201029 18:16:42.702"></status>
</kw>
<msg timestamp="20201029 18:16:42.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:42.414" endtime="20201029 18:16:42.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023818083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0238895, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:42.706" endtime="20201029 18:16:42.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.715" endtime="20201029 18:16:42.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.411" endtime="20201029 18:16:42.717"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.409" endtime="20201029 18:16:42.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:42.722" level="INFO">${RESULT} = [{'diff': 7.14170000000007e-05}, {'diff': 7.12910000000011e-05}, {'diff': 7.13049999999972e-05}, {'diff': 7.133299999999981e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.145799999999994e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 18:16:42.718" endtime="20201029 18:16:42.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:42.726" level="INFO">${ACCURACY} = {'diff': [7.14170000000007e-05, 7.12910000000011e-05, 7.13049999999972e-05, 7.133299999999981e-05, 7.187499999999902e-05, 7.145799999999994e-05, 7.145899999999941e-05, 7.145799999999994e-05, 7.1820000...</msg>
<status status="PASS" starttime="20201029 18:16:42.723" endtime="20201029 18:16:42.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.731" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 18:16:42.730" endtime="20201029 18:16:42.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.734" level="INFO">VALUE: [7.14170000000007e-05, 7.12910000000011e-05, 7.13049999999972e-05, 7.133299999999981e-05, 7.187499999999902e-05, 7.145799999999994e-05, 7.145899999999941e-05, 7.145799999999994e-05, 7.182000000000022e-05, 7.106999999999947e-05, 7.129200000000058e-05, 7.163900000000181e-05, 7.180500000000117e-05, 7.130500000000067e-05, 7.181900000000074e-05, 7.145799999999994e-05, 7.145799999999994e-05, 7.097199999999901e-05, 7.113899999999784e-05, 7.177800000000151e-05, 7.129200000000058e-05, 7.180600000000065e-05, 7.166600000000148e-05, 7.147299999999898e-05, 7.161199999999868e-05, 7.145799999999994e-05, 7.099999999999815e-05, 7.145799999999994e-05, 7.094399999999987e-05, 7.147199999999951e-05, 7.159699999999963e-05, 7.130600000000015e-05, 7.147199999999951e-05, 7.095799999999944e-05, 7.163900000000181e-05, 7.130600000000015e-05, 7.179199999999761e-05, 7.134699999999938e-05, 7.162499999999877e-05, 7.179200000000108e-05, 7.102800000000076e-05, 7.147199999999951e-05, 7.095799999999944e-05, 7.145799999999994e-05, 7.165299999999791e-05, 7.159699999999963e-05, 7.179200000000108e-05, 7.163900000000181e-05, 7.162500000000224e-05, 7.147299999999898e-05]</msg>
<status status="PASS" starttime="20201029 18:16:42.733" endtime="20201029 18:16:42.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.727" endtime="20201029 18:16:42.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:42.740" endtime="20201029 18:16:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.739" endtime="20201029 18:16:42.760"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.738" endtime="20201029 18:16:42.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.374" endtime="20201029 18:16:42.761"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.374" endtime="20201029 18:16:42.761"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.770" endtime="20201029 18:16:42.788"></status>
</kw>
<msg timestamp="20201029 18:16:42.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.769" endtime="20201029 18:16:42.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:42.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:42.790" endtime="20201029 18:16:42.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.792" endtime="20201029 18:16:42.794"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.766" endtime="20201029 18:16:42.795"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.764" endtime="20201029 18:16:42.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:42.802" endtime="20201029 18:16:43.087"></status>
</kw>
<msg timestamp="20201029 18:16:43.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:42.800" endtime="20201029 18:16:43.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022694389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022766583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.091" endtime="20201029 18:16:43.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.100" endtime="20201029 18:16:43.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.797" endtime="20201029 18:16:43.102"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.796" endtime="20201029 18:16:43.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.107" level="INFO">${RESULT} = [{'diff': 7.219400000000112e-05}, {'diff': 7.27910000000026e-05}, {'diff': 7.231900000000124e-05}, {'diff': 7.227800000000201e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.231999999999725e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:43.103" endtime="20201029 18:16:43.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.112" level="INFO">${ACCURACY} = {'diff': [7.219400000000112e-05, 7.27910000000026e-05, 7.231900000000124e-05, 7.227800000000201e-05, 7.263899999999934e-05, 7.231999999999725e-05, 7.263899999999934e-05, 7.262499999999977e-05, 7.21250...</msg>
<status status="PASS" starttime="20201029 18:16:43.108" endtime="20201029 18:16:43.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.117" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.116" endtime="20201029 18:16:43.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.120" level="INFO">VALUE: [7.219400000000112e-05, 7.27910000000026e-05, 7.231900000000124e-05, 7.227800000000201e-05, 7.263899999999934e-05, 7.231999999999725e-05, 7.263899999999934e-05, 7.262499999999977e-05, 7.212500000000274e-05, 7.280599999999818e-05, 7.195899999999991e-05, 7.276399999999947e-05, 7.230600000000115e-05, 7.215199999999894e-05, 7.22910000000021e-05, 7.197200000000001e-05, 7.265299999999891e-05, 7.229099999999863e-05, 7.23049999999982e-05, 7.248600000000008e-05, 7.263899999999934e-05, 7.213899999999884e-05, 7.248600000000008e-05, 7.281999999999775e-05, 7.263899999999934e-05, 7.213900000000231e-05, 7.197200000000001e-05, 7.197200000000001e-05, 7.249999999999965e-05, 7.191600000000173e-05, 7.241599999999876e-05, 7.229200000000158e-05, 7.24439999999979e-05, 7.280599999999818e-05, 7.247200000000051e-05, 7.262499999999977e-05, 7.262499999999977e-05, 7.276399999999947e-05, 7.190300000000163e-05, 7.229199999999811e-05, 7.212499999999927e-05, 7.279099999999913e-05, 7.273600000000033e-05, 7.277800000000251e-05, 7.24439999999979e-05, 7.195800000000044e-05, 7.269499999999762e-05, 7.263899999999934e-05, 7.263899999999934e-05, 7.195899999999991e-05]</msg>
<status status="PASS" starttime="20201029 18:16:43.118" endtime="20201029 18:16:43.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.113" endtime="20201029 18:16:43.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.126" endtime="20201029 18:16:43.145"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.124" endtime="20201029 18:16:43.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.122" endtime="20201029 18:16:43.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.762" endtime="20201029 18:16:43.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:42.761" endtime="20201029 18:16:43.147"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.156" endtime="20201029 18:16:43.173"></status>
</kw>
<msg timestamp="20201029 18:16:43.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.154" endtime="20201029 18:16:43.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.175" endtime="20201029 18:16:43.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.177" endtime="20201029 18:16:43.179"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.151" endtime="20201029 18:16:43.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.149" endtime="20201029 18:16:43.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.187" endtime="20201029 18:16:43.474"></status>
</kw>
<msg timestamp="20201029 18:16:43.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.186" endtime="20201029 18:16:43.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022842458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022915653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.479" endtime="20201029 18:16:43.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.488" endtime="20201029 18:16:43.489"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.183" endtime="20201029 18:16:43.490"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.181" endtime="20201029 18:16:43.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.494" level="INFO">${RESULT} = [{'diff': 7.319500000000159e-05}, {'diff': 7.347299999999751e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.38049999999997e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:43.491" endtime="20201029 18:16:43.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.499" level="INFO">${ACCURACY} = {'diff': [7.319500000000159e-05, 7.347299999999751e-05, 7.376400000000047e-05, 7.295900000000091e-05, 7.316599999999951e-05, 7.38049999999997e-05, 7.291600000000273e-05, 7.313899999999984e-05, 7.36390...</msg>
<status status="PASS" starttime="20201029 18:16:43.496" endtime="20201029 18:16:43.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.503" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.502" endtime="20201029 18:16:43.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.506" level="INFO">VALUE: [7.319500000000159e-05, 7.347299999999751e-05, 7.376400000000047e-05, 7.295900000000091e-05, 7.316599999999951e-05, 7.38049999999997e-05, 7.291600000000273e-05, 7.313899999999984e-05, 7.363900000000034e-05, 7.348600000000108e-05, 7.379199999999961e-05, 7.331999999999825e-05, 7.347200000000151e-05, 7.316700000000245e-05, 7.380600000000265e-05, 7.362500000000077e-05, 7.330600000000215e-05, 7.330500000000267e-05, 7.347199999999804e-05, 7.304200000000233e-05, 7.330500000000267e-05, 7.316700000000245e-05, 7.380599999999918e-05, 7.330600000000215e-05, 7.35560000000024e-05, 7.326399999999997e-05, 7.363900000000034e-05, 7.31110000000007e-05, 7.379199999999961e-05, 7.315199999999994e-05, 7.327700000000006e-05, 7.329099999999963e-05, 7.38049999999997e-05, 7.326399999999997e-05, 7.363900000000034e-05, 7.38049999999997e-05, 7.298599999999711e-05, 7.36249999999973e-05, 7.330599999999868e-05, 7.377800000000004e-05, 7.377800000000004e-05, 7.381899999999927e-05, 7.311099999999723e-05, 7.379199999999961e-05, 7.348599999999761e-05, 7.363900000000034e-05, 7.380599999999918e-05, 7.347200000000151e-05, 7.38049999999997e-05, 7.313899999999984e-05]</msg>
<status status="PASS" starttime="20201029 18:16:43.505" endtime="20201029 18:16:43.507"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.500" endtime="20201029 18:16:43.507"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.511" endtime="20201029 18:16:43.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.510" endtime="20201029 18:16:43.531"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.508" endtime="20201029 18:16:43.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.147" endtime="20201029 18:16:43.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.147" endtime="20201029 18:16:43.532"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.541" endtime="20201029 18:16:43.561"></status>
</kw>
<msg timestamp="20201029 18:16:43.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.540" endtime="20201029 18:16:43.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.562" endtime="20201029 18:16:43.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.565" endtime="20201029 18:16:43.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.537" endtime="20201029 18:16:43.567"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.535" endtime="20201029 18:16:43.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.575" endtime="20201029 18:16:43.861"></status>
</kw>
<msg timestamp="20201029 18:16:43.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.573" endtime="20201029 18:16:43.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.865" endtime="20201029 18:16:43.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.874" endtime="20201029 18:16:43.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.570" endtime="20201029 18:16:43.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.568" endtime="20201029 18:16:43.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:43.881" level="INFO">${RESULT} = [{'diff': 7.434700000000238e-05}, {'diff': 7.463900000000134e-05}, {'diff': 7.46249999999983e-05}, {'diff': 7.447200000000251e-05}, {'diff': 7.448599999999861e-05}, {'diff': 7.395800000000244e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:43.877" endtime="20201029 18:16:43.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:43.885" level="INFO">${ACCURACY} = {'diff': [7.434700000000238e-05, 7.463900000000134e-05, 7.46249999999983e-05, 7.447200000000251e-05, 7.448599999999861e-05, 7.395800000000244e-05, 7.433399999999882e-05, 7.430599999999968e-05, 7.39589...</msg>
<status status="PASS" starttime="20201029 18:16:43.882" endtime="20201029 18:16:43.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.890" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 18:16:43.889" endtime="20201029 18:16:43.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.894" level="INFO">VALUE: [7.434700000000238e-05, 7.463900000000134e-05, 7.46249999999983e-05, 7.447200000000251e-05, 7.448599999999861e-05, 7.395800000000244e-05, 7.433399999999882e-05, 7.430599999999968e-05, 7.395899999999844e-05, 7.461099999999873e-05, 7.463899999999787e-05, 7.454200000000036e-05, 7.397200000000201e-05, 7.43050000000002e-05, 7.398599999999811e-05, 7.391699999999973e-05, 7.445799999999947e-05, 7.429200000000011e-05, 7.390300000000016e-05, 7.46110000000022e-05, 7.41110000000017e-05, 7.479199999999714e-05, 7.477799999999757e-05, 7.445899999999894e-05, 7.41110000000017e-05, 7.46110000000022e-05, 7.397199999999854e-05, 7.463900000000134e-05, 7.397199999999854e-05, 7.447199999999904e-05, 7.480600000000018e-05, 7.479200000000061e-05, 7.430599999999968e-05, 7.448599999999861e-05, 7.430599999999968e-05, 7.482000000000322e-05, 7.401400000000072e-05, 7.402800000000029e-05, 7.477700000000156e-05, 7.404199999999986e-05, 7.418099999999955e-05, 7.411099999999823e-05, 7.447200000000251e-05, 7.397200000000201e-05, 7.413900000000084e-05, 7.430599999999968e-05, 7.413900000000084e-05, 7.412500000000127e-05, 7.412500000000127e-05, 7.463900000000134e-05]</msg>
<status status="PASS" starttime="20201029 18:16:43.891" endtime="20201029 18:16:43.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.886" endtime="20201029 18:16:43.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:43.907" endtime="20201029 18:16:43.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.905" endtime="20201029 18:16:43.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.904" endtime="20201029 18:16:43.927"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.533" endtime="20201029 18:16:43.928"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.533" endtime="20201029 18:16:43.928"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.938" endtime="20201029 18:16:43.956"></status>
</kw>
<msg timestamp="20201029 18:16:43.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.936" endtime="20201029 18:16:43.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:43.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:43.958" endtime="20201029 18:16:43.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.960" endtime="20201029 18:16:43.962"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.933" endtime="20201029 18:16:43.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.931" endtime="20201029 18:16:43.963"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:43.970" endtime="20201029 18:16:44.255"></status>
</kw>
<msg timestamp="20201029 18:16:44.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023625875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:43.968" endtime="20201029 18:16:44.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023625875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023701389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.259" endtime="20201029 18:16:44.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.268" endtime="20201029 18:16:44.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.966" endtime="20201029 18:16:44.270"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.964" endtime="20201029 18:16:44.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.275" level="INFO">${RESULT} = [{'diff': 7.551399999999875e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.495899999999944e-05}, {'diff': 7.529200000000111e-05}, {'diff': 7.498599999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:44.271" endtime="20201029 18:16:44.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.280" level="INFO">${ACCURACY} = {'diff': [7.551399999999875e-05, 7.561099999999973e-05, 7.497199999999954e-05, 7.495899999999944e-05, 7.529200000000111e-05, 7.498599999999911e-05, 7.58050000000017e-05, 7.549999999999918e-05, 7.56249...</msg>
<status status="PASS" starttime="20201029 18:16:44.276" endtime="20201029 18:16:44.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.285" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.284" endtime="20201029 18:16:44.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.287" level="INFO">VALUE: [7.551399999999875e-05, 7.561099999999973e-05, 7.497199999999954e-05, 7.495899999999944e-05, 7.529200000000111e-05, 7.498599999999911e-05, 7.58050000000017e-05, 7.549999999999918e-05, 7.56249999999993e-05, 7.497199999999954e-05, 7.56249999999993e-05, 7.532000000000025e-05, 7.580599999999771e-05, 7.497199999999954e-05, 7.577799999999857e-05, 7.579199999999814e-05, 7.580600000000118e-05, 7.530600000000068e-05, 7.531900000000077e-05, 7.536099999999948e-05, 7.53189999999973e-05, 7.513899999999837e-05, 7.54440000000009e-05, 7.497199999999954e-05, 7.563899999999887e-05, 7.56249999999993e-05, 7.532000000000025e-05, 7.51249999999988e-05, 7.554200000000136e-05, 7.533300000000034e-05, 7.579200000000161e-05, 7.577800000000204e-05, 7.512500000000227e-05, 7.565300000000191e-05, 7.579100000000213e-05, 7.562500000000277e-05, 7.492999999999736e-05, 7.518100000000055e-05, 7.565300000000191e-05, 7.543099999999733e-05, 7.565300000000191e-05, 7.561099999999973e-05, 7.515300000000141e-05, 7.570800000000072e-05, 7.518100000000055e-05, 7.51379999999989e-05, 7.547200000000004e-05, 7.56249999999993e-05, 7.554200000000136e-05, 7.498599999999911e-05]</msg>
<status status="PASS" starttime="20201029 18:16:44.286" endtime="20201029 18:16:44.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.281" endtime="20201029 18:16:44.289"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.292" endtime="20201029 18:16:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.291" endtime="20201029 18:16:44.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.290" endtime="20201029 18:16:44.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.929" endtime="20201029 18:16:44.313"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:43.928" endtime="20201029 18:16:44.313"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.322" endtime="20201029 18:16:44.341"></status>
</kw>
<msg timestamp="20201029 18:16:44.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.321" endtime="20201029 18:16:44.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.343" endtime="20201029 18:16:44.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.346" endtime="20201029 18:16:44.347"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.318" endtime="20201029 18:16:44.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.316" endtime="20201029 18:16:44.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.355" endtime="20201029 18:16:44.642"></status>
</kw>
<msg timestamp="20201029 18:16:44.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.354" endtime="20201029 18:16:44.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022897514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022973528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:44.647" endtime="20201029 18:16:44.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.655" endtime="20201029 18:16:44.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.351" endtime="20201029 18:16:44.657"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.349" endtime="20201029 18:16:44.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:44.662" level="INFO">${RESULT} = [{'diff': 7.601399999999925e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.598600000000011e-05}, {'diff': 7.595800000000097e-05}, {'diff': 7.62769999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:44.659" endtime="20201029 18:16:44.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:44.666" level="INFO">${ACCURACY} = {'diff': [7.601399999999925e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.598600000000011e-05, 7.595800000000097e-05, 7.62769999999996e-05, 7.683299999999837e-05, 7.68050000000027e-05, 7.645800...</msg>
<status status="PASS" starttime="20201029 18:16:44.663" endtime="20201029 18:16:44.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.671" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 18:16:44.670" endtime="20201029 18:16:44.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.674" level="INFO">VALUE: [7.601399999999925e-05, 7.663899999999987e-05, 7.663899999999987e-05, 7.598600000000011e-05, 7.595800000000097e-05, 7.62769999999996e-05, 7.683299999999837e-05, 7.68050000000027e-05, 7.645800000000147e-05, 7.608299999999762e-05, 7.647199999999757e-05, 7.641699999999876e-05, 7.597200000000054e-05, 7.602800000000229e-05, 7.630599999999821e-05, 7.645900000000094e-05, 7.629199999999864e-05, 7.590200000000269e-05, 7.615299999999894e-05, 7.59579999999975e-05, 7.668099999999858e-05, 7.66250000000003e-05, 7.641700000000223e-05, 7.66250000000003e-05, 7.613899999999937e-05, 7.680599999999871e-05, 7.597300000000001e-05, 7.647299999999704e-05, 7.680599999999871e-05, 7.679199999999914e-05, 7.611100000000023e-05, 7.68050000000027e-05, 7.663899999999987e-05, 7.680499999999923e-05, 7.680499999999923e-05, 7.629199999999864e-05, 7.679199999999914e-05, 7.66250000000003e-05, 7.629199999999864e-05, 7.615300000000241e-05, 7.684700000000141e-05, 7.665199999999997e-05, 7.61379999999999e-05, 7.601399999999925e-05, 7.615299999999894e-05, 7.59579999999975e-05, 7.686200000000046e-05, 7.677799999999957e-05, 7.663899999999987e-05, 7.630600000000168e-05]</msg>
<status status="PASS" starttime="20201029 18:16:44.672" endtime="20201029 18:16:44.674"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.667" endtime="20201029 18:16:44.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:44.679" endtime="20201029 18:16:44.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.677" endtime="20201029 18:16:44.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.676" endtime="20201029 18:16:44.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.314" endtime="20201029 18:16:44.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.314" endtime="20201029 18:16:44.702"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.716" endtime="20201029 18:16:44.737"></status>
</kw>
<msg timestamp="20201029 18:16:44.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.714" endtime="20201029 18:16:44.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:44.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:44.739" endtime="20201029 18:16:44.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.741" endtime="20201029 18:16:44.743"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.710" endtime="20201029 18:16:44.744"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.706" endtime="20201029 18:16:44.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:44.751" endtime="20201029 18:16:45.038"></status>
</kw>
<msg timestamp="20201029 18:16:45.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0324215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032498528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:44.749" endtime="20201029 18:16:45.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0324215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032498528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 18:16:45.042" endtime="20201029 18:16:45.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.050" endtime="20201029 18:16:45.052"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.747" endtime="20201029 18:16:45.053"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.745" endtime="20201029 18:16:45.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.057" level="INFO">${RESULT} = [{'diff': 7.702799999999982e-05}, {'diff': 7.712500000000427e-05}, {'diff': 7.697300000000101e-05}, {'diff': 7.76389999999974e-05}, {'diff': 7.71389999999969e-05}, {'diff': 7.712499999999733e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:45.054" endtime="20201029 18:16:45.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.062" level="INFO">${ACCURACY} = {'diff': [7.702799999999982e-05, 7.712500000000427e-05, 7.697300000000101e-05, 7.76389999999974e-05, 7.71389999999969e-05, 7.712499999999733e-05, 7.695800000000197e-05, 7.698600000000111e-05, 7.768100...</msg>
<status status="PASS" starttime="20201029 18:16:45.058" endtime="20201029 18:16:45.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.066" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.065" endtime="20201029 18:16:45.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.070" level="INFO">VALUE: [7.702799999999982e-05, 7.712500000000427e-05, 7.697300000000101e-05, 7.76389999999974e-05, 7.71389999999969e-05, 7.712499999999733e-05, 7.695800000000197e-05, 7.698600000000111e-05, 7.768100000000305e-05, 7.779100000000067e-05, 7.745800000000247e-05, 7.780599999999971e-05, 7.729199999999964e-05, 7.761099999999826e-05, 7.779200000000014e-05, 7.76389999999974e-05, 7.76110000000052e-05, 7.76389999999974e-05, 7.745800000000247e-05, 7.711099999999776e-05, 7.730499999999974e-05, 7.730499999999974e-05, 7.745799999999553e-05, 7.779200000000014e-05, 7.697200000000154e-05, 7.765300000000391e-05, 7.715299999999647e-05, 7.745900000000194e-05, 7.741700000000323e-05, 7.698600000000111e-05, 7.729199999999964e-05, 7.73189999999993e-05, 7.729100000000017e-05, 7.69440000000024e-05, 7.695800000000197e-05, 7.763900000000434e-05, 7.725000000000093e-05, 7.779200000000014e-05, 7.698600000000111e-05, 7.744500000000237e-05, 7.729199999999964e-05, 7.72640000000005e-05, 7.747300000000151e-05, 7.697200000000154e-05, 7.715299999999647e-05, 7.74440000000029e-05, 7.706899999999905e-05, 7.745800000000247e-05, 7.745799999999553e-05, 7.729199999999964e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.067" endtime="20201029 18:16:45.070"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.063" endtime="20201029 18:16:45.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.075" endtime="20201029 18:16:45.094"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.073" endtime="20201029 18:16:45.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.072" endtime="20201029 18:16:45.095"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.704" endtime="20201029 18:16:45.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:44.702" endtime="20201029 18:16:45.096"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.105" endtime="20201029 18:16:45.124"></status>
</kw>
<msg timestamp="20201029 18:16:45.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.103" endtime="20201029 18:16:45.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.126" endtime="20201029 18:16:45.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.128" endtime="20201029 18:16:45.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.101" endtime="20201029 18:16:45.130"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.098" endtime="20201029 18:16:45.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.138" endtime="20201029 18:16:45.424"></status>
</kw>
<msg timestamp="20201029 18:16:45.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.136" endtime="20201029 18:16:45.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022688319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022767014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.428" endtime="20201029 18:16:45.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.437" endtime="20201029 18:16:45.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.134" endtime="20201029 18:16:45.439"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.132" endtime="20201029 18:16:45.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.444" level="INFO">${RESULT} = [{'diff': 7.869500000000015e-05}, {'diff': 7.827800000000107e-05}, {'diff': 7.81250000000018e-05}, {'diff': 7.811099999999876e-05}, {'diff': 7.847200000000304e-05}, {'diff': 7.830499999999727e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:45.440" endtime="20201029 18:16:45.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.449" level="INFO">${ACCURACY} = {'diff': [7.869500000000015e-05, 7.827800000000107e-05, 7.81250000000018e-05, 7.811099999999876e-05, 7.847200000000304e-05, 7.830499999999727e-05, 7.869500000000015e-05, 7.866700000000101e-05, 7.86389...</msg>
<status status="PASS" starttime="20201029 18:16:45.445" endtime="20201029 18:16:45.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.454" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.453" endtime="20201029 18:16:45.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.456" level="INFO">VALUE: [7.869500000000015e-05, 7.827800000000107e-05, 7.81250000000018e-05, 7.811099999999876e-05, 7.847200000000304e-05, 7.830499999999727e-05, 7.869500000000015e-05, 7.866700000000101e-05, 7.86389999999984e-05, 7.847199999999957e-05, 7.831999999999978e-05, 7.847199999999957e-05, 7.865300000000144e-05, 7.847200000000304e-05, 7.81250000000018e-05, 7.797299999999854e-05, 7.830600000000021e-05, 7.845899999999947e-05, 7.88190000000008e-05, 7.833299999999987e-05, 7.88190000000008e-05, 7.841700000000076e-05, 7.813900000000137e-05, 7.797199999999907e-05, 7.8458e-05, 7.79579999999995e-05, 7.882000000000028e-05, 7.879200000000114e-05, 7.829200000000064e-05, 7.847199999999957e-05, 7.830500000000074e-05, 7.812499999999833e-05, 7.879100000000167e-05, 7.847200000000304e-05, 7.829199999999717e-05, 7.812499999999833e-05, 7.884699999999994e-05, 7.883400000000332e-05, 7.85129999999988e-05, 7.86389999999984e-05, 7.848599999999914e-05, 7.880600000000071e-05, 7.818000000000061e-05, 7.836100000000248e-05, 7.813900000000137e-05, 7.849999999999871e-05, 7.844400000000043e-05, 7.81250000000018e-05, 7.876399999999853e-05, 7.847199999999957e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.455" endtime="20201029 18:16:45.457"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.450" endtime="20201029 18:16:45.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.461" endtime="20201029 18:16:45.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.460" endtime="20201029 18:16:45.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.459" endtime="20201029 18:16:45.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.097" endtime="20201029 18:16:45.482"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.096" endtime="20201029 18:16:45.482"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.492" endtime="20201029 18:16:45.510"></status>
</kw>
<msg timestamp="20201029 18:16:45.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.490" endtime="20201029 18:16:45.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.512" endtime="20201029 18:16:45.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.515" endtime="20201029 18:16:45.516"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.487" endtime="20201029 18:16:45.517"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.485" endtime="20201029 18:16:45.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.524" endtime="20201029 18:16:45.815"></status>
</kw>
<msg timestamp="20201029 18:16:45.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.523" endtime="20201029 18:16:45.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022907917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.819" endtime="20201029 18:16:45.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.828" endtime="20201029 18:16:45.829"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.520" endtime="20201029 18:16:45.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.518" endtime="20201029 18:16:45.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:45.835" level="INFO">${RESULT} = [{'diff': 7.954199999999842e-05}, {'diff': 7.947300000000004e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.929200000000164e-05}, {'diff': 7.962499999999983e-05}, {'diff': 7.955499999999852e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:45.831" endtime="20201029 18:16:45.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:45.839" level="INFO">${ACCURACY} = {'diff': [7.954199999999842e-05, 7.947300000000004e-05, 7.962499999999983e-05, 7.929200000000164e-05, 7.962499999999983e-05, 7.955499999999852e-05, 7.897200000000007e-05, 7.911099999999976e-05, 7.9597...</msg>
<status status="PASS" starttime="20201029 18:16:45.836" endtime="20201029 18:16:45.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.844" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 18:16:45.843" endtime="20201029 18:16:45.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.846" level="INFO">VALUE: [7.954199999999842e-05, 7.947300000000004e-05, 7.962499999999983e-05, 7.929200000000164e-05, 7.962499999999983e-05, 7.955499999999852e-05, 7.897200000000007e-05, 7.911099999999976e-05, 7.95970000000007e-05, 7.927800000000207e-05, 7.982000000000128e-05, 7.957000000000103e-05, 7.913900000000237e-05, 7.965300000000244e-05, 7.930600000000121e-05, 7.979200000000214e-05, 7.930499999999827e-05, 7.947200000000057e-05, 7.980499999999877e-05, 7.89580000000005e-05, 7.980500000000224e-05, 7.96389999999994e-05, 7.932000000000078e-05, 7.962499999999983e-05, 7.96389999999994e-05, 7.986100000000051e-05, 7.97779999999991e-05, 7.949999999999971e-05, 7.93190000000013e-05, 7.948600000000014e-05, 7.898600000000311e-05, 7.911099999999976e-05, 7.962499999999983e-05, 7.9458000000001e-05, 7.929200000000164e-05, 7.962499999999983e-05, 7.897200000000007e-05, 7.930599999999774e-05, 7.966599999999907e-05, 7.897200000000007e-05, 7.91389999999989e-05, 7.930500000000174e-05, 7.945799999999753e-05, 7.89580000000005e-05, 7.929100000000217e-05, 7.930600000000121e-05, 7.943000000000186e-05, 7.943099999999786e-05, 7.89450000000004e-05, 7.930599999999774e-05]</msg>
<status status="PASS" starttime="20201029 18:16:45.845" endtime="20201029 18:16:45.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.840" endtime="20201029 18:16:45.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:45.852" endtime="20201029 18:16:45.871"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.850" endtime="20201029 18:16:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.849" endtime="20201029 18:16:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.483" endtime="20201029 18:16:45.872"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.483" endtime="20201029 18:16:45.872"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.882" endtime="20201029 18:16:45.901"></status>
</kw>
<msg timestamp="20201029 18:16:45.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.880" endtime="20201029 18:16:45.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:45.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:45.903" endtime="20201029 18:16:45.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.905" endtime="20201029 18:16:45.907"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.877" endtime="20201029 18:16:45.908"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.875" endtime="20201029 18:16:45.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:45.915" endtime="20201029 18:16:46.201"></status>
</kw>
<msg timestamp="20201029 18:16:46.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:45.913" endtime="20201029 18:16:46.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023729736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023810458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.206" endtime="20201029 18:16:46.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.216" endtime="20201029 18:16:46.218"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.910" endtime="20201029 18:16:46.219"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.909" endtime="20201029 18:16:46.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.223" level="INFO">${RESULT} = [{'diff': 8.072199999999835e-05}, {'diff': 8.030499999999927e-05}, {'diff': 8.043000000000286e-05}, {'diff': 8.080499999999977e-05}, {'diff': 8.048600000000114e-05}, {'diff': 8.015300000000294e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:46.220" endtime="20201029 18:16:46.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.228" level="INFO">${ACCURACY} = {'diff': [8.072199999999835e-05, 8.030499999999927e-05, 8.043000000000286e-05, 8.080499999999977e-05, 8.048600000000114e-05, 8.015300000000294e-05, 8.01389999999999e-05, 8.06390000000004e-05, 8.013899...</msg>
<status status="PASS" starttime="20201029 18:16:46.224" endtime="20201029 18:16:46.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.232" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.231" endtime="20201029 18:16:46.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.235" level="INFO">VALUE: [8.072199999999835e-05, 8.030499999999927e-05, 8.043000000000286e-05, 8.080499999999977e-05, 8.048600000000114e-05, 8.015300000000294e-05, 8.01389999999999e-05, 8.06390000000004e-05, 8.01389999999999e-05, 8.01389999999999e-05, 8.043099999999886e-05, 8.031999999999831e-05, 8.034700000000145e-05, 8.043100000000233e-05, 7.988800000000018e-05, 8.07910000000002e-05, 8.016699999999904e-05, 8.02909999999997e-05, 8.066699999999954e-05, 8.063899999999694e-05, 8.030600000000221e-05, 8.030599999999874e-05, 8.07780000000001e-05, 7.99030000000027e-05, 7.99589999999975e-05, 8.061200000000074e-05, 7.995799999999803e-05, 8.015299999999947e-05, 8.048599999999767e-05, 8.07910000000002e-05, 8.087499999999762e-05, 8.076399999999706e-05, 8.030599999999874e-05, 8.080599999999924e-05, 8.029199999999917e-05, 8.06520000000005e-05, 8.079199999999967e-05, 8.012500000000033e-05, 8.04719999999981e-05, 8.01389999999999e-05, 8.080500000000324e-05, 8.02909999999997e-05, 8.01389999999999e-05, 8.06390000000004e-05, 8.048600000000114e-05, 8.076400000000053e-05, 8.0458999999998e-05, 8.048700000000061e-05, 8.029199999999917e-05, 8.029199999999917e-05]</msg>
<status status="PASS" starttime="20201029 18:16:46.234" endtime="20201029 18:16:46.237"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.229" endtime="20201029 18:16:46.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.241" endtime="20201029 18:16:46.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.240" endtime="20201029 18:16:46.261"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.238" endtime="20201029 18:16:46.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.873" endtime="20201029 18:16:46.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:45.873" endtime="20201029 18:16:46.262"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.271" endtime="20201029 18:16:46.290"></status>
</kw>
<msg timestamp="20201029 18:16:46.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.270" endtime="20201029 18:16:46.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.291" endtime="20201029 18:16:46.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.294" endtime="20201029 18:16:46.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.267" endtime="20201029 18:16:46.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.265" endtime="20201029 18:16:46.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.304" endtime="20201029 18:16:46.589"></status>
</kw>
<msg timestamp="20201029 18:16:46.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.302" endtime="20201029 18:16:46.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022765194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022846431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.593" endtime="20201029 18:16:46.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.601" endtime="20201029 18:16:46.603"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.299" endtime="20201029 18:16:46.604"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.297" endtime="20201029 18:16:46.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.608" level="INFO">${RESULT} = [{'diff': 8.123700000000136e-05}, {'diff': 8.090300000000022e-05}, {'diff': 8.131999999999931e-05}, {'diff': 8.180599999999677e-05}, {'diff': 8.118099999999961e-05}, {'diff': 8.181900000000034e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:46.605" endtime="20201029 18:16:46.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:46.613" level="INFO">${ACCURACY} = {'diff': [8.123700000000136e-05, 8.090300000000022e-05, 8.131999999999931e-05, 8.180599999999677e-05, 8.118099999999961e-05, 8.181900000000034e-05, 8.09719999999986e-05, 8.180500000000077e-05, 8.15280...</msg>
<status status="PASS" starttime="20201029 18:16:46.609" endtime="20201029 18:16:46.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.618" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 18:16:46.617" endtime="20201029 18:16:46.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.621" level="INFO">VALUE: [8.123700000000136e-05, 8.090300000000022e-05, 8.131999999999931e-05, 8.180599999999677e-05, 8.118099999999961e-05, 8.181900000000034e-05, 8.09719999999986e-05, 8.180500000000077e-05, 8.152800000000085e-05, 8.131999999999931e-05, 8.131999999999931e-05, 8.155599999999999e-05, 8.162500000000183e-05, 8.1458999999999e-05, 8.16109999999988e-05, 8.184700000000295e-05, 8.141599999999735e-05, 8.16109999999988e-05, 8.11390000000009e-05, 8.112499999999787e-05, 8.147200000000257e-05, 8.161100000000227e-05, 8.11390000000009e-05, 8.180600000000024e-05, 8.14719999999991e-05, 8.147300000000204e-05, 8.111100000000177e-05, 8.16520000000015e-05, 8.165199999999803e-05, 8.175000000000196e-05, 8.12910000000007e-05, 8.098599999999817e-05, 8.163899999999794e-05, 8.145799999999953e-05, 8.130599999999974e-05, 8.130599999999974e-05, 8.115300000000047e-05, 8.1458999999999e-05, 8.093099999999936e-05, 8.130599999999974e-05, 8.131899999999984e-05, 8.144399999999996e-05, 8.156900000000009e-05, 8.144399999999996e-05, 8.148599999999867e-05, 8.145799999999953e-05, 8.148599999999867e-05, 8.165300000000097e-05, 8.130599999999974e-05, 8.145900000000247e-05]</msg>
<status status="PASS" starttime="20201029 18:16:46.619" endtime="20201029 18:16:46.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.614" endtime="20201029 18:16:46.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:46.626" endtime="20201029 18:16:46.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.625" endtime="20201029 18:16:46.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.623" endtime="20201029 18:16:46.646"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.263" endtime="20201029 18:16:46.647"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.263" endtime="20201029 18:16:46.647"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.656" endtime="20201029 18:16:46.675"></status>
</kw>
<msg timestamp="20201029 18:16:46.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.654" endtime="20201029 18:16:46.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:46.676" endtime="20201029 18:16:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.679" endtime="20201029 18:16:46.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.652" endtime="20201029 18:16:46.681"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.649" endtime="20201029 18:16:46.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.689" endtime="20201029 18:16:46.976"></status>
</kw>
<msg timestamp="20201029 18:16:46.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.687" endtime="20201029 18:16:46.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:46.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022797667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:46.980" endtime="20201029 18:16:46.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:46.989" endtime="20201029 18:16:46.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.684" endtime="20201029 18:16:46.991"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.682" endtime="20201029 18:16:46.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:46.996" level="INFO">${RESULT} = [{'diff': 8.252800000000185e-05}, {'diff': 8.224999999999899e-05}, {'diff': 8.284700000000048e-05}, {'diff': 8.195800000000003e-05}, {'diff': 8.227700000000213e-05}, {'diff': 8.279099999999873e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:46.992" endtime="20201029 18:16:46.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.000" level="INFO">${ACCURACY} = {'diff': [8.252800000000185e-05, 8.224999999999899e-05, 8.284700000000048e-05, 8.195800000000003e-05, 8.227700000000213e-05, 8.279099999999873e-05, 8.230500000000127e-05, 8.263899999999894e-05, 8.2792...</msg>
<status status="PASS" starttime="20201029 18:16:46.997" endtime="20201029 18:16:47.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.005" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.004" endtime="20201029 18:16:47.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.007" level="INFO">VALUE: [8.252800000000185e-05, 8.224999999999899e-05, 8.284700000000048e-05, 8.195800000000003e-05, 8.227700000000213e-05, 8.279099999999873e-05, 8.230500000000127e-05, 8.263899999999894e-05, 8.279200000000167e-05, 8.21390000000019e-05, 8.262499999999937e-05, 8.280600000000124e-05, 8.243100000000086e-05, 8.229200000000117e-05, 8.279099999999873e-05, 8.22910000000017e-05, 8.244400000000096e-05, 8.195800000000003e-05, 8.199999999999874e-05, 8.279200000000167e-05, 8.245800000000053e-05, 8.195800000000003e-05, 8.263899999999894e-05, 8.236099999999955e-05, 8.26109999999998e-05, 8.197299999999907e-05, 8.26659999999986e-05, 8.19719999999996e-05, 8.244399999999749e-05, 8.24720000000001e-05, 8.281900000000134e-05, 8.26529999999985e-05, 8.194400000000046e-05, 8.262499999999937e-05, 8.205599999999702e-05, 8.19589999999995e-05, 8.26109999999998e-05, 8.249999999999924e-05, 8.263799999999946e-05, 8.27910000000022e-05, 8.213899999999844e-05, 8.23049999999978e-05, 8.230600000000074e-05, 8.19719999999996e-05, 8.26390000000024e-05, 8.26390000000024e-05, 8.19719999999996e-05, 8.248700000000261e-05, 8.280599999999777e-05, 8.211199999999877e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.006" endtime="20201029 18:16:47.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.001" endtime="20201029 18:16:47.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.013" endtime="20201029 18:16:47.032"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.011" endtime="20201029 18:16:47.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.010" endtime="20201029 18:16:47.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.648" endtime="20201029 18:16:47.033"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:46.647" endtime="20201029 18:16:47.034"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.043" endtime="20201029 18:16:47.063"></status>
</kw>
<msg timestamp="20201029 18:16:47.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.041" endtime="20201029 18:16:47.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.064" endtime="20201029 18:16:47.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.067" endtime="20201029 18:16:47.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.038" endtime="20201029 18:16:47.069"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.036" endtime="20201029 18:16:47.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.077" endtime="20201029 18:16:47.363"></status>
</kw>
<msg timestamp="20201029 18:16:47.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023912264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.075" endtime="20201029 18:16:47.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023829111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023912264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.367" endtime="20201029 18:16:47.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.376" endtime="20201029 18:16:47.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.072" endtime="20201029 18:16:47.378"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.070" endtime="20201029 18:16:47.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.383" level="INFO">${RESULT} = [{'diff': 8.3152999999999e-05}, {'diff': 8.330599999999827e-05}, {'diff': 8.340299999999926e-05}, {'diff': 8.3459000000001e-05}, {'diff': 8.345799999999806e-05}, {'diff': 8.298600000000017e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 18:16:47.380" endtime="20201029 18:16:47.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.387" level="INFO">${ACCURACY} = {'diff': [8.3152999999999e-05, 8.330599999999827e-05, 8.340299999999926e-05, 8.3459000000001e-05, 8.345799999999806e-05, 8.298600000000017e-05, 8.3152999999999e-05, 8.379099999999973e-05, 8.3180999999...</msg>
<status status="PASS" starttime="20201029 18:16:47.384" endtime="20201029 18:16:47.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.392" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.391" endtime="20201029 18:16:47.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.395" level="INFO">VALUE: [8.3152999999999e-05, 8.330599999999827e-05, 8.340299999999926e-05, 8.3459000000001e-05, 8.345799999999806e-05, 8.298600000000017e-05, 8.3152999999999e-05, 8.379099999999973e-05, 8.318099999999815e-05, 8.31110000000003e-05, 8.363899999999994e-05, 8.298600000000017e-05, 8.330600000000174e-05, 8.348600000000067e-05, 8.31659999999991e-05, 8.295800000000103e-05, 8.299999999999974e-05, 8.313799999999996e-05, 8.351399999999981e-05, 8.36390000000034e-05, 8.362500000000037e-05, 8.362500000000037e-05, 8.383400000000138e-05, 8.369400000000221e-05, 8.344500000000143e-05, 8.309700000000073e-05, 8.347300000000057e-05, 8.358300000000166e-05, 8.38049999999993e-05, 8.323600000000042e-05, 8.363899999999994e-05, 8.313899999999944e-05, 8.362500000000037e-05, 8.308300000000116e-05, 8.363899999999994e-05, 8.313899999999944e-05, 8.379200000000267e-05, 8.327799999999913e-05, 8.315199999999953e-05, 8.315199999999953e-05, 8.376300000000059e-05, 8.302799999999888e-05, 8.356900000000209e-05, 8.326399999999956e-05, 8.384700000000148e-05, 8.332000000000131e-05, 8.381899999999887e-05, 8.330599999999827e-05, 8.313899999999944e-05, 8.312499999999987e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.393" endtime="20201029 18:16:47.396"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.388" endtime="20201029 18:16:47.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.401" endtime="20201029 18:16:47.420"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.399" endtime="20201029 18:16:47.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.398" endtime="20201029 18:16:47.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.035" endtime="20201029 18:16:47.421"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.034" endtime="20201029 18:16:47.421"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.431" endtime="20201029 18:16:47.450"></status>
</kw>
<msg timestamp="20201029 18:16:47.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.429" endtime="20201029 18:16:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.452" endtime="20201029 18:16:47.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.454" endtime="20201029 18:16:47.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.426" endtime="20201029 18:16:47.456"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.424" endtime="20201029 18:16:47.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.464" endtime="20201029 18:16:47.750"></status>
</kw>
<msg timestamp="20201029 18:16:47.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.462" endtime="20201029 18:16:47.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022795278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:47.755" endtime="20201029 18:16:47.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.763" endtime="20201029 18:16:47.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.459" endtime="20201029 18:16:47.765"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.458" endtime="20201029 18:16:47.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:47.770" level="INFO">${RESULT} = [{'diff': 8.456999999999909e-05}, {'diff': 8.41249999999974e-05}, {'diff': 8.394500000000193e-05}, {'diff': 8.47920000000002e-05}, {'diff': 8.480599999999977e-05}, {'diff': 8.436100000000155e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:47.766" endtime="20201029 18:16:47.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:47.775" level="INFO">${ACCURACY} = {'diff': [8.456999999999909e-05, 8.41249999999974e-05, 8.394500000000193e-05, 8.47920000000002e-05, 8.480599999999977e-05, 8.436100000000155e-05, 8.479199999999673e-05, 8.401400000000031e-05, 8.413899...</msg>
<status status="PASS" starttime="20201029 18:16:47.771" endtime="20201029 18:16:47.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.780" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 18:16:47.779" endtime="20201029 18:16:47.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.782" level="INFO">VALUE: [8.456999999999909e-05, 8.41249999999974e-05, 8.394500000000193e-05, 8.47920000000002e-05, 8.480599999999977e-05, 8.436100000000155e-05, 8.479199999999673e-05, 8.401400000000031e-05, 8.413899999999697e-05, 8.463900000000094e-05, 8.427800000000013e-05, 8.445799999999906e-05, 8.445799999999906e-05, 8.401300000000084e-05, 8.425000000000099e-05, 8.475000000000149e-05, 8.430600000000274e-05, 8.412500000000087e-05, 8.483299999999944e-05, 8.477700000000116e-05, 8.429100000000023e-05, 8.48050000000003e-05, 8.477800000000063e-05, 8.451399999999734e-05, 8.413900000000044e-05, 8.463900000000094e-05, 8.452699999999744e-05, 8.46249999999979e-05, 8.447300000000157e-05, 8.480599999999977e-05, 8.463799999999799e-05, 8.429100000000023e-05, 8.413900000000044e-05, 8.479100000000073e-05, 8.463900000000094e-05, 8.433399999999841e-05, 8.427800000000013e-05, 8.447199999999863e-05, 8.451400000000081e-05, 8.42919999999997e-05, 8.39590000000015e-05, 8.452800000000038e-05, 8.44720000000021e-05, 8.480499999999683e-05, 8.413899999999697e-05, 8.429100000000023e-05, 8.419499999999872e-05, 8.39720000000016e-05, 8.413900000000044e-05, 8.447199999999863e-05]</msg>
<status status="PASS" starttime="20201029 18:16:47.781" endtime="20201029 18:16:47.783"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.776" endtime="20201029 18:16:47.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:47.788" endtime="20201029 18:16:47.807"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.786" endtime="20201029 18:16:47.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.785" endtime="20201029 18:16:47.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.423" endtime="20201029 18:16:47.808"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.422" endtime="20201029 18:16:47.808"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.818" endtime="20201029 18:16:47.837"></status>
</kw>
<msg timestamp="20201029 18:16:47.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.816" endtime="20201029 18:16:47.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:47.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:47.838" endtime="20201029 18:16:47.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.841" endtime="20201029 18:16:47.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.813" endtime="20201029 18:16:47.843"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.811" endtime="20201029 18:16:47.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:47.851" endtime="20201029 18:16:48.138"></status>
</kw>
<msg timestamp="20201029 18:16:48.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02270875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:47.849" endtime="20201029 18:16:48.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02270875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022794444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:48.142" endtime="20201029 18:16:48.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.151" endtime="20201029 18:16:48.152"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.846" endtime="20201029 18:16:48.153"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.844" endtime="20201029 18:16:48.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.158" level="INFO">${RESULT} = [{'diff': 8.569400000000074e-05}, {'diff': 8.579099999999826e-05}, {'diff': 8.533299999999994e-05}, {'diff': 8.529099999999776e-05}, {'diff': 8.58189999999974e-05}, {'diff': 8.495799999999956e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:48.154" endtime="20201029 18:16:48.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.162" level="INFO">${ACCURACY} = {'diff': [8.569400000000074e-05, 8.579099999999826e-05, 8.533299999999994e-05, 8.529099999999776e-05, 8.58189999999974e-05, 8.495799999999956e-05, 8.545800000000006e-05, 8.577800000000163e-05, 8.56109...</msg>
<status status="PASS" starttime="20201029 18:16:48.159" endtime="20201029 18:16:48.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.167" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.165" endtime="20201029 18:16:48.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.169" level="INFO">VALUE: [8.569400000000074e-05, 8.579099999999826e-05, 8.533299999999994e-05, 8.529099999999776e-05, 8.58189999999974e-05, 8.495799999999956e-05, 8.545800000000006e-05, 8.577800000000163e-05, 8.561099999999933e-05, 8.54729999999991e-05, 8.547300000000257e-05, 8.513799999999849e-05, 8.579099999999826e-05, 8.51249999999984e-05, 8.5153000000001e-05, 8.531900000000037e-05, 8.527800000000113e-05, 8.544400000000049e-05, 8.515299999999754e-05, 8.56249999999989e-05, 8.49729999999986e-05, 8.513899999999797e-05, 8.563900000000194e-05, 8.558300000000019e-05, 8.56530000000015e-05, 8.586099999999958e-05, 8.51249999999984e-05, 8.518100000000015e-05, 8.563899999999847e-05, 8.497199999999913e-05, 8.513899999999797e-05, 8.51249999999984e-05, 8.533299999999994e-05, 8.516599999999763e-05, 8.577800000000163e-05, 8.579099999999826e-05, 8.56249999999989e-05, 8.563900000000194e-05, 8.547199999999963e-05, 8.563899999999847e-05, 8.51249999999984e-05, 8.497199999999913e-05, 8.545899999999954e-05, 8.5153000000001e-05, 8.545899999999954e-05, 8.580600000000077e-05, 8.527800000000113e-05, 8.559699999999976e-05, 8.54720000000031e-05, 8.495800000000303e-05]</msg>
<status status="PASS" starttime="20201029 18:16:48.168" endtime="20201029 18:16:48.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.163" endtime="20201029 18:16:48.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.174" endtime="20201029 18:16:48.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.173" endtime="20201029 18:16:48.194"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.171" endtime="20201029 18:16:48.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.809" endtime="20201029 18:16:48.195"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:47.809" endtime="20201029 18:16:48.195"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.205" endtime="20201029 18:16:48.226"></status>
</kw>
<msg timestamp="20201029 18:16:48.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.203" endtime="20201029 18:16:48.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.228" endtime="20201029 18:16:48.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.231" endtime="20201029 18:16:48.232"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.200" endtime="20201029 18:16:48.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.198" endtime="20201029 18:16:48.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.240" endtime="20201029 18:16:48.527"></status>
</kw>
<msg timestamp="20201029 18:16:48.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024866444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.239" endtime="20201029 18:16:48.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024866444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024953306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.531" endtime="20201029 18:16:48.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.539" endtime="20201029 18:16:48.541"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.236" endtime="20201029 18:16:48.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.234" endtime="20201029 18:16:48.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.546" level="INFO">${RESULT} = [{'diff': 8.686200000000005e-05}, {'diff': 8.622299999999986e-05}, {'diff': 8.638799999999974e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.629199999999823e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:48.543" endtime="20201029 18:16:48.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.551" level="INFO">${ACCURACY} = {'diff': [8.686200000000005e-05, 8.622299999999986e-05, 8.638799999999974e-05, 8.663899999999947e-05, 8.64860000000002e-05, 8.629199999999823e-05, 8.645800000000106e-05, 8.663900000000294e-05, 8.68060...</msg>
<status status="PASS" starttime="20201029 18:16:48.547" endtime="20201029 18:16:48.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.556" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.554" endtime="20201029 18:16:48.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.559" level="INFO">VALUE: [8.686200000000005e-05, 8.622299999999986e-05, 8.638799999999974e-05, 8.663899999999947e-05, 8.64860000000002e-05, 8.629199999999823e-05, 8.645800000000106e-05, 8.663900000000294e-05, 8.680600000000177e-05, 8.61249999999994e-05, 8.59729999999996e-05, 8.679199999999873e-05, 8.613899999999897e-05, 8.591599999999838e-05, 8.659700000000076e-05, 8.619499999999725e-05, 8.66669999999986e-05, 8.630499999999833e-05, 8.630600000000127e-05, 8.683400000000091e-05, 8.66249999999999e-05, 8.66249999999999e-05, 8.652799999999891e-05, 8.631900000000137e-05, 8.647200000000063e-05, 8.595800000000056e-05, 8.629099999999876e-05, 8.597200000000013e-05, 8.670900000000079e-05, 8.632000000000084e-05, 8.62920000000017e-05, 8.595900000000004e-05, 8.663899999999947e-05, 8.61660000000021e-05, 8.636100000000008e-05, 8.645900000000054e-05, 8.597200000000013e-05, 8.663899999999947e-05, 8.590300000000176e-05, 8.68189999999984e-05, 8.68050000000023e-05, 8.609699999999679e-05, 8.64860000000002e-05, 8.613900000000244e-05, 8.686100000000058e-05, 8.66249999999999e-05, 8.680600000000177e-05, 8.63189999999979e-05, 8.669500000000122e-05, 8.595800000000056e-05]</msg>
<status status="PASS" starttime="20201029 18:16:48.557" endtime="20201029 18:16:48.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.552" endtime="20201029 18:16:48.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.564" endtime="20201029 18:16:48.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.563" endtime="20201029 18:16:48.584"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.561" endtime="20201029 18:16:48.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.196" endtime="20201029 18:16:48.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.195" endtime="20201029 18:16:48.586"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.600" endtime="20201029 18:16:48.620"></status>
</kw>
<msg timestamp="20201029 18:16:48.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.596" endtime="20201029 18:16:48.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.623" endtime="20201029 18:16:48.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.627" endtime="20201029 18:16:48.629"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.593" endtime="20201029 18:16:48.630"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.591" endtime="20201029 18:16:48.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.637" endtime="20201029 18:16:48.923"></status>
</kw>
<msg timestamp="20201029 18:16:48.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028849653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028936694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.635" endtime="20201029 18:16:48.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028849653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028936694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:48.927" endtime="20201029 18:16:48.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.936" endtime="20201029 18:16:48.937"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.633" endtime="20201029 18:16:48.938"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.631" endtime="20201029 18:16:48.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:48.943" level="INFO">${RESULT} = [{'diff': 8.704099999999951e-05}, {'diff': 8.747199999999816e-05}, {'diff': 8.711099999999736e-05}, {'diff': 8.697200000000113e-05}, {'diff': 8.765300000000004e-05}, {'diff': 8.73059999999988e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:48.939" endtime="20201029 18:16:48.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:48.948" level="INFO">${ACCURACY} = {'diff': [8.704099999999951e-05, 8.747199999999816e-05, 8.711099999999736e-05, 8.697200000000113e-05, 8.765300000000004e-05, 8.73059999999988e-05, 8.76250000000009e-05, 8.71250000000004e-05, 8.7264000...</msg>
<status status="PASS" starttime="20201029 18:16:48.944" endtime="20201029 18:16:48.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.952" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 18:16:48.951" endtime="20201029 18:16:48.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:48.955" level="INFO">VALUE: [8.704099999999951e-05, 8.747199999999816e-05, 8.711099999999736e-05, 8.697200000000113e-05, 8.765300000000004e-05, 8.73059999999988e-05, 8.76250000000009e-05, 8.71250000000004e-05, 8.726400000000009e-05, 8.736099999999761e-05, 8.763800000000099e-05, 8.780499999999983e-05, 8.729099999999976e-05, 8.715299999999954e-05, 8.763900000000047e-05, 8.715299999999954e-05, 8.713899999999997e-05, 8.71250000000004e-05, 8.745900000000154e-05, 8.695900000000104e-05, 8.725000000000052e-05, 8.729199999999923e-05, 8.697200000000113e-05, 8.762499999999743e-05, 8.73050000000028e-05, 8.761100000000133e-05, 8.773599999999798e-05, 8.701400000000331e-05, 8.730600000000227e-05, 8.747199999999816e-05, 8.71250000000004e-05, 8.713899999999997e-05, 8.769399999999927e-05, 8.697299999999714e-05, 8.697199999999766e-05, 8.71250000000004e-05, 8.747199999999816e-05, 8.763900000000047e-05, 8.715299999999954e-05, 8.763900000000047e-05, 8.713899999999997e-05, 8.729199999999576e-05, 8.713899999999997e-05, 8.782000000000234e-05, 8.762499999999396e-05, 8.78050000000033e-05, 8.742999999999945e-05, 8.765300000000004e-05, 8.781900000000287e-05, 8.742999999999945e-05]</msg>
<status status="PASS" starttime="20201029 18:16:48.954" endtime="20201029 18:16:48.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.949" endtime="20201029 18:16:48.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:48.968" endtime="20201029 18:16:48.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.966" endtime="20201029 18:16:48.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.965" endtime="20201029 18:16:48.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.588" endtime="20201029 18:16:48.989"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.587" endtime="20201029 18:16:48.989"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:48.998" endtime="20201029 18:16:49.016"></status>
</kw>
<msg timestamp="20201029 18:16:49.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:48.996" endtime="20201029 18:16:49.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.018" endtime="20201029 18:16:49.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.021" endtime="20201029 18:16:49.022"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.994" endtime="20201029 18:16:49.023"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.991" endtime="20201029 18:16:49.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.030" endtime="20201029 18:16:49.319"></status>
</kw>
<msg timestamp="20201029 18:16:49.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.029" endtime="20201029 18:16:49.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022822903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.324" endtime="20201029 18:16:49.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.332" endtime="20201029 18:16:49.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.026" endtime="20201029 18:16:49.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.024" endtime="20201029 18:16:49.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.339" level="INFO">${RESULT} = [{'diff': 8.802800000000041e-05}, {'diff': 8.824999999999805e-05}, {'diff': 8.879099999999779e-05}, {'diff': 8.845799999999959e-05}, {'diff': 8.880500000000083e-05}, {'diff': 8.862499999999843e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:49.336" endtime="20201029 18:16:49.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.343" level="INFO">${ACCURACY} = {'diff': [8.802800000000041e-05, 8.824999999999805e-05, 8.879099999999779e-05, 8.845799999999959e-05, 8.880500000000083e-05, 8.862499999999843e-05, 8.815300000000054e-05, 8.86250000000019e-05, 8.81390...</msg>
<status status="PASS" starttime="20201029 18:16:49.340" endtime="20201029 18:16:49.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.348" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.347" endtime="20201029 18:16:49.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.351" level="INFO">VALUE: [8.802800000000041e-05, 8.824999999999805e-05, 8.879099999999779e-05, 8.845799999999959e-05, 8.880500000000083e-05, 8.862499999999843e-05, 8.815300000000054e-05, 8.86250000000019e-05, 8.813900000000097e-05, 8.879200000000073e-05, 8.881999999999987e-05, 8.88060000000003e-05, 8.825000000000152e-05, 8.794399999999952e-05, 8.8638999999998e-05, 8.815300000000054e-05, 8.813900000000097e-05, 8.861099999999886e-05, 8.795800000000256e-05, 8.868100000000018e-05, 8.8638999999998e-05, 8.84730000000021e-05, 8.86250000000019e-05, 8.845899999999907e-05, 8.879100000000126e-05, 8.822199999999891e-05, 8.81250000000014e-05, 8.811100000000183e-05, 8.847199999999916e-05, 8.88060000000003e-05, 8.794500000000247e-05, 8.81250000000014e-05, 8.79730000000016e-05, 8.862499999999843e-05, 8.870799999999984e-05, 8.847199999999916e-05, 8.829100000000076e-05, 8.827800000000066e-05, 8.825000000000152e-05, 8.795799999999909e-05, 8.800000000000127e-05, 8.791699999999986e-05, 8.86250000000019e-05, 8.83059999999998e-05, 8.880599999999683e-05, 8.883299999999997e-05, 8.795900000000204e-05, 8.883299999999997e-05, 8.797199999999866e-05, 8.865300000000104e-05]</msg>
<status status="PASS" starttime="20201029 18:16:49.349" endtime="20201029 18:16:49.351"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.344" endtime="20201029 18:16:49.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.356" endtime="20201029 18:16:49.375"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.354" endtime="20201029 18:16:49.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.353" endtime="20201029 18:16:49.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.990" endtime="20201029 18:16:49.376"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:48.989" endtime="20201029 18:16:49.377"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.386" endtime="20201029 18:16:49.406"></status>
</kw>
<msg timestamp="20201029 18:16:49.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.384" endtime="20201029 18:16:49.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.408" endtime="20201029 18:16:49.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.410" endtime="20201029 18:16:49.412"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.381" endtime="20201029 18:16:49.413"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.379" endtime="20201029 18:16:49.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.420" endtime="20201029 18:16:49.706"></status>
</kw>
<msg timestamp="20201029 18:16:49.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023968125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.418" endtime="20201029 18:16:49.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023968125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024057625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.711" endtime="20201029 18:16:49.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.719" endtime="20201029 18:16:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.416" endtime="20201029 18:16:49.721"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.414" endtime="20201029 18:16:49.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:49.726" level="INFO">${RESULT} = [{'diff': 8.94999999999993e-05}, {'diff': 8.920799999999687e-05}, {'diff': 8.913900000000197e-05}, {'diff': 8.919400000000077e-05}, {'diff': 8.911100000000283e-05}, {'diff': 8.976399999999912e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:49.723" endtime="20201029 18:16:49.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:49.730" level="INFO">${ACCURACY} = {'diff': [8.94999999999993e-05, 8.920799999999687e-05, 8.913900000000197e-05, 8.919400000000077e-05, 8.911100000000283e-05, 8.976399999999912e-05, 8.98190000000014e-05, 8.911100000000283e-05, 8.930499...</msg>
<status status="PASS" starttime="20201029 18:16:49.727" endtime="20201029 18:16:49.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.735" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 18:16:49.734" endtime="20201029 18:16:49.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.738" level="INFO">VALUE: [8.94999999999993e-05, 8.920799999999687e-05, 8.913900000000197e-05, 8.919400000000077e-05, 8.911100000000283e-05, 8.976399999999912e-05, 8.98190000000014e-05, 8.911100000000283e-05, 8.930499999999786e-05, 8.943000000000145e-05, 8.91389999999985e-05, 8.963900000000247e-05, 8.897200000000313e-05, 8.913900000000197e-05, 8.962499999999943e-05, 8.94730000000031e-05, 8.909799999999926e-05, 8.915300000000154e-05, 8.9638999999999e-05, 8.898599999999923e-05, 8.983300000000097e-05, 8.98190000000014e-05, 8.897199999999966e-05, 8.9638999999999e-05, 8.945900000000007e-05, 8.895899999999957e-05, 8.929199999999776e-05, 8.91389999999985e-05, 8.930500000000133e-05, 8.9638999999999e-05, 8.897199999999966e-05, 8.934700000000004e-05, 8.982000000000087e-05, 8.977799999999869e-05, 8.93060000000008e-05, 8.898599999999923e-05, 8.962499999999943e-05, 8.912499999999893e-05, 8.93060000000008e-05, 8.983300000000097e-05, 8.977699999999922e-05, 8.962499999999943e-05, 8.945799999999712e-05, 8.91250000000024e-05, 8.913900000000197e-05, 8.945800000000059e-05, 8.915299999999807e-05, 8.895899999999957e-05, 8.929200000000123e-05, 8.930599999999733e-05]</msg>
<status status="PASS" starttime="20201029 18:16:49.736" endtime="20201029 18:16:49.739"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.731" endtime="20201029 18:16:49.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:49.744" endtime="20201029 18:16:49.763"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.742" endtime="20201029 18:16:49.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.741" endtime="20201029 18:16:49.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.378" endtime="20201029 18:16:49.764"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.377" endtime="20201029 18:16:49.765"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.774" endtime="20201029 18:16:49.793"></status>
</kw>
<msg timestamp="20201029 18:16:49.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.772" endtime="20201029 18:16:49.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:49.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:49.795" endtime="20201029 18:16:49.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.797" endtime="20201029 18:16:49.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.769" endtime="20201029 18:16:49.799"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.767" endtime="20201029 18:16:49.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:49.807" endtime="20201029 18:16:50.093"></status>
</kw>
<msg timestamp="20201029 18:16:50.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:49.805" endtime="20201029 18:16:50.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022680542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.097" endtime="20201029 18:16:50.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.106" endtime="20201029 18:16:50.107"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.802" endtime="20201029 18:16:50.108"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.800" endtime="20201029 18:16:50.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.112" level="INFO">${RESULT} = [{'diff': 9.052699999999997e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.040299999999932e-05}, {'diff': 9.051399999999987e-05}, {'diff': 9.026399999999962e-05}, {'diff': 8.997200000000066e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:50.109" endtime="20201029 18:16:50.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.118" level="INFO">${ACCURACY} = {'diff': [9.052699999999997e-05, 9.080499999999936e-05, 9.040299999999932e-05, 9.051399999999987e-05, 9.026399999999962e-05, 8.997200000000066e-05, 9.065299999999957e-05, 9.047200000000116e-05, 9.0443...</msg>
<status status="PASS" starttime="20201029 18:16:50.114" endtime="20201029 18:16:50.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.123" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.121" endtime="20201029 18:16:50.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.125" level="INFO">VALUE: [9.052699999999997e-05, 9.080499999999936e-05, 9.040299999999932e-05, 9.051399999999987e-05, 9.026399999999962e-05, 8.997200000000066e-05, 9.065299999999957e-05, 9.047200000000116e-05, 9.044399999999855e-05, 9.08060000000023e-05, 9.052799999999944e-05, 9.030500000000233e-05, 9.033300000000147e-05, 9.080499999999936e-05, 9.030499999999886e-05, 9.08060000000023e-05, 9.080599999999883e-05, 9.072199999999794e-05, 9.012499999999993e-05, 9.012499999999993e-05, 8.995900000000057e-05, 9.016599999999916e-05, 9.052799999999944e-05, 9.080499999999936e-05, 9.047200000000116e-05, 9.084700000000154e-05, 9.0639e-05, 8.997200000000066e-05, 9.045800000000159e-05, 9.03060000000018e-05, 9.011100000000036e-05, 9.045900000000107e-05, 9.062500000000043e-05, 8.997200000000066e-05, 9.030499999999886e-05, 9.047200000000116e-05, 9.047200000000116e-05, 9.044399999999855e-05, 9.0639e-05, 9.01389999999995e-05, 9.01389999999995e-05, 8.997300000000014e-05, 9.012499999999993e-05, 9.029199999999876e-05, 9.080499999999936e-05, 9.027699999999972e-05, 9.030499999999886e-05, 9.01389999999995e-05, 9.030599999999833e-05, 8.9945000000001e-05]</msg>
<status status="PASS" starttime="20201029 18:16:50.124" endtime="20201029 18:16:50.126"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.119" endtime="20201029 18:16:50.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.130" endtime="20201029 18:16:50.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.129" endtime="20201029 18:16:50.150"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.128" endtime="20201029 18:16:50.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.765" endtime="20201029 18:16:50.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:49.765" endtime="20201029 18:16:50.151"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.160" endtime="20201029 18:16:50.180"></status>
</kw>
<msg timestamp="20201029 18:16:50.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.159" endtime="20201029 18:16:50.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.181" endtime="20201029 18:16:50.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.184" endtime="20201029 18:16:50.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.156" endtime="20201029 18:16:50.186"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.154" endtime="20201029 18:16:50.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.193" endtime="20201029 18:16:50.481"></status>
</kw>
<msg timestamp="20201029 18:16:50.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.192" endtime="20201029 18:16:50.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022658514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022750028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.485" endtime="20201029 18:16:50.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.494" endtime="20201029 18:16:50.495"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.189" endtime="20201029 18:16:50.496"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.187" endtime="20201029 18:16:50.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.501" level="INFO">${RESULT} = [{'diff': 9.15139999999974e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.161099999999839e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.130499999999986e-05}, {'diff': 9.162500000000143e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:50.497" endtime="20201029 18:16:50.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.505" level="INFO">${ACCURACY} = {'diff': [9.15139999999974e-05, 9.115300000000007e-05, 9.161099999999839e-05, 9.090299999999982e-05, 9.130499999999986e-05, 9.162500000000143e-05, 9.115300000000007e-05, 9.1639000000001e-05, 9.1471999...</msg>
<status status="PASS" starttime="20201029 18:16:50.502" endtime="20201029 18:16:50.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.510" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.509" endtime="20201029 18:16:50.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.512" level="INFO">VALUE: [9.15139999999974e-05, 9.115300000000007e-05, 9.161099999999839e-05, 9.090299999999982e-05, 9.130499999999986e-05, 9.162500000000143e-05, 9.115300000000007e-05, 9.1639000000001e-05, 9.14719999999987e-05, 9.134699999999857e-05, 9.148599999999826e-05, 9.11390000000005e-05, 9.132000000000237e-05, 9.180599999999983e-05, 9.113799999999755e-05, 9.129100000000029e-05, 9.131899999999943e-05, 9.165300000000057e-05, 9.169499999999928e-05, 9.18060000000033e-05, 9.162500000000143e-05, 9.123599999999801e-05, 9.097200000000166e-05, 9.097300000000114e-05, 9.180500000000036e-05, 9.186099999999864e-05, 9.129100000000029e-05, 9.11390000000005e-05, 9.181899999999993e-05, 9.127800000000019e-05, 9.129199999999976e-05, 9.165300000000057e-05, 9.162500000000143e-05, 9.143100000000293e-05, 9.11390000000005e-05, 9.148600000000173e-05, 9.129100000000029e-05, 9.095799999999862e-05, 9.095799999999862e-05, 9.14719999999987e-05, 9.111100000000136e-05, 9.11390000000005e-05, 9.11390000000005e-05, 9.11390000000005e-05, 9.170799999999937e-05, 9.112500000000093e-05, 9.129199999999976e-05, 9.166700000000014e-05, 9.11390000000005e-05, 9.147200000000216e-05]</msg>
<status status="PASS" starttime="20201029 18:16:50.511" endtime="20201029 18:16:50.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.506" endtime="20201029 18:16:50.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.517" endtime="20201029 18:16:50.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.516" endtime="20201029 18:16:50.537"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.515" endtime="20201029 18:16:50.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.152" endtime="20201029 18:16:50.538"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.151" endtime="20201029 18:16:50.538"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.547" endtime="20201029 18:16:50.568"></status>
</kw>
<msg timestamp="20201029 18:16:50.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.546" endtime="20201029 18:16:50.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.570" endtime="20201029 18:16:50.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.572" endtime="20201029 18:16:50.574"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.543" endtime="20201029 18:16:50.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.541" endtime="20201029 18:16:50.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.582" endtime="20201029 18:16:50.867"></status>
</kw>
<msg timestamp="20201029 18:16:50.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.580" endtime="20201029 18:16:50.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023687042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023779556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:50.872" endtime="20201029 18:16:50.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.880" endtime="20201029 18:16:50.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.578" endtime="20201029 18:16:50.882"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.576" endtime="20201029 18:16:50.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:50.887" level="INFO">${RESULT} = [{'diff': 9.251400000000187e-05}, {'diff': 9.279200000000126e-05}, {'diff': 9.220799999999987e-05}, {'diff': 9.198600000000223e-05}, {'diff': 9.237500000000218e-05}, {'diff': 9.231900000000043e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:50.884" endtime="20201029 18:16:50.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:50.891" level="INFO">${ACCURACY} = {'diff': [9.251400000000187e-05, 9.279200000000126e-05, 9.220799999999987e-05, 9.198600000000223e-05, 9.237500000000218e-05, 9.231900000000043e-05, 9.263899999999853e-05, 9.24719999999997e-05, 9.24720...</msg>
<status status="PASS" starttime="20201029 18:16:50.888" endtime="20201029 18:16:50.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.896" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 18:16:50.895" endtime="20201029 18:16:50.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.899" level="INFO">VALUE: [9.251400000000187e-05, 9.279200000000126e-05, 9.220799999999987e-05, 9.198600000000223e-05, 9.237500000000218e-05, 9.231900000000043e-05, 9.263899999999853e-05, 9.24719999999997e-05, 9.247200000000316e-05, 9.24719999999997e-05, 9.226400000000162e-05, 9.212500000000193e-05, 9.24589999999996e-05, 9.227699999999825e-05, 9.198600000000223e-05, 9.248599999999926e-05, 9.197200000000266e-05, 9.21390000000015e-05, 9.261099999999939e-05, 9.263899999999853e-05, 9.215300000000107e-05, 9.229200000000076e-05, 9.281900000000093e-05, 9.236099999999914e-05, 9.263899999999853e-05, 9.268100000000071e-05, 9.245799999999665e-05, 9.230499999999739e-05, 9.263899999999853e-05, 9.213899999999803e-05, 9.251299999999893e-05, 9.261099999999939e-05, 9.262499999999896e-05, 9.28330000000005e-05, 9.279100000000179e-05, 9.281900000000093e-05, 9.280499999999789e-05, 9.262499999999896e-05, 9.233399999999947e-05, 9.286199999999911e-05, 9.26940000000008e-05, 9.243100000000046e-05, 9.280599999999736e-05, 9.224999999999858e-05, 9.279200000000126e-05, 9.281899999999746e-05, 9.19719999999992e-05, 9.281900000000093e-05, 9.258300000000025e-05, 9.258300000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:16:50.897" endtime="20201029 18:16:50.900"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.892" endtime="20201029 18:16:50.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:50.905" endtime="20201029 18:16:50.924"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.903" endtime="20201029 18:16:50.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.902" endtime="20201029 18:16:50.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.539" endtime="20201029 18:16:50.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.539" endtime="20201029 18:16:50.925"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.935" endtime="20201029 18:16:50.954"></status>
</kw>
<msg timestamp="20201029 18:16:50.954" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.933" endtime="20201029 18:16:50.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:50.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:50.956" endtime="20201029 18:16:50.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.958" endtime="20201029 18:16:50.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.930" endtime="20201029 18:16:50.960"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.928" endtime="20201029 18:16:50.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:50.968" endtime="20201029 18:16:51.254"></status>
</kw>
<msg timestamp="20201029 18:16:51.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:50.966" endtime="20201029 18:16:51.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022732403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02282575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:51.258" endtime="20201029 18:16:51.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.267" endtime="20201029 18:16:51.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.963" endtime="20201029 18:16:51.269"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.961" endtime="20201029 18:16:51.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.274" level="INFO">${RESULT} = [{'diff': 9.33469999999971e-05}, {'diff': 9.379199999999879e-05}, {'diff': 9.348600000000026e-05}, {'diff': 9.383400000000097e-05}, {'diff': 9.329199999999829e-05}, {'diff': 9.362499999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:51.270" endtime="20201029 18:16:51.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.279" level="INFO">${ACCURACY} = {'diff': [9.33469999999971e-05, 9.379199999999879e-05, 9.348600000000026e-05, 9.383400000000097e-05, 9.329199999999829e-05, 9.362499999999996e-05, 9.29720000000002e-05, 9.348600000000026e-05, 9.294399...</msg>
<status status="PASS" starttime="20201029 18:16:51.275" endtime="20201029 18:16:51.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.284" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.283" endtime="20201029 18:16:51.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.286" level="INFO">VALUE: [9.33469999999971e-05, 9.379199999999879e-05, 9.348600000000026e-05, 9.383400000000097e-05, 9.329199999999829e-05, 9.362499999999996e-05, 9.29720000000002e-05, 9.348600000000026e-05, 9.294399999999758e-05, 9.329200000000176e-05, 9.325000000000305e-05, 9.312499999999946e-05, 9.343099999999799e-05, 9.380599999999836e-05, 9.31390000000025e-05, 9.330600000000133e-05, 9.315199999999912e-05, 9.361100000000039e-05, 9.29720000000002e-05, 9.331899999999796e-05, 9.330500000000186e-05, 9.34720000000007e-05, 9.33200000000009e-05, 9.34590000000006e-05, 9.362499999999996e-05, 9.30139999999989e-05, 9.380599999999836e-05, 9.36659999999992e-05, 9.380499999999889e-05, 9.298599999999976e-05, 9.31390000000025e-05, 9.374999999999661e-05, 9.294500000000053e-05, 9.34720000000007e-05, 9.344500000000103e-05, 9.34590000000006e-05, 9.34590000000006e-05, 9.361199999999986e-05, 9.344399999999808e-05, 9.329099999999882e-05, 9.348600000000026e-05, 9.313899999999903e-05, 9.313899999999903e-05, 9.326399999999915e-05, 9.329200000000176e-05, 9.315300000000207e-05, 9.365300000000257e-05, 9.297299999999967e-05, 9.313799999999955e-05, 9.365300000000257e-05]</msg>
<status status="PASS" starttime="20201029 18:16:51.285" endtime="20201029 18:16:51.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.280" endtime="20201029 18:16:51.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.292" endtime="20201029 18:16:51.311"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.290" endtime="20201029 18:16:51.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.289" endtime="20201029 18:16:51.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.926" endtime="20201029 18:16:51.312"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:50.926" endtime="20201029 18:16:51.312"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.322" endtime="20201029 18:16:51.342"></status>
</kw>
<msg timestamp="20201029 18:16:51.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.320" endtime="20201029 18:16:51.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.344" endtime="20201029 18:16:51.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.346" endtime="20201029 18:16:51.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.317" endtime="20201029 18:16:51.348"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.315" endtime="20201029 18:16:51.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.356" endtime="20201029 18:16:51.643"></status>
</kw>
<msg timestamp="20201029 18:16:51.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.354" endtime="20201029 18:16:51.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022860014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022954875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.647" endtime="20201029 18:16:51.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.656" endtime="20201029 18:16:51.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.351" endtime="20201029 18:16:51.658"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.350" endtime="20201029 18:16:51.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:51.663" level="INFO">${RESULT} = [{'diff': 9.486099999999817e-05}, {'diff': 9.398600000000076e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.444499999999856e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.431899999999896e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:51.659" endtime="20201029 18:16:51.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:51.667" level="INFO">${ACCURACY} = {'diff': [9.486099999999817e-05, 9.398600000000076e-05, 9.413900000000003e-05, 9.444499999999856e-05, 9.413900000000003e-05, 9.431899999999896e-05, 9.40139999999999e-05, 9.447199999999822e-05, 9.40830...</msg>
<status status="PASS" starttime="20201029 18:16:51.664" endtime="20201029 18:16:51.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.672" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 18:16:51.671" endtime="20201029 18:16:51.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.674" level="INFO">VALUE: [9.486099999999817e-05, 9.398600000000076e-05, 9.413900000000003e-05, 9.444499999999856e-05, 9.413900000000003e-05, 9.431899999999896e-05, 9.40139999999999e-05, 9.447199999999822e-05, 9.408300000000175e-05, 9.431899999999896e-05, 9.412500000000046e-05, 9.413900000000003e-05, 9.44859999999978e-05, 9.463900000000053e-05, 9.413900000000003e-05, 9.44729999999977e-05, 9.447199999999822e-05, 9.480499999999989e-05, 9.41529999999996e-05, 9.412500000000046e-05, 9.481899999999946e-05, 9.430599999999886e-05, 9.395799999999815e-05, 9.479199999999979e-05, 9.462500000000096e-05, 9.463900000000053e-05, 9.463900000000053e-05, 9.431900000000243e-05, 9.397199999999772e-05, 9.395800000000162e-05, 9.39720000000012e-05, 9.44720000000017e-05, 9.39720000000012e-05, 9.430600000000233e-05, 9.41529999999996e-05, 9.430599999999886e-05, 9.444499999999856e-05, 9.467999999999976e-05, 9.394400000000205e-05, 9.463900000000053e-05, 9.413900000000003e-05, 9.413900000000003e-05, 9.476399999999718e-05, 9.412500000000046e-05, 9.477799999999675e-05, 9.436100000000114e-05, 9.463900000000053e-05, 9.415200000000012e-05, 9.462499999999749e-05, 9.448600000000126e-05]</msg>
<status status="PASS" starttime="20201029 18:16:51.673" endtime="20201029 18:16:51.675"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.668" endtime="20201029 18:16:51.676"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:51.680" endtime="20201029 18:16:51.699"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.678" endtime="20201029 18:16:51.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.677" endtime="20201029 18:16:51.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.313" endtime="20201029 18:16:51.700"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.313" endtime="20201029 18:16:51.701"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.710" endtime="20201029 18:16:51.730"></status>
</kw>
<msg timestamp="20201029 18:16:51.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.708" endtime="20201029 18:16:51.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:51.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:51.732" endtime="20201029 18:16:51.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.734" endtime="20201029 18:16:51.736"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.705" endtime="20201029 18:16:51.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.703" endtime="20201029 18:16:51.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:51.744" endtime="20201029 18:16:52.031"></status>
</kw>
<msg timestamp="20201029 18:16:52.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:51.742" endtime="20201029 18:16:52.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023862944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023957986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.035" endtime="20201029 18:16:52.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.044" endtime="20201029 18:16:52.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.739" endtime="20201029 18:16:52.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.738" endtime="20201029 18:16:52.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.051" level="INFO">${RESULT} = [{'diff': 9.504200000000004e-05}, {'diff': 9.529199999999682e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.495800000000262e-05}, {'diff': 9.58339999999995e-05}, {'diff': 9.52079999999994e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:52.047" endtime="20201029 18:16:52.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.055" level="INFO">${ACCURACY} = {'diff': [9.504200000000004e-05, 9.529199999999682e-05, 9.586099999999917e-05, 9.495800000000262e-05, 9.58339999999995e-05, 9.52079999999994e-05, 9.513899999999756e-05, 9.547199999999922e-05, 9.545799...</msg>
<status status="PASS" starttime="20201029 18:16:52.052" endtime="20201029 18:16:52.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.060" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.059" endtime="20201029 18:16:52.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.063" level="INFO">VALUE: [9.504200000000004e-05, 9.529199999999682e-05, 9.586099999999917e-05, 9.495800000000262e-05, 9.58339999999995e-05, 9.52079999999994e-05, 9.513899999999756e-05, 9.547199999999922e-05, 9.545799999999965e-05, 9.518099999999974e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.513900000000103e-05, 9.584800000000254e-05, 9.49720000000022e-05, 9.562499999999849e-05, 9.579200000000079e-05, 9.512500000000146e-05, 9.497199999999872e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.529200000000029e-05, 9.563900000000153e-05, 9.547199999999922e-05, 9.562499999999849e-05, 9.498600000000176e-05, 9.498699999999777e-05, 9.508399999999875e-05, 9.563799999999859e-05, 9.495799999999915e-05, 9.511099999999842e-05, 9.513900000000103e-05, 9.579200000000079e-05, 9.547199999999922e-05, 9.559699999999935e-05, 9.530599999999986e-05, 9.53469999999991e-05, 9.513900000000103e-05, 9.495899999999863e-05, 9.49720000000022e-05, 9.545799999999965e-05, 9.56530000000011e-05, 9.54859999999988e-05, 9.563899999999806e-05, 9.563899999999806e-05, 9.523600000000201e-05, 9.500000000000133e-05, 9.563899999999806e-05, 9.579199999999732e-05, 9.547199999999922e-05]</msg>
<status status="PASS" starttime="20201029 18:16:52.061" endtime="20201029 18:16:52.064"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.056" endtime="20201029 18:16:52.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.068" endtime="20201029 18:16:52.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.067" endtime="20201029 18:16:52.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.065" endtime="20201029 18:16:52.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.701" endtime="20201029 18:16:52.089"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:51.701" endtime="20201029 18:16:52.089"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.098" endtime="20201029 18:16:52.118"></status>
</kw>
<msg timestamp="20201029 18:16:52.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.096" endtime="20201029 18:16:52.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.119" endtime="20201029 18:16:52.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.122" endtime="20201029 18:16:52.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.094" endtime="20201029 18:16:52.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.092" endtime="20201029 18:16:52.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.132" endtime="20201029 18:16:52.418"></status>
</kw>
<msg timestamp="20201029 18:16:52.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.130" endtime="20201029 18:16:52.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022683236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022779597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.422" endtime="20201029 18:16:52.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.430" endtime="20201029 18:16:52.432"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.127" endtime="20201029 18:16:52.433"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.126" endtime="20201029 18:16:52.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.437" level="INFO">${RESULT} = [{'diff': 9.636099999999967e-05}, {'diff': 9.626400000000215e-05}, {'diff': 9.62920000000013e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.62920000000013e-05}, {'diff': 9.632000000000043e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 18:16:52.434" endtime="20201029 18:16:52.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.443" level="INFO">${ACCURACY} = {'diff': [9.636099999999967e-05, 9.626400000000215e-05, 9.62920000000013e-05, 9.612499999999899e-05, 9.62920000000013e-05, 9.632000000000043e-05, 9.674999999999961e-05, 9.630600000000086e-05, 9.665199...</msg>
<status status="PASS" starttime="20201029 18:16:52.438" endtime="20201029 18:16:52.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.447" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.446" endtime="20201029 18:16:52.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.450" level="INFO">VALUE: [9.636099999999967e-05, 9.626400000000215e-05, 9.62920000000013e-05, 9.612499999999899e-05, 9.62920000000013e-05, 9.632000000000043e-05, 9.674999999999961e-05, 9.630600000000086e-05, 9.665199999999916e-05, 9.595800000000015e-05, 9.677699999999928e-05, 9.604200000000104e-05, 9.647200000000022e-05, 9.679199999999832e-05, 9.61530000000016e-05, 9.647200000000022e-05, 9.680600000000136e-05, 9.64729999999997e-05, 9.611199999999889e-05, 9.63470000000001e-05, 9.611099999999942e-05, 9.593000000000101e-05, 9.663900000000253e-05, 9.634799999999957e-05, 9.613900000000203e-05, 9.682000000000093e-05, 9.59729999999992e-05, 9.645900000000013e-05, 9.663899999999906e-05, 9.630500000000139e-05, 9.647199999999675e-05, 9.613899999999856e-05, 9.615299999999813e-05, 9.609699999999985e-05, 9.662500000000296e-05, 9.605600000000061e-05, 9.63059999999974e-05, 9.630600000000086e-05, 9.630600000000086e-05, 9.595800000000015e-05, 9.661099999999992e-05, 9.594399999999711e-05, 9.644400000000108e-05, 9.647200000000022e-05, 9.677799999999875e-05, 9.649999999999936e-05, 9.663899999999906e-05, 9.613899999999856e-05, 9.64859999999998e-05, 9.597199999999972e-05]</msg>
<status status="PASS" starttime="20201029 18:16:52.449" endtime="20201029 18:16:52.451"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.444" endtime="20201029 18:16:52.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.455" endtime="20201029 18:16:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.454" endtime="20201029 18:16:52.475"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.452" endtime="20201029 18:16:52.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.090" endtime="20201029 18:16:52.476"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.089" endtime="20201029 18:16:52.476"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.485" endtime="20201029 18:16:52.505"></status>
</kw>
<msg timestamp="20201029 18:16:52.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.484" endtime="20201029 18:16:52.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.507" endtime="20201029 18:16:52.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.509" endtime="20201029 18:16:52.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.481" endtime="20201029 18:16:52.512"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.479" endtime="20201029 18:16:52.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.519" endtime="20201029 18:16:52.808"></status>
</kw>
<msg timestamp="20201029 18:16:52.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.517" endtime="20201029 18:16:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022813694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022911569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.812" endtime="20201029 18:16:52.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.821" endtime="20201029 18:16:52.822"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.515" endtime="20201029 18:16:52.823"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.513" endtime="20201029 18:16:52.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:52.827" level="INFO">${RESULT} = [{'diff': 9.787500000000074e-05}, {'diff': 9.779100000000332e-05}, {'diff': 9.762500000000049e-05}, {'diff': 9.695800000000115e-05}, {'diff': 9.747199999999775e-05}, {'diff': 9.732000000000143e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:52.824" endtime="20201029 18:16:52.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:52.832" level="INFO">${ACCURACY} = {'diff': [9.787500000000074e-05, 9.779100000000332e-05, 9.762500000000049e-05, 9.695800000000115e-05, 9.747199999999775e-05, 9.732000000000143e-05, 9.763900000000006e-05, 9.697299999999673e-05, 9.7805...</msg>
<status status="PASS" starttime="20201029 18:16:52.828" endtime="20201029 18:16:52.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.836" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 18:16:52.835" endtime="20201029 18:16:52.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.839" level="INFO">VALUE: [9.787500000000074e-05, 9.779100000000332e-05, 9.762500000000049e-05, 9.695800000000115e-05, 9.747199999999775e-05, 9.732000000000143e-05, 9.763900000000006e-05, 9.697299999999673e-05, 9.78059999999989e-05, 9.731899999999849e-05, 9.781899999999899e-05, 9.729099999999935e-05, 9.783299999999856e-05, 9.747200000000122e-05, 9.715299999999913e-05, 9.763900000000006e-05, 9.731999999999796e-05, 9.713899999999956e-05, 9.69730000000002e-05, 9.745900000000113e-05, 9.695799999999768e-05, 9.76660000000032e-05, 9.713899999999956e-05, 9.713899999999956e-05, 9.747199999999775e-05, 9.779199999999932e-05, 9.712499999999999e-05, 9.695800000000115e-05, 9.713900000000303e-05, 9.713899999999956e-05, 9.695900000000063e-05, 9.752800000000297e-05, 9.747200000000122e-05, 9.722200000000097e-05, 9.762500000000049e-05, 9.769499999999834e-05, 9.69860000000003e-05, 9.750000000000036e-05, 9.748599999999732e-05, 9.762500000000049e-05, 9.77920000000028e-05, 9.697200000000072e-05, 9.770900000000138e-05, 9.745799999999818e-05, 9.745800000000165e-05, 9.729199999999882e-05, 9.732000000000143e-05, 9.747200000000122e-05, 9.763900000000006e-05, 9.750000000000036e-05]</msg>
<status status="PASS" starttime="20201029 18:16:52.838" endtime="20201029 18:16:52.840"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.833" endtime="20201029 18:16:52.840"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:52.844" endtime="20201029 18:16:52.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.843" endtime="20201029 18:16:52.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.841" endtime="20201029 18:16:52.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.477" endtime="20201029 18:16:52.865"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.476" endtime="20201029 18:16:52.865"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.874" endtime="20201029 18:16:52.895"></status>
</kw>
<msg timestamp="20201029 18:16:52.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.873" endtime="20201029 18:16:52.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:52.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:52.897" endtime="20201029 18:16:52.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.899" endtime="20201029 18:16:52.901"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.870" endtime="20201029 18:16:52.902"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.868" endtime="20201029 18:16:52.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:52.909" endtime="20201029 18:16:53.194"></status>
</kw>
<msg timestamp="20201029 18:16:53.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023746417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:52.907" endtime="20201029 18:16:53.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023746417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023844514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.198" endtime="20201029 18:16:53.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.207" endtime="20201029 18:16:53.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.905" endtime="20201029 18:16:53.209"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.903" endtime="20201029 18:16:53.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.214" level="INFO">${RESULT} = [{'diff': 9.809700000000185e-05}, {'diff': 9.830499999999992e-05}, {'diff': 9.879099999999738e-05}, {'diff': 9.879100000000085e-05}, {'diff': 9.841699999999995e-05}, {'diff': 9.83059999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201029 18:16:53.210" endtime="20201029 18:16:53.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.218" level="INFO">${ACCURACY} = {'diff': [9.809700000000185e-05, 9.830499999999992e-05, 9.879099999999738e-05, 9.879100000000085e-05, 9.841699999999995e-05, 9.83059999999994e-05, 9.83059999999994e-05, 9.795900000000163e-05, 9.816600...</msg>
<status status="PASS" starttime="20201029 18:16:53.215" endtime="20201029 18:16:53.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.223" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.222" endtime="20201029 18:16:53.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.225" level="INFO">VALUE: [9.809700000000185e-05, 9.830499999999992e-05, 9.879099999999738e-05, 9.879100000000085e-05, 9.841699999999995e-05, 9.83059999999994e-05, 9.83059999999994e-05, 9.795900000000163e-05, 9.816600000000023e-05, 9.831899999999949e-05, 9.881899999999999e-05, 9.879100000000085e-05, 9.880500000000042e-05, 9.830499999999992e-05, 9.884699999999913e-05, 9.845799999999919e-05, 9.868099999999977e-05, 9.861099999999845e-05, 9.833299999999906e-05, 9.847299999999823e-05, 9.795899999999816e-05, 9.830499999999992e-05, 9.845799999999919e-05, 9.847199999999875e-05, 9.845800000000265e-05, 9.812500000000099e-05, 9.870799999999944e-05, 9.845899999999866e-05, 9.831999999999896e-05, 9.788900000000031e-05, 9.84860000000018e-05, 9.862500000000149e-05, 9.831900000000296e-05, 9.826400000000068e-05, 9.856899999999974e-05, 9.863900000000106e-05, 9.88059999999999e-05, 9.831999999999896e-05, 9.795899999999816e-05, 9.862500000000149e-05, 9.812499999999752e-05, 9.862500000000149e-05, 9.881899999999999e-05, 9.79860000000013e-05, 9.800000000000086e-05, 9.88059999999999e-05, 9.797199999999825e-05, 9.815300000000013e-05, 9.813900000000056e-05, 9.827800000000025e-05]</msg>
<status status="PASS" starttime="20201029 18:16:53.224" endtime="20201029 18:16:53.227"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.219" endtime="20201029 18:16:53.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.231" endtime="20201029 18:16:53.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.230" endtime="20201029 18:16:53.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.229" endtime="20201029 18:16:53.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.866" endtime="20201029 18:16:53.252"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:52.865" endtime="20201029 18:16:53.252"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.261" endtime="20201029 18:16:53.281"></status>
</kw>
<msg timestamp="20201029 18:16:53.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.260" endtime="20201029 18:16:53.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.283" endtime="20201029 18:16:53.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.286" endtime="20201029 18:16:53.287"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.257" endtime="20201029 18:16:53.288"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.255" endtime="20201029 18:16:53.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.296" endtime="20201029 18:16:53.586"></status>
</kw>
<msg timestamp="20201029 18:16:53.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.294" endtime="20201029 18:16:53.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022787361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.590" endtime="20201029 18:16:53.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.598" endtime="20201029 18:16:53.600"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.291" endtime="20201029 18:16:53.601"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.289" endtime="20201029 18:16:53.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.605" level="INFO">${RESULT} = [{'diff': 9.952799999999803e-05}, {'diff': 9.931999999999996e-05}, {'diff': 9.913899999999809e-05}, {'diff': 9.945899999999966e-05}, {'diff': 9.969400000000087e-05}, {'diff': 9.895900000000263e-05}, {...</msg>
<status status="PASS" starttime="20201029 18:16:53.602" endtime="20201029 18:16:53.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.611" level="INFO">${ACCURACY} = {'diff': [9.952799999999803e-05, 9.931999999999996e-05, 9.913899999999809e-05, 9.945899999999966e-05, 9.969400000000087e-05, 9.895900000000263e-05, 9.897199999999926e-05, 9.901400000000143e-05, 9.9458...</msg>
<status status="PASS" starttime="20201029 18:16:53.606" endtime="20201029 18:16:53.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.615" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 18:16:53.614" endtime="20201029 18:16:53.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.618" level="INFO">VALUE: [9.952799999999803e-05, 9.931999999999996e-05, 9.913899999999809e-05, 9.945899999999966e-05, 9.969400000000087e-05, 9.895900000000263e-05, 9.897199999999926e-05, 9.901400000000143e-05, 9.945800000000019e-05, 9.970899999999991e-05, 9.931900000000049e-05, 9.98060000000009e-05, 9.93060000000004e-05, 9.947199999999976e-05, 9.898700000000177e-05, 9.915199999999819e-05, 9.980499999999795e-05, 9.979099999999838e-05, 9.930499999999745e-05, 9.980500000000142e-05, 9.893000000000055e-05, 9.895799999999969e-05, 9.947199999999976e-05, 9.963899999999859e-05, 9.94730000000027e-05, 9.897299999999873e-05, 9.913799999999862e-05, 9.981900000000099e-05, 9.929099999999788e-05, 9.895799999999969e-05, 9.963900000000206e-05, 9.948599999999932e-05, 9.945800000000019e-05, 9.963899999999859e-05, 9.98609999999997e-05, 9.948599999999932e-05, 9.947199999999976e-05, 9.929099999999788e-05, 9.962499999999902e-05, 9.958300000000031e-05, 9.945800000000019e-05, 9.948599999999932e-05, 9.913899999999809e-05, 9.948599999999932e-05, 9.929200000000082e-05, 9.962499999999902e-05, 9.979200000000132e-05, 9.930499999999745e-05, 9.961099999999945e-05, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201029 18:16:53.616" endtime="20201029 18:16:53.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.611" endtime="20201029 18:16:53.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:53.623" endtime="20201029 18:16:53.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.621" endtime="20201029 18:16:53.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.620" endtime="20201029 18:16:53.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.253" endtime="20201029 18:16:53.644"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.253" endtime="20201029 18:16:53.644"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.653" endtime="20201029 18:16:53.673"></status>
</kw>
<msg timestamp="20201029 18:16:53.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.651" endtime="20201029 18:16:53.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:53.675" endtime="20201029 18:16:53.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.677" endtime="20201029 18:16:53.679"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.649" endtime="20201029 18:16:53.680"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.646" endtime="20201029 18:16:53.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.687" endtime="20201029 18:16:53.973"></status>
</kw>
<msg timestamp="20201029 18:16:53.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.685" endtime="20201029 18:16:53.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:53.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022862292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022962736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:53.977" endtime="20201029 18:16:53.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:53.986" endtime="20201029 18:16:53.987"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.683" endtime="20201029 18:16:53.988"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.681" endtime="20201029 18:16:53.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:53.993" level="INFO">${RESULT} = [{'diff': 0.00010044400000000162}, {'diff': 0.00010044500000000109}, {'diff': 0.00010063899999999959}, {'diff': 0.00010063899999999959}, {'diff': 0.00010081899999999852}, {'diff': 0.000100652999999999...</msg>
<status status="PASS" starttime="20201029 18:16:53.989" endtime="20201029 18:16:53.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:53.997" level="INFO">${ACCURACY} = {'diff': [0.00010044400000000162, 0.00010044500000000109, 0.00010063899999999959, 0.00010063899999999959, 0.00010081899999999852, 0.00010065299999999916, 0.00010080500000000242, 0.00010013900000000256...</msg>
<status status="PASS" starttime="20201029 18:16:53.994" endtime="20201029 18:16:53.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.001" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 18:16:54.000" endtime="20201029 18:16:54.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.004" level="INFO">VALUE: [0.00010044400000000162, 0.00010044500000000109, 0.00010063899999999959, 0.00010063899999999959, 0.00010081899999999852, 0.00010065299999999916, 0.00010080500000000242, 0.00010013900000000256, 0.00010079200000000232, 0.00010029199999999835, 0.00010045899999999719, 0.00010013899999999909, 0.00010045899999999719, 0.00010031900000000149, 0.00010013900000000256, 9.998599999999983e-05, 0.00010080599999999842, 0.00010058300000000131, 0.00010044500000000109, 0.00010012499999999952, 0.0001003060000000014, 9.995900000000016e-05, 0.00010044500000000109, 9.997200000000026e-05, 0.00010063899999999959, 0.00010084700000000113, 0.00010029200000000182, 0.00010013899999999909, 0.00010030599999999792, 9.997200000000026e-05, 0.00010079199999999885, 0.00010062500000000002, 9.997200000000026e-05, 9.995800000000069e-05, 0.00010081899999999852, 0.00010047199999999729, 0.00010030500000000192, 0.00010065299999999916, 0.00010047200000000076, 0.0001008060000000019, 0.00010037499999999977, 0.00010083400000000103, 0.00010012499999999952, 0.00010048600000000033, 0.00010009699999999691, 0.00010013900000000256, 0.00010066699999999873, 0.00010030599999999792, 0.00010047199999999729, 0.00010012499999999952]</msg>
<status status="PASS" starttime="20201029 18:16:54.003" endtime="20201029 18:16:54.011"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.998" endtime="20201029 18:16:54.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.015" endtime="20201029 18:16:54.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.014" endtime="20201029 18:16:54.035"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.012" endtime="20201029 18:16:54.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.645" endtime="20201029 18:16:54.036"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:53.644" endtime="20201029 18:16:54.036"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.045" endtime="20201029 18:16:54.066"></status>
</kw>
<msg timestamp="20201029 18:16:54.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.044" endtime="20201029 18:16:54.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.068" endtime="20201029 18:16:54.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.070" endtime="20201029 18:16:54.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.041" endtime="20201029 18:16:54.072"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.039" endtime="20201029 18:16:54.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.080" endtime="20201029 18:16:54.367"></status>
</kw>
<msg timestamp="20201029 18:16:54.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.078" endtime="20201029 18:16:54.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023749653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023851056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.372" endtime="20201029 18:16:54.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.380" endtime="20201029 18:16:54.381"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.075" endtime="20201029 18:16:54.382"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.074" endtime="20201029 18:16:54.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:54.387" level="INFO">${RESULT} = [{'diff': 0.00010140299999999991}, {'diff': 0.00010127799999999978}, {'diff': 0.0001013060000000024}, {'diff': 0.00010161100000000145}, {'diff': 0.0001016939999999994}, {'diff': 0.00010125000000000065...</msg>
<status status="PASS" starttime="20201029 18:16:54.383" endtime="20201029 18:16:54.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:54.391" level="INFO">${ACCURACY} = {'diff': [0.00010140299999999991, 0.00010127799999999978, 0.0001013060000000024, 0.00010161100000000145, 0.0001016939999999994, 0.00010125000000000065, 0.0001010000000000004, 0.00010163899999999712, 0...</msg>
<status status="PASS" starttime="20201029 18:16:54.388" endtime="20201029 18:16:54.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.396" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 18:16:54.394" endtime="20201029 18:16:54.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.398" level="INFO">VALUE: [0.00010140299999999991, 0.00010127799999999978, 0.0001013060000000024, 0.00010161100000000145, 0.0001016939999999994, 0.00010125000000000065, 0.0001010000000000004, 0.00010163899999999712, 0.00010145799999999872, 0.00010180599999999942, 0.00010177800000000028, 0.00010180599999999942, 0.00010184699999999866, 0.00010095899999999769, 0.00010186099999999823, 0.00010183300000000256, 0.00010179199999999985, 0.00010130499999999945, 0.0001013060000000024, 0.00010161100000000145, 0.00010097200000000126, 0.00010097300000000073, 0.00010159699999999841, 0.000101416, 0.00010094399999999865, 0.00010088899999999984, 0.00010113900000000009, 0.00010131899999999902, 0.00010180599999999942, 0.0001015549999999997, 0.00010130599999999892, 0.00010108400000000128, 0.00010144500000000209, 0.00010161199999999745, 0.00010097199999999779, 0.00010148599999999786, 0.00010181899999999952, 0.00010097200000000126, 0.00010133399999999806, 0.00010165300000000016, 0.00010113900000000009, 0.00010130599999999892, 0.00010095899999999769, 0.000101819999999999, 0.00010180499999999995, 0.00010147200000000176, 0.00010094399999999865, 0.00010147199999999829, 0.00010129199999999935, 0.00010130599999999892]</msg>
<status status="PASS" starttime="20201029 18:16:54.397" endtime="20201029 18:16:54.400"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.392" endtime="20201029 18:16:54.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.404" endtime="20201029 18:16:54.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.403" endtime="20201029 18:16:54.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.401" endtime="20201029 18:16:54.424"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.037" endtime="20201029 18:16:54.425"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.037" endtime="20201029 18:16:54.425"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.434" endtime="20201029 18:16:54.454"></status>
</kw>
<msg timestamp="20201029 18:16:54.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.432" endtime="20201029 18:16:54.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.456" endtime="20201029 18:16:54.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.458" endtime="20201029 18:16:54.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.430" endtime="20201029 18:16:54.460"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.427" endtime="20201029 18:16:54.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.468" endtime="20201029 18:16:54.754"></status>
</kw>
<msg timestamp="20201029 18:16:54.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.466" endtime="20201029 18:16:54.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022836819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.758" endtime="20201029 18:16:54.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.767" endtime="20201029 18:16:54.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.463" endtime="20201029 18:16:54.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.462" endtime="20201029 18:16:54.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:54.773" level="INFO">${RESULT} = [{'diff': 0.00010251300000000199}, {'diff': 0.00010212499999999805}, {'diff': 0.00010195799999999922}, {'diff': 0.00010213899999999762}, {'diff': 0.00010226400000000122}, {'diff': 0.000102472000000002...</msg>
<status status="PASS" starttime="20201029 18:16:54.770" endtime="20201029 18:16:54.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:54.779" level="INFO">${ACCURACY} = {'diff': [0.00010251300000000199, 0.00010212499999999805, 0.00010195799999999922, 0.00010213899999999762, 0.00010226400000000122, 0.00010247200000000276, 0.00010195900000000216, 0.0001025000000000019,...</msg>
<status status="PASS" starttime="20201029 18:16:54.775" endtime="20201029 18:16:54.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.783" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 18:16:54.782" endtime="20201029 18:16:54.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.786" level="INFO">VALUE: [0.00010251300000000199, 0.00010212499999999805, 0.00010195799999999922, 0.00010213899999999762, 0.00010226400000000122, 0.00010247200000000276, 0.00010195900000000216, 0.0001025000000000019, 0.00010212499999999805, 0.00010245899999999919, 0.00010211099999999848, 0.00010229099999999741, 0.00010230500000000045, 0.00010230500000000045, 0.00010215300000000066, 0.00010244499999999962, 0.00010263899999999812, 0.00010255600000000017, 0.00010213900000000109, 0.00010197200000000226, 0.00010280499999999748, 0.00010262500000000202, 0.00010211100000000195, 0.00010202800000000053, 0.00010195800000000269, 0.00010279200000000085, 0.00010195900000000216, 0.00010230599999999992, 0.00010198600000000183, 0.00010230500000000045, 0.00010269499999999987, 0.00010263899999999812, 0.00010261099999999898, 0.00010280600000000042, 0.00010212499999999805, 0.00010262499999999855, 0.00010258399999999931, 0.00010245900000000266, 0.00010265199999999822, 0.00010230500000000045, 0.00010247199999999929, 0.00010229100000000088, 0.00010245799999999972, 0.00010276400000000172, 0.00010230599999999992, 0.00010217999999999686, 0.00010240299999999744, 0.00010194499999999912, 0.00010229200000000035, 0.00010263799999999865]</msg>
<status status="PASS" starttime="20201029 18:16:54.785" endtime="20201029 18:16:54.787"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.779" endtime="20201029 18:16:54.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:54.791" endtime="20201029 18:16:54.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.790" endtime="20201029 18:16:54.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.788" endtime="20201029 18:16:54.811"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.426" endtime="20201029 18:16:54.812"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.425" endtime="20201029 18:16:54.812"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.821" endtime="20201029 18:16:54.840"></status>
</kw>
<msg timestamp="20201029 18:16:54.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.819" endtime="20201029 18:16:54.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:54.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:54.842" endtime="20201029 18:16:54.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.845" endtime="20201029 18:16:54.846"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.817" endtime="20201029 18:16:54.847"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.815" endtime="20201029 18:16:54.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:54.854" endtime="20201029 18:16:55.141"></status>
</kw>
<msg timestamp="20201029 18:16:55.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:54.852" endtime="20201029 18:16:55.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022710708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022814389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.146" endtime="20201029 18:16:55.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.154" endtime="20201029 18:16:55.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.850" endtime="20201029 18:16:55.156"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.848" endtime="20201029 18:16:55.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:55.161" level="INFO">${RESULT} = [{'diff': 0.0001036810000000013}, {'diff': 0.00010313899999999862}, {'diff': 0.00010316700000000123}, {'diff': 0.00010345900000000019}, {'diff': 0.00010294500000000012}, {'diff': 0.0001030140000000019...</msg>
<status status="PASS" starttime="20201029 18:16:55.158" endtime="20201029 18:16:55.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:55.165" level="INFO">${ACCURACY} = {'diff': [0.0001036810000000013, 0.00010313899999999862, 0.00010316700000000123, 0.00010345900000000019, 0.00010294500000000012, 0.00010301400000000197, 0.00010331900000000102, 0.00010363899999999912,...</msg>
<status status="PASS" starttime="20201029 18:16:55.162" endtime="20201029 18:16:55.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.170" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 18:16:55.169" endtime="20201029 18:16:55.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.172" level="INFO">VALUE: [0.0001036810000000013, 0.00010313899999999862, 0.00010316700000000123, 0.00010345900000000019, 0.00010294500000000012, 0.00010301400000000197, 0.00010331900000000102, 0.00010363899999999912, 0.00010347199999999682, 0.00010299999999999893, 0.00010311099999999948, 0.00010352699999999909, 0.00010345900000000019, 0.0001030000000000024, 0.00010347299999999976, 0.00010309699999999991, 0.00010381899999999805, 0.00010359700000000041, 0.00010347200000000029, 0.00010330600000000092, 0.00010347200000000029, 0.00010299999999999893, 0.00010347299999999976, 0.00010348599999999986, 0.00010347200000000029, 0.00010379099999999891, 0.00010326399999999875, 0.00010330500000000145, 0.00010349999999999943, 0.00010379199999999839, 0.00010313899999999862, 0.00010348599999999986, 0.00010315300000000166, 0.00010365199999999922, 0.00010333300000000059, 0.000103820000000001, 0.00010295800000000022, 0.00010312500000000252, 0.0001030139999999985, 0.00010295800000000022, 0.00010345800000000072, 0.00010363899999999912, 0.00010295899999999969, 0.00010347299999999976, 0.00010365200000000269, 0.00010295800000000022, 0.00010298599999999936, 0.00010348599999999986, 0.00010362499999999955, 0.00010313899999999862]</msg>
<status status="PASS" starttime="20201029 18:16:55.171" endtime="20201029 18:16:55.173"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.166" endtime="20201029 18:16:55.174"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:55.178" endtime="20201029 18:16:55.197"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.176" endtime="20201029 18:16:55.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.175" endtime="20201029 18:16:55.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.813" endtime="20201029 18:16:55.198"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:54.812" endtime="20201029 18:16:55.198"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.208" endtime="20201029 18:16:55.228"></status>
</kw>
<msg timestamp="20201029 18:16:55.229" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.206" endtime="20201029 18:16:55.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.230" endtime="20201029 18:16:55.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.232" endtime="20201029 18:16:55.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.203" endtime="20201029 18:16:55.235"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.201" endtime="20201029 18:16:55.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.242" endtime="20201029 18:16:55.528"></status>
</kw>
<msg timestamp="20201029 18:16:55.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.240" endtime="20201029 18:16:55.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023612972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023717347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.532" endtime="20201029 18:16:55.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.541" endtime="20201029 18:16:55.542"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.238" endtime="20201029 18:16:55.543"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.236" endtime="20201029 18:16:55.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:55.547" level="INFO">${RESULT} = [{'diff': 0.0001043750000000003}, {'diff': 0.00010462500000000055}, {'diff': 0.00010430600000000192}, {'diff': 0.00010394399999999818}, {'diff': 0.00010413900000000309}, {'diff': 0.0001039590000000006...</msg>
<status status="PASS" starttime="20201029 18:16:55.544" endtime="20201029 18:16:55.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:55.552" level="INFO">${ACCURACY} = {'diff': [0.0001043750000000003, 0.00010462500000000055, 0.00010430600000000192, 0.00010394399999999818, 0.00010413900000000309, 0.00010395900000000069, 0.00010462500000000055, 0.00010416599999999929,...</msg>
<status status="PASS" starttime="20201029 18:16:55.548" endtime="20201029 18:16:55.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.556" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 18:16:55.555" endtime="20201029 18:16:55.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.560" level="INFO">VALUE: [0.0001043750000000003, 0.00010462500000000055, 0.00010430600000000192, 0.00010394399999999818, 0.00010413900000000309, 0.00010395900000000069, 0.00010462500000000055, 0.00010416599999999929, 0.00010413800000000015, 0.00010397200000000079, 0.00010445800000000172, 0.00010411100000000048, 0.00010415300000000266, 0.00010484800000000113, 0.00010480599999999896, 0.00010430600000000192, 0.00010391700000000198, 0.00010461200000000045, 0.00010463900000000012, 0.00010441599999999954, 0.00010445800000000172, 0.00010397200000000079, 0.00010413899999999962, 0.00010447200000000129, 0.00010409700000000091, 0.00010429200000000236, 0.00010397300000000026, 0.00010447199999999782, 0.00010447200000000129, 0.00010416699999999876, 0.00010448600000000086, 0.00010479199999999939, 0.00010394500000000112, 0.00010430599999999846, 0.00010462499999999708, 0.00010444500000000162, 0.00010413899999999962, 0.00010413800000000015, 0.00010397200000000079, 0.00010447200000000129, 0.00010416699999999876, 0.00010449999999999696, 0.00010481999999999853, 0.00010448600000000086, 0.00010441700000000248, 0.00010447300000000076, 0.00010413800000000015, 0.00010409700000000091, 0.00010430500000000245, 0.00010413899999999962]</msg>
<status status="PASS" starttime="20201029 18:16:55.558" endtime="20201029 18:16:55.561"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.553" endtime="20201029 18:16:55.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:55.565" endtime="20201029 18:16:55.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.564" endtime="20201029 18:16:55.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.562" endtime="20201029 18:16:55.585"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.199" endtime="20201029 18:16:55.586"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.199" endtime="20201029 18:16:55.586"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.595" endtime="20201029 18:16:55.614"></status>
</kw>
<msg timestamp="20201029 18:16:55.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.593" endtime="20201029 18:16:55.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.616" endtime="20201029 18:16:55.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.618" endtime="20201029 18:16:55.620"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.591" endtime="20201029 18:16:55.621"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.588" endtime="20201029 18:16:55.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.628" endtime="20201029 18:16:55.915"></status>
</kw>
<msg timestamp="20201029 18:16:55.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.626" endtime="20201029 18:16:55.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022656167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:55.919" endtime="20201029 18:16:55.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.927" endtime="20201029 18:16:55.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.624" endtime="20201029 18:16:55.929"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.622" endtime="20201029 18:16:55.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:55.934" level="INFO">${RESULT} = [{'diff': 0.00010519399999999943}, {'diff': 0.00010563899999999765}, {'diff': 0.00010579200000000039}, {'diff': 0.00010512500000000105}, {'diff': 0.00010495899999999822}, {'diff': 0.000105805999999999...</msg>
<status status="PASS" starttime="20201029 18:16:55.931" endtime="20201029 18:16:55.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:55.939" level="INFO">${ACCURACY} = {'diff': [0.00010519399999999943, 0.00010563899999999765, 0.00010579200000000039, 0.00010512500000000105, 0.00010495899999999822, 0.00010580599999999996, 0.00010579100000000091, 0.00010580500000000048...</msg>
<status status="PASS" starttime="20201029 18:16:55.935" endtime="20201029 18:16:55.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.944" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 18:16:55.943" endtime="20201029 18:16:55.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:55.946" level="INFO">VALUE: [0.00010519399999999943, 0.00010563899999999765, 0.00010579200000000039, 0.00010512500000000105, 0.00010495899999999822, 0.00010580599999999996, 0.00010579100000000091, 0.00010580500000000048, 0.00010495799999999875, 0.00010513900000000062, 0.00010586199999999824, 0.00010513900000000062, 0.00010580599999999996, 0.0001058750000000018, 0.00010547300000000176, 0.0001051810000000028, 0.00010498599999999789, 0.00010494399999999918, 0.00010497199999999832, 0.00010519399999999943, 0.00010491700000000298, 0.00010563900000000112, 0.00010563899999999765, 0.00010561100000000198, 0.00010526400000000075, 0.00010581900000000005, 0.00010529100000000041, 0.00010547200000000229, 0.00010495799999999875, 0.00010513899999999715, 0.00010552700000000109, 0.00010498600000000136, 0.00010498700000000083, 0.00010565199999999775, 0.00010497199999999832, 0.00010581900000000005, 0.00010530499999999998, 0.00010577800000000082, 0.00010579200000000039, 0.00010547199999999882, 0.00010529199999999989, 0.00010563899999999765, 0.00010580599999999996, 0.00010530600000000293, 0.00010529099999999694, 0.00010587499999999833, 0.00010533299999999912, 0.00010530599999999946, 0.00010580599999999996, 0.00010545799999999925]</msg>
<status status="PASS" starttime="20201029 18:16:55.945" endtime="20201029 18:16:55.947"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.940" endtime="20201029 18:16:55.948"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:55.952" endtime="20201029 18:16:55.971"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.950" endtime="20201029 18:16:55.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.949" endtime="20201029 18:16:55.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.587" endtime="20201029 18:16:55.972"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.586" endtime="20201029 18:16:55.972"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:55.982" endtime="20201029 18:16:56.002"></status>
</kw>
<msg timestamp="20201029 18:16:56.002" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:55.980" endtime="20201029 18:16:56.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.004" endtime="20201029 18:16:56.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.006" endtime="20201029 18:16:56.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.977" endtime="20201029 18:16:56.008"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.975" endtime="20201029 18:16:56.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.016" endtime="20201029 18:16:56.304"></status>
</kw>
<msg timestamp="20201029 18:16:56.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.014" endtime="20201029 18:16:56.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022990542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023097236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.308" endtime="20201029 18:16:56.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.317" endtime="20201029 18:16:56.319"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.011" endtime="20201029 18:16:56.320"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.009" endtime="20201029 18:16:56.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.325" level="INFO">${RESULT} = [{'diff': 0.00010669400000000093}, {'diff': 0.00010644400000000068}, {'diff': 0.00010591700000000051}, {'diff': 0.00010630600000000046}, {'diff': 0.00010680599999999749}, {'diff': 0.000106805999999997...</msg>
<status status="PASS" starttime="20201029 18:16:56.321" endtime="20201029 18:16:56.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:56.329" level="INFO">${ACCURACY} = {'diff': [0.00010669400000000093, 0.00010644400000000068, 0.00010591700000000051, 0.00010630600000000046, 0.00010680599999999749, 0.00010680599999999749, 0.00010631900000000055, 0.00010595799999999975...</msg>
<status status="PASS" starttime="20201029 18:16:56.326" endtime="20201029 18:16:56.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.334" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 18:16:56.333" endtime="20201029 18:16:56.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.337" level="INFO">VALUE: [0.00010669400000000093, 0.00010644400000000068, 0.00010591700000000051, 0.00010630600000000046, 0.00010680599999999749, 0.00010680599999999749, 0.00010631900000000055, 0.00010595799999999975, 0.00010663899999999865, 0.00010681899999999758, 0.00010630600000000046, 0.00010644400000000068, 0.00010680599999999749, 0.0001067499999999992, 0.00010597299999999879, 0.00010680599999999749, 0.00010663800000000265, 0.00010645800000000025, 0.00010663899999999865, 0.00010648599999999939, 0.00010594400000000018, 0.00010613900000000162, 0.00010595899999999922, 0.00010598700000000183, 0.00010629199999999742, 0.00010645800000000025, 0.00010647199999999982, 0.00010679099999999844, 0.00010663900000000212, 0.00010679200000000139, 0.00010663899999999865, 0.00010647199999999982, 0.00010595899999999922, 0.00010612500000000205, 0.00010679199999999792, 0.00010648599999999939, 0.00010613900000000162, 0.00010612500000000205, 0.00010615299999999772, 0.00010666700000000126, 0.00010662500000000255, 0.00010663900000000212, 0.00010645899999999972, 0.00010680499999999801, 0.00010645800000000025, 0.00010648599999999939, 0.00010680500000000148, 0.00010630600000000046, 0.00010665299999999822, 0.00010630600000000046]</msg>
<status status="PASS" starttime="20201029 18:16:56.335" endtime="20201029 18:16:56.337"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.330" endtime="20201029 18:16:56.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.342" endtime="20201029 18:16:56.361"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.340" endtime="20201029 18:16:56.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.339" endtime="20201029 18:16:56.362"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.973" endtime="20201029 18:16:56.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:55.973" endtime="20201029 18:16:56.363"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.372" endtime="20201029 18:16:56.392"></status>
</kw>
<msg timestamp="20201029 18:16:56.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.370" endtime="20201029 18:16:56.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.394" endtime="20201029 18:16:56.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.396" endtime="20201029 18:16:56.398"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.367" endtime="20201029 18:16:56.399"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.365" endtime="20201029 18:16:56.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.406" endtime="20201029 18:16:56.691"></status>
</kw>
<msg timestamp="20201029 18:16:56.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023781986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.404" endtime="20201029 18:16:56.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023674778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023781986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.696" endtime="20201029 18:16:56.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.704" endtime="20201029 18:16:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.401" endtime="20201029 18:16:56.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.400" endtime="20201029 18:16:56.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:56.711" level="INFO">${RESULT} = [{'diff': 0.000107208000000001}, {'diff': 0.00010745799999999778}, {'diff': 0.00010779199999999892}, {'diff': 0.00010709700000000044}, {'diff': 0.00010733300000000112}, {'diff': 0.00010763899999999965...</msg>
<status status="PASS" starttime="20201029 18:16:56.707" endtime="20201029 18:16:56.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:56.715" level="INFO">${ACCURACY} = {'diff': [0.000107208000000001, 0.00010745799999999778, 0.00010779199999999892, 0.00010709700000000044, 0.00010733300000000112, 0.00010763899999999965, 0.00010730500000000198, 0.00010762500000000008, ...</msg>
<status status="PASS" starttime="20201029 18:16:56.712" endtime="20201029 18:16:56.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.720" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 18:16:56.718" endtime="20201029 18:16:56.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.722" level="INFO">VALUE: [0.000107208000000001, 0.00010745799999999778, 0.00010779199999999892, 0.00010709700000000044, 0.00010733300000000112, 0.00010763899999999965, 0.00010730500000000198, 0.00010762500000000008, 0.00010705500000000173, 0.00010762500000000008, 0.00010777799999999935, 0.00010773600000000064, 0.00010729199999999842, 0.00010712499999999958, 0.00010762500000000008, 0.00010697300000000326, 0.00010779099999999944, 0.00010766699999999879, 0.00010781899999999858, 0.00010697200000000032, 0.00010698599999999989, 0.00010727800000000232, 0.00010754099999999919, 0.00010780599999999849, 0.00010747300000000029, 0.00010780500000000248, 0.00010779099999999944, 0.00010713899999999915, 0.00010727799999999885, 0.00010747200000000082, 0.00010781900000000205, 0.00010761100000000051, 0.00010709700000000044, 0.00010763899999999965, 0.00010713900000000262, 0.00010730500000000198, 0.00010747200000000082, 0.00010702800000000207, 0.00010691700000000151, 0.0001078479999999972, 0.00010780599999999849, 0.00010697299999999979, 0.0001068889999999989, 0.00010730499999999851, 0.00010712500000000305, 0.00010763899999999965, 0.00010751399999999953, 0.00010697200000000032, 0.00010730600000000146, 0.00010766699999999879]</msg>
<status status="PASS" starttime="20201029 18:16:56.721" endtime="20201029 18:16:56.724"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.716" endtime="20201029 18:16:56.724"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:56.728" endtime="20201029 18:16:56.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.727" endtime="20201029 18:16:56.748"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.725" endtime="20201029 18:16:56.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.364" endtime="20201029 18:16:56.749"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.363" endtime="20201029 18:16:56.749"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.758" endtime="20201029 18:16:56.778"></status>
</kw>
<msg timestamp="20201029 18:16:56.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.757" endtime="20201029 18:16:56.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:56.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:56.780" endtime="20201029 18:16:56.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.783" endtime="20201029 18:16:56.784"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.754" endtime="20201029 18:16:56.785"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.752" endtime="20201029 18:16:56.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:56.792" endtime="20201029 18:16:57.079"></status>
</kw>
<msg timestamp="20201029 18:16:57.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:56.791" endtime="20201029 18:16:57.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022731847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022840208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.083" endtime="20201029 18:16:57.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.091" endtime="20201029 18:16:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.788" endtime="20201029 18:16:57.093"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.786" endtime="20201029 18:16:57.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.098" level="INFO">${RESULT} = [{'diff': 0.00010836100000000126}, {'diff': 0.00010829099999999994}, {'diff': 0.00010809700000000144}, {'diff': 0.00010877800000000035}, {'diff': 0.00010843099999999911}, {'diff': 0.000107945000000001...</msg>
<status status="PASS" starttime="20201029 18:16:57.095" endtime="20201029 18:16:57.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.103" level="INFO">${ACCURACY} = {'diff': [0.00010836100000000126, 0.00010829099999999994, 0.00010809700000000144, 0.00010877800000000035, 0.00010843099999999911, 0.00010794500000000165, 0.00010845900000000172, 0.00010862500000000108...</msg>
<status status="PASS" starttime="20201029 18:16:57.099" endtime="20201029 18:16:57.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.108" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.107" endtime="20201029 18:16:57.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.110" level="INFO">VALUE: [0.00010836100000000126, 0.00010829099999999994, 0.00010809700000000144, 0.00010877800000000035, 0.00010843099999999911, 0.00010794500000000165, 0.00010845900000000172, 0.00010862500000000108, 0.00010879199999999992, 0.00010830499999999951, 0.00010861099999999804, 0.00010797200000000132, 0.00010848599999999792, 0.00010811100000000101, 0.00010812500000000058, 0.00010815299999999972, 0.00010813900000000015, 0.00010830599999999899, 0.00010795800000000175, 0.00010847200000000182, 0.00010847200000000182, 0.00010880500000000001, 0.00010832000000000203, 0.00010813900000000015, 0.00010797200000000132, 0.00010880600000000296, 0.00010847299999999782, 0.00010850000000000096, 0.00010883299999999915, 0.00010800000000000046, 0.00010797199999999785, 0.00010813900000000015, 0.00010848600000000139, 0.00010816699999999929, 0.00010813900000000015, 0.00010863900000000065, 0.00010800000000000046, 0.00010877700000000087, 0.00010865300000000022, 0.00010812500000000058, 0.00010795799999999828, 0.00010879199999999992, 0.00010844499999999868, 0.00010797300000000079, 0.00010880599999999949, 0.00010879199999999992, 0.00010847200000000182, 0.00010879100000000044, 0.00010812500000000058, 0.0001085829999999989]</msg>
<status status="PASS" starttime="20201029 18:16:57.109" endtime="20201029 18:16:57.111"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.104" endtime="20201029 18:16:57.112"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.116" endtime="20201029 18:16:57.135"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.114" endtime="20201029 18:16:57.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.113" endtime="20201029 18:16:57.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.750" endtime="20201029 18:16:57.136"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:56.749" endtime="20201029 18:16:57.136"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.145" endtime="20201029 18:16:57.165"></status>
</kw>
<msg timestamp="20201029 18:16:57.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.144" endtime="20201029 18:16:57.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.167" endtime="20201029 18:16:57.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.169" endtime="20201029 18:16:57.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.141" endtime="20201029 18:16:57.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.139" endtime="20201029 18:16:57.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.179" endtime="20201029 18:16:57.466"></status>
</kw>
<msg timestamp="20201029 18:16:57.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.177" endtime="20201029 18:16:57.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.470" endtime="20201029 18:16:57.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.478" endtime="20201029 18:16:57.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.174" endtime="20201029 18:16:57.481"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.173" endtime="20201029 18:16:57.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.485" level="INFO">${RESULT} = [{'diff': 0.00010919399999999996}, {'diff': 0.00010929200000000042}, {'diff': 0.00010895799999999928}, {'diff': 0.00010947299999999882}, {'diff': 0.00010965300000000122}, {'diff': 0.000109665999999997...</msg>
<status status="PASS" starttime="20201029 18:16:57.482" endtime="20201029 18:16:57.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.489" level="INFO">${ACCURACY} = {'diff': [0.00010919399999999996, 0.00010929200000000042, 0.00010895799999999928, 0.00010947299999999882, 0.00010965300000000122, 0.00010966599999999785, 0.00010916600000000082, 0.00010895799999999928...</msg>
<status status="PASS" starttime="20201029 18:16:57.486" endtime="20201029 18:16:57.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.494" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.493" endtime="20201029 18:16:57.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.497" level="INFO">VALUE: [0.00010919399999999996, 0.00010929200000000042, 0.00010895799999999928, 0.00010947299999999882, 0.00010965300000000122, 0.00010966599999999785, 0.00010916600000000082, 0.00010895799999999928, 0.00010979200000000092, 0.00010988800000000243, 0.00010963900000000165, 0.00010915300000000072, 0.00010941700000000054, 0.00010913900000000115, 0.00010980600000000049, 0.00010948599999999892, 0.00010947200000000282, 0.00010930500000000051, 0.00010981900000000058, 0.00010894399999999971, 0.00010913900000000115, 0.00010913900000000115, 0.00010915299999999725, 0.00010958399999999938, 0.00010895799999999928, 0.00010965299999999775, 0.00010973599999999917, 0.00010980499999999754, 0.00010948600000000239, 0.00010965299999999775, 0.00010963900000000165, 0.00010897300000000179, 0.00010980499999999754, 0.00010931900000000008, 0.00010897199999999885, 0.00010984699999999972, 0.00010895799999999928, 0.00010909700000000244, 0.00010945799999999978, 0.00010945799999999978, 0.00010958399999999938, 0.00010980600000000049, 0.00010912500000000158, 0.00010962499999999861, 0.00010909700000000244, 0.00010895799999999928, 0.00010980500000000101, 0.00010982000000000006, 0.00010980599999999702, 0.00010931999999999956]</msg>
<status status="PASS" starttime="20201029 18:16:57.495" endtime="20201029 18:16:57.497"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.490" endtime="20201029 18:16:57.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.502" endtime="20201029 18:16:57.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.500" endtime="20201029 18:16:57.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.499" endtime="20201029 18:16:57.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.137" endtime="20201029 18:16:57.523"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.137" endtime="20201029 18:16:57.523"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.532" endtime="20201029 18:16:57.553"></status>
</kw>
<msg timestamp="20201029 18:16:57.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.530" endtime="20201029 18:16:57.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.555" endtime="20201029 18:16:57.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.557" endtime="20201029 18:16:57.559"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.528" endtime="20201029 18:16:57.560"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.526" endtime="20201029 18:16:57.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.567" endtime="20201029 18:16:57.854"></status>
</kw>
<msg timestamp="20201029 18:16:57.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.565" endtime="20201029 18:16:57.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024148444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.859" endtime="20201029 18:16:57.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.867" endtime="20201029 18:16:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.563" endtime="20201029 18:16:57.869"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.561" endtime="20201029 18:16:57.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:57.874" level="INFO">${RESULT} = [{'diff': 0.00011070800000000103}, {'diff': 0.00011081899999999811}, {'diff': 0.00011030500000000151}, {'diff': 0.00011045800000000078}, {'diff': 0.00011049999999999949}, {'diff': 0.000110624999999999...</msg>
<status status="PASS" starttime="20201029 18:16:57.871" endtime="20201029 18:16:57.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:57.878" level="INFO">${ACCURACY} = {'diff': [0.00011070800000000103, 0.00011081899999999811, 0.00011030500000000151, 0.00011045800000000078, 0.00011049999999999949, 0.00011062499999999961, 0.00011030599999999752, 0.00011047199999999688...</msg>
<status status="PASS" starttime="20201029 18:16:57.875" endtime="20201029 18:16:57.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.883" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 18:16:57.882" endtime="20201029 18:16:57.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.885" level="INFO">VALUE: [0.00011070800000000103, 0.00011081899999999811, 0.00011030500000000151, 0.00011045800000000078, 0.00011049999999999949, 0.00011062499999999961, 0.00011030599999999752, 0.00011047199999999688, 0.00011029200000000142, 0.00011013899999999868, 0.00011045800000000078, 0.00011015299999999825, 0.00011080499999999854, 0.00011051399999999906, 0.00011036199999999927, 0.00011065300000000222, 0.0001105700000000008, 0.00010995899999999975, 0.00010997300000000279, 0.00011063799999999971, 0.00011042999999999817, 0.00011013900000000215, 0.00011047299999999982, 0.00011024999999999924, 0.00011063899999999918, 0.00011065299999999875, 0.00011083400000000063, 0.00011079199999999845, 0.00011079100000000244, 0.00010998599999999942, 0.00010997199999999985, 0.00011048599999999992, 0.00011027799999999838, 0.00011063899999999918, 0.00011080600000000149, 0.00011032000000000056, 0.00011063899999999918, 0.00011080600000000149, 0.00010995800000000028, 0.00011051399999999906, 0.00011027800000000185, 0.00010994400000000071, 0.00010995800000000028, 0.00011045800000000078, 0.00011080600000000149, 0.00011030600000000099, 0.00011045900000000025, 0.00011013800000000268, 0.00011045800000000078, 0.00011080500000000201]</msg>
<status status="PASS" starttime="20201029 18:16:57.884" endtime="20201029 18:16:57.887"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.879" endtime="20201029 18:16:57.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:57.891" endtime="20201029 18:16:57.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.890" endtime="20201029 18:16:57.911"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.889" endtime="20201029 18:16:57.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.524" endtime="20201029 18:16:57.912"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.523" endtime="20201029 18:16:57.912"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.921" endtime="20201029 18:16:57.942"></status>
</kw>
<msg timestamp="20201029 18:16:57.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.920" endtime="20201029 18:16:57.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:57.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:57.943" endtime="20201029 18:16:57.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.946" endtime="20201029 18:16:57.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.917" endtime="20201029 18:16:57.948"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.915" endtime="20201029 18:16:57.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:57.955" endtime="20201029 18:16:58.241"></status>
</kw>
<msg timestamp="20201029 18:16:58.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:57.954" endtime="20201029 18:16:58.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022898903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.245" endtime="20201029 18:16:58.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.253" endtime="20201029 18:16:58.255"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.951" endtime="20201029 18:16:58.256"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.949" endtime="20201029 18:16:58.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.260" level="INFO">${RESULT} = [{'diff': 0.00011104200000000217}, {'diff': 0.00011163900000000018}, {'diff': 0.00011180599999999902}, {'diff': 0.00011095800000000128}, {'diff': 0.00011186100000000129}, {'diff': 0.000111471999999997...</msg>
<status status="PASS" starttime="20201029 18:16:58.257" endtime="20201029 18:16:58.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.265" level="INFO">${ACCURACY} = {'diff': [0.00011104200000000217, 0.00011163900000000018, 0.00011180599999999902, 0.00011095800000000128, 0.00011186100000000129, 0.00011147199999999788, 0.00011180500000000301, 0.0001113480000000007,...</msg>
<status status="PASS" starttime="20201029 18:16:58.261" endtime="20201029 18:16:58.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.270" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.269" endtime="20201029 18:16:58.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.272" level="INFO">VALUE: [0.00011104200000000217, 0.00011163900000000018, 0.00011180599999999902, 0.00011095800000000128, 0.00011186100000000129, 0.00011147199999999788, 0.00011180500000000301, 0.0001113480000000007, 0.00011112500000000011, 0.00011113899999999968, 0.00011112500000000011, 0.00011131899999999861, 0.00011095800000000128, 0.00011180499999999954, 0.00011095800000000128, 0.00011163900000000018, 0.00011148599999999745, 0.00011163900000000018, 0.00011148600000000092, 0.00011163900000000018, 0.00011130500000000251, 0.00011130500000000251, 0.00011165299999999975, 0.00011134700000000122, 0.00011180499999999954, 0.00011097200000000085, 0.00011120800000000153, 0.00011148600000000092, 0.00011112500000000011, 0.00011186099999999782, 0.00011169399999999899, 0.00011180499999999954, 0.00011145800000000178, 0.00011165299999999975, 0.00011148600000000092, 0.00011145799999999831, 0.00011130599999999852, 0.00011180599999999902, 0.00011147300000000082, 0.00011099999999999999, 0.00011113899999999968, 0.00011129100000000294, 0.00011093099999999814, 0.00011147199999999788, 0.00011112500000000011, 0.00011113899999999968, 0.00011188900000000043, 0.00011161100000000104, 0.00011095900000000075, 0.00011099999999999999]</msg>
<status status="PASS" starttime="20201029 18:16:58.271" endtime="20201029 18:16:58.273"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.266" endtime="20201029 18:16:58.274"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.278" endtime="20201029 18:16:58.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.276" endtime="20201029 18:16:58.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.275" endtime="20201029 18:16:58.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.913" endtime="20201029 18:16:58.298"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:57.913" endtime="20201029 18:16:58.298"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.308" endtime="20201029 18:16:58.327"></status>
</kw>
<msg timestamp="20201029 18:16:58.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.306" endtime="20201029 18:16:58.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.329" endtime="20201029 18:16:58.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.331" endtime="20201029 18:16:58.333"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.303" endtime="20201029 18:16:58.334"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.301" endtime="20201029 18:16:58.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.341" endtime="20201029 18:16:58.628"></status>
</kw>
<msg timestamp="20201029 18:16:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.339" endtime="20201029 18:16:58.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022684528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022796764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.633" endtime="20201029 18:16:58.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.641" endtime="20201029 18:16:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.337" endtime="20201029 18:16:58.643"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.335" endtime="20201029 18:16:58.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:58.648" level="INFO">${RESULT} = [{'diff': 0.00011223600000000167}, {'diff': 0.00011231999999999909}, {'diff': 0.00011261099999999857}, {'diff': 0.00011247299999999835}, {'diff': 0.00011262500000000161}, {'diff': 0.000112819000000000...</msg>
<status status="PASS" starttime="20201029 18:16:58.645" endtime="20201029 18:16:58.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:58.652" level="INFO">${ACCURACY} = {'diff': [0.00011223600000000167, 0.00011231999999999909, 0.00011261099999999857, 0.00011247299999999835, 0.00011262500000000161, 0.00011281900000000011, 0.00011280500000000054, 0.00011281900000000011...</msg>
<status status="PASS" starttime="20201029 18:16:58.649" endtime="20201029 18:16:58.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.657" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 18:16:58.656" endtime="20201029 18:16:58.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.659" level="INFO">VALUE: [0.00011223600000000167, 0.00011231999999999909, 0.00011261099999999857, 0.00011247299999999835, 0.00011262500000000161, 0.00011281900000000011, 0.00011280500000000054, 0.00011281900000000011, 0.00011192999999999967, 0.00011198599999999795, 0.00011197199999999838, 0.00011195799999999881, 0.00011274999999999827, 0.00011202800000000013, 0.00011279199999999698, 0.00011234699999999875, 0.00011244400000000321, 0.00011198600000000142, 0.00011263899999999771, 0.00011281999999999959, 0.00011197199999999838, 0.00011229199999999995, 0.00011208399999999841, 0.00011247300000000182, 0.00011269499999999946, 0.00011263900000000118, 0.00011197200000000185, 0.00011241700000000007, 0.00011281999999999959, 0.00011238900000000093, 0.00011197200000000185, 0.00011263900000000118, 0.00011247299999999835, 0.00011230500000000004, 0.00011230500000000004, 0.00011247199999999888, 0.00011197200000000185, 0.00011280600000000002, 0.00011193099999999914, 0.00011248600000000192, 0.00011213900000000068, 0.00011248599999999845, 0.00011213800000000121, 0.00011280500000000054, 0.00011197199999999838, 0.00011230500000000004, 0.00011230600000000299, 0.00011280600000000002, 0.00011241700000000007, 0.00011226400000000081]</msg>
<status status="PASS" starttime="20201029 18:16:58.658" endtime="20201029 18:16:58.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.653" endtime="20201029 18:16:58.661"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:58.665" endtime="20201029 18:16:58.684"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.663" endtime="20201029 18:16:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.662" endtime="20201029 18:16:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.299" endtime="20201029 18:16:58.685"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.299" endtime="20201029 18:16:58.685"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.694" endtime="20201029 18:16:58.716"></status>
</kw>
<msg timestamp="20201029 18:16:58.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.693" endtime="20201029 18:16:58.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:58.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:58.717" endtime="20201029 18:16:58.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.720" endtime="20201029 18:16:58.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.690" endtime="20201029 18:16:58.722"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.688" endtime="20201029 18:16:58.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:58.729" endtime="20201029 18:16:59.016"></status>
</kw>
<msg timestamp="20201029 18:16:59.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023700333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:58.728" endtime="20201029 18:16:59.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023587139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023700333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.020" endtime="20201029 18:16:59.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.028" endtime="20201029 18:16:59.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.725" endtime="20201029 18:16:59.031"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.723" endtime="20201029 18:16:59.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.039" level="INFO">${RESULT} = [{'diff': 0.00011319400000000049}, {'diff': 0.00011312500000000211}, {'diff': 0.00011366699999999785}, {'diff': 0.00011363899999999871}, {'diff': 0.00011330600000000052}, {'diff': 0.000113124999999998...</msg>
<status status="PASS" starttime="20201029 18:16:59.036" endtime="20201029 18:16:59.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.045" level="INFO">${ACCURACY} = {'diff': [0.00011319400000000049, 0.00011312500000000211, 0.00011366699999999785, 0.00011363899999999871, 0.00011330600000000052, 0.00011312499999999864, 0.00011315300000000125, 0.00011295900000000275...</msg>
<status status="PASS" starttime="20201029 18:16:59.040" endtime="20201029 18:16:59.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.052" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.050" endtime="20201029 18:16:59.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.056" level="INFO">VALUE: [0.00011319400000000049, 0.00011312500000000211, 0.00011366699999999785, 0.00011363899999999871, 0.00011330600000000052, 0.00011312499999999864, 0.00011315300000000125, 0.00011295900000000275, 0.00011293100000000014, 0.0001137909999999985, 0.00011362499999999914, 0.00011362500000000261, 0.00011299999999999852, 0.00011362499999999914, 0.00011312499999999864, 0.00011345899999999978, 0.00011344500000000021, 0.00011347199999999988, 0.00011313899999999821, 0.000113290999999998, 0.00011363899999999871, 0.00011329200000000095, 0.00011380600000000102, 0.00011336099999999932, 0.00011363899999999871, 0.00011365200000000228, 0.000113290999999998, 0.00011297199999999938, 0.00011298599999999895, 0.00011297199999999938, 0.00011332000000000009, 0.00011330600000000052, 0.00011380600000000102, 0.00011329200000000095, 0.00011326299999999886, 0.00011330499999999757, 0.00011330499999999757, 0.00011315300000000125, 0.00011379199999999798, 0.00011316700000000082, 0.00011351400000000206, 0.00011387500000000286, 0.00011363899999999871, 0.00011313900000000168, 0.00011347199999999988, 0.00011331899999999714, 0.00011313899999999821, 0.00011298599999999895, 0.00011366699999999785, 0.00011319400000000049]</msg>
<status status="PASS" starttime="20201029 18:16:59.054" endtime="20201029 18:16:59.063"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.046" endtime="20201029 18:16:59.064"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.068" endtime="20201029 18:16:59.087"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.066" endtime="20201029 18:16:59.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.065" endtime="20201029 18:16:59.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.686" endtime="20201029 18:16:59.088"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:58.686" endtime="20201029 18:16:59.088"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.097" endtime="20201029 18:16:59.118"></status>
</kw>
<msg timestamp="20201029 18:16:59.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.096" endtime="20201029 18:16:59.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.120" endtime="20201029 18:16:59.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.122" endtime="20201029 18:16:59.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.093" endtime="20201029 18:16:59.124"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.091" endtime="20201029 18:16:59.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.131" endtime="20201029 18:16:59.424"></status>
</kw>
<msg timestamp="20201029 18:16:59.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02288175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:59.130" endtime="20201029 18:16:59.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022766861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02288175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:16:59.428" endtime="20201029 18:16:59.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.436" endtime="20201029 18:16:59.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.127" endtime="20201029 18:16:59.438"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.125" endtime="20201029 18:16:59.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.443" level="INFO">${RESULT} = [{'diff': 0.00011488899999999996}, {'diff': 0.00011463899999999971}, {'diff': 0.00011480600000000202}, {'diff': 0.00011479200000000245}, {'diff': 0.00011432000000000109}, {'diff': 0.000114374999999999...</msg>
<status status="PASS" starttime="20201029 18:16:59.439" endtime="20201029 18:16:59.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.448" level="INFO">${ACCURACY} = {'diff': [0.00011488899999999996, 0.00011463899999999971, 0.00011480600000000202, 0.00011479200000000245, 0.00011432000000000109, 0.0001143749999999999, 0.00011483299999999821, 0.00011451399999999959,...</msg>
<status status="PASS" starttime="20201029 18:16:59.444" endtime="20201029 18:16:59.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.452" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.451" endtime="20201029 18:16:59.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.455" level="INFO">VALUE: [0.00011488899999999996, 0.00011463899999999971, 0.00011480600000000202, 0.00011479200000000245, 0.00011432000000000109, 0.0001143749999999999, 0.00011483299999999821, 0.00011451399999999959, 0.00011445800000000131, 0.00011463899999999971, 0.00011448599999999698, 0.00011397200000000038, 0.00011462500000000014, 0.00011430599999999805, 0.00011480600000000202, 0.00011401399999999909, 0.00011447199999999741, 0.00011390299999999853, 0.00011447200000000088, 0.00011434800000000023, 0.00011482000000000159, 0.00011461100000000057, 0.00011480599999999855, 0.00011463800000000024, 0.00011447200000000088, 0.00011431899999999814, 0.00011395800000000081, 0.00011463899999999971, 0.00011448600000000045, 0.00011415299999999878, 0.00011397299999999985, 0.00011415200000000278, 0.00011395800000000081, 0.00011468100000000189, 0.00011430499999999857, 0.00011465299999999928, 0.00011463900000000318, 0.00011463899999999971, 0.00011397299999999985, 0.00011447300000000035, 0.00011483299999999821, 0.00011408300000000093, 0.00011413899999999921, 0.00011444399999999827, 0.00011469500000000146, 0.00011416699999999835, 0.00011445800000000131, 0.00011397299999999985, 0.00011412499999999964, 0.00011388899999999896]</msg>
<status status="PASS" starttime="20201029 18:16:59.453" endtime="20201029 18:16:59.455"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.448" endtime="20201029 18:16:59.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.460" endtime="20201029 18:16:59.479"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.458" endtime="20201029 18:16:59.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.457" endtime="20201029 18:16:59.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.089" endtime="20201029 18:16:59.480"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.089" endtime="20201029 18:16:59.480"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.489" endtime="20201029 18:16:59.510"></status>
</kw>
<msg timestamp="20201029 18:16:59.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.488" endtime="20201029 18:16:59.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.514" endtime="20201029 18:16:59.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.519" endtime="20201029 18:16:59.522"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.485" endtime="20201029 18:16:59.524"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.483" endtime="20201029 18:16:59.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.538" endtime="20201029 18:16:59.834"></status>
</kw>
<msg timestamp="20201029 18:16:59.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.535" endtime="20201029 18:16:59.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022422514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022537889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.838" endtime="20201029 18:16:59.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.846" endtime="20201029 18:16:59.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.529" endtime="20201029 18:16:59.848"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.526" endtime="20201029 18:16:59.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:16:59.853" level="INFO">${RESULT} = [{'diff': 0.00011537499999999742}, {'diff': 0.00011497200000000138}, {'diff': 0.00011498700000000042}, {'diff': 0.00011515200000000031}, {'diff': 0.00011497200000000138}, {'diff': 0.000115027999999999...</msg>
<status status="PASS" starttime="20201029 18:16:59.849" endtime="20201029 18:16:59.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:16:59.857" level="INFO">${ACCURACY} = {'diff': [0.00011537499999999742, 0.00011497200000000138, 0.00011498700000000042, 0.00011515200000000031, 0.00011497200000000138, 0.00011502799999999966, 0.00011547200000000188, 0.00011518099999999892...</msg>
<status status="PASS" starttime="20201029 18:16:59.854" endtime="20201029 18:16:59.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.861" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 18:16:59.860" endtime="20201029 18:16:59.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.864" level="INFO">VALUE: [0.00011537499999999742, 0.00011497200000000138, 0.00011498700000000042, 0.00011515200000000031, 0.00011497200000000138, 0.00011502799999999966, 0.00011547200000000188, 0.00011518099999999892, 0.00011497200000000138, 0.00011545799999999884, 0.00011515299999999978, 0.00011548700000000092, 0.00011547300000000135, 0.00011583300000000268, 0.00011512500000000064, 0.00011497200000000138, 0.00011530499999999957, 0.00011581999999999912, 0.00011563900000000071, 0.00011563899999999724, 0.00011531999999999862, 0.00011563900000000071, 0.00011513900000000021, 0.00011540200000000056, 0.00011565300000000028, 0.00011548599999999798, 0.00011529199999999948, 0.00011573599999999823, 0.00011579199999999998, 0.00011561100000000157, 0.00011488899999999996, 0.00011562500000000114, 0.00011565300000000028, 0.00011580500000000007, 0.0001150970000000015, 0.00011532000000000209, 0.00011579199999999998, 0.00011513900000000021, 0.00011545900000000178, 0.00011513800000000074, 0.00011565300000000028, 0.00011530499999999957, 0.00011531900000000261, 0.00011583299999999921, 0.00011563899999999724, 0.00011508400000000141, 0.00011513900000000021, 0.00011580599999999955, 0.00011513900000000021, 0.00011570899999999856]</msg>
<status status="PASS" starttime="20201029 18:16:59.862" endtime="20201029 18:16:59.864"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.857" endtime="20201029 18:16:59.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:16:59.869" endtime="20201029 18:16:59.888"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.867" endtime="20201029 18:16:59.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.866" endtime="20201029 18:16:59.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.481" endtime="20201029 18:16:59.889"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.481" endtime="20201029 18:16:59.889"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.898" endtime="20201029 18:16:59.919"></status>
</kw>
<msg timestamp="20201029 18:16:59.920" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.897" endtime="20201029 18:16:59.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:16:59.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:16:59.921" endtime="20201029 18:16:59.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.923" endtime="20201029 18:16:59.925"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.894" endtime="20201029 18:16:59.926"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.892" endtime="20201029 18:16:59.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:16:59.933" endtime="20201029 18:17:00.219"></status>
</kw>
<msg timestamp="20201029 18:17:00.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:16:59.931" endtime="20201029 18:17:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023670764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023787667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.223" endtime="20201029 18:17:00.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.231" endtime="20201029 18:17:00.233"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.928" endtime="20201029 18:17:00.234"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.927" endtime="20201029 18:17:00.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.238" level="INFO">${RESULT} = [{'diff': 0.00011690299999999806}, {'diff': 0.00011612499999999817}, {'diff': 0.00011649999999999855}, {'diff': 0.00011663899999999824}, {'diff': 0.00011597299999999838}, {'diff': 0.000116403000000001...</msg>
<status status="PASS" starttime="20201029 18:17:00.235" endtime="20201029 18:17:00.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:00.242" level="INFO">${ACCURACY} = {'diff': [0.00011690299999999806, 0.00011612499999999817, 0.00011649999999999855, 0.00011663899999999824, 0.00011597299999999838, 0.00011640300000000103, 0.00011612499999999817, 0.00011668100000000042...</msg>
<status status="PASS" starttime="20201029 18:17:00.239" endtime="20201029 18:17:00.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.247" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 18:17:00.246" endtime="20201029 18:17:00.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.249" level="INFO">VALUE: [0.00011690299999999806, 0.00011612499999999817, 0.00011649999999999855, 0.00011663899999999824, 0.00011597299999999838, 0.00011640300000000103, 0.00011612499999999817, 0.00011668100000000042, 0.00011590300000000053, 0.00011679200000000098, 0.00011630600000000005, 0.00011613899999999774, 0.00011682000000000012, 0.00011630600000000005, 0.000116291000000001, 0.0001164300000000007, 0.00011598600000000195, 0.00011681900000000064, 0.00011620799999999959, 0.00011630600000000005, 0.00011644499999999974, 0.00011648700000000192, 0.00011648599999999898, 0.00011615199999999784, 0.00011662499999999867, 0.00011677800000000141, 0.00011683300000000021, 0.00011637499999999842, 0.00011630600000000005, 0.00011629199999999701, 0.00011649999999999855, 0.00011680500000000107, 0.00011595799999999934, 0.00011661100000000257, 0.00011645799999999984, 0.00011662500000000214, 0.00011615299999999731, 0.00011630600000000005, 0.00011680600000000055, 0.00011680600000000055, 0.00011681900000000064, 0.00011630500000000057, 0.000116291000000001, 0.00011663900000000171, 0.00011665300000000128, 0.00011645799999999984, 0.00011598600000000195, 0.00011611100000000207, 0.00011648599999999898, 0.00011638800000000199]</msg>
<status status="PASS" starttime="20201029 18:17:00.248" endtime="20201029 18:17:00.251"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.243" endtime="20201029 18:17:00.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.255" endtime="20201029 18:17:00.274"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.253" endtime="20201029 18:17:00.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.252" endtime="20201029 18:17:00.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.890" endtime="20201029 18:17:00.275"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:59.890" endtime="20201029 18:17:00.276"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.284" endtime="20201029 18:17:00.304"></status>
</kw>
<msg timestamp="20201029 18:17:00.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.283" endtime="20201029 18:17:00.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.306" endtime="20201029 18:17:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.308" endtime="20201029 18:17:00.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.280" endtime="20201029 18:17:00.310"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.278" endtime="20201029 18:17:00.311"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.317" endtime="20201029 18:17:00.604"></status>
</kw>
<msg timestamp="20201029 18:17:00.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.316" endtime="20201029 18:17:00.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022191944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022309819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.608" endtime="20201029 18:17:00.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.616" endtime="20201029 18:17:00.617"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.313" endtime="20201029 18:17:00.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.311" endtime="20201029 18:17:00.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:00.622" level="INFO">${RESULT} = [{'diff': 0.00011787499999999992}, {'diff': 0.00011772200000000066}, {'diff': 0.00011719500000000049}, {'diff': 0.00011720900000000006}, {'diff': 0.0001176110000000001}, {'diff': 0.0001173059999999975...</msg>
<status status="PASS" starttime="20201029 18:17:00.619" endtime="20201029 18:17:00.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:00.627" level="INFO">${ACCURACY} = {'diff': [0.00011787499999999992, 0.00011772200000000066, 0.00011719500000000049, 0.00011720900000000006, 0.0001176110000000001, 0.00011730599999999758, 0.00011698599999999948, 0.00011730600000000105,...</msg>
<status status="PASS" starttime="20201029 18:17:00.623" endtime="20201029 18:17:00.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.632" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 18:17:00.631" endtime="20201029 18:17:00.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.634" level="INFO">VALUE: [0.00011787499999999992, 0.00011772200000000066, 0.00011719500000000049, 0.00011720900000000006, 0.0001176110000000001, 0.00011730599999999758, 0.00011698599999999948, 0.00011730600000000105, 0.00011729199999999801, 0.00011779199999999851, 0.0001169300000000012, 0.0001170690000000009, 0.00011698600000000295, 0.00011759700000000053, 0.00011694500000000024, 0.00011745900000000031, 0.00011698699999999895, 0.00011763899999999924, 0.00011695800000000034, 0.00011697199999999991, 0.00011697199999999991, 0.00011763899999999924, 0.00011762499999999967, 0.00011690299999999806, 0.00011698599999999948, 0.00011751399999999912, 0.0001169170000000011, 0.00011745800000000084, 0.00011763899999999924, 0.00011729200000000148, 0.00011780600000000155, 0.00011780600000000155, 0.00011715299999999831, 0.00011780599999999808, 0.00011695899999999981, 0.00011730500000000157, 0.00011752799999999869, 0.0001176110000000001, 0.00011765299999999881, 0.00011733400000000019, 0.00011747200000000041, 0.00011782000000000112, 0.00011697299999999938, 0.00011698599999999948, 0.00011779099999999904, 0.00011780500000000207, 0.00011745800000000084, 0.00011733399999999672, 0.00011712499999999917, 0.00011734700000000028]</msg>
<status status="PASS" starttime="20201029 18:17:00.633" endtime="20201029 18:17:00.635"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.628" endtime="20201029 18:17:00.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:00.639" endtime="20201029 18:17:00.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.638" endtime="20201029 18:17:00.659"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.637" endtime="20201029 18:17:00.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.276" endtime="20201029 18:17:00.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.276" endtime="20201029 18:17:00.660"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.669" endtime="20201029 18:17:00.689"></status>
</kw>
<msg timestamp="20201029 18:17:00.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.667" endtime="20201029 18:17:00.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:00.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:00.691" endtime="20201029 18:17:00.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.694" endtime="20201029 18:17:00.695"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.665" endtime="20201029 18:17:00.696"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.663" endtime="20201029 18:17:00.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:00.703" endtime="20201029 18:17:00.990"></status>
</kw>
<msg timestamp="20201029 18:17:00.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.701" endtime="20201029 18:17:00.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022383653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022502514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:00.994" endtime="20201029 18:17:01.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.002" endtime="20201029 18:17:01.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.699" endtime="20201029 18:17:01.004"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.697" endtime="20201029 18:17:01.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.009" level="INFO">${RESULT} = [{'diff': 0.00011886100000000135}, {'diff': 0.0001186249999999972}, {'diff': 0.00011797300000000038}, {'diff': 0.00011802799999999919}, {'diff': 0.00011877700000000047}, {'diff': 0.0001182909999999995...</msg>
<status status="PASS" starttime="20201029 18:17:01.006" endtime="20201029 18:17:01.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:01.013" level="INFO">${ACCURACY} = {'diff': [0.00011886100000000135, 0.0001186249999999972, 0.00011797300000000038, 0.00011802799999999919, 0.00011877700000000047, 0.00011829099999999954, 0.00011862500000000067, 0.00011830600000000205,...</msg>
<status status="PASS" starttime="20201029 18:17:01.010" endtime="20201029 18:17:01.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.018" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 18:17:01.017" endtime="20201029 18:17:01.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.020" level="INFO">VALUE: [0.00011886100000000135, 0.0001186249999999972, 0.00011797300000000038, 0.00011802799999999919, 0.00011877700000000047, 0.00011829099999999954, 0.00011862500000000067, 0.00011830600000000205, 0.00011830599999999858, 0.00011794500000000124, 0.00011868000000000295, 0.00011831900000000214, 0.00011848600000000098, 0.00011795799999999787, 0.00011852799999999969, 0.00011791699999999863, 0.00011845800000000184, 0.0001186110000000011, 0.00011865299999999981, 0.00011859800000000101, 0.00011834700000000128, 0.00011863900000000024, 0.00011847200000000141, 0.0001183049999999991, 0.00011863900000000024, 0.00011829199999999901, 0.00011813899999999974, 0.00011863900000000024, 0.00011879100000000004, 0.00011813800000000027, 0.00011831899999999868, 0.00011795799999999787, 0.00011797200000000091, 0.00011847199999999794, 0.00011845800000000184, 0.00011879199999999951, 0.00011844400000000227, 0.00011866599999999991, 0.00011798599999999701, 0.00011847200000000141, 0.00011845799999999837, 0.0001184439999999988, 0.00011797200000000091, 0.00011862500000000067, 0.00011880599999999908, 0.0001183049999999991, 0.00011798600000000048, 0.00011830500000000257, 0.0001183049999999991, 0.00011877799999999994]</msg>
<status status="PASS" starttime="20201029 18:17:01.019" endtime="20201029 18:17:01.021"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.014" endtime="20201029 18:17:01.021"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.025" endtime="20201029 18:17:01.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.024" endtime="20201029 18:17:01.045"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.022" endtime="20201029 18:17:01.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.661" endtime="20201029 18:17:01.046"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:00.660" endtime="20201029 18:17:01.046"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.055" endtime="20201029 18:17:01.076"></status>
</kw>
<msg timestamp="20201029 18:17:01.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.053" endtime="20201029 18:17:01.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.077" endtime="20201029 18:17:01.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.080" endtime="20201029 18:17:01.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.051" endtime="20201029 18:17:01.082"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.048" endtime="20201029 18:17:01.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.090" endtime="20201029 18:17:01.377"></status>
</kw>
<msg timestamp="20201029 18:17:01.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.088" endtime="20201029 18:17:01.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023152944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023271986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.381" endtime="20201029 18:17:01.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.389" endtime="20201029 18:17:01.391"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.085" endtime="20201029 18:17:01.392"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.084" endtime="20201029 18:17:01.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.397" level="INFO">${RESULT} = [{'diff': 0.00011904199999999976}, {'diff': 0.00011980600000000008}, {'diff': 0.0001191249999999977}, {'diff': 0.00011895900000000181}, {'diff': 0.00011931999999999915}, {'diff': 0.0001191250000000011...</msg>
<status status="PASS" starttime="20201029 18:17:01.393" endtime="20201029 18:17:01.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:01.401" level="INFO">${ACCURACY} = {'diff': [0.00011904199999999976, 0.00011980600000000008, 0.0001191249999999977, 0.00011895900000000181, 0.00011931999999999915, 0.00011912500000000117, 0.0001194439999999998, 0.00011947200000000241, ...</msg>
<status status="PASS" starttime="20201029 18:17:01.398" endtime="20201029 18:17:01.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.406" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 18:17:01.405" endtime="20201029 18:17:01.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.409" level="INFO">VALUE: [0.00011904199999999976, 0.00011980600000000008, 0.0001191249999999977, 0.00011895900000000181, 0.00011931999999999915, 0.00011912500000000117, 0.0001194439999999998, 0.00011947200000000241, 0.0001196249999999982, 0.00011977799999999747, 0.00011947199999999894, 0.00011930599999999958, 0.00011911099999999814, 0.00011913899999999727, 0.00011912500000000117, 0.00011913900000000074, 0.00011947199999999894, 0.00011966700000000038, 0.00011980600000000008, 0.0001196249999999982, 0.00011912500000000117, 0.00011962500000000167, 0.0001196249999999982, 0.00011965199999999787, 0.00011948599999999851, 0.00011913900000000074, 0.00011980600000000008, 0.00011927800000000044, 0.00011905599999999933, 0.00011969400000000005, 0.00011965200000000134, 0.00011977700000000147, 0.00011915300000000031, 0.00011898600000000148, 0.0001198050000000006, 0.00011952799999999722, 0.00011897199999999844, 0.00011897199999999844, 0.00011897300000000138, 0.00011948600000000198, 0.00011981900000000018, 0.00011913900000000074, 0.00011947200000000241, 0.00011915300000000031, 0.00011963900000000124, 0.00011917999999999998, 0.00011947300000000188, 0.00011965200000000134, 0.00011965199999999787, 0.00011949999999999808]</msg>
<status status="PASS" starttime="20201029 18:17:01.407" endtime="20201029 18:17:01.410"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.402" endtime="20201029 18:17:01.411"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.415" endtime="20201029 18:17:01.434"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.413" endtime="20201029 18:17:01.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.412" endtime="20201029 18:17:01.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.047" endtime="20201029 18:17:01.435"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.046" endtime="20201029 18:17:01.435"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.444" endtime="20201029 18:17:01.464"></status>
</kw>
<msg timestamp="20201029 18:17:01.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.443" endtime="20201029 18:17:01.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.466" endtime="20201029 18:17:01.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.469" endtime="20201029 18:17:01.470"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.440" endtime="20201029 18:17:01.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.438" endtime="20201029 18:17:01.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.478" endtime="20201029 18:17:01.762"></status>
</kw>
<msg timestamp="20201029 18:17:01.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.476" endtime="20201029 18:17:01.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022264556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022384917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.766" endtime="20201029 18:17:01.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.775" endtime="20201029 18:17:01.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.474" endtime="20201029 18:17:01.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.472" endtime="20201029 18:17:01.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:01.781" level="INFO">${RESULT} = [{'diff': 0.00012036099999999939}, {'diff': 0.00012013899999999827}, {'diff': 0.00012069400000000105}, {'diff': 0.00012033299999999678}, {'diff': 0.00012079100000000204}, {'diff': 0.000120791000000002...</msg>
<status status="PASS" starttime="20201029 18:17:01.778" endtime="20201029 18:17:01.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:01.786" level="INFO">${ACCURACY} = {'diff': [0.00012036099999999939, 0.00012013899999999827, 0.00012069400000000105, 0.00012033299999999678, 0.00012079100000000204, 0.00012079100000000204, 0.00012047199999999994, 0.00012013900000000174...</msg>
<status status="PASS" starttime="20201029 18:17:01.782" endtime="20201029 18:17:01.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.792" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 18:17:01.790" endtime="20201029 18:17:01.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.796" level="INFO">VALUE: [0.00012036099999999939, 0.00012013899999999827, 0.00012069400000000105, 0.00012033299999999678, 0.00012079100000000204, 0.00012079100000000204, 0.00012047199999999994, 0.00012013900000000174, 0.00012047199999999994, 0.00012079200000000151, 0.00012015200000000184, 0.0001203050000000011, 0.00011998599999999901, 0.00012026400000000187, 0.00011995799999999987, 0.00012080600000000108, 0.00011997199999999944, 0.00012030600000000058, 0.00012029200000000101, 0.0001202630000000024, 0.00012079100000000204, 0.00012047199999999994, 0.00012032000000000015, 0.00012030600000000058, 0.00011997199999999944, 0.00012015300000000131, 0.00011999999999999858, 0.00012047299999999941, 0.00012081900000000118, 0.00012047199999999994, 0.00012063899999999877, 0.00012080600000000108, 0.00012081999999999718, 0.00012063899999999877, 0.00012082000000000065, 0.00012065200000000234, 0.00011995799999999987, 0.00011995799999999987, 0.00012063899999999877, 0.00012015300000000131, 0.00012013900000000174, 0.00012080600000000108, 0.00012048599999999951, 0.00012001400000000162, 0.00012011199999999861, 0.0001201110000000026, 0.00012031900000000068, 0.00012031900000000068, 0.00012063900000000224, 0.00012080599999999761]</msg>
<status status="PASS" starttime="20201029 18:17:01.794" endtime="20201029 18:17:01.797"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.787" endtime="20201029 18:17:01.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:01.804" endtime="20201029 18:17:01.825"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.801" endtime="20201029 18:17:01.826"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.800" endtime="20201029 18:17:01.827"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.436" endtime="20201029 18:17:01.830"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.436" endtime="20201029 18:17:01.830"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.846" endtime="20201029 18:17:01.868"></status>
</kw>
<msg timestamp="20201029 18:17:01.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.844" endtime="20201029 18:17:01.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:01.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:01.870" endtime="20201029 18:17:01.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.873" endtime="20201029 18:17:01.875"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.839" endtime="20201029 18:17:01.876"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.836" endtime="20201029 18:17:01.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:01.883" endtime="20201029 18:17:02.170"></status>
</kw>
<msg timestamp="20201029 18:17:02.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035191556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035312722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:01.881" endtime="20201029 18:17:02.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035191556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035312722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.174" endtime="20201029 18:17:02.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.183" endtime="20201029 18:17:02.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.878" endtime="20201029 18:17:02.185"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.877" endtime="20201029 18:17:02.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.189" level="INFO">${RESULT} = [{'diff': 0.00012116599999999894}, {'diff': 0.00012147199999999747}, {'diff': 0.00012147200000000441}, {'diff': 0.00012163899999999978}, {'diff': 0.00012115299999999884}, {'diff': 0.000121833000000001...</msg>
<status status="PASS" starttime="20201029 18:17:02.186" endtime="20201029 18:17:02.189"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.193" level="INFO">${ACCURACY} = {'diff': [0.00012116599999999894, 0.00012147199999999747, 0.00012147200000000441, 0.00012163899999999978, 0.00012115299999999884, 0.00012183300000000175, 0.00012161200000000011, 0.00012166700000000585...</msg>
<status status="PASS" starttime="20201029 18:17:02.190" endtime="20201029 18:17:02.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.198" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.197" endtime="20201029 18:17:02.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.200" level="INFO">VALUE: [0.00012116599999999894, 0.00012147199999999747, 0.00012147200000000441, 0.00012163899999999978, 0.00012115299999999884, 0.00012183300000000175, 0.00012161200000000011, 0.00012166700000000585, 0.0001216250000000002, 0.00012168100000000542, 0.00012163899999999978, 0.00012098600000000348, 0.00012122199999999722, 0.00012168000000000595, 0.00012111199999999961, 0.00012181900000000218, 0.00012180499999999567, 0.00012113900000000621, 0.0001216250000000002, 0.00012180600000000208, 0.00012145900000000431, 0.0001211249999999997, 0.00012130600000000158, 0.0001213050000000021, 0.0001218050000000026, 0.00012180499999999567, 0.0001213050000000021, 0.00012109700000000057, 0.0001214449999999978, 0.00012147299999999694, 0.0001209449999999973, 0.00012101399999999568, 0.0001212779999999955, 0.00012150000000000355, 0.0001216250000000002, 0.00012123599999999679, 0.00012180600000000208, 0.00012148599999999704, 0.00012097299999999644, 0.0001214029999999991, 0.0001209579999999974, 0.00012147199999999747, 0.00012163899999999978, 0.00012179200000000251, 0.00012163899999999978, 0.00012181999999999471, 0.00012163899999999978, 0.0001211249999999997, 0.0001216380000000003, 0.00012095800000000434]</msg>
<status status="PASS" starttime="20201029 18:17:02.199" endtime="20201029 18:17:02.201"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.194" endtime="20201029 18:17:02.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.205" endtime="20201029 18:17:02.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.204" endtime="20201029 18:17:02.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.203" endtime="20201029 18:17:02.225"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.833" endtime="20201029 18:17:02.226"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:01.831" endtime="20201029 18:17:02.226"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.235" endtime="20201029 18:17:02.256"></status>
</kw>
<msg timestamp="20201029 18:17:02.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.233" endtime="20201029 18:17:02.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.258" endtime="20201029 18:17:02.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.260" endtime="20201029 18:17:02.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.231" endtime="20201029 18:17:02.262"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.229" endtime="20201029 18:17:02.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.269" endtime="20201029 18:17:02.563"></status>
</kw>
<msg timestamp="20201029 18:17:02.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023298069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.268" endtime="20201029 18:17:02.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023298069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023420556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.567" endtime="20201029 18:17:02.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.575" endtime="20201029 18:17:02.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.265" endtime="20201029 18:17:02.577"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.263" endtime="20201029 18:17:02.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.582" level="INFO">${RESULT} = [{'diff': 0.00012248699999999751}, {'diff': 0.000122083000000002}, {'diff': 0.00012247200000000194}, {'diff': 0.00012197200000000144}, {'diff': 0.00012197199999999797}, {'diff': 0.00012215299999999985...</msg>
<status status="PASS" starttime="20201029 18:17:02.578" endtime="20201029 18:17:02.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.586" level="INFO">${ACCURACY} = {'diff': [0.00012248699999999751, 0.000122083000000002, 0.00012247200000000194, 0.00012197200000000144, 0.00012197199999999797, 0.00012215299999999985, 0.00012229199999999954, 0.00012263900000000078, ...</msg>
<status status="PASS" starttime="20201029 18:17:02.583" endtime="20201029 18:17:02.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.591" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.590" endtime="20201029 18:17:02.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.594" level="INFO">VALUE: [0.00012248699999999751, 0.000122083000000002, 0.00012247200000000194, 0.00012197200000000144, 0.00012197199999999797, 0.00012215299999999985, 0.00012229199999999954, 0.00012263900000000078, 0.00012247199999999847, 0.00012195800000000187, 0.00012263900000000078, 0.00012250000000000108, 0.00012197199999999797, 0.00012230600000000258, 0.00012213900000000028, 0.0001226389999999973, 0.00012268, 0.00012229199999999954, 0.00012213900000000028, 0.0001226389999999973, 0.0001226250000000012, 0.00012213900000000028, 0.00012248599999999804, 0.00012229199999999954, 0.00012281999999999918, 0.00012198600000000101, 0.00012198600000000101, 0.0001226250000000012, 0.0001228189999999997, 0.0001223059999999991, 0.00012219400000000255, 0.00012286099999999842, 0.00012279200000000004, 0.00012197300000000091, 0.0001228189999999997, 0.0001229030000000006, 0.00012261100000000164, 0.00012275000000000133, 0.00012229199999999954, 0.00012247300000000141, 0.00012233299999999878, 0.00012263900000000078, 0.0001226380000000013, 0.0001223189999999992, 0.00012265300000000035, 0.00012263900000000078, 0.00012198600000000101, 0.00012213900000000028, 0.0001228059999999996, 0.00012280500000000014]</msg>
<status status="PASS" starttime="20201029 18:17:02.592" endtime="20201029 18:17:02.595"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.587" endtime="20201029 18:17:02.595"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.599" endtime="20201029 18:17:02.618"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.597" endtime="20201029 18:17:02.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.596" endtime="20201029 18:17:02.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.227" endtime="20201029 18:17:02.619"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.226" endtime="20201029 18:17:02.619"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.628" endtime="20201029 18:17:02.649"></status>
</kw>
<msg timestamp="20201029 18:17:02.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.627" endtime="20201029 18:17:02.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:02.650" endtime="20201029 18:17:02.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.653" endtime="20201029 18:17:02.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.624" endtime="20201029 18:17:02.655"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.622" endtime="20201029 18:17:02.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.662" endtime="20201029 18:17:02.947"></status>
</kw>
<msg timestamp="20201029 18:17:02.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.660" endtime="20201029 18:17:02.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022220264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:02.951" endtime="20201029 18:17:02.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:02.959" endtime="20201029 18:17:02.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.658" endtime="20201029 18:17:02.961"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.656" endtime="20201029 18:17:02.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:02.965" level="INFO">${RESULT} = [{'diff': 0.00012387499999999899}, {'diff': 0.0001236250000000022}, {'diff': 0.00012313900000000128}, {'diff': 0.0001236250000000022}, {'diff': 0.00012347300000000241}, {'diff': 0.00012361199999999864...</msg>
<status status="PASS" starttime="20201029 18:17:02.962" endtime="20201029 18:17:02.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:02.970" level="INFO">${ACCURACY} = {'diff': [0.00012387499999999899, 0.0001236250000000022, 0.00012313900000000128, 0.0001236250000000022, 0.00012347300000000241, 0.00012361199999999864, 0.00012362499999999874, 0.00012381899999999724, ...</msg>
<status status="PASS" starttime="20201029 18:17:02.966" endtime="20201029 18:17:02.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.975" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 18:17:02.974" endtime="20201029 18:17:02.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:02.977" level="INFO">VALUE: [0.00012387499999999899, 0.0001236250000000022, 0.00012313900000000128, 0.0001236250000000022, 0.00012347300000000241, 0.00012361199999999864, 0.00012362499999999874, 0.00012381899999999724, 0.00012330500000000064, 0.00012297199999999897, 0.0001238060000000006, 0.00012383399999999975, 0.00012313900000000128, 0.00012329199999999707, 0.00012295800000000287, 0.00012379100000000157, 0.00012315300000000085, 0.00012347199999999947, 0.00012297200000000244, 0.00012377800000000147, 0.00012348599999999904, 0.00012347299999999894, 0.0001236519999999984, 0.00012313900000000128, 0.00012313900000000128, 0.00012298599999999854, 0.00012363900000000178, 0.00012294500000000277, 0.00012345899999999937, 0.0001238060000000006, 0.00012363799999999883, 0.0001234579999999999, 0.00012362499999999874, 0.00012315300000000085, 0.00012363900000000178, 0.00012333399999999925, 0.00012382000000000018, 0.00012298700000000148, 0.0001233190000000002, 0.0001236389999999983, 0.00012365299999999788, 0.00012313900000000128, 0.00012348599999999904, 0.00012347200000000294, 0.00012382000000000018, 0.0001233060000000001, 0.00012313900000000128, 0.0001238190000000007, 0.00012344400000000033, 0.00012365300000000135]</msg>
<status status="PASS" starttime="20201029 18:17:02.976" endtime="20201029 18:17:02.978"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.971" endtime="20201029 18:17:02.979"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:02.982" endtime="20201029 18:17:03.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.981" endtime="20201029 18:17:03.002"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.980" endtime="20201029 18:17:03.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.620" endtime="20201029 18:17:03.003"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:02.620" endtime="20201029 18:17:03.003"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.012" endtime="20201029 18:17:03.033"></status>
</kw>
<msg timestamp="20201029 18:17:03.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.010" endtime="20201029 18:17:03.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.035" endtime="20201029 18:17:03.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.037" endtime="20201029 18:17:03.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.008" endtime="20201029 18:17:03.039"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.005" endtime="20201029 18:17:03.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.046" endtime="20201029 18:17:03.335"></status>
</kw>
<msg timestamp="20201029 18:17:03.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.045" endtime="20201029 18:17:03.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022574431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.339" endtime="20201029 18:17:03.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.347" endtime="20201029 18:17:03.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.042" endtime="20201029 18:17:03.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.040" endtime="20201029 18:17:03.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.354" level="INFO">${RESULT} = [{'diff': 0.00012452799999999875}, {'diff': 0.00012476399999999943}, {'diff': 0.0001242909999999986}, {'diff': 0.00012447200000000047}, {'diff': 0.00012397199999999997}, {'diff': 0.000124471999999997}...</msg>
<status status="PASS" starttime="20201029 18:17:03.351" endtime="20201029 18:17:03.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:03.358" level="INFO">${ACCURACY} = {'diff': [0.00012452799999999875, 0.00012476399999999943, 0.0001242909999999986, 0.00012447200000000047, 0.00012397199999999997, 0.000124471999999997, 0.00012447200000000047, 0.00012393100000000074, 0...</msg>
<status status="PASS" starttime="20201029 18:17:03.355" endtime="20201029 18:17:03.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.362" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 18:17:03.361" endtime="20201029 18:17:03.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.365" level="INFO">VALUE: [0.00012452799999999875, 0.00012476399999999943, 0.0001242909999999986, 0.00012447200000000047, 0.00012397199999999997, 0.000124471999999997, 0.00012447200000000047, 0.00012393100000000074, 0.00012480499999999867, 0.00012412499999999924, 0.0001247909999999991, 0.00012397199999999997, 0.00012482000000000118, 0.00012427800000000197, 0.00012462499999999974, 0.00012445900000000037, 0.00012413799999999933, 0.0001242909999999986, 0.0001239580000000004, 0.00012397199999999997, 0.00012412499999999924, 0.00012415299999999838, 0.0001248060000000016, 0.0001241389999999988, 0.00012395899999999987, 0.00012445799999999743, 0.0001243329999999973, 0.0001246389999999993, 0.0001246389999999993, 0.00012398599999999954, 0.0001243199999999972, 0.0001241389999999988, 0.00012483399999999728, 0.00012412499999999924, 0.00012441599999999872, 0.0001239299999999978, 0.00012415300000000185, 0.0001241250000000027, 0.000124471999999997, 0.00012467999999999854, 0.00012397199999999997, 0.0001242909999999986, 0.0001241389999999988, 0.0001247909999999991, 0.00012430500000000164, 0.00012447200000000047, 0.0001246389999999993, 0.0001246389999999993, 0.00012462499999999974, 0.00012430500000000164]</msg>
<status status="PASS" starttime="20201029 18:17:03.363" endtime="20201029 18:17:03.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.359" endtime="20201029 18:17:03.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:03.370" endtime="20201029 18:17:03.389"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.368" endtime="20201029 18:17:03.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.367" endtime="20201029 18:17:03.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.004" endtime="20201029 18:17:03.390"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.003" endtime="20201029 18:17:03.390"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.399" endtime="20201029 18:17:03.423"></status>
</kw>
<msg timestamp="20201029 18:17:03.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.397" endtime="20201029 18:17:03.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.425" endtime="20201029 18:17:03.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.428" endtime="20201029 18:17:03.429"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.395" endtime="20201029 18:17:03.430"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.393" endtime="20201029 18:17:03.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.437" endtime="20201029 18:17:03.723"></status>
</kw>
<msg timestamp="20201029 18:17:03.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.436" endtime="20201029 18:17:03.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023145097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023270653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.727" endtime="20201029 18:17:03.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.735" endtime="20201029 18:17:03.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.433" endtime="20201029 18:17:03.737"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.431" endtime="20201029 18:17:03.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:03.742" level="INFO">${RESULT} = [{'diff': 0.0001255559999999989}, {'diff': 0.00012530599999999864}, {'diff': 0.00012530599999999864}, {'diff': 0.00012498600000000054}, {'diff': 0.00012581899999999924}, {'diff': 0.0001254440000000023...</msg>
<status status="PASS" starttime="20201029 18:17:03.739" endtime="20201029 18:17:03.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:03.746" level="INFO">${ACCURACY} = {'diff': [0.0001255559999999989, 0.00012530599999999864, 0.00012530599999999864, 0.00012498600000000054, 0.00012581899999999924, 0.00012544400000000233, 0.0001250000000000001, 0.0001251389999999998, 0...</msg>
<status status="PASS" starttime="20201029 18:17:03.743" endtime="20201029 18:17:03.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.750" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 18:17:03.749" endtime="20201029 18:17:03.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.753" level="INFO">VALUE: [0.0001255559999999989, 0.00012530599999999864, 0.00012530599999999864, 0.00012498600000000054, 0.00012581899999999924, 0.00012544400000000233, 0.0001250000000000001, 0.0001251389999999998, 0.00012563899999999684, 0.0001256390000000003, 0.0001251389999999998, 0.00012513799999999686, 0.0001256390000000003, 0.00012562500000000074, 0.00012511100000000067, 0.00012529199999999907, 0.0001256390000000003, 0.00012530599999999864, 0.00012548700000000051, 0.00012566599999999997, 0.0001250970000000011, 0.00012547200000000147, 0.0001252779999999995, 0.0001251389999999998, 0.00012498600000000054, 0.0001258199999999987, 0.00012580599999999914, 0.00012529200000000254, 0.00012580499999999967, 0.00012512500000000024, 0.00012545799999999843, 0.0001253199999999982, 0.00012547200000000147, 0.00012493099999999827, 0.00012562499999999727, 0.00012497299999999698, 0.00012497200000000097, 0.00012580499999999967, 0.00012516699999999895, 0.00012540299999999963, 0.00012497200000000097, 0.00012580599999999914, 0.00012515299999999938, 0.0001251519999999999, 0.00012513800000000033, 0.00012580499999999967, 0.0001251389999999998, 0.0001251389999999998, 0.000125778, 0.00012543100000000224]</msg>
<status status="PASS" starttime="20201029 18:17:03.751" endtime="20201029 18:17:03.754"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.747" endtime="20201029 18:17:03.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:03.758" endtime="20201029 18:17:03.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.757" endtime="20201029 18:17:03.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.756" endtime="20201029 18:17:03.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.391" endtime="20201029 18:17:03.779"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.391" endtime="20201029 18:17:03.779"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.788" endtime="20201029 18:17:03.809"></status>
</kw>
<msg timestamp="20201029 18:17:03.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.786" endtime="20201029 18:17:03.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:03.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:03.811" endtime="20201029 18:17:03.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.813" endtime="20201029 18:17:03.815"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.784" endtime="20201029 18:17:03.816"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.782" endtime="20201029 18:17:03.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:03.822" endtime="20201029 18:17:04.108"></status>
</kw>
<msg timestamp="20201029 18:17:04.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:03.821" endtime="20201029 18:17:04.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022597514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022724306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:04.112" endtime="20201029 18:17:04.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:04.120" endtime="20201029 18:17:04.121"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.818" endtime="20201029 18:17:04.122"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.817" endtime="20201029 18:17:04.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:04.126" level="INFO">${RESULT} = [{'diff': 0.00012679200000000057}, {'diff': 0.00012630500000000017}, {'diff': 0.0001261390000000008}, {'diff': 0.0001262780000000005}, {'diff': 0.00012595799999999893}, {'diff': 0.00012590300000000013...</msg>
<status status="PASS" starttime="20201029 18:17:04.123" endtime="20201029 18:17:04.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 18:17:04.131" level="INFO">${ACCURACY} = {'diff': [0.00012679200000000057, 0.00012630500000000017, 0.0001261390000000008, 0.0001262780000000005, 0.00012595799999999893, 0.00012590300000000013, 0.0001259719999999985, 0.00012662499999999827, 0...</msg>
<status status="PASS" starttime="20201029 18:17:04.127" endtime="20201029 18:17:04.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.136" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 18:17:04.135" endtime="20201029 18:17:04.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.138" level="INFO">VALUE: [0.00012679200000000057, 0.00012630500000000017, 0.0001261390000000008, 0.0001262780000000005, 0.00012595799999999893, 0.00012590300000000013, 0.0001259719999999985, 0.00012662499999999827, 0.00012611199999999767, 0.00012647200000000247, 0.00012645799999999943, 0.000126471999999999, 0.0001266390000000013, 0.0001263199999999992, 0.00012598599999999807, 0.0001261390000000008, 0.0001261109999999982, 0.00012648599999999857, 0.00012681900000000024, 0.0001268049999999972, 0.0001265970000000026, 0.000126471999999999, 0.00012663899999999784, 0.00012630599999999964, 0.00012680600000000014, 0.00012598599999999807, 0.00012630500000000017, 0.00012630500000000017, 0.0001266529999999974, 0.00012611100000000167, 0.00012679200000000057, 0.0001265979999999986, 0.0001260139999999972, 0.00012609699999999863, 0.00012681900000000024, 0.0001267910000000011, 0.00012663899999999784, 0.00012630599999999964, 0.0001259169999999997, 0.00012680600000000014, 0.00012620799999999918, 0.00012666600000000097, 0.00012634699999999888, 0.0001262780000000005, 0.000126471999999999, 0.00012595799999999893, 0.0001268199999999997, 0.0001260000000000011, 0.0001263329999999993, 0.00012613800000000133]</msg>
<status status="PASS" starttime="20201029 18:17:04.137" endtime="20201029 18:17:04.146"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.132" endtime="20201029 18:17:04.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:04.150" endtime="20201029 18:17:04.169"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.148" endtime="20201029 18:17:04.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.147" endtime="20201029 18:17:04.170"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.780" endtime="20201029 18:17:04.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:03.779" endtime="20201029 18:17:04.171"></status>
</kw>
<status status="PASS" starttime="20201029 18:16:25.302" endtime="20201029 18:17:04.171"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:16:25.231" endtime="20201029 18:17:04.171" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:15:44.788" endtime="20201029 18:17:04.175"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 18:17:04.228" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 18:17:04.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 18:17:05.463" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 18:17:04.226" endtime="20201029 18:17:05.465"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.470" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201029 18:17:05.467" endtime="20201029 18:17:05.471"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.225" endtime="20201029 18:17:05.472"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:05.475" endtime="20201029 18:17:05.660"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.474" endtime="20201029 18:17:05.661"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.674" endtime="20201029 18:17:05.689"></status>
</kw>
<msg timestamp="20201029 18:17:05.690" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.672" endtime="20201029 18:17:05.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.691" endtime="20201029 18:17:05.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.695" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:05.693" endtime="20201029 18:17:05.696"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:05.670" endtime="20201029 18:17:05.696"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:05.667" endtime="20201029 18:17:05.697"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.666" endtime="20201029 18:17:05.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:05.701" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:05.700" endtime="20201029 18:17:05.701"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.698" endtime="20201029 18:17:05.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.665" endtime="20201029 18:17:05.702"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.665" endtime="20201029 18:17:05.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.703" endtime="20201029 18:17:05.704"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.663" endtime="20201029 18:17:05.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.706" endtime="20201029 18:17:05.707"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.662" endtime="20201029 18:17:05.708"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:04.224" endtime="20201029 18:17:05.708"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:05.714" endtime="20201029 18:17:05.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.712" endtime="20201029 18:17:05.734"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.747" endtime="20201029 18:17:05.761"></status>
</kw>
<msg timestamp="20201029 18:17:05.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.745" endtime="20201029 18:17:05.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.762" endtime="20201029 18:17:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:05.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:05.765" endtime="20201029 18:17:05.768"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:05.743" endtime="20201029 18:17:05.769"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:05.740" endtime="20201029 18:17:05.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.739" endtime="20201029 18:17:05.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:05.773" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:05.773" endtime="20201029 18:17:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.770" endtime="20201029 18:17:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.738" endtime="20201029 18:17:05.774"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.738" endtime="20201029 18:17:05.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.775" endtime="20201029 18:17:05.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.736" endtime="20201029 18:17:05.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.735" endtime="20201029 18:17:05.778"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.711" endtime="20201029 18:17:05.778"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:05.786" endtime="20201029 18:17:11.908"></status>
</kw>
<msg timestamp="20201029 18:17:11.909" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:05.784" endtime="20201029 18:17:11.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.914" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:11.911" endtime="20201029 18:17:11.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.916" endtime="20201029 18:17:11.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.782" endtime="20201029 18:17:11.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.780" endtime="20201029 18:17:11.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:11.927" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:11.923" endtime="20201029 18:17:11.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.936" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:11.934" endtime="20201029 18:17:11.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.940" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:11.938" endtime="20201029 18:17:11.941"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.929" endtime="20201029 18:17:11.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.949" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:11.948" endtime="20201029 18:17:11.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.951" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:11.950" endtime="20201029 18:17:11.952"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.944" endtime="20201029 18:17:11.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.956" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:11.955" endtime="20201029 18:17:11.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:11.958" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 18:17:11.957" endtime="20201029 18:17:11.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.953" endtime="20201029 18:17:11.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:11.965" endtime="20201029 18:17:12.267"></status>
</kw>
<msg timestamp="20201029 18:17:12.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062663958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:11.964" endtime="20201029 18:17:12.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062663958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:12.271" endtime="20201029 18:17:12.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.279" endtime="20201029 18:17:12.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.961" endtime="20201029 18:17:12.281"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:11.960" endtime="20201029 18:17:12.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:12.285" level="INFO">${FILTERED} = [{'diff': 0.10003586099999999}, {'diff': 0.10001191600000003}, {'diff': 0.10001093}, {'diff': 0.10001094400000005}, {'diff': 0.10001091599999995}, {'diff': 0.10001094399999999}, {'diff': 0.100010916},...</msg>
<status status="PASS" starttime="20201029 18:17:12.282" endtime="20201029 18:17:12.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:12.289" level="INFO">${RESULT} = {'diff': [0.10003586099999999, 0.10001191600000003, 0.10001093, 0.10001094400000005, 0.10001091599999995, 0.10001094399999999, 0.100010916, 0.10001094399999999, 0.10001095800000004, 0.1000109439999998...</msg>
<status status="PASS" starttime="20201029 18:17:12.286" endtime="20201029 18:17:12.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.294" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:12.293" endtime="20201029 18:17:12.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.296" level="INFO">VALUE: [0.10003586099999999, 0.10001191600000003, 0.10001093, 0.10001094400000005, 0.10001091599999995, 0.10001094399999999, 0.100010916, 0.10001094399999999, 0.10001095800000004, 0.10001094399999988, 0.10001095799999993, 0.10001093100000014, 0.10001094399999988, 0.10001093000000005, 0.1000109440000001, 0.10001094399999988, 0.10001091699999987, 0.10001094500000018, 0.10001094499999996, 0.10001095899999979, 0.10001090300000026, 0.1000108609999999, 0.10001087500000017, 0.1000108609999999, 0.10001087500000017, 0.10001086100000034, 0.10001088899999999, 0.10001088899999999, 0.10001091699999964, 0.10001087500000017, 0.10001087500000017, 0.10001087500000017, 0.10001088899999999, 0.10001087500000017, 0.10001087499999972, 0.1000108609999999, 0.10001088899999999, 0.10001087500000017, 0.10001087500000017, 0.10001086099999945, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001090299999937, 0.10001092999999983, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201029 18:17:12.295" endtime="20201029 18:17:12.296"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.290" endtime="20201029 18:17:12.297"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:05.778" endtime="20201029 18:17:12.298"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:05.709" endtime="20201029 18:17:12.298" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:12.305" endtime="20201029 18:17:12.324"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.303" endtime="20201029 18:17:12.325"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.339" endtime="20201029 18:17:12.353"></status>
</kw>
<msg timestamp="20201029 18:17:12.353" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.337" endtime="20201029 18:17:12.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.356" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.354" endtime="20201029 18:17:12.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:12.359" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:12.357" endtime="20201029 18:17:12.359"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:12.334" endtime="20201029 18:17:12.360"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:12.332" endtime="20201029 18:17:12.360"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.330" endtime="20201029 18:17:12.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:12.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:12.363" endtime="20201029 18:17:12.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.361" endtime="20201029 18:17:12.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.329" endtime="20201029 18:17:12.365"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.328" endtime="20201029 18:17:12.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.366" endtime="20201029 18:17:12.367"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.327" endtime="20201029 18:17:12.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.325" endtime="20201029 18:17:12.368"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.302" endtime="20201029 18:17:12.369"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:12.377" endtime="20201029 18:17:18.500"></status>
</kw>
<msg timestamp="20201029 18:17:18.501" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:12.375" endtime="20201029 18:17:18.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.506" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.503" endtime="20201029 18:17:18.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.508" endtime="20201029 18:17:18.511"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.373" endtime="20201029 18:17:18.513"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.371" endtime="20201029 18:17:18.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:18.519" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:18.515" endtime="20201029 18:17:18.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.528" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:18.526" endtime="20201029 18:17:18.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.532" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:18.530" endtime="20201029 18:17:18.533"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.521" endtime="20201029 18:17:18.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.544" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:18.540" endtime="20201029 18:17:18.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.549" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:18.547" endtime="20201029 18:17:18.549"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.535" endtime="20201029 18:17:18.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.558" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:18.556" endtime="20201029 18:17:18.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.562" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 18:17:18.561" endtime="20201029 18:17:18.563"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.552" endtime="20201029 18:17:18.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.570" endtime="20201029 18:17:18.865"></status>
</kw>
<msg timestamp="20201029 18:17:18.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06254225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162672944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:18.568" endtime="20201029 18:17:18.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.06254225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.162672944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 18:17:18.869" endtime="20201029 18:17:18.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.877" endtime="20201029 18:17:18.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.566" endtime="20201029 18:17:18.879"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.564" endtime="20201029 18:17:18.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:18.884" level="INFO">${FILTERED} = [{'diff': 0.10013069400000002}, {'diff': 0.09992324999999999}, {'diff': 0.100011917}, {'diff': 0.10001094500000002}, {'diff': 0.10001090199999996}, {'diff': 0.100010916}, {'diff': 0.10001091699999998}...</msg>
<status status="PASS" starttime="20201029 18:17:18.881" endtime="20201029 18:17:18.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:18.888" level="INFO">${RESULT} = {'diff': [0.10013069400000002, 0.09992324999999999, 0.100011917, 0.10001094500000002, 0.10001090199999996, 0.100010916, 0.10001091699999998, 0.10001093100000003, 0.10001093100000003, 0.100010929999999...</msg>
<status status="PASS" starttime="20201029 18:17:18.885" endtime="20201029 18:17:18.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.893" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:18.892" endtime="20201029 18:17:18.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.895" level="INFO">VALUE: [0.10013069400000002, 0.09992324999999999, 0.100011917, 0.10001094500000002, 0.10001090199999996, 0.100010916, 0.10001091699999998, 0.10001093100000003, 0.10001093100000003, 0.10001092999999994, 0.10001090199999996, 0.10001090300000004, 0.10001093099999991, 0.10001088899999999, 0.10001093100000014, 0.10001088899999999, 0.1000109440000001, 0.10001091700000009, 0.10001095800000015, 0.10001084799999993, 0.10001084700000007, 0.100010916, 0.10001087499999972, 0.10001083300000024, 0.1000108609999999, 0.10001084700000007, 0.10001084700000007, 0.10001084699999963, 0.1000108329999998, 0.10001087500000017, 0.10001087499999972, 0.1000108609999999, 0.10001083300000024, 0.1000108609999999, 0.10001083300000024, 0.10001083399999988, 0.10001086100000034, 0.10001086100000034, 0.10001083399999988, 0.10001084700000007, 0.10001086100000034, 0.10001086099999945, 0.10001088899999999, 0.10001086100000034, 0.10001086100000034, 0.10001086099999945, 0.10001087500000061, 0.10001086100000034, 0.10001084800000015, 0.10001087499999972, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201029 18:17:18.894" endtime="20201029 18:17:18.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.889" endtime="20201029 18:17:18.896"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:12.369" endtime="20201029 18:17:18.897"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:12.300" endtime="20201029 18:17:18.897" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:18.904" endtime="20201029 18:17:18.923"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.902" endtime="20201029 18:17:18.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.937" endtime="20201029 18:17:18.951"></status>
</kw>
<msg timestamp="20201029 18:17:18.951" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.935" endtime="20201029 18:17:18.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.954" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.953" endtime="20201029 18:17:18.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:18.957" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:18.955" endtime="20201029 18:17:18.957"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:18.933" endtime="20201029 18:17:18.958"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:18.930" endtime="20201029 18:17:18.958"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.929" endtime="20201029 18:17:18.959"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:18.963" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:18.962" endtime="20201029 18:17:18.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.960" endtime="20201029 18:17:18.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.928" endtime="20201029 18:17:18.963"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.928" endtime="20201029 18:17:18.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.964" endtime="20201029 18:17:18.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.926" endtime="20201029 18:17:18.966"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.925" endtime="20201029 18:17:18.967"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.901" endtime="20201029 18:17:18.967"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:18.978" endtime="20201029 18:17:25.102"></status>
</kw>
<msg timestamp="20201029 18:17:25.103" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:18.974" endtime="20201029 18:17:25.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.109" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.106" endtime="20201029 18:17:25.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.111" endtime="20201029 18:17:25.115"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.971" endtime="20201029 18:17:25.116"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.969" endtime="20201029 18:17:25.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.123" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:25.119" endtime="20201029 18:17:25.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.132" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:25.130" endtime="20201029 18:17:25.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.137" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:25.135" endtime="20201029 18:17:25.137"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.125" endtime="20201029 18:17:25.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.146" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:25.144" endtime="20201029 18:17:25.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.150" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:25.149" endtime="20201029 18:17:25.151"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.139" endtime="20201029 18:17:25.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.160" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:25.158" endtime="20201029 18:17:25.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.165" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 18:17:25.163" endtime="20201029 18:17:25.165"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.154" endtime="20201029 18:17:25.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.178" endtime="20201029 18:17:25.474"></status>
</kw>
<msg timestamp="20201029 18:17:25.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065094625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165312694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.176" endtime="20201029 18:17:25.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065094625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.165312694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:25.478" endtime="20201029 18:17:25.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.486" endtime="20201029 18:17:25.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.171" endtime="20201029 18:17:25.488"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.168" endtime="20201029 18:17:25.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:25.492" level="INFO">${FILTERED} = [{'diff': 0.100218069}, {'diff': 0.10006797199999998}, {'diff': 0.09978515299999996}, {'diff': 0.10001187499999997}, {'diff': 0.10001087499999994}, {'diff': 0.10001088899999999}, {'diff': 0.1000108889...</msg>
<status status="PASS" starttime="20201029 18:17:25.489" endtime="20201029 18:17:25.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:25.497" level="INFO">${RESULT} = {'diff': [0.100218069, 0.10006797199999998, 0.09978515299999996, 0.10001187499999997, 0.10001087499999994, 0.10001088899999999, 0.10001088899999999, 0.10001087500000005, 0.10001093000000005, 0.1000108...</msg>
<status status="PASS" starttime="20201029 18:17:25.493" endtime="20201029 18:17:25.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.501" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:25.500" endtime="20201029 18:17:25.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.504" level="INFO">VALUE: [0.100218069, 0.10006797199999998, 0.09978515299999996, 0.10001187499999997, 0.10001087499999994, 0.10001088899999999, 0.10001088899999999, 0.10001087500000005, 0.10001093000000005, 0.100010861, 0.10001088899999999, 0.10001097199999998, 0.10001091699999987, 0.10001088899999999, 0.10001080600000001, 0.10001084700000007, 0.10001084700000007, 0.10001083300000002, 0.10001084800000015, 0.10001083300000002, 0.1000108329999998, 0.10001084700000007, 0.10001084800000015, 0.10001084700000007, 0.1000108329999998, 0.10001083400000033, 0.10001084800000015, 0.1000108329999998, 0.1000108329999998, 0.10001084700000007, 0.1000108609999999, 0.10001083300000024, 0.10001083399999988, 0.10001083400000033, 0.1000108329999998, 0.10001083300000024, 0.10001086199999998, 0.1000108329999998, 0.10001090200000018, 0.10001084700000007, 0.10001084800000015, 0.10001083300000069, 0.10001091599999956, 0.10001084800000015, 0.10001084699999918, 0.10001087499999972, 0.10001083399999988, 0.10001086100000034, 0.10001086100000034, 0.10001081999999961, 0.10001084800000015]</msg>
<status status="PASS" starttime="20201029 18:17:25.502" endtime="20201029 18:17:25.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.498" endtime="20201029 18:17:25.505"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:18.968" endtime="20201029 18:17:25.506"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:18.899" endtime="20201029 18:17:25.506" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:25.513" endtime="20201029 18:17:25.532"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.511" endtime="20201029 18:17:25.533"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.545" endtime="20201029 18:17:25.560"></status>
</kw>
<msg timestamp="20201029 18:17:25.560" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.544" endtime="20201029 18:17:25.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.563" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.561" endtime="20201029 18:17:25.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:25.566" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:25.564" endtime="20201029 18:17:25.567"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:25.541" endtime="20201029 18:17:25.568"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:25.539" endtime="20201029 18:17:25.568"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.538" endtime="20201029 18:17:25.568"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:25.572" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:25.571" endtime="20201029 18:17:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.569" endtime="20201029 18:17:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.537" endtime="20201029 18:17:25.573"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.536" endtime="20201029 18:17:25.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.574" endtime="20201029 18:17:25.575"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.535" endtime="20201029 18:17:25.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.533" endtime="20201029 18:17:25.576"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.510" endtime="20201029 18:17:25.577"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:25.585" endtime="20201029 18:17:31.708"></status>
</kw>
<msg timestamp="20201029 18:17:31.709" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:25.583" endtime="20201029 18:17:31.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.714" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:31.711" endtime="20201029 18:17:31.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.716" endtime="20201029 18:17:31.719"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.581" endtime="20201029 18:17:31.720"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.579" endtime="20201029 18:17:31.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:31.727" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:31.723" endtime="20201029 18:17:31.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.736" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:31.734" endtime="20201029 18:17:31.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.740" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:31.738" endtime="20201029 18:17:31.741"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.729" endtime="20201029 18:17:31.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.750" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:31.748" endtime="20201029 18:17:31.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.754" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:31.752" endtime="20201029 18:17:31.755"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.743" endtime="20201029 18:17:31.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.764" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:31.762" endtime="20201029 18:17:31.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:31.768" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 18:17:31.766" endtime="20201029 18:17:31.769"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.757" endtime="20201029 18:17:31.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:31.784" endtime="20201029 18:17:32.083"></status>
</kw>
<msg timestamp="20201029 18:17:32.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063013847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163400194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:31.780" endtime="20201029 18:17:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063013847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163400194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:32.087" endtime="20201029 18:17:32.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.095" endtime="20201029 18:17:32.096"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.775" endtime="20201029 18:17:32.097"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:31.771" endtime="20201029 18:17:32.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:32.101" level="INFO">${FILTERED} = [{'diff': 0.100386347}, {'diff': 0.10007704199999998}, {'diff': 0.09961302799999999}, {'diff': 0.10001184700000004}, {'diff': 0.10001086100000006}, {'diff': 0.1000108340000001}, {'diff': 0.10001087500...</msg>
<status status="PASS" starttime="20201029 18:17:32.098" endtime="20201029 18:17:32.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:32.105" level="INFO">${RESULT} = {'diff': [0.100386347, 0.10007704199999998, 0.09961302799999999, 0.10001184700000004, 0.10001086100000006, 0.1000108340000001, 0.10001087500000005, 0.100010861, 0.10001087499999994, 0.1000108469999999...</msg>
<status status="PASS" starttime="20201029 18:17:32.102" endtime="20201029 18:17:32.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.109" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:32.108" endtime="20201029 18:17:32.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.112" level="INFO">VALUE: [0.100386347, 0.10007704199999998, 0.09961302799999999, 0.10001184700000004, 0.10001086100000006, 0.1000108340000001, 0.10001087500000005, 0.100010861, 0.10001087499999994, 0.10001084699999996, 0.10001088899999999, 0.10001083300000002, 0.10001086100000012, 0.1000108609999999, 0.10001084700000007, 0.1000108609999999, 0.10001084700000007, 0.10001084799999993, 0.10001084700000007, 0.10001086100000012, 0.10001084700000007, 0.1000108329999998, 0.10001079099999988, 0.10001077700000005, 0.10001079100000032, 0.10001086100000034, 0.10001087499999972, 0.10001093099999991, 0.10001091700000009, 0.10001090299999982, 0.10001091699999964, 0.10001088799999991, 0.10001091700000009, 0.10001088899999999, 0.10001093100000036, 0.10001088899999999, 0.10001094500000018, 0.10001090199999974, 0.10001092999999983, 0.10001094400000055, 0.10001093099999991, 0.10001090300000026, 0.10001097299999984, 0.1000109440000001, 0.10001090199999929, 0.10001091600000045, 0.10001095800000037, 0.10001091700000053, 0.10001093099999991, 0.10001091700000053, 0.10001091699999964]</msg>
<status status="PASS" starttime="20201029 18:17:32.110" endtime="20201029 18:17:32.112"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.106" endtime="20201029 18:17:32.113"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:25.577" endtime="20201029 18:17:32.114"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:25.508" endtime="20201029 18:17:32.114" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:32.120" endtime="20201029 18:17:32.140"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.119" endtime="20201029 18:17:32.140"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.154" endtime="20201029 18:17:32.168"></status>
</kw>
<msg timestamp="20201029 18:17:32.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.153" endtime="20201029 18:17:32.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.171" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.169" endtime="20201029 18:17:32.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:32.174" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:32.172" endtime="20201029 18:17:32.174"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.150" endtime="20201029 18:17:32.175"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:32.147" endtime="20201029 18:17:32.175"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.146" endtime="20201029 18:17:32.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:32.179" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:32.179" endtime="20201029 18:17:32.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.177" endtime="20201029 18:17:32.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.145" endtime="20201029 18:17:32.180"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.144" endtime="20201029 18:17:32.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.181" endtime="20201029 18:17:32.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.143" endtime="20201029 18:17:32.183"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.141" endtime="20201029 18:17:32.184"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.118" endtime="20201029 18:17:32.184"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:32.192" endtime="20201029 18:17:38.315"></status>
</kw>
<msg timestamp="20201029 18:17:38.316" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:32.191" endtime="20201029 18:17:38.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.321" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.318" endtime="20201029 18:17:38.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.324" endtime="20201029 18:17:38.327"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.188" endtime="20201029 18:17:38.328"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.186" endtime="20201029 18:17:38.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.335" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:38.331" endtime="20201029 18:17:38.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.344" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:38.341" endtime="20201029 18:17:38.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.348" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:38.346" endtime="20201029 18:17:38.349"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.337" endtime="20201029 18:17:38.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.358" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:38.356" endtime="20201029 18:17:38.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.362" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:38.360" endtime="20201029 18:17:38.363"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.351" endtime="20201029 18:17:38.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.367" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:38.366" endtime="20201029 18:17:38.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.371" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 18:17:38.368" endtime="20201029 18:17:38.371"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.364" endtime="20201029 18:17:38.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.378" endtime="20201029 18:17:38.675"></status>
</kw>
<msg timestamp="20201029 18:17:38.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062654431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163241208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.377" endtime="20201029 18:17:38.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062654431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.163241208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:38.679" endtime="20201029 18:17:38.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.687" endtime="20201029 18:17:38.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.374" endtime="20201029 18:17:38.689"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.372" endtime="20201029 18:17:38.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:38.694" level="INFO">${FILTERED} = [{'diff': 0.100586777}, {'diff': 0.10008820800000001}, {'diff': 0.099408987}, {'diff': 0.10001094399999999}, {'diff': 0.10001093000000005}, {'diff': 0.10001092999999994}, {'diff': 0.10001093000000005}...</msg>
<status status="PASS" starttime="20201029 18:17:38.691" endtime="20201029 18:17:38.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:38.698" level="INFO">${RESULT} = {'diff': [0.100586777, 0.10008820800000001, 0.099408987, 0.10001094399999999, 0.10001093000000005, 0.10001092999999994, 0.10001093000000005, 0.10001094399999999, 0.10001094399999999, 0.100011012999999...</msg>
<status status="PASS" starttime="20201029 18:17:38.695" endtime="20201029 18:17:38.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.702" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:38.701" endtime="20201029 18:17:38.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.705" level="INFO">VALUE: [0.100586777, 0.10008820800000001, 0.099408987, 0.10001094399999999, 0.10001093000000005, 0.10001092999999994, 0.10001093000000005, 0.10001094399999999, 0.10001094399999999, 0.10001101299999993, 0.10001090300000004, 0.10001094499999996, 0.10001094499999996, 0.10001093100000014, 0.10001094399999988, 0.10001095799999993, 0.1000109440000001, 0.10001087500000017, 0.10001088899999999, 0.10001087500000017, 0.10001087500000017, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001090300000026, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001091699999964, 0.10001092999999983, 0.10001088899999999, 0.10001090299999982, 0.10001090200000018, 0.10001088899999999, 0.10001087500000017, 0.10001088899999999, 0.10001088899999999, 0.10001087499999972, 0.10001094500000018, 0.10001088899999999, 0.10001087499999972, 0.10001088899999999, 0.1000108880000008, 0.10001091700000053, 0.1000109310000008, 0.10001090200000018, 0.10001088899999999, 0.10001090299999937, 0.10001091699999964]</msg>
<status status="PASS" starttime="20201029 18:17:38.703" endtime="20201029 18:17:38.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.698" endtime="20201029 18:17:38.706"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:32.184" endtime="20201029 18:17:38.707"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:32.116" endtime="20201029 18:17:38.707" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 18:17:38.714" endtime="20201029 18:17:38.733"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.712" endtime="20201029 18:17:38.734"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.747" endtime="20201029 18:17:38.761"></status>
</kw>
<msg timestamp="20201029 18:17:38.761" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.745" endtime="20201029 18:17:38.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.762" endtime="20201029 18:17:38.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 18:17:38.767" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 18:17:38.765" endtime="20201029 18:17:38.767"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:38.742" endtime="20201029 18:17:38.768"></status>
</kw>
<status status="FAIL" starttime="20201029 18:17:38.740" endtime="20201029 18:17:38.768"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.739" endtime="20201029 18:17:38.769"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 18:17:38.772" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 18:17:38.772" endtime="20201029 18:17:38.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.770" endtime="20201029 18:17:38.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.738" endtime="20201029 18:17:38.773"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.737" endtime="20201029 18:17:38.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.774" endtime="20201029 18:17:38.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.736" endtime="20201029 18:17:38.776"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.734" endtime="20201029 18:17:38.777"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.711" endtime="20201029 18:17:38.777"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:38.786" endtime="20201029 18:17:44.909"></status>
</kw>
<msg timestamp="20201029 18:17:44.910" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:38.783" endtime="20201029 18:17:44.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.915" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 18:17:44.912" endtime="20201029 18:17:44.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.917" endtime="20201029 18:17:44.920"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.781" endtime="20201029 18:17:44.921"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.779" endtime="20201029 18:17:44.923"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:44.928" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201029 18:17:44.924" endtime="20201029 18:17:44.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.937" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:44.935" endtime="20201029 18:17:44.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.941" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 18:17:44.939" endtime="20201029 18:17:44.942"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.930" endtime="20201029 18:17:44.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.951" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 18:17:44.949" endtime="20201029 18:17:44.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.955" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 18:17:44.953" endtime="20201029 18:17:44.956"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.944" endtime="20201029 18:17:44.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.965" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 18:17:44.963" endtime="20201029 18:17:44.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:44.969" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 18:17:44.967" endtime="20201029 18:17:44.970"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.958" endtime="20201029 18:17:44.971"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:44.985" endtime="20201029 18:17:45.286"></status>
</kw>
<msg timestamp="20201029 18:17:45.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063500097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164349458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:44.982" endtime="20201029 18:17:45.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063500097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.164349458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 18:17:45.290" endtime="20201029 18:17:45.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 18:17:45.298" endtime="20201029 18:17:45.299"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.976" endtime="20201029 18:17:45.300"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:44.972" endtime="20201029 18:17:45.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 18:17:45.304" level="INFO">${FILTERED} = [{'diff': 0.100849361}, {'diff': 0.10009102699999997}, {'diff': 0.10009211099999998}, {'diff': 0.09906720800000002}, {'diff': 0.10001091600000006}, {'diff': 0.10001097200000009}, {'diff': 0.1000108889...</msg>
<status status="PASS" starttime="20201029 18:17:45.301" endtime="20201029 18:17:45.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 18:17:45.309" level="INFO">${RESULT} = {'diff': [0.100849361, 0.10009102699999997, 0.10009211099999998, 0.09906720800000002, 0.10001091600000006, 0.10001097200000009, 0.10001088899999999, 0.100010916, 0.10001087500000005, 0.100010834000000...</msg>
<status status="PASS" starttime="20201029 18:17:45.305" endtime="20201029 18:17:45.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.314" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 18:17:45.313" endtime="20201029 18:17:45.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 18:17:45.316" level="INFO">VALUE: [0.100849361, 0.10009102699999997, 0.10009211099999998, 0.09906720800000002, 0.10001091600000006, 0.10001097200000009, 0.10001088899999999, 0.100010916, 0.10001087500000005, 0.1000108340000001, 0.1000108609999999, 0.10001084699999985, 0.10001084700000007, 0.10001086100000012, 0.10001086199999998, 0.10001084699999985, 0.100010916, 0.10001086100000012, 0.10001086100000012, 0.1000108609999999, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001087500000017, 0.10001084700000007, 0.10001084799999971, 0.10001093099999991, 0.10001084799999971, 0.10001084700000007, 0.10001087500000017, 0.1000108609999999, 0.10001084699999963, 0.10001091700000009, 0.10001084700000007, 0.10001087500000017, 0.10001087499999972, 0.10001086100000034, 0.10001084700000007, 0.10001087500000017, 0.1000108609999999, 0.10001084800000015, 0.10001086099999945, 0.10001090300000026, 0.10001088899999999, 0.10001086100000034, 0.10001086099999945, 0.10001087500000061, 0.10001083300000069, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034]</msg>
<status status="PASS" starttime="20201029 18:17:45.315" endtime="20201029 18:17:45.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:45.310" endtime="20201029 18:17:45.317"></status>
</kw>
<status status="PASS" starttime="20201029 18:17:38.777" endtime="20201029 18:17:45.318"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201029 18:17:38.709" endtime="20201029 18:17:45.318" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 18:17:04.184" endtime="20201029 18:17:45.325"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 18:14:57.361" endtime="20201029 18:17:45.356"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
